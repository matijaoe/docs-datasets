[
  {
    "title": "Install Tailwind CSS with Qwik - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/qwik",
    "html": "Installation\n\nInstall Tailwind CSS with Qwik\n\nSetting up Tailwind CSS in a Qwik project.\n\nCreate your project\n\nStart by creating a new Qwik project if you don't have one set up already. The most common approach is to use Create Qwik.\n\nTerminal\nnpm create qwik@latest my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: ['./src/**/*.{js,ts,jsx,tsx,mdx}'],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./src/global.css file.\n\nglobal.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nindex.tsx\nimport { component$ } from '@builder.io/qwik'\n\n\n\nexport default component$(() => {\n\n  return (\n\n    <h1 class=\"text-3xl font-bold underline\">\n\n      Hello World!\n\n    </h1>\n\n  )\n\n})\n"
  },
  {
    "title": "Install Tailwind CSS With Ember.js - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/emberjs",
    "html": "Installation\n\nInstall Tailwind CSS with Ember.js\n\nSetting up Tailwind CSS in an Ember.js project.\n\nCreate your project\n\nStart by creating a new Ember.js project if you don't have one set up already. The most common approach is to use Ember CLI.\n\nTerminal\nnpx ember-cli new my-project --embroider --no-welcome\ncd my-project\nInstall Tailwind CSS\n\nUsing npm, install tailwindcss and its peer dependencies, as well as postcss-loader, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss postcss-loader autoprefixer\nnpx tailwindcss init -p\nEnable PostCSS support\n\nIn your ember-cli-build.js file, configure PostCSS to process your CSS files.\n\nember-cli-build.js\n'use strict';\n\n\n\nconst EmberApp = require('ember-cli/lib/broccoli/ember-app');\n\n\n\nmodule.exports = function (defaults) {\n\n  const app = new EmberApp(defaults, {\n\n    // Add options here\n\n  });\n\n\n\n  const { Webpack } = require('@embroider/webpack');\n\n  return require('@embroider/compat').compatBuild(app, Webpack, {\n\n    skipBabel: [\n\n      {\n\n        package: 'qunit',\n\n      },\n\n    ],\n\n    packagerOptions: {\n\n      webpackConfig: {\n\n        module: {\n\n          rules: [\n\n            {\n\n              test: /\\.css$/i,\n\n              use: [\n\n                {\n\n                  loader: 'postcss-loader',\n\n                  options: {\n\n                    postcssOptions: {\n\n                      config: 'postcss.config.js',\n\n                    },\n\n                  },\n\n                },\n\n              ],\n\n            },\n\n          ],\n\n        },\n\n      },\n\n    },\n\n  });\n\n};\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: ['./app/**/*.{gjs,gts,hbs,html,js,ts}'],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n};\n\nAdd the Tailwind directives to your CSS\n\nCreate a ./app/app.css file and add the @tailwind directives for each of Tailwind's layers.\n\napp.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nImport the CSS file\n\nImport the newly-created ./app/app.css file in your ./app/app.js file.\n\napp.js\nimport Application from '@ember/application';\n\nimport Resolver from 'ember-resolver';\n\nimport loadInitializers from 'ember-load-initializers';\n\nimport config from 'my-project/config/environment';\n\nimport 'my-project/app.css';\n\n\n\nexport default class App extends Application {\n\n  modulePrefix = config.modulePrefix;\n\n  podModulePrefix = config.podModulePrefix;\n\n  Resolver = Resolver;\n\n}\n\n\n\nloadInitializers(App, config.modulePrefix);\n\nStart your build process\n\nRun your build process with npm run start.\n\nTerminal\nnpm run start\nStart using Tailwind in your project\n\nStart using Tailwind's utility classes to style your content.\n\napplication.hbs\n{{page-title \"MyProject\"}}\n\n\n\n<h1 class=\"text-3xl font-bold underline\">\n\n  Hello world!\n\n</h1>\n\n\n\n{{outlet}}\n"
  },
  {
    "title": "Install Tailwind CSS with Adonis - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/adonisjs",
    "html": "Installation\n\nInstall Tailwind CSS with AdonisJS\n\nSetting up Tailwind CSS in an AdonisJS project.\n\nCreate your project\n\nStart by creating a new AdonisJS project if you don’t have one set up already. Choose web for the project structure and y when asked to include Webpack Encore.\n\nTerminal\nnpm init adonis-ts-app@latest my-project\ncd my-project\nInstall Tailwind CSS\n\nUsing npm, install tailwindcss and its peer dependencies, as well as postcss-loader, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss postcss-loader autoprefixer\nnpx tailwindcss init -p\nEnable PostCSS support\n\nIn your webpack.config.js file, enable the PostCSS loader. See the Webpack Encore documentation for more information.\n\nwebpack.config.js\n/*\n\n|--------------------------------------------------------------------------\n\n| CSS loaders\n\n|--------------------------------------------------------------------------\n\n|\n\n| Uncomment one of the following line of code to enable support for\n\n| PostCSS or CSS.\n\n|\n\n*/\n\nEncore.enablePostCssLoader();\n\n// Encore.configureCssLoader(() => {})\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./resources/**/*.{edge,js,ts,jsx,tsx,vue}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./resources/css/app.css file.\n\napp.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nMake sure your compiled CSS is included in the <head> then start using Tailwind’s utility classes to style your content.\n\nwelcome.edge\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"utf-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  @entryPointStyles('app')\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n"
  },
  {
    "title": "Install Tailwind CSS with Astro - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/astro",
    "html": "Installation\n\nInstall Tailwind CSS with Astro\n\nSetting up Tailwind CSS in an Astro project.\n\nCreate your project\n\nStart by creating a new Astro project if you don't have one set up already. The most common approach is to use create astro.\n\nTerminal\nnpm create astro@latest my-project\ncd my-project\nInstall Tailwind CSS\n\nRun the astro add command to install both tailwindcss and @astro/tailwind as well as generate a tailwind.config.cjs file.\n\nTerminal\nnpx astro add tailwind\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind's utility classes to style your content.\n\nindex.astro\n<h1 class=\"text-3xl font-bold underline\">\n  Hello world!\n</h1>"
  },
  {
    "title": "Install Tailwind CSS with Create React App - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/create-react-app",
    "html": "Installation\n\nInstall Tailwind CSS with Create React App\n\nSetting up Tailwind CSS in a Create React App project.\n\nCreate React App does not support custom PostCSS configurations and is incompatible with many important tools in the PostCSS ecosystem, like `postcss-import`.\n\nWe highly recommend using Vite, Parcel, Next.js, or Remix instead of Create React App. They provide an equivalent or better developer experience but with more flexibility, giving you more control over how Tailwind and PostCSS are configured.\n\nCreate your project\n\nStart by creating a new React project with Create React App v5.0+ if you don't have one already set up.\n\nTerminal\nnpx create-react-app my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss via npm, and then run the init command to generate your tailwind.config.js file.\n\nTerminal\nnpm install -D tailwindcss\nnpx tailwindcss init\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./src/**/*.{js,jsx,ts,tsx}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./src/index.css file.\n\nindex.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run start.\n\nTerminal\nnpm run start\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nApp.js\nexport default function App() {\n\n  return (\n\n    <h1 className=\"text-3xl font-bold underline\">\n\n      Hello world!\n\n    </h1>\n\n  )\n\n}\n"
  },
  {
    "title": "Install Tailwind CSS with Parcel - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/parcel",
    "html": "Installation\n\nInstall Tailwind CSS with Parcel\n\nSetting up Tailwind CSS in a Parcel project.\n\nCreate your project\n\nStart by creating a new Parcel project if you don’t have one set up already. The most common approach is to add Parcel as a dev-dependency to your project as outlined in their getting started guide.\n\nTerminal\nmkdir my-project\ncd my-project\nnpm init -y\nnpm install -D parcel\nmkdir src\ntouch src/index.html\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate tailwind.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss\nnpx tailwindcss init\nConfigure PostCSS\n\nCreate a .postcssrc file in your project root, and enable the tailwindcss plugin.\n\n.postcssrc\n{\n  \"plugins\": {\n    \"tailwindcss\": {}\n  }\n}\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nCreate a ./src/index.css file and add the @tailwind directives for each of Tailwind’s layers.\n\nindex.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npx parcel src/index.html.\n\nTerminal\nnpx parcel src/index.html\nStart using Tailwind in your project\n\nAdd your CSS file to the <head> and start using Tailwind’s utility classes to style your content.\n\nindex.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <link href=\"./index.css\" rel=\"stylesheet\">\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n"
  },
  {
    "title": "Install Tailwind CSS with Meteor - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/meteor",
    "html": "Installation\n\nInstall Tailwind CSS with Meteor\n\nSetting up Tailwind CSS in a Meteor project.\n\nCreate your project\n\nStart by creating a new Meteor project if you don't have one set up already. The most common approach is to use the Meteor CLI.\n\nTerminal\nmeteor create my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./imports/ui/**/*.{js,jsx,ts,tsx}\",\n\n    \"./client/*.html\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./client/main.css file.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run start.\n\nTerminal\nnpm run start\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nApp.jsx\nexport const App = () => (\n\n  <h1 className=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n)\n"
  },
  {
    "title": "Install Tailwind CSS with Phoenix - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/phoenix",
    "html": "Installation\n\nInstall Tailwind CSS with Phoenix\n\nSetting up Tailwind CSS in a Phoenix project.\n\nCreate your project\n\nStart by creating a new Phoenix project if you don't have one set up already. You can follow their installation guide to get up and running.\n\nTerminal\nmix phx.new myproject\ncd myproject\nInstall the Tailwind plugin\n\nAdd the Tailwind plugin to your dependencies and run mix deps.get to install it.\n\nmix.exs\ndefp deps do\n\n  [\n\n    {:tailwind, \"~> 0.1\", runtime: Mix.env() == :dev}\n\n  ]\n\nend\n\nConfigure the Tailwind plugin\n\nIn your config.exs file you can set which version of Tailwind CSS you want to use, the path to your Tailwind config, and customize your asset paths.\n\nconfig.exs\nconfig :tailwind, version: \"3.3.5\", default: [\n  args: ~w(\n    --config=tailwind.config.js\n    --input=css/app.css\n    --output=../priv/static/assets/app.css\n  ),\n  cd: Path.expand(\"../assets\", __DIR__)\n]\nUpdate your deployment script\n\nConfigure your assets.deploy alias to build your CSS on deployment.\n\nmix.exs\ndefp aliases do\n\n  [\n\n    setup: [\"deps.get\", \"ecto.setup\"],\n\n    \"ecto.setup\": [\"ecto.create\", \"ecto.migrate\", \"run priv/repo/seeds.exs\"],\n\n    \"ecto.reset\": [\"ecto.drop\", \"ecto.setup\"],\n\n    test: [\"ecto.create --quiet\", \"ecto.migrate --quiet\", \"test\"],\n\n    \"assets.deploy\": [\"tailwind default --minify\", \"esbuild default --minify\", \"phx.digest\"]\n\n  ]\n\nend\n\nEnable watcher in development\n\nAdd Tailwind to your list of watchers in your ./config/dev.exs file.\n\ndev.exs\nwatchers: [\n\n  # Start the esbuild watcher by calling Esbuild.install_and_run(:default, args)\n\n  esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},\n\n  tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}\n\n]\n\nInstall Tailwind CSS\n\nRun the install command to download the standalone Tailwind CLI and generate a tailwind.config.js file in the ./assets directory.\n\nTerminal\nmix tailwind.install\nConfigure your template paths\n\nAdd the paths to all of your template files in your ./assets/tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    './js/**/*.js',\n\n    '../lib/*_web.ex',\n\n    '../lib/*_web/**/*.*ex',\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to ./assets/css/app.css\n\napp.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nRemove the default CSS import\n\nRemove the CSS import from ./assets/js/app.js, as Tailwind is now handling this for you.\n\napp.js\n// Remove this line if you add your own CSS build pipeline (e.g postcss).\n\nimport \"../css/app.css\"\n\nStart your build process\n\nRun your build process with mix phx.server.\n\nTerminal\nmix phx.server\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nindex.html.heex\n<h1 class=\"text-3xl font-bold underline\">\n  Hello world!\n</h1>"
  },
  {
    "title": "Install Tailwind CSS with Ruby on Rails - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/ruby-on-rails",
    "html": "Installation\n\nInstall Tailwind CSS with Ruby on Rails\n\nSetting up Tailwind CSS in Ruby on Rails v7+ project.\n\nThe quickest way to start using Tailwind CSS in your Rails project is to use Tailwind CSS for Rails by running rails new my-project --css tailwind. This will automatically configure your Tailwind setup based on the official Rails example. If you'd like to configure Tailwind manually, continue with the rest of this guide.\n\nCreate your project\n\nStart by creating a new Rails project if you don't have one set up already. The most common approach is to use the Rails Command Line.\n\nTerminal\nrails new my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall the tailwindcss-rails gem, and then run the install command to generate a tailwind.config.js file in the ./config directory.\n\nTerminal\n./bin/bundle add tailwindcss-rails\n./bin/rails tailwindcss:install\nConfigure your template paths\n\nAdd the paths to all of your template files to your ./config/tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    './public/*.html',\n\n    './app/helpers/**/*.rb',\n\n    './app/javascript/**/*.js',\n\n    './app/views/**/*',\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind's layers to your application.tailwind.css file located in the ./app/assets/stylesheets directory.\n\napplication.tailwind.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with ./bin/dev.\n\nTerminal\n./bin/dev\nStart using Tailwind in your project\n\nStart using Tailwind's utility classes to style your content.\n\nindex.html.erb\n<h1 class=\"text-3xl font-bold underline\">\n    Hello world!\n</h1>"
  },
  {
    "title": "Install Tailwind CSS with Remix - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/remix",
    "html": "Installation\n\nInstall Tailwind CSS with Remix\n\nSetting up Tailwind CSS in a Remix project.\n\nCreate your project\n\nStart by creating a new Remix project if you don’t have one set up already. The most common approach is to use Create Remix.\n\nTerminal\nnpx create-remix@latest my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss via npm, and then run the init command to generate a tailwind.config.ts file.\n\nTerminal\nnpm install -D tailwindcss\nnpx tailwindcss init --ts\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.ts file.\n\ntailwind.config.ts\nimport type { Config } from 'tailwindcss'\n\n\n\nexport default {\n\n  content: ['./app/**/*.{js,jsx,ts,tsx}'],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n} satisfies Config\n\nAdd the Tailwind directives to your CSS\n\nCreate a ./app/tailwind.css file and add the @tailwind directives for each of Tailwind’s layers.\n\ntailwind.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nImport the CSS file\n\nImport the newly-created ./app/tailwind.css file in your ./app/root.jsx file.\n\nroot.tsx\nimport stylesheet from \"~/tailwind.css\";\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: stylesheet },\n];\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nindex.tsx\nexport default function Index() {\n\n  return (\n\n    <h1 className=\"text-3xl font-bold underline\">\n\n      Hello world!\n\n    </h1>\n\n  )\n\n}\n"
  },
  {
    "title": "Install Tailwind CSS with Symfony - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/symfony",
    "html": "Installation\n\nInstall Tailwind CSS with Symfony\n\nSetting up Tailwind CSS in a Symfony project.\n\nCreate your project\n\nStart by creating a new Symfony project if you don’t have one set up already. The most common approach is to use the Symfony Installer.\n\nTerminal\nsymfony new --webapp my-project\ncd my-project\nInstall Webpack Encore\n\nInstall Webpack Encore, which handles building your assets. See the documentation for more information.\n\nTerminal\ncomposer require symfony/webpack-encore-bundle\nInstall Tailwind CSS\n\nUsing npm, install tailwindcss and its peer dependencies, as well as postcss-loader, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss postcss-loader autoprefixer\nnpx tailwindcss init -p\nEnable PostCSS support\n\nIn your webpack.config.js file, enable PostCSS Loader. See the documentation for more information.\n\nwebpack.config.js\nEncore\n\n  // ...\n\n  .enablePostCssLoader()\n\n;\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./assets/**/*.js\",\n\n    \"./templates/**/*.html.twig\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./assets/styles/app.css file.\n\napp.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run watch.\n\nTerminal\nnpm run watch\nStart using Tailwind in your project\n\nMake sure your compiled CSS is included in the <head> then start using Tailwind’s utility classes to style your content.\n\nbase.html.twig\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"utf-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  {% block stylesheets %}\n\n    {{ encore_entry_link_tags('app') }}\n\n  {% endblock %}\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n"
  },
  {
    "title": "Install Tailwind CSS with Angular - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/angular",
    "html": "Installation\n\nInstall Tailwind CSS with Angular\n\nSetting up Tailwind CSS in an Angular project.\n\nCreate your project\n\nStart by creating a new Angular project if you don’t have one set up already. The most common approach is to use Angular CLI.\n\nTerminal\nng new my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss via npm, and then run the init command to generate a tailwind.config.js file.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./src/**/*.{html,ts}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./src/styles.css file.\n\nstyles.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with ng serve.\n\nTerminal\nng serve\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\napp.component.html\n<h1 class=\"text-3xl font-bold underline\">\n  Hello world!\n</h1>"
  },
  {
    "title": "Install Tailwind CSS with SvelteKit - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/sveltekit",
    "html": "Installation\n\nInstall Tailwind CSS with SvelteKit\n\nSetting up Tailwind CSS in a SvelteKit project.\n\nCreate your project\n\nStart by creating a new SvelteKit project if you don't have one set up already. The most common approach is outlined in the Getting Started with SvelteKit introduction.\n\nTerminal\nnpm create svelte@latest my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies, then generate your tailwind.config.js and postcss.config.js files.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nEnable use of PostCSS in <style> blocks\n\nIn your svelte.config.js file, import vitePreprocess to enable processing <style> blocks as PostCSS.\n\nsvelte.config.js\nimport adapter from '@sveltejs/adapter-auto';\n\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\n\nconst config = {\n\n  kit: {\n\n    adapter: adapter()\n\n  },\n\n  preprocess: vitePreprocess()\n\n};\n\nexport default config;\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nexport default {\n\n  content: ['./src/**/*.{html,js,svelte,ts}'],\n\n  theme: {\n\n    extend: {}\n\n  },\n\n  plugins: []\n\n};\n\nAdd the Tailwind directives to your CSS\n\nCreate a ./src/app.css file and add the @tailwind directives for each of Tailwind’s layers.\n\napp.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nImport the CSS file\n\nCreate a ./src/routes/+layout.svelte file and import the newly-created app.css file.\n\n+layout.svelte\n<script>\n  import \"../app.css\";\n</script>\n\n<slot />\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content, making sure to set lang=\"postcss\" for any <style> blocks that need to be processed by Tailwind.\n\n+page.svelte\n<h1 class=\"text-3xl font-bold underline\">\n\n  Hello world!\n\n</h1>\n\n\n\n<style lang=\"postcss\">\n\n  :global(html) {\n\n    background-color: theme(colors.gray.100);\n\n  }\n\n</style>\n"
  },
  {
    "title": "Install Tailwind CSS with SolidJS - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/solidjs",
    "html": "Installation\n\nInstall Tailwind CSS with SolidJS\n\nSetting up Tailwind CSS in a SolidJS project.\n\nCreate your project\n\nStart by creating a new SolidJS project if you don't have one set up already. The most common approach is to use the SolidJS Vite template.\n\nTerminal\nnpx degit solidjs/templates/js my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./src/**/*.{js,jsx,ts,tsx}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./src/index.css file.\n\nindex.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nApp.jsx\nexport default function App() {\n\n  return (\n\n    <h1 class=\"text-3xl font-bold underline\">\n\n      Hello world!\n\n    </h1>\n\n  )\n\n}\n"
  },
  {
    "title": "Install Tailwind CSS with Gatsby - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/gatsby",
    "html": "Installation\n\nInstall Tailwind CSS with Gatsby\n\nSetting up Tailwind CSS in a Gatsby project.\n\nCreate your project\n\nStart by creating a new Gatsby project if you don’t have one set up already. The most common approach is to use Gatsby CLI.\n\nTerminal\ngatsby new my-project\ncd my-project\nInstall Tailwind CSS\n\nUsing npm, install tailwindcss and its peer dependencies, as well as gatsby-plugin-postcss, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer gatsby-plugin-postcss\nnpx tailwindcss init -p\nEnable the Gatsby PostCSS plugin\n\nIn your gatsby-config.js file, enable the gatsby-plugin-postcss. See the plugin's documentation for more information.\n\ngatsby-config.js\nmodule.exports = {\n\n  plugins: [\n\n    'gatsby-plugin-postcss',\n\n    // ...\n\n  ],\n\n}\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./src/pages/**/*.{js,jsx,ts,tsx}\",\n\n    \"./src/components/**/*.{js,jsx,ts,tsx}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nCreate a ./src/styles/global.css file and add the @tailwind directives for each of Tailwind’s layers.\n\nglobal.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nImport the CSS file\n\nCreate a gatsby-browser.js file at the root of your project if it doesn’t already exist, and import your newly-created ./src/styles/global.css file.\n\ngatsby-browser.js\nimport './src/styles/global.css'\n\nStart your build process\n\nRun your build process with gatsby develop.\n\nTerminal\ngatsby develop\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nindex.js\nexport default function IndexPage() {\n\n  return (\n\n    <Layout>\n\n      <h1 className=\"text-3xl font-bold underline\">\n\n        Hello world!\n\n      </h1>\n\n    </Layout>\n\n  )\n\n}\n"
  },
  {
    "title": "Install Tailwind CSS with Nuxt - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/nuxtjs",
    "html": "Installation\n\nInstall Tailwind CSS with Nuxt\n\nSetting up Tailwind CSS in a Nuxt project.\n\nStandard installation\nUsing Nuxt Modules\nCreate your project\n\nStart by creating a new Nuxt project if you don’t have one set up already. The most common approach is to use the Nuxt Command Line Interface.\n\nTerminal\nnpx nuxi init my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate a tailwind.config.js file.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\nAdd Tailwind to your PostCSS configuration\n\nAdd tailwindcss and autoprefixer to the postcss.plugins object in your nuxt.config.js file.\n\nnuxt.config.js\n// https://nuxt.com/docs/api/configuration/nuxt-config\n\nexport default defineNuxtConfig({\n\n  devtools: { enabled: true },\n\n  postcss: {\n\n    plugins: {\n\n      tailwindcss: {},\n\n      autoprefixer: {},\n\n    },\n\n  },\n\n})\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./components/**/*.{js,vue,ts}\",\n\n    \"./layouts/**/*.vue\",\n\n    \"./pages/**/*.vue\",\n\n    \"./plugins/**/*.{js,ts}\",\n\n    \"./app.vue\",\n\n    \"./error.vue\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nCreate an ./assets/css/main.css file and add the @tailwind directives for each of Tailwind’s layers.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nAdd the CSS file globally\n\nAdd your newly-created ./assets/css/main.css to the css array in your nuxt.config.js file.\n\nnuxt.config.js\n// https://nuxt.com/docs/api/configuration/nuxt-config\n\nexport default defineNuxtConfig({\n\n  devtools: { enabled: true },\n\n  css: ['~/assets/css/main.css'],\n\n  postcss: {\n\n    plugins: {\n\n      tailwindcss: {},\n\n      autoprefixer: {},\n\n    },\n\n  },\n\n})\n\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\napp.vue\n<template>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</template>\n"
  },
  {
    "title": "Install Tailwind CSS with Vite - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/vite",
    "html": "Installation\n\nInstall Tailwind CSS with Vite\n\nSetting up Tailwind CSS in a Vite project.\n\nUsing React\nUsing Vue\nUsing Svelte\nCreate your project\n\nStart by creating a new Vite project if you don’t have one set up already. The most common approach is to use Create Vite.\n\nTerminal\nnpm create vite@latest my-project -- --template react\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies, then generate your tailwind.config.js and postcss.config.js files.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nexport default {\n\n  content: [\n\n    \"./index.html\",\n\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./src/index.css file.\n\nindex.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nApp.jsx\nexport default function App() {\n\n  return (\n\n    <h1 className=\"text-3xl font-bold underline\">\n\n      Hello world!\n\n    </h1>\n\n  )\n\n}\n"
  },
  {
    "title": "Install Tailwind CSS with Laravel - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/laravel",
    "html": "Installation\n\nInstall Tailwind CSS with Laravel\n\nSetting up Tailwind CSS in a Laravel project.\n\nUsing Vite\nUsing Laravel Mix\nCreate your project\n\nStart by creating a new Laravel project if you don’t have one set up already. The most common approach is to use the Composer create-project command.\n\nTerminal\ncomposer create-project laravel/laravel my-project\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./resources/**/*.blade.php\",\n\n    \"./resources/**/*.js\",\n\n    \"./resources/**/*.vue\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your ./resources/css/app.css file.\n\napp.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nMake sure your compiled CSS is included in the <head> then start using Tailwind’s utility classes to style your content.\n\napp.blade.php\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"utf-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  @vite('resources/css/app.css')\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n"
  },
  {
    "title": "Ring Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/ring-color#changing-the-opacity",
    "html": "Borders\n\nRing Color\n\nUtilities for setting the color of outline rings.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nring-inherit\t--tw-ring-color: inherit;\n\nring-current\t--tw-ring-color: currentColor;\n\nring-transparent\t--tw-ring-color: transparent;\n\nring-black\t--tw-ring-color: rgb(0 0 0);\n\nring-white\t--tw-ring-color: rgb(255 255 255);\n\nring-slate-50\t--tw-ring-color: rgb(248 250 252);\n\nring-slate-100\t--tw-ring-color: rgb(241 245 249);\n\nring-slate-200\t--tw-ring-color: rgb(226 232 240);\n\nring-slate-300\t--tw-ring-color: rgb(203 213 225);\n\nring-slate-400\t--tw-ring-color: rgb(148 163 184);\n\nring-slate-500\t--tw-ring-color: rgb(100 116 139);\n\nring-slate-600\t--tw-ring-color: rgb(71 85 105);\n\nring-slate-700\t--tw-ring-color: rgb(51 65 85);\n\nring-slate-800\t--tw-ring-color: rgb(30 41 59);\n\nring-slate-900\t--tw-ring-color: rgb(15 23 42);\n\nring-slate-950\t--tw-ring-color: rgb(2 6 23);\n\nring-gray-50\t--tw-ring-color: rgb(249 250 251);\n\nring-gray-100\t--tw-ring-color: rgb(243 244 246);\n\nring-gray-200\t--tw-ring-color: rgb(229 231 235);\n\nring-gray-300\t--tw-ring-color: rgb(209 213 219);\n\nring-gray-400\t--tw-ring-color: rgb(156 163 175);\n\nring-gray-500\t--tw-ring-color: rgb(107 114 128);\n\nring-gray-600\t--tw-ring-color: rgb(75 85 99);\n\nring-gray-700\t--tw-ring-color: rgb(55 65 81);\n\nring-gray-800\t--tw-ring-color: rgb(31 41 55);\n\nring-gray-900\t--tw-ring-color: rgb(17 24 39);\n\nring-gray-950\t--tw-ring-color: rgb(3 7 18);\n\nring-zinc-50\t--tw-ring-color: rgb(250 250 250);\n\nring-zinc-100\t--tw-ring-color: rgb(244 244 245);\n\nring-zinc-200\t--tw-ring-color: rgb(228 228 231);\n\nring-zinc-300\t--tw-ring-color: rgb(212 212 216);\n\nring-zinc-400\t--tw-ring-color: rgb(161 161 170);\n\nring-zinc-500\t--tw-ring-color: rgb(113 113 122);\n\nring-zinc-600\t--tw-ring-color: rgb(82 82 91);\n\nring-zinc-700\t--tw-ring-color: rgb(63 63 70);\n\nring-zinc-800\t--tw-ring-color: rgb(39 39 42);\n\nring-zinc-900\t--tw-ring-color: rgb(24 24 27);\n\nring-zinc-950\t--tw-ring-color: rgb(9 9 11);\n\nring-neutral-50\t--tw-ring-color: rgb(250 250 250);\n\nring-neutral-100\t--tw-ring-color: rgb(245 245 245);\n\nring-neutral-200\t--tw-ring-color: rgb(229 229 229);\n\nring-neutral-300\t--tw-ring-color: rgb(212 212 212);\n\nring-neutral-400\t--tw-ring-color: rgb(163 163 163);\n\nring-neutral-500\t--tw-ring-color: rgb(115 115 115);\n\nring-neutral-600\t--tw-ring-color: rgb(82 82 82);\n\nring-neutral-700\t--tw-ring-color: rgb(64 64 64);\n\nring-neutral-800\t--tw-ring-color: rgb(38 38 38);\n\nring-neutral-900\t--tw-ring-color: rgb(23 23 23);\n\nring-neutral-950\t--tw-ring-color: rgb(10 10 10);\n\nring-stone-50\t--tw-ring-color: rgb(250 250 249);\n\nring-stone-100\t--tw-ring-color: rgb(245 245 244);\n\nring-stone-200\t--tw-ring-color: rgb(231 229 228);\n\nring-stone-300\t--tw-ring-color: rgb(214 211 209);\n\nring-stone-400\t--tw-ring-color: rgb(168 162 158);\n\nring-stone-500\t--tw-ring-color: rgb(120 113 108);\n\nring-stone-600\t--tw-ring-color: rgb(87 83 78);\n\nring-stone-700\t--tw-ring-color: rgb(68 64 60);\n\nring-stone-800\t--tw-ring-color: rgb(41 37 36);\n\nring-stone-900\t--tw-ring-color: rgb(28 25 23);\n\nring-stone-950\t--tw-ring-color: rgb(12 10 9);\n\nring-red-50\t--tw-ring-color: rgb(254 242 242);\n\nring-red-100\t--tw-ring-color: rgb(254 226 226);\n\nring-red-200\t--tw-ring-color: rgb(254 202 202);\n\nring-red-300\t--tw-ring-color: rgb(252 165 165);\n\nring-red-400\t--tw-ring-color: rgb(248 113 113);\n\nring-red-500\t--tw-ring-color: rgb(239 68 68);\n\nring-red-600\t--tw-ring-color: rgb(220 38 38);\n\nring-red-700\t--tw-ring-color: rgb(185 28 28);\n\nring-red-800\t--tw-ring-color: rgb(153 27 27);\n\nring-red-900\t--tw-ring-color: rgb(127 29 29);\n\nring-red-950\t--tw-ring-color: rgb(69 10 10);\n\nring-orange-50\t--tw-ring-color: rgb(255 247 237);\n\nring-orange-100\t--tw-ring-color: rgb(255 237 213);\n\nring-orange-200\t--tw-ring-color: rgb(254 215 170);\n\nring-orange-300\t--tw-ring-color: rgb(253 186 116);\n\nring-orange-400\t--tw-ring-color: rgb(251 146 60);\n\nring-orange-500\t--tw-ring-color: rgb(249 115 22);\n\nring-orange-600\t--tw-ring-color: rgb(234 88 12);\n\nring-orange-700\t--tw-ring-color: rgb(194 65 12);\n\nring-orange-800\t--tw-ring-color: rgb(154 52 18);\n\nring-orange-900\t--tw-ring-color: rgb(124 45 18);\n\nring-orange-950\t--tw-ring-color: rgb(67 20 7);\n\nring-amber-50\t--tw-ring-color: rgb(255 251 235);\n\nring-amber-100\t--tw-ring-color: rgb(254 243 199);\n\nring-amber-200\t--tw-ring-color: rgb(253 230 138);\n\nring-amber-300\t--tw-ring-color: rgb(252 211 77);\n\nring-amber-400\t--tw-ring-color: rgb(251 191 36);\n\nring-amber-500\t--tw-ring-color: rgb(245 158 11);\n\nring-amber-600\t--tw-ring-color: rgb(217 119 6);\n\nring-amber-700\t--tw-ring-color: rgb(180 83 9);\n\nring-amber-800\t--tw-ring-color: rgb(146 64 14);\n\nring-amber-900\t--tw-ring-color: rgb(120 53 15);\n\nring-amber-950\t--tw-ring-color: rgb(69 26 3);\n\nring-yellow-50\t--tw-ring-color: rgb(254 252 232);\n\nring-yellow-100\t--tw-ring-color: rgb(254 249 195);\n\nring-yellow-200\t--tw-ring-color: rgb(254 240 138);\n\nring-yellow-300\t--tw-ring-color: rgb(253 224 71);\n\nring-yellow-400\t--tw-ring-color: rgb(250 204 21);\n\nring-yellow-500\t--tw-ring-color: rgb(234 179 8);\n\nring-yellow-600\t--tw-ring-color: rgb(202 138 4);\n\nring-yellow-700\t--tw-ring-color: rgb(161 98 7);\n\nring-yellow-800\t--tw-ring-color: rgb(133 77 14);\n\nring-yellow-900\t--tw-ring-color: rgb(113 63 18);\n\nring-yellow-950\t--tw-ring-color: rgb(66 32 6);\n\nring-lime-50\t--tw-ring-color: rgb(247 254 231);\n\nring-lime-100\t--tw-ring-color: rgb(236 252 203);\n\nring-lime-200\t--tw-ring-color: rgb(217 249 157);\n\nring-lime-300\t--tw-ring-color: rgb(190 242 100);\n\nring-lime-400\t--tw-ring-color: rgb(163 230 53);\n\nring-lime-500\t--tw-ring-color: rgb(132 204 22);\n\nring-lime-600\t--tw-ring-color: rgb(101 163 13);\n\nring-lime-700\t--tw-ring-color: rgb(77 124 15);\n\nring-lime-800\t--tw-ring-color: rgb(63 98 18);\n\nring-lime-900\t--tw-ring-color: rgb(54 83 20);\n\nring-lime-950\t--tw-ring-color: rgb(26 46 5);\n\nring-green-50\t--tw-ring-color: rgb(240 253 244);\n\nring-green-100\t--tw-ring-color: rgb(220 252 231);\n\nring-green-200\t--tw-ring-color: rgb(187 247 208);\n\nring-green-300\t--tw-ring-color: rgb(134 239 172);\n\nring-green-400\t--tw-ring-color: rgb(74 222 128);\n\nring-green-500\t--tw-ring-color: rgb(34 197 94);\n\nring-green-600\t--tw-ring-color: rgb(22 163 74);\n\nring-green-700\t--tw-ring-color: rgb(21 128 61);\n\nring-green-800\t--tw-ring-color: rgb(22 101 52);\n\nring-green-900\t--tw-ring-color: rgb(20 83 45);\n\nring-green-950\t--tw-ring-color: rgb(5 46 22);\n\nring-emerald-50\t--tw-ring-color: rgb(236 253 245);\n\nring-emerald-100\t--tw-ring-color: rgb(209 250 229);\n\nring-emerald-200\t--tw-ring-color: rgb(167 243 208);\n\nring-emerald-300\t--tw-ring-color: rgb(110 231 183);\n\nring-emerald-400\t--tw-ring-color: rgb(52 211 153);\n\nring-emerald-500\t--tw-ring-color: rgb(16 185 129);\n\nring-emerald-600\t--tw-ring-color: rgb(5 150 105);\n\nring-emerald-700\t--tw-ring-color: rgb(4 120 87);\n\nring-emerald-800\t--tw-ring-color: rgb(6 95 70);\n\nring-emerald-900\t--tw-ring-color: rgb(6 78 59);\n\nring-emerald-950\t--tw-ring-color: rgb(2 44 34);\n\nring-teal-50\t--tw-ring-color: rgb(240 253 250);\n\nring-teal-100\t--tw-ring-color: rgb(204 251 241);\n\nring-teal-200\t--tw-ring-color: rgb(153 246 228);\n\nring-teal-300\t--tw-ring-color: rgb(94 234 212);\n\nring-teal-400\t--tw-ring-color: rgb(45 212 191);\n\nring-teal-500\t--tw-ring-color: rgb(20 184 166);\n\nring-teal-600\t--tw-ring-color: rgb(13 148 136);\n\nring-teal-700\t--tw-ring-color: rgb(15 118 110);\n\nring-teal-800\t--tw-ring-color: rgb(17 94 89);\n\nring-teal-900\t--tw-ring-color: rgb(19 78 74);\n\nring-teal-950\t--tw-ring-color: rgb(4 47 46);\n\nring-cyan-50\t--tw-ring-color: rgb(236 254 255);\n\nring-cyan-100\t--tw-ring-color: rgb(207 250 254);\n\nring-cyan-200\t--tw-ring-color: rgb(165 243 252);\n\nring-cyan-300\t--tw-ring-color: rgb(103 232 249);\n\nring-cyan-400\t--tw-ring-color: rgb(34 211 238);\n\nring-cyan-500\t--tw-ring-color: rgb(6 182 212);\n\nring-cyan-600\t--tw-ring-color: rgb(8 145 178);\n\nring-cyan-700\t--tw-ring-color: rgb(14 116 144);\n\nring-cyan-800\t--tw-ring-color: rgb(21 94 117);\n\nring-cyan-900\t--tw-ring-color: rgb(22 78 99);\n\nring-cyan-950\t--tw-ring-color: rgb(8 51 68);\n\nring-sky-50\t--tw-ring-color: rgb(240 249 255);\n\nring-sky-100\t--tw-ring-color: rgb(224 242 254);\n\nring-sky-200\t--tw-ring-color: rgb(186 230 253);\n\nring-sky-300\t--tw-ring-color: rgb(125 211 252);\n\nring-sky-400\t--tw-ring-color: rgb(56 189 248);\n\nring-sky-500\t--tw-ring-color: rgb(14 165 233);\n\nring-sky-600\t--tw-ring-color: rgb(2 132 199);\n\nring-sky-700\t--tw-ring-color: rgb(3 105 161);\n\nring-sky-800\t--tw-ring-color: rgb(7 89 133);\n\nring-sky-900\t--tw-ring-color: rgb(12 74 110);\n\nring-sky-950\t--tw-ring-color: rgb(8 47 73);\n\nring-blue-50\t--tw-ring-color: rgb(239 246 255);\n\nring-blue-100\t--tw-ring-color: rgb(219 234 254);\n\nring-blue-200\t--tw-ring-color: rgb(191 219 254);\n\nring-blue-300\t--tw-ring-color: rgb(147 197 253);\n\nring-blue-400\t--tw-ring-color: rgb(96 165 250);\n\nring-blue-500\t--tw-ring-color: rgb(59 130 246);\n\nring-blue-600\t--tw-ring-color: rgb(37 99 235);\n\nring-blue-700\t--tw-ring-color: rgb(29 78 216);\n\nring-blue-800\t--tw-ring-color: rgb(30 64 175);\n\nring-blue-900\t--tw-ring-color: rgb(30 58 138);\n\nring-blue-950\t--tw-ring-color: rgb(23 37 84);\n\nring-indigo-50\t--tw-ring-color: rgb(238 242 255);\n\nring-indigo-100\t--tw-ring-color: rgb(224 231 255);\n\nring-indigo-200\t--tw-ring-color: rgb(199 210 254);\n\nring-indigo-300\t--tw-ring-color: rgb(165 180 252);\n\nring-indigo-400\t--tw-ring-color: rgb(129 140 248);\n\nring-indigo-500\t--tw-ring-color: rgb(99 102 241);\n\nring-indigo-600\t--tw-ring-color: rgb(79 70 229);\n\nring-indigo-700\t--tw-ring-color: rgb(67 56 202);\n\nring-indigo-800\t--tw-ring-color: rgb(55 48 163);\n\nring-indigo-900\t--tw-ring-color: rgb(49 46 129);\n\nring-indigo-950\t--tw-ring-color: rgb(30 27 75);\n\nring-violet-50\t--tw-ring-color: rgb(245 243 255);\n\nring-violet-100\t--tw-ring-color: rgb(237 233 254);\n\nring-violet-200\t--tw-ring-color: rgb(221 214 254);\n\nring-violet-300\t--tw-ring-color: rgb(196 181 253);\n\nring-violet-400\t--tw-ring-color: rgb(167 139 250);\n\nring-violet-500\t--tw-ring-color: rgb(139 92 246);\n\nring-violet-600\t--tw-ring-color: rgb(124 58 237);\n\nring-violet-700\t--tw-ring-color: rgb(109 40 217);\n\nring-violet-800\t--tw-ring-color: rgb(91 33 182);\n\nring-violet-900\t--tw-ring-color: rgb(76 29 149);\n\nring-violet-950\t--tw-ring-color: rgb(46 16 101);\n\nring-purple-50\t--tw-ring-color: rgb(250 245 255);\n\nring-purple-100\t--tw-ring-color: rgb(243 232 255);\n\nring-purple-200\t--tw-ring-color: rgb(233 213 255);\n\nring-purple-300\t--tw-ring-color: rgb(216 180 254);\n\nring-purple-400\t--tw-ring-color: rgb(192 132 252);\n\nring-purple-500\t--tw-ring-color: rgb(168 85 247);\n\nring-purple-600\t--tw-ring-color: rgb(147 51 234);\n\nring-purple-700\t--tw-ring-color: rgb(126 34 206);\n\nring-purple-800\t--tw-ring-color: rgb(107 33 168);\n\nring-purple-900\t--tw-ring-color: rgb(88 28 135);\n\nring-purple-950\t--tw-ring-color: rgb(59 7 100);\n\nring-fuchsia-50\t--tw-ring-color: rgb(253 244 255);\n\nring-fuchsia-100\t--tw-ring-color: rgb(250 232 255);\n\nring-fuchsia-200\t--tw-ring-color: rgb(245 208 254);\n\nring-fuchsia-300\t--tw-ring-color: rgb(240 171 252);\n\nring-fuchsia-400\t--tw-ring-color: rgb(232 121 249);\n\nring-fuchsia-500\t--tw-ring-color: rgb(217 70 239);\n\nring-fuchsia-600\t--tw-ring-color: rgb(192 38 211);\n\nring-fuchsia-700\t--tw-ring-color: rgb(162 28 175);\n\nring-fuchsia-800\t--tw-ring-color: rgb(134 25 143);\n\nring-fuchsia-900\t--tw-ring-color: rgb(112 26 117);\n\nring-fuchsia-950\t--tw-ring-color: rgb(74 4 78);\n\nring-pink-50\t--tw-ring-color: rgb(253 242 248);\n\nring-pink-100\t--tw-ring-color: rgb(252 231 243);\n\nring-pink-200\t--tw-ring-color: rgb(251 207 232);\n\nring-pink-300\t--tw-ring-color: rgb(249 168 212);\n\nring-pink-400\t--tw-ring-color: rgb(244 114 182);\n\nring-pink-500\t--tw-ring-color: rgb(236 72 153);\n\nring-pink-600\t--tw-ring-color: rgb(219 39 119);\n\nring-pink-700\t--tw-ring-color: rgb(190 24 93);\n\nring-pink-800\t--tw-ring-color: rgb(157 23 77);\n\nring-pink-900\t--tw-ring-color: rgb(131 24 67);\n\nring-pink-950\t--tw-ring-color: rgb(80 7 36);\n\nring-rose-50\t--tw-ring-color: rgb(255 241 242);\n\nring-rose-100\t--tw-ring-color: rgb(255 228 230);\n\nring-rose-200\t--tw-ring-color: rgb(254 205 211);\n\nring-rose-300\t--tw-ring-color: rgb(253 164 175);\n\nring-rose-400\t--tw-ring-color: rgb(251 113 133);\n\nring-rose-500\t--tw-ring-color: rgb(244 63 94);\n\nring-rose-600\t--tw-ring-color: rgb(225 29 72);\n\nring-rose-700\t--tw-ring-color: rgb(190 18 60);\n\nring-rose-800\t--tw-ring-color: rgb(159 18 57);\n\nring-rose-900\t--tw-ring-color: rgb(136 19 55);\n\nring-rose-950\t--tw-ring-color: rgb(76 5 25);\n\n​\nBasic usage\n​\nSetting the ring color\n\nUse the ring-{color} utilities to set the color of an outline ring.\n\nCreate account\n<button class=\"... ring-2 ring-blue-500\">\n  Create account\n</button>\n​\nChanging the opacity\n\nControl the opacity of an element’s background color using the color opacity modifier.\n\nCreate account\n<button class=\"... ring-2 ring-blue-500/50\">Subscribe</button>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<button class=\"... ring-2 ring-blue-500/[.55]\">Subscribe</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:ring-blue-500 to only apply the ring-blue-500 utility on hover.\n\n<div class=\"ring ring-blue-300 hover:ring-blue-500\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:ring-blue-500 to apply the ring-blue-500 utility at only medium screen sizes and above.\n\n<div class=\"ring ring-blue-300 md:ring-blue-500\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as ring colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your ring colors by editing theme.ringColor or theme.extend.ringColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off ring-{color} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"ring-[#50d71e]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nRing Width\nRing Offset Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the ring color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Adding Custom Styles - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/adding-custom-styles#adding-base-styles",
    "html": "Core Concepts\n\nAdding Custom Styles\n\nBest practices for adding your own custom styles to Tailwind.\n\nOften the biggest challenge when working with a framework is figuring out what you’re supposed to do when there’s something you need that the framework doesn’t handle for you.\n\nTailwind has been designed from the ground up to be extensible and customizable, so that no matter what you’re building you never feel like you’re fighting the framework.\n\nThis guide covers topics like customizing your design tokens, how to break out of those constraints when necessary, adding your own custom CSS, and extending the framework with plugins.\n\n​\nCustomizing your theme\n\nIf you want to change things like your color palette, spacing scale, typography scale, or breakpoints, add your customizations to the theme section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      sm: '480px',\n      md: '768px',\n      lg: '976px',\n      xl: '1440px',\n    },\n    colors: {\n      'blue': '#1fb6ff',\n      'pink': '#ff49db',\n      'orange': '#ff7849',\n      'green': '#13ce66',\n      'gray-dark': '#273444',\n      'gray': '#8492a6',\n      'gray-light': '#d3dce6',\n    },\n    fontFamily: {\n      sans: ['Graphik', 'sans-serif'],\n      serif: ['Merriweather', 'serif'],\n    },\n    extend: {\n      spacing: {\n        '128': '32rem',\n        '144': '36rem',\n      },\n      borderRadius: {\n        '4xl': '2rem',\n      }\n    }\n  }\n}\n\nLearn more about customizing your theme in the Theme Configuration documentation.\n\n​\nUsing arbitrary values\n\nWhile you can usually build the bulk of a well-crafted design using a constrained set of design tokens, once in a while you need to break out of those constraints to get things pixel-perfect.\n\nWhen you find yourself really needing something like top: 117px to get a background image in just the right spot, use Tailwind’s square bracket notation to generate a class on the fly with any arbitrary value:\n\n<div class=\"top-[117px]\">\n  <!-- ... -->\n</div>\n\nThis is basically like inline styles, with the major benefit that you can combine it with interactive modifiers like hover and responsive modifiers like lg:\n\n<div class=\"top-[117px] lg:top-[344px]\">\n  <!-- ... -->\n</div>\n\nThis works for everything in the framework, including things like background colors, font sizes, pseudo-element content, and more:\n\n<div class=\"bg-[#bada55] text-[22px] before:content-['Festivus']\">\n  <!-- ... -->\n</div>\n\nIt’s even possible to use the theme function to reference the design tokens in your tailwind.config.js file:\n\n<div class=\"grid grid-cols-[fit-content(theme(spacing.32))]\">\n  <!-- ... -->\n</div>\n\nWhen using a CSS variable as an arbitrary value, wrapping your variable in var(...) isn’t needed — just providing the actual variable name is enough:\n\n<div class=\"bg-[--my-color]\">\n  <!-- ... -->\n</div>\n​\nArbitrary properties\n\nIf you ever need to use a CSS property that Tailwind doesn’t include a utility for out of the box, you can also use square bracket notation to write completely arbitrary CSS:\n\n<div class=\"[mask-type:luminance]\">\n  <!-- ... -->\n</div>\n\nThis is really like inline styles, but again with the benefit that you can use modifiers:\n\n<div class=\"[mask-type:luminance] hover:[mask-type:alpha]\">\n  <!-- ... -->\n</div>\n\nThis can be useful for things like CSS variables as well, especially when they need to change under different conditions:\n\n<div class=\"[--scroll-offset:56px] lg:[--scroll-offset:44px]\">\n  <!-- ... -->\n</div>\n​\nArbitrary variants\n\nArbitrary variants are like arbitrary values but for doing on-the-fly selector modification, like you can with built-in pseudo-class variants like hover:{utility} or responsive variants like md:{utility} but using square bracket notation directly in your HTML.\n\nHTML\nGenerated CSS\n<ul role=\"list\">\n  {#each items as item}\n    <li class=\"lg:[&:nth-child(3)]:hover:underline\">{item}</li>\n  {/each}\n</ul>\n\nLearn more in the arbitrary variants documentation.\n\n​\nHandling whitespace\n\nWhen an arbitrary value needs to contain a space, use an underscore (_) instead and Tailwind will automatically convert it to a space at build-time:\n\n<div class=\"grid grid-cols-[1fr_500px_2fr]\">\n  <!-- ... -->\n</div>\n\nIn situations where underscores are common but spaces are invalid, Tailwind will preserve the underscore instead of converting it to a space, for example in URLs:\n\n<div class=\"bg-[url('/what_a_rush.png')]\">\n  <!-- ... -->\n</div>\n\nIn the rare case that you actually need to use an underscore but it’s ambiguous because a space is valid as well, escape the underscore with a backslash and Tailwind won’t convert it to a space:\n\n<div class=\"before:content-['hello\\_world']\">\n  <!-- ... -->\n</div>\n\nIf you’re using something like JSX where the backslash is stripped from the rendered HTML, use String.raw() so the backslash isn’t treated as a JavaScript escape character:\n\n<div className={String.raw`before:content-['hello\\_world']`}>\n  <!-- ... -->\n</div>\n​\nResolving ambiguities\n\nMany utilities in Tailwind share a common namespace but map to different CSS properties. For example text-lg and text-black both share the text- namespace, but one is for font-size and the other is for color.\n\nWhen using arbitrary values, Tailwind can generally handle this ambiguity automatically based on the value you pass in:\n\n<!-- Will generate a font-size utility -->\n<div class=\"text-[22px]\">...</div>\n\n<!-- Will generate a color utility -->\n<div class=\"text-[#bada55]\">...</div>\n\nSometimes it really is ambiguous though, for example when using CSS variables:\n\n<div class=\"text-[var(--my-var)]\">...</div>\n\nIn these situations, you can “hint” the underlying type to Tailwind by adding a CSS data type before the value:\n\n<!-- Will generate a font-size utility -->\n<div class=\"text-[length:var(--my-var)]\">...</div>\n\n<!-- Will generate a color utility -->\n<div class=\"text-[color:var(--my-var)]\">...</div>\n​\nUsing CSS and @layer\n\nWhen you need to add truly custom CSS rules to a Tailwind project, the easiest approach is to just add the custom CSS to your stylesheet:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.my-custom-style {\n  /* ... */\n}\n\nFor more power, you can also use the @layer directive to add styles to Tailwind’s base, components, and utilities layers:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .my-custom-style {\n    /* ... */\n  }\n}\nWhy does Tailwind group styles into “layers”?\n\nThe @layer directive helps you control declaration order by automatically relocating your styles to the corresponding @tailwind directive, and also enables features like modifiers and tree-shaking for your own custom CSS.\n\n​\nAdding base styles\n\nIf you just want to set some defaults for the page (like the text color, background color, or font family), the easiest option is just adding some classes to the html or body elements:\n\n<!doctype html>\n<html lang=\"en\" class=\"text-gray-900 bg-gray-100 font-serif\">\n  <!-- ... -->\n</html>\n\nThis keeps your base styling decisions in your markup alongside all of your other styles, instead of hiding them in a separate file.\n\nIf you want to add your own default base styles for specific HTML elements, use the @layer directive to add those styles to Tailwind’s base layer:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  h1 {\n    @apply text-2xl;\n  }\n  h2 {\n    @apply text-xl;\n  }\n  /* ... */\n}\n\nUse the theme function or @apply directive when adding custom base styles if you want to refer to any of the values defined in your theme.\n\n​\nAdding component classes\n\nUse the components layer for any more complicated classes you want to add to your project that you’d still like to be able to override with utility classes.\n\nTraditionally these would be classes like card, btn, badge — that kind of thing.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .card {\n    background-color: theme('colors.white');\n    border-radius: theme('borderRadius.lg');\n    padding: theme('spacing.6');\n    box-shadow: theme('boxShadow.xl');\n  }\n  /* ... */\n}\n\nBy defining component classes in the components layer, you can still use utility classes to override them when necessary:\n\n<!-- Will look like a card, but with square corners -->\n<div class=\"card rounded-none\">\n  <!-- ... -->\n</div>\n\nUsing Tailwind you probably don’t need these types of classes as often as you think. Read our guide on Reusing Styles for our recommendations.\n\nThe components layer is also a good place to put custom styles for any third-party components you’re using:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .select2-dropdown {\n    @apply rounded-b-lg shadow-md;\n  }\n  .select2-search {\n    @apply border border-gray-300 rounded;\n  }\n  .select2-results__group {\n    @apply text-lg font-bold text-gray-900;\n  }\n  /* ... */\n}\n\nUse the theme function or @apply directive when adding custom component styles if you want to refer to any of the values defined in your theme.\n\n​\nAdding custom utilities\n\nAdd any of your own custom utility classes to Tailwind’s utilities layer:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer utilities {\n  .content-auto {\n    content-visibility: auto;\n  }\n}\n\nThis can be useful when there’s a CSS feature you’d like to use in your project that Tailwind doesn’t include utilities for out of the box.\n\n​\nUsing modifiers with custom CSS\n\nAny custom styles you add to Tailwind with @layer will automatically support Tailwind’s modifier syntax for handling things like hover states, responsive breakpoints, dark mode, and more.\n\nCSS\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer utilities {\n  .content-auto {\n    content-visibility: auto;\n  }\n}\nHTML\n<div class=\"lg:dark:content-auto\">\n  <!-- ... -->\n</div>\n\nLearn more about how these modifiers work in the Hover, Focus, and Other States documentation.\n\n​\nRemoving unused custom CSS\n\nAny custom styles you add to the base, components, or utilities layers will only be included in your compiled CSS if those styles are actually used in your HTML.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  /* This won't be included in your compiled CSS unless you actually use it */\n  .card {\n    /* ... */\n  }\n}\n\nIf you want to add some custom CSS that should always be included, add it to your stylesheet without using the @layer directive:\n\nmain.css\n@tailwind base;\n@tailwind components;\n\n/* This will always be included in your compiled CSS */\n.card {\n  /* ... */\n}\n\n@tailwind utilities;\n\nMake sure to put your custom styles where they need to go to get the precedence behavior you want. In the example above, we’ve added the .card class before @tailwind utilities to make sure utilities can still override it.\n\n​\nUsing multiple CSS files\n\nIf you are writing a lot of CSS and organizing it into multiple files, make sure those files are combined into a single stylesheet before processing them with Tailwind, or you’ll see errors about using @layer without the corresponding @tailwind directive.\n\nThe easiest way to do this is using the postcss-import plugin:\n\npostcss.config.js\nmodule.exports = {\n\n  plugins: {\n\n    'postcss-import': {},\n\n    tailwindcss: {},\n\n    autoprefixer: {},\n\n  }\n\n}\n\n\nLearn more in our build-time imports documentation.\n\n​\nLayers and per-component CSS\n\nComponent frameworks like Vue and Svelte support adding per-component styles within a <style> block that lives in each component file.\n\nWhile you can use features like @apply and theme inside component styles like this, the @layer directive will not work and you’ll see an error about @layer being used without a matching @tailwind directive:\n\nDon’t use @layer in component styles\n\nCard.svelte\n<div>\n  <slot></slot>\n</div>\n\n<style>\n  /* Won't work because this file is processed in isolation */\n  @layer components {\n    div {\n      background-color: theme('colors.white');\n      border-radius: theme('borderRadius.lg');\n      padding: theme('spacing.6');\n      box-shadow: theme('boxShadow.xl');\n    }\n  }\n</style>\n\nThis is because under-the-hood, frameworks like Vue and Svelte are processing every single <style> block independently, and running your PostCSS plugin chain against each one in isolation.\n\nThat means if you have 10 components that each have a <style> block, Tailwind is being run 10 separate times, and each run has zero knowledge about the other runs. Because of this, Tailwind can’t take the styles you define in a @layer and move them to the corresponding @tailwind directive, because as far as Tailwind can tell there is no @tailwind directive to move it to.\n\nOne solution to this is to simply not use @layer inside your component styles:\n\nAdd your styles without using @layer\n\nCard.svelte\n<div>\n  <slot></slot>\n</div>\n\n<style>\n  div {\n    background-color: theme('colors.white');\n    border-radius: theme('borderRadius.lg');\n    padding: theme('spacing.6');\n    box-shadow: theme('boxShadow.xl');\n  }\n</style>\n\nYou lose the ability to control the precedence of your styles, but unfortunately that’s totally out of our control because of how these tools work.\n\nOur recommendation is that you just don’t use component styles like this at all and instead use Tailwind the way it’s intended to be used — as a single global stylesheet where you use the classes directly in your HTML:\n\nUse Tailwind’s utilities instead of component styles\n\nCard.svelte\n<div class=\"bg-white rounded-lg p-6 shadow-xl\">\n  <slot></slot>\n</div>\n​\nWriting plugins\n\nYou can also add custom styles to your project using Tailwind’s plugin system instead of using a CSS file:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    plugin(function ({ addBase, addComponents, addUtilities, theme }) {\n      addBase({\n        'h1': {\n          fontSize: theme('fontSize.2xl'),\n        },\n        'h2': {\n          fontSize: theme('fontSize.xl'),\n        },\n      })\n      addComponents({\n        '.card': {\n          backgroundColor: theme('colors.white'),\n          borderRadius: theme('borderRadius.lg'),\n          padding: theme('spacing.6'),\n          boxShadow: theme('boxShadow.xl'),\n        }\n      })\n      addUtilities({\n        '.content-auto': {\n          contentVisibility: 'auto',\n        }\n      })\n    })\n  ]\n}\n\nLearn more about writing your own plugins in the Plugins documentation.\n\nReusing Styles\nFunctions & Directives\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nCustomizing your theme\nUsing arbitrary values\nArbitrary properties\nArbitrary variants\nHandling whitespace\nResolving ambiguities\nUsing CSS and @layer\nAdding base styles\nAdding component classes\nAdding custom utilities\nUsing modifiers with custom CSS\nRemoving unused custom CSS\nUsing multiple CSS files\nLayers and per-component CSS\nWriting plugins\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Install Tailwind CSS with Next.js - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/guides/nextjs",
    "html": "Installation\n\nInstall Tailwind CSS with Next.js\n\nSetting up Tailwind CSS in a Next.js project.\n\nCreate your project\n\nStart by creating a new Next.js project if you don’t have one set up already. The most common approach is to use Create Next App.\n\nTerminal\nnpx create-next-app@latest my-project --typescript --eslint\ncd my-project\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and then run the init command to generate both tailwind.config.js and postcss.config.js.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\n\n    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n\n    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n\n    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n\n \n\n    // Or if using `src` directory:\n\n    \"./src/**/*.{js,ts,jsx,tsx,mdx}\",\n\n  ],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your globals.css file.\n\nglobals.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev.\n\nTerminal\nnpm run dev\nStart using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\nindex.tsx\nexport default function Home() {\n\n  return (\n\n    <h1 className=\"text-3xl font-bold underline\">\n\n      Hello world!\n\n    </h1>\n\n  )\n\n}\n"
  },
  {
    "title": "Customizing Colors - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/customizing-colors",
    "html": "Customization\n\nCustomizing Colors\n\nCustomizing the default color palette for your project.\n\n​\nDefault color palette\n\nTailwind includes an expertly-crafted default color palette out-of-the-box that is a great starting point if you don’t have your own specific branding in mind.\n\nSlate\n50\n#f8fafc\n100\n#f1f5f9\n200\n#e2e8f0\n300\n#cbd5e1\n400\n#94a3b8\n500\n#64748b\n600\n#475569\n700\n#334155\n800\n#1e293b\n900\n#0f172a\n950\n#020617\nGray\n50\n#f9fafb\n100\n#f3f4f6\n200\n#e5e7eb\n300\n#d1d5db\n400\n#9ca3af\n500\n#6b7280\n600\n#4b5563\n700\n#374151\n800\n#1f2937\n900\n#111827\n950\n#030712\nZinc\n50\n#fafafa\n100\n#f4f4f5\n200\n#e4e4e7\n300\n#d4d4d8\n400\n#a1a1aa\n500\n#71717a\n600\n#52525b\n700\n#3f3f46\n800\n#27272a\n900\n#18181b\n950\n#09090b\nNeutral\n50\n#fafafa\n100\n#f5f5f5\n200\n#e5e5e5\n300\n#d4d4d4\n400\n#a3a3a3\n500\n#737373\n600\n#525252\n700\n#404040\n800\n#262626\n900\n#171717\n950\n#0a0a0a\nStone\n50\n#fafaf9\n100\n#f5f5f4\n200\n#e7e5e4\n300\n#d6d3d1\n400\n#a8a29e\n500\n#78716c\n600\n#57534e\n700\n#44403c\n800\n#292524\n900\n#1c1917\n950\n#0c0a09\nRed\n50\n#fef2f2\n100\n#fee2e2\n200\n#fecaca\n300\n#fca5a5\n400\n#f87171\n500\n#ef4444\n600\n#dc2626\n700\n#b91c1c\n800\n#991b1b\n900\n#7f1d1d\n950\n#450a0a\nOrange\n50\n#fff7ed\n100\n#ffedd5\n200\n#fed7aa\n300\n#fdba74\n400\n#fb923c\n500\n#f97316\n600\n#ea580c\n700\n#c2410c\n800\n#9a3412\n900\n#7c2d12\n950\n#431407\nAmber\n50\n#fffbeb\n100\n#fef3c7\n200\n#fde68a\n300\n#fcd34d\n400\n#fbbf24\n500\n#f59e0b\n600\n#d97706\n700\n#b45309\n800\n#92400e\n900\n#78350f\n950\n#451a03\nYellow\n50\n#fefce8\n100\n#fef9c3\n200\n#fef08a\n300\n#fde047\n400\n#facc15\n500\n#eab308\n600\n#ca8a04\n700\n#a16207\n800\n#854d0e\n900\n#713f12\n950\n#422006\nLime\n50\n#f7fee7\n100\n#ecfccb\n200\n#d9f99d\n300\n#bef264\n400\n#a3e635\n500\n#84cc16\n600\n#65a30d\n700\n#4d7c0f\n800\n#3f6212\n900\n#365314\n950\n#1a2e05\nGreen\n50\n#f0fdf4\n100\n#dcfce7\n200\n#bbf7d0\n300\n#86efac\n400\n#4ade80\n500\n#22c55e\n600\n#16a34a\n700\n#15803d\n800\n#166534\n900\n#14532d\n950\n#052e16\nEmerald\n50\n#ecfdf5\n100\n#d1fae5\n200\n#a7f3d0\n300\n#6ee7b7\n400\n#34d399\n500\n#10b981\n600\n#059669\n700\n#047857\n800\n#065f46\n900\n#064e3b\n950\n#022c22\nTeal\n50\n#f0fdfa\n100\n#ccfbf1\n200\n#99f6e4\n300\n#5eead4\n400\n#2dd4bf\n500\n#14b8a6\n600\n#0d9488\n700\n#0f766e\n800\n#115e59\n900\n#134e4a\n950\n#042f2e\nCyan\n50\n#ecfeff\n100\n#cffafe\n200\n#a5f3fc\n300\n#67e8f9\n400\n#22d3ee\n500\n#06b6d4\n600\n#0891b2\n700\n#0e7490\n800\n#155e75\n900\n#164e63\n950\n#083344\nSky\n50\n#f0f9ff\n100\n#e0f2fe\n200\n#bae6fd\n300\n#7dd3fc\n400\n#38bdf8\n500\n#0ea5e9\n600\n#0284c7\n700\n#0369a1\n800\n#075985\n900\n#0c4a6e\n950\n#082f49\nBlue\n50\n#eff6ff\n100\n#dbeafe\n200\n#bfdbfe\n300\n#93c5fd\n400\n#60a5fa\n500\n#3b82f6\n600\n#2563eb\n700\n#1d4ed8\n800\n#1e40af\n900\n#1e3a8a\n950\n#172554\nIndigo\n50\n#eef2ff\n100\n#e0e7ff\n200\n#c7d2fe\n300\n#a5b4fc\n400\n#818cf8\n500\n#6366f1\n600\n#4f46e5\n700\n#4338ca\n800\n#3730a3\n900\n#312e81\n950\n#1e1b4b\nViolet\n50\n#f5f3ff\n100\n#ede9fe\n200\n#ddd6fe\n300\n#c4b5fd\n400\n#a78bfa\n500\n#8b5cf6\n600\n#7c3aed\n700\n#6d28d9\n800\n#5b21b6\n900\n#4c1d95\n950\n#2e1065\nPurple\n50\n#faf5ff\n100\n#f3e8ff\n200\n#e9d5ff\n300\n#d8b4fe\n400\n#c084fc\n500\n#a855f7\n600\n#9333ea\n700\n#7e22ce\n800\n#6b21a8\n900\n#581c87\n950\n#3b0764\nFuchsia\n50\n#fdf4ff\n100\n#fae8ff\n200\n#f5d0fe\n300\n#f0abfc\n400\n#e879f9\n500\n#d946ef\n600\n#c026d3\n700\n#a21caf\n800\n#86198f\n900\n#701a75\n950\n#4a044e\nPink\n50\n#fdf2f8\n100\n#fce7f3\n200\n#fbcfe8\n300\n#f9a8d4\n400\n#f472b6\n500\n#ec4899\n600\n#db2777\n700\n#be185d\n800\n#9d174d\n900\n#831843\n950\n#500724\nRose\n50\n#fff1f2\n100\n#ffe4e6\n200\n#fecdd3\n300\n#fda4af\n400\n#fb7185\n500\n#f43f5e\n600\n#e11d48\n700\n#be123c\n800\n#9f1239\n900\n#881337\n950\n#4c0519\n\nBut when you do need to customize your palette, you can configure your colors under the colors key in the theme section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      // Configure your color palette here\n    }\n  }\n}\n\nWhen it comes to building a custom color palette, you can either configure your own custom colors from scratch if you know exactly what you want, or curate your colors from our extensive included color palette if you want a head start.\n\n​\nUsing custom colors\n\nIf you’d like to completely replace the default color palette with your own custom colors, add your colors directly under the theme.colors section of your configuration file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      'white': '#ffffff',\n      'purple': '#3f3cbb',\n      'midnight': '#121063',\n      'metal': '#565584',\n      'tahiti': '#3ab7bf',\n      'silver': '#ecebff',\n      'bubble-gum': '#ff77e9',\n      'bermuda': '#78dcca',\n    },\n  },\n}\n\nBy default, these colors will be made available everywhere in the framework where you use colors, like the text color utilities, border color utilities, background color utilities, and more.\n\n<div class=\"bg-midnight text-tahiti\">\n  <!-- ... -->\n</div>\n\nDon’t forget to include values like transparent and currentColor if you want to use them in your project.\n\n​\nColor object syntax\n\nWhen your palette includes multiple shades of the same color, it can be convenient to group them together using our nested color object syntax:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      'white': '#ffffff',\n      'tahiti': {\n        100: '#cffafe',\n        200: '#a5f3fc',\n        300: '#67e8f9',\n        400: '#22d3ee',\n        500: '#06b6d4',\n        600: '#0891b2',\n        700: '#0e7490',\n        800: '#155e75',\n        900: '#164e63',\n      },\n      // ...\n    },\n  },\n}\n\nThe nested keys will be combined with the parent key to form class names like bg-tahiti-400.\n\nLike many other places in Tailwind, the special DEFAULT key can be used when you want to define a value with no suffix:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      // ...\n      'tahiti': {\n        light: '#67e8f9',\n        DEFAULT: '#06b6d4',\n        dark: '#0e7490',\n      },\n      // ...\n    },\n  },\n}\n\nThis will create classes like bg-tahiti, bg-tahiti-light, and bg-tahiti-dark.\n\n​\nArbitrary values\n\nIf you need a one-off custom color in your project, consider using Tailwind’s arbitrary value notation to generate a class for that color on-demand instead of adding it to your theme:\n\nShare on Twitter\n<button class=\"bg-[#1da1f2] text-white ...\">\n  <svg><!-- ... --></svg>\n  Share on Twitter\n</button>\n\nLearn more in the using arbitrary values documentation.\n\n​\nGenerating colors\n\nIf you’re wondering how we automatically generated the 50–950 shades of each color, bad news — color is complicated and to get the absolute best results we picked all of Tailwind’s default colors by hand, meticulously balancing them by eye and testing them in real designs to make sure we were happy with them.\n\nIf you are creating your own custom color palette and don’t feel confident doing it by hand, UI Colors is a great tool that can give you a good starting point based on any custom color.\n\nTwo other useful tools we recommend for building your own palettes are Palettte and ColorBox — they won’t do the work for you but their interfaces are well-designed for doing this sort of work.\n\n​\nUsing the default colors\n\nIf you don’t have a set of completely custom colors in mind for your project, you can curate your colors from our default palette by importing tailwindcss/colors in your configuration file and choosing the colors you want to use:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      black: colors.black,\n      white: colors.white,\n      gray: colors.gray,\n      emerald: colors.emerald,\n      indigo: colors.indigo,\n      yellow: colors.yellow,\n    },\n  },\n}\n\nThis can be helpful if you want to deliberately limit your color palette and reduce the number of class names suggested by IntelliSense.\n\n​\nAliasing color names\n\nYou can also alias the colors in our default palette to make the names simpler and easier to remember:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\n\n\nmodule.exports = {\n\n  theme: {\n\n    colors: {\n\n      transparent: 'transparent',\n\n      current: 'currentColor',\n\n      black: colors.black,\n\n      white: colors.white,\n\n      gray: colors.slate,\n\n      green: colors.emerald,\n\n      purple: colors.violet,\n\n      yellow: colors.amber,\n\n      pink: colors.fuchsia,\n\n    },\n\n  },\n\n}\n\n\nThis is especially common for grays, as you usually only use one set in any given project and it’s nice to be able to type bg-gray-300 instead of bg-neutral-300 for example.\n\n​\nAdding additional colors\n\nIf you’d like to add a brand new color to the default palette, add it in the theme.extend.colors section of your configuration file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        brown: {\n          50: '#fdf8f6',\n          100: '#f2e8e5',\n          200: '#eaddd7',\n          300: '#e0cec7',\n          400: '#d2bab0',\n          500: '#bfa094',\n          600: '#a18072',\n          700: '#977669',\n          800: '#846358',\n          900: '#43302b',\n        },\n      }\n    },\n  },\n}\n\nYou can also use theme.extend.colors to add additional shades to an existing color if it’s needed for your design:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        blue: {\n          950: '#17275c',\n        },\n      }\n    },\n  },\n}\n​\nDisabling a default color\n\nIf you’d like to disable any of the default colors, the best approach is to override the default color palette and just include the colors you do want:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      black: colors.black,\n      white: colors.white,\n      gray: colors.gray,\n      emerald: colors.emerald,\n      indigo: colors.indigo,\n      yellow: colors.yellow,\n    },\n  },\n}\n​\nNaming your colors\n\nTailwind uses literal color names (like red, green, etc.) and a numeric scale (where 50 is light and 900 is dark) by default. We think this is the best choice for most projects, and have found it easier to maintain than using abstract names like primary or danger.\n\nThat said, you can name your colors in Tailwind whatever you like, and if you’re working on a project that needs to support multiple themes for example, it might make sense to use more abstract names:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      primary: '#5c6ac4',\n      secondary: '#ecc94b',\n      // ...\n    }\n  }\n}\n\nYou can configure those colors explicitly like we have above, or you can pull in colors from our default color palette and alias them:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\nmodule.exports = {\n  theme: {\n    colors: {\n      primary: colors.indigo,\n      secondary: colors.yellow,\n      neutral: colors.gray,\n    }\n  }\n}\n\nAgain, we recommend sticking to the default naming convention for most projects, and only using abstract names if you have a really good reason.\n\n​\nUsing CSS variables\n\nIf you’d like to define your colors as CSS variables, you’ll need to define those variables as just the color channels if you want them to work with the opacity modifier syntax:\n\nDefine your CSS variables as channels with no color space function\n\nmain.css\n@tailwind base;\n\n@tailwind components;\n\n@tailwind utilities;\n\n\n\n@layer base {\n\n  :root {\n\n    --color-primary: 255 115 179;\n\n    --color-secondary: 111 114 185;\n\n    /* ... */\n\n  }\n\n}\n\n\nDon’t include the color space function or opacity modifiers won’t work\n\nmain.css\n@tailwind base;\n\n@tailwind components;\n\n@tailwind utilities;\n\n\n\n@layer base {\n\n  :root {\n\n    --color-primary: rgb(255 115 179);\n\n    --color-secondary: rgb(111 114 185);\n\n    /* ... */\n\n  }\n\n}\n\n\nThen define your colors in your configuration file, being sure to include the color space you’re using, and the special <alpha-value> placeholder that Tailwind will use to inject the alpha value when using an opacity modifier:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      // Using modern `rgb`\n      primary: 'rgb(var(--color-primary) / <alpha-value>)',\n      secondary: 'rgb(var(--color-secondary) / <alpha-value>)',\n\n      // Using modern `hsl`\n      primary: 'hsl(var(--color-primary) / <alpha-value>)',\n      secondary: 'hsl(var(--color-secondary) / <alpha-value>)',\n\n      // Using legacy `rgba`\n      primary: 'rgba(var(--color-primary), <alpha-value>)',\n      secondary: 'rgba(var(--color-secondary), <alpha-value>)',\n    }\n  }\n}\n\nWhen defining your colors this way, make sure that the format of your CSS variables is correct for the color function you are using. You’ll want to use spaces if using the modern space-separated syntax, and commas if using legacy functions like rgba or hsla:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    /* For rgb(255 115 179 / <alpha-value>) */\n    --color-primary: 255 115 179;\n\n    /* For hsl(198deg 93% 60% / <alpha-value>) */\n    --color-primary: 198deg 93% 60%;\n\n    /* For rgba(255, 115, 179, <alpha-value>) */\n    --color-primary: 255, 115, 179;\n  }\n}\nScreens\nSpacing\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nDefault color palette\nUsing custom colors\nColor object syntax\nArbitrary values\nGenerating colors\nUsing the default colors\nAliasing color names\nAdding additional colors\nDisabling a default color\nNaming your colors\nUsing CSS variables\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Origin - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-origin",
    "html": "Backgrounds\n\nBackground Origin\n\nUtilities for controlling how an element's background is positioned relative to borders, padding, and content.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-origin-border\tbackground-origin: border-box;\n\nbg-origin-padding\tbackground-origin: padding-box;\n\nbg-origin-content\tbackground-origin: content-box;\n\n​\nBasic usage\n​\nSetting the background origin\n\nUse bg-origin-border, bg-origin-padding, and bg-origin-content to control where an element’s background is rendered.\n\nbg-origin-border\n\nbg-origin-padding\n\nbg-origin-content\n\n<div class=\"bg-origin-border p-4 border-4 border-dashed ...\" style=\"background-image: url(...)\"></div>\n<div class=\"bg-origin-padding p-4 border-4 border-dashed ...\" style=\"background-image: url(...)\"></div>\n<div class=\"bg-origin-content p-4 border-4 border-dashed ...\" style=\"background-image: url(...)\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-origin-padding to only apply the bg-origin-padding utility on hover.\n\n<div class=\"bg-origin-border hover:bg-origin-padding\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-origin-padding to apply the bg-origin-padding utility at only medium screen sizes and above.\n\n<div class=\"bg-origin-border md:bg-origin-padding\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBackground Color\nBackground Position\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the background origin\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Customizing Screens - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/screens",
    "html": "Customization\n\nCustomizing Screens\n\nCustomizing the default breakpoints for your project.\n\n​\nConfiguring custom screens\n\nYou define your project’s breakpoints in the theme.screens section of your tailwind.config.js file. The keys become your responsive modifiers (like md:text-center), and the values are the min-width where that breakpoint should start.\n\nThe default breakpoints are inspired by common device resolutions:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '640px',\n      // => @media (min-width: 640px) { ... }\n\n      'md': '768px',\n      // => @media (min-width: 768px) { ... }\n\n      'lg': '1024px',\n      // => @media (min-width: 1024px) { ... }\n\n      'xl': '1280px',\n      // => @media (min-width: 1280px) { ... }\n\n      '2xl': '1536px',\n      // => @media (min-width: 1536px) { ... }\n    }\n  }\n}\n\nFeel free to have as few or as many screens as you want, naming them in whatever way you’d prefer for your project.\n\n​\nOverriding the defaults\n\nTo completely replace the default breakpoints, add your custom screens configuration directly under the theme key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '576px',\n      // => @media (min-width: 576px) { ... }\n\n      'md': '960px',\n      // => @media (min-width: 960px) { ... }\n\n      'lg': '1440px',\n      // => @media (min-width: 1440px) { ... }\n    },\n  }\n}\n\nAny default screens you haven’t overridden (such as xl using the above example) will be removed and will not be available as screen modifiers.\n\n​\nOverriding a single screen\n\nTo override a single screen size (like lg), add your custom screens value under the theme.extend key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        'lg': '992px',\n        // => @media (min-width: 992px) { ... }\n      },\n    },\n  },\n}\n\nThis will replace the default screens value with the same name, without changing the order of your breakpoints.\n\n​\nAdding larger breakpoints\n\nThe easiest way to add an additional larger breakpoint is using the extend key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        '3xl': '1600px',\n      },\n    },\n  },\n  plugins: [],\n}\n\nThis will add your custom screen to the end of the default breakpoint list.\n\n​\nAdding smaller breakpoints\n\nIf you want to add an additional small breakpoint, you can’t use extend because the small breakpoint would be added to the end of the breakpoint list, and breakpoints need to be sorted from smallest to largest in order to work as expected with a min-width breakpoint system.\n\nInstead, override the entire screens key, re-specifying the default breakpoints:\n\ntailwind.config.js\nconst defaultTheme = require('tailwindcss/defaultTheme')\n\nmodule.exports = {\n  theme: {\n    screens: {\n      'xs': '475px',\n      ...defaultTheme.screens,\n    },\n  },\n  plugins: [],\n}\n\nWe expose the default theme at tailwindcss/defaultTheme so you don’t have to maintain the list of default breakpoints yourself.\n\n​\nUsing custom screen names\n\nYou can name your custom screens whatever you like, and are not limited to following the sm/md/lg/xl/2xl convention that Tailwind uses by default.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'tablet': '640px',\n      // => @media (min-width: 640px) { ... }\n\n      'laptop': '1024px',\n      // => @media (min-width: 1024px) { ... }\n\n      'desktop': '1280px',\n      // => @media (min-width: 1280px) { ... }\n    },\n  }\n}\n\nYour responsive modifiers will reflect these custom screen names, so using them in your HTML would now look like this:\n\n<div class=\"grid grid-cols-1 tablet:grid-cols-2 laptop:grid-cols-3 desktop:grid-cols-4\">\n  <!-- ... -->\n</div>\n​\nAdvanced configuration\n\nBy default, breakpoints are min-width to encourage a mobile-first workflow. If you need more control over your media queries, you can also define them using an object syntax that lets you specify explicit min-width and max-width values.\n\n​\nMax-width breakpoints\n\nIf you want to work with max-width breakpoints instead of min-width, you can specify your screens as objects with a max key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      '2xl': {'max': '1535px'},\n      // => @media (max-width: 1535px) { ... }\n\n      'xl': {'max': '1279px'},\n      // => @media (max-width: 1279px) { ... }\n\n      'lg': {'max': '1023px'},\n      // => @media (max-width: 1023px) { ... }\n\n      'md': {'max': '767px'},\n      // => @media (max-width: 767px) { ... }\n\n      'sm': {'max': '639px'},\n      // => @media (max-width: 639px) { ... }\n    }\n  }\n}\n\nMake sure to list max-width breakpoints in descending order so that they override each other as expected.\n\n​\nFixed-range breakpoints\n\nIf you want your breakpoints to specify both a min-width and a max-width, use the min and max keys together:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': {'min': '640px', 'max': '767px'},\n      // => @media (min-width: 640px and max-width: 767px) { ... }\n\n      'md': {'min': '768px', 'max': '1023px'},\n      // => @media (min-width: 768px and max-width: 1023px) { ... }\n\n      'lg': {'min': '1024px', 'max': '1279px'},\n      // => @media (min-width: 1024px and max-width: 1279px) { ... }\n\n      'xl': {'min': '1280px', 'max': '1535px'},\n      // => @media (min-width: 1280px and max-width: 1535px) { ... }\n\n      '2xl': {'min': '1536px'},\n      // => @media (min-width: 1536px) { ... }\n    },\n  }\n}\n\nUnlike regular min-width or max-width breakpoints, breakpoints defined this way will only take effect when the viewport size is explicitly within the defined range.\n\n<div class=\"md:text-center\">\n  This text will be centered on medium screens, but revert back\n  to the default (left-aligned) at all other screen sizes.\n</div>\n​\nMulti-range breakpoints\n\nSometimes it can be useful to have a single breakpoint definition apply in multiple ranges.\n\nFor example, say you have a sidebar and want your breakpoints to be based on the content-area width rather than the entire viewport. You can simulate this by having one of your breakpoints fall back to a smaller breakpoint when the sidebar becomes visible and shrinks the content area:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '500px',\n      'md': [\n        // Sidebar appears at 768px, so revert to `sm:` styles between 768px\n        // and 868px, after which the main content area is wide enough again to\n        // apply the `md:` styles.\n        {'min': '668px', 'max': '767px'},\n        {'min': '868px'}\n      ],\n      'lg': '1100px',\n      'xl': '1400px',\n    }\n  }\n}\n​\nCustom media queries\n\nIf you want full control over the generated media query, use the raw key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        'tall': { 'raw': '(min-height: 800px)' },\n        // => @media (min-height: 800px) { ... }\n      }\n    }\n  }\n}\n\nMedia queries defined using the raw key will be output as-is, and the min and max keys will be ignored.\n\nTheme\nColors\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nConfiguring custom screens\nOverriding the defaults\nOverriding a single screen\nAdding larger breakpoints\nAdding smaller breakpoints\nUsing custom screen names\nAdvanced configuration\nMax-width breakpoints\nFixed-range breakpoints\nMulti-range breakpoints\nCustom media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Try Tailwind CSS using the Play CDN - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/installation/play-cdn",
    "html": "Tailwind CSS works by scanning all of your HTML files, JavaScript components, and any other templates for class names, generating the corresponding styles and then writing them to a static CSS file.\n\nIt's fast, flexible, and reliable — with zero-runtime.\n\nInstallation\nTailwind CLI\nUsing PostCSS\nFramework Guides\nPlay CDN\nPlay CDN\n\nUse the Play CDN to try Tailwind right in the browser without any build step. The Play CDN is designed for development purposes only, and is not the best choice for production.\n\nAdd the Play CDN script to your HTML\n\nAdd the Play CDN script tag to the <head> of your HTML file, and start using Tailwind’s utility classes to style your content.\n\nindex.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n\nTry customizing your config\n\nEdit the tailwind.config object to customize your configuration with your own design tokens.\n\nindex.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n\n  <script>\n\n    tailwind.config = {\n\n      theme: {\n\n        extend: {\n\n          colors: {\n\n            clifford: '#da373d',\n\n          }\n\n        }\n\n      }\n\n    }\n\n  </script>\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline text-clifford\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n\nTry adding some custom CSS\n\nUse type=\"text/tailwindcss\" to add custom CSS that supports all of Tailwind's CSS features.\n\nindex.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n\n  <style type=\"text/tailwindcss\">\n\n    @layer utilities {\n\n      .content-auto {\n\n        content-visibility: auto;\n\n      }\n\n    }\n\n  </style>\n\n</head>\n\n<body>\n\n  <div class=\"lg:content-auto\">\n\n    <!-- ... -->\n\n  </div>\n\n</body>\n\n</html>\n\nTry using a first-party plugin\n\nEnable first-party plugins, like forms and typography, using the plugins query parameter.\n\nindex.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <script src=\"https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio,line-clamp\"></script>\n\n</head>\n\n<body>\n\n  <div class=\"prose\">\n\n    <!-- ... -->\n\n  </div>\n\n</body>\n\n</html>\n\nWhat to read next\n\nGet familiar with some of the core concepts that make Tailwind CSS different from writing traditional CSS.\n\nUtility-First Fundamentals\n\nUsing a utility-first workflow to build complex components from a constrained set of primitive utilities.\n\nResponsive Design\n\nBuild fully responsive user interfaces that adapt to any screen size using responsive modifiers.\n\nHover, Focus & Other States\n\nStyle elements in interactive states like hover, focus, and more using conditional modifiers.\n\nDark Mode\n\nOptimize your site for dark mode directly in your HTML using the dark mode modifier.\n\nReusing Styles\n\nManage duplication and keep your projects maintainable by creating reusable abstractions.\n\nCustomizing the Framework\n\nCustomize the framework to match your brand and extend it with your own custom styles."
  },
  {
    "title": "Framework Guides - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/installation/framework-guides",
    "html": "Tailwind CSS works by scanning all of your HTML files, JavaScript components, and any other templates for class names, generating the corresponding styles and then writing them to a static CSS file.\n\nIt's fast, flexible, and reliable — with zero-runtime.\n\nInstallation\nTailwind CLI\nUsing PostCSS\nFramework Guides\nPlay CDN\nFramework Guides\n\nFramework-specific guides that cover our recommended approach to installing Tailwind CSS in a number of popular environments.\n\nNext.js\n\nFull-featured React framework with great developer experience.\n\nLaravel\n\nPHP web application framework with expressive, elegant syntax.\n\nVite\n\nFast and modern development server and build tool.\n\nNuxt\n\nIntuitive Vue framework for building universal applications.\n\nGatsby\n\nFramework for building static sites with React and GraphQL.\n\nSolidJS\n\nA tool for building simple, performant, and reactive user interfaces.\n\nSvelteKit\n\nThe fastest way to build apps of all sizes with Svelte.js.\n\nAngular\n\nPlatform for building mobile and desktop web applications.\n\nRuby on Rails\n\nFull-stack framework with all the tools needed to build amazing web apps.\n\nRemix\n\nFull stack framework focused on web fundamentals and modern UX.\n\nPhoenix\n\nA framework to build rich, interactive applications with Elixir.\n\nParcel\n\nThe zero-configuration build tool for the web.\n\nSymfony\n\nA PHP framework to create websites and web applications.\n\nMeteor\n\nThe full stack JavaScript framework for developing cross-platform apps.\n\nCreate React App\n\nCLI tool for scaffolding a new single-page React application.\n\nAdonisJS\n\nA fully featured web framework for Node.js.\n\nEmber.js\n\nA JavaScript framework for ambitious web developers.\n\nAstro\n\nThe all-in-one web framework designed for speed.\n\nQwik\n\nBuild instantly-interactive web apps without effort.\n\nDon't see your framework of choice? Try using Tailwind CLI or installing Tailwind as a PostCSS plugin instead.\n\nWhat to read next\n\nGet familiar with some of the core concepts that make Tailwind CSS different from writing traditional CSS.\n\nUtility-First Fundamentals\n\nUsing a utility-first workflow to build complex components from a constrained set of primitive utilities.\n\nResponsive Design\n\nBuild fully responsive user interfaces that adapt to any screen size using responsive modifiers.\n\nHover, Focus & Other States\n\nStyle elements in interactive states like hover, focus, and more using conditional modifiers.\n\nDark Mode\n\nOptimize your site for dark mode directly in your HTML using the dark mode modifier.\n\nReusing Styles\n\nManage duplication and keep your projects maintainable by creating reusable abstractions.\n\nCustomizing the Framework\n\nCustomize the framework to match your brand and extend it with your own custom styles."
  },
  {
    "title": "Install Tailwind CSS using PostCSS - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/installation/using-postcss",
    "html": "Tailwind CSS works by scanning all of your HTML files, JavaScript components, and any other templates for class names, generating the corresponding styles and then writing them to a static CSS file.\n\nIt's fast, flexible, and reliable — with zero-runtime.\n\nInstallation\nTailwind CLI\nUsing PostCSS\nFramework Guides\nPlay CDN\nInstalling Tailwind CSS as a PostCSS plugin\n\nInstalling Tailwind CSS as a PostCSS plugin is the most seamless way to integrate it with build tools like webpack, Rollup, Vite, and Parcel.\n\nInstall Tailwind CSS\n\nInstall tailwindcss and its peer dependencies via npm, and create your tailwind.config.js file.\n\nTerminal\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\nAdd Tailwind to your PostCSS configuration\n\nAdd tailwindcss and autoprefixer to your postcss.config.js file, or wherever PostCSS is configured in your project.\n\npostcss.config.js\nmodule.exports = {\n\n  plugins: {\n\n    tailwindcss: {},\n\n    autoprefixer: {},\n\n  }\n\n}\n\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\"./src/**/*.{html,js}\"],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your main CSS file.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart your build process\n\nRun your build process with npm run dev or whatever command is configured in your package.json file.\n\nTerminal\nnpm run dev\nStart using Tailwind in your HTML\n\nMake sure your compiled CSS is included in the <head> (your framework might handle this for you), then start using Tailwind’s utility classes to style your content.\n\nindex.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <link href=\"/dist/main.css\" rel=\"stylesheet\">\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n\n\nAre you stuck? Setting up Tailwind with PostCSS can be a bit different across different build tools. Check our framework guides to see if we have more specific instructions for your particular setup.\nExplore our framework guides\n\nWhat to read next\n\nGet familiar with some of the core concepts that make Tailwind CSS different from writing traditional CSS.\n\nUtility-First Fundamentals\n\nUsing a utility-first workflow to build complex components from a constrained set of primitive utilities.\n\nResponsive Design\n\nBuild fully responsive user interfaces that adapt to any screen size using responsive modifiers.\n\nHover, Focus & Other States\n\nStyle elements in interactive states like hover, focus, and more using conditional modifiers.\n\nDark Mode\n\nOptimize your site for dark mode directly in your HTML using the dark mode modifier.\n\nReusing Styles\n\nManage duplication and keep your projects maintainable by creating reusable abstractions.\n\nCustomizing the Framework\n\nCustomize the framework to match your brand and extend it with your own custom styles."
  },
  {
    "title": "@tailwindcss/typography - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/typography-plugin",
    "html": "Official Plugins\n\n@tailwindcss/typography\nView on GitHub\n\nBeautiful typographic defaults for HTML you don't control.\n\nThe official Tailwind CSS Typography plugin provides a set of prose classes you can use to add beautiful typographic defaults to any vanilla HTML you don’t control, like HTML rendered from Markdown, or pulled from a CMS.\n\n<article class=\"prose lg:prose-xl\">\n  {{ markdown }}\n</article>\n\nTo see what it looks like in action, check out our live demo on Tailwind Play.\n\n​\nInstallation\n\nInstall the plugin from npm:\n\nnpm install -D @tailwindcss/typography\n\nThen add the plugin to your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    // ...\n  },\n  plugins: [\n    require('@tailwindcss/typography'),\n    // ...\n  ],\n}\n​\nBasic usage\n\nNow you can use the prose classes to add sensible typography styles to any vanilla HTML:\n\n<article class=\"prose lg:prose-xl\">\n  <h1>Garlic bread with cheese: What the science tells us</h1>\n  <p>\n    For years parents have espoused the health benefits of eating garlic bread with cheese to their\n    children, with the food earning such an iconic status in our culture that kids will often dress\n    up as warm, cheesy loaf for Halloween.\n  </p>\n  <p>\n    But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases\n    springing up around the country.\n  </p>\n  <!-- ... -->\n</article>\n​\nChoosing a gray scale\n\nThis plugin includes a modifier class for each of the five gray scales Tailwind includes by default so you can easily style your content to match the grays you’re using in your project.\n\n<article class=\"prose prose-slate\">\n  {{ markdown }}\n</article>\n\nHere are the classes that are generated using a totally default Tailwind CSS v2.0 build:\n\nClass\tGray scale\nprose-gray (default)\tGray\nprose-slate\tSlate\nprose-zinc\tZinc\nprose-neutral\tNeutral\nprose-stone\tStone\n\nModifier classes are designed to be used with the multi-class modifier pattern and must be used in conjunction with the base prose class.\n\nAlways include the prose class when adding a gray scale modifier\n\n<article class=\"prose prose-stone\">\n  {{ markdown }}\n</article>\n\nTo learn about creating your own color themes, read the adding custom color themes documentation.\n\n​\nApplying a type scale\n\nSize modifiers allow you to adjust the overall size of your typography for different contexts.\n\n<article class=\"prose prose-xl\">\n  {{ markdown }}\n</article>\n\nFive different typography sizes are included out of the box:\n\nClass\tBody font size\nprose-sm\t0.875rem (14px)\nprose-base (default)\t1rem (16px)\nprose-lg\t1.125rem (18px)\nprose-xl\t1.25rem (20px)\nprose-2xl\t1.5rem (24px)\n\nThese can be used in combination with Tailwind’s breakpoint modifiers to change the overall font size of a piece of content at different viewport sizes:\n\n<article class=\"prose md:prose-lg lg:prose-xl\">\n  {{ markdown }}\n</article>\n\nEverything about the provided size modifiers has been hand-tuned by professional designers to look as beautiful as possible, including the relationships between font sizes, heading spacing, code block padding, and more.\n\nSize modifiers are designed to be used with the multi-class modifier pattern and must be used in conjunction with the base prose class.\n\nAlways include the prose class when adding a size modifier\n\n<article class=\"prose prose-lg\">\n  {{ markdown }}\n</article>\n\nTo learn about customizing the included type scales, read the documentation on customizing the CSS.\n\n​\nAdapting to dark mode\n\nEach default color theme includes a hand-designed dark mode version that you can trigger by adding the prose-invert class:\n\n<article class=\"prose dark:prose-invert\">\n  {{ markdown }}\n</article>\n\nTo learn about creating your own color themes, read the adding custom color themes documentation.\n\n​\nElement modifiers\n\nUse element modifiers to customize the style of individual elements in your content directly in your HTML:\n\n<article class=\"prose prose-img:rounded-xl prose-headings:underline prose-a:text-blue-600\">\n  {{ markdown }}\n</article>\n\nThis makes it easy to do things like style links to match your brand, add a border radius to images, and tons more.\n\nHere’s a complete list of available element modifiers:\n\nModifier\tTarget\nprose-headings:{utility}\th1, h2, h3, h4, th\nprose-lead:{utility}\t[class~=\"lead\"]\nprose-h1:{utility}\th1\nprose-h2:{utility}\th2\nprose-h3:{utility}\th3\nprose-h4:{utility}\th4\nprose-p:{utility}\tp\nprose-a:{utility}\ta\nprose-blockquote:{utility}\tblockquote\nprose-figure:{utility}\tfigure\nprose-figcaption:{utility}\tfigcaption\nprose-strong:{utility}\tstrong\nprose-em:{utility}\tem\nprose-code:{utility}\tcode\nprose-pre:{utility}\tpre\nprose-ol:{utility}\tol\nprose-ul:{utility}\tul\nprose-li:{utility}\tli\nprose-table:{utility}\ttable\nprose-thead:{utility}\tthead\nprose-tr:{utility}\ttr\nprose-th:{utility}\tth\nprose-td:{utility}\ttd\nprose-img:{utility}\timg\nprose-video:{utility}\tvideo\nprose-hr:{utility}\thr\n\nWhen stacking these modifiers with other modifiers like hover, you most likely want the other modifier to come first:\n\n<article class=\"prose prose-a:text-blue-600 hover:prose-a:text-blue-500\">\n  {{ markdown }}\n</article>\n\nRead the Tailwind CSS documentation on ordering stacked modifiers to learn more.\n\n​\nOverriding max-width\n\nEach size modifier comes with a baked in max-width designed to keep the content as readable as possible. This isn’t always what you want though, and sometimes you’ll want the content to just fill the width of its container.\n\nIn those cases, all you need to do is add max-w-none to your content to override the embedded max-width:\n\n<div class=\"grid grid-cols-4\">\n  <div class=\"col-span-1\">\n    <!-- ... -->\n  </div>\n  <div class=\"col-span-3\">\n    <article class=\"prose max-w-none\">\n      {{ markdown }}\n    </article>\n  </div>\n</div>\n​\nAdvanced topics\n​\nUndoing typography styles\n\nIf you have a block of markup embedded in some content that shouldn’t inherit the prose styles, use the not-prose class to sandbox it:\n\n<article class=\"prose\">\n  <h1>My Heading</h1>\n  <p>...</p>\n\n  <div class=\"not-prose\">\n    <!-- Some example or demo that needs to be prose-free -->\n  </div>\n\n  <p>...</p>\n  <!-- ... -->\n</article>\n\nNote that you can’t nest new prose instances within a not-prose block at this time.\n\n​\nAdding custom color themes\n\nYou can create your own color theme by adding a new key in the typography section of your tailwind.config.js file and providing your colors under the css key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      typography: ({ theme }) => ({\n        pink: {\n          css: {\n            '--tw-prose-body': theme('colors.pink[800]'),\n            '--tw-prose-headings': theme('colors.pink[900]'),\n            '--tw-prose-lead': theme('colors.pink[700]'),\n            '--tw-prose-links': theme('colors.pink[900]'),\n            '--tw-prose-bold': theme('colors.pink[900]'),\n            '--tw-prose-counters': theme('colors.pink[600]'),\n            '--tw-prose-bullets': theme('colors.pink[400]'),\n            '--tw-prose-hr': theme('colors.pink[300]'),\n            '--tw-prose-quotes': theme('colors.pink[900]'),\n            '--tw-prose-quote-borders': theme('colors.pink[300]'),\n            '--tw-prose-captions': theme('colors.pink[700]'),\n            '--tw-prose-code': theme('colors.pink[900]'),\n            '--tw-prose-pre-code': theme('colors.pink[100]'),\n            '--tw-prose-pre-bg': theme('colors.pink[900]'),\n            '--tw-prose-th-borders': theme('colors.pink[300]'),\n            '--tw-prose-td-borders': theme('colors.pink[200]'),\n            '--tw-prose-invert-body': theme('colors.pink[200]'),\n            '--tw-prose-invert-headings': theme('colors.white'),\n            '--tw-prose-invert-lead': theme('colors.pink[300]'),\n            '--tw-prose-invert-links': theme('colors.white'),\n            '--tw-prose-invert-bold': theme('colors.white'),\n            '--tw-prose-invert-counters': theme('colors.pink[400]'),\n            '--tw-prose-invert-bullets': theme('colors.pink[600]'),\n            '--tw-prose-invert-hr': theme('colors.pink[700]'),\n            '--tw-prose-invert-quotes': theme('colors.pink[100]'),\n            '--tw-prose-invert-quote-borders': theme('colors.pink[700]'),\n            '--tw-prose-invert-captions': theme('colors.pink[400]'),\n            '--tw-prose-invert-code': theme('colors.white'),\n            '--tw-prose-invert-pre-code': theme('colors.pink[300]'),\n            '--tw-prose-invert-pre-bg': 'rgb(0 0 0 / 50%)',\n            '--tw-prose-invert-th-borders': theme('colors.pink[600]'),\n            '--tw-prose-invert-td-borders': theme('colors.pink[700]'),\n          },\n        },\n      }),\n    },\n  },\n  plugins: [\n    require('@tailwindcss/typography'),\n    // ...\n  ],\n}\n\nSee our internal style definitions for some more examples.\n\n​\nChanging the default class name\n\nIf you need to use a class name other than prose for any reason, you can do so using the className option when registering the plugin:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    // ...\n  },\n  plugins: [\n    require('@tailwindcss/typography')({\n      className: 'wysiwyg',\n    }),\n  ]\n  ...\n}\n\nNow every instance of prose in the default class names will be replaced by your custom class name:\n\n<article class=\"wysiwyg wysiwyg-slate lg:wysiwyg-xl\">\n  <h1>My Heading</h1>\n  <p>...</p>\n\n  <div class=\"not-wysiwyg\">\n    <!-- Some example or demo that needs to be prose-free -->\n  </div>\n\n  <p>...</p>\n  <!-- ... -->\n</article>\n​\nCustomizing the CSS\n\nIf you want to customize the raw CSS generated by this plugin, add your overrides under the typography key in the theme section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      typography: {\n        DEFAULT: {\n          css: {\n            color: '#333',\n            a: {\n              color: '#3182ce',\n              '&:hover': {\n                color: '#2c5282',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  plugins: [\n    require('@tailwindcss/typography'),\n    // ...\n  ],\n}\n\nLike with all theme customizations in Tailwind, you can also define the typography key as a function if you need access to the theme helper:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      typography: (theme) => ({\n        DEFAULT: {\n          css: {\n            color: theme('colors.gray.800'),\n\n            // ...\n          },\n        },\n      }),\n    },\n  },\n  plugins: [\n    require('@tailwindcss/typography'),\n    // ...\n  ],\n}\n\nCustomizations should be applied to a specific modifier like DEFAULT or xl, and must be added under the css property. Customizations are authored in the same CSS-in-JS syntax used to write Tailwind plugins.\n\nSee the default styles for this plugin for more in-depth examples of configuring each modifier.\n\nScreen Readers\nForms\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nInstallation\nBasic usage\nChoosing a gray scale\nApplying a type scale\nAdapting to dark mode\nElement modifiers\nOverriding max-width\nAdvanced topics\nUndoing typography styles\nAdding custom color themes\nChanging the default class name\nCustomizing the CSS\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Screen Readers - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/screen-readers",
    "html": "Accessibility\n\nScreen Readers\n\nUtilities for improving accessibility with screen readers.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nsr-only\tposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder-width: 0;\n\nnot-sr-only\tposition: static;\nwidth: auto;\nheight: auto;\npadding: 0;\nmargin: 0;\noverflow: visible;\nclip: auto;\nwhite-space: normal;\n\n​\nBasic usage\n​\nScreen-reader-only elements\n\nUse sr-only to hide an element visually without hiding it from screen readers:\n\n<a href=\"#\">\n  <svg><!-- ... --></svg>\n  <span class=\"sr-only\">Settings</span>\n</a>\n​\nUndoing screen-reader-only elements\n\nUse not-sr-only to undo sr-only, making an element visible to sighted users as well as screen readers. This can be useful when you want to visually hide something on small screens but show it on larger screens for example:\n\n<a href=\"#\">\n  <svg><!-- ... --></svg>\n  <span class=\"sr-only sm:not-sr-only\">Settings</span>\n</a>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:not-sr-only to only apply the not-sr-only utility on focus.\n\n<a href=\"#content\" class=\"sr-only focus:not-sr-only\">\n  Skip to content\n</a>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:not-sr-only to apply the not-sr-only utility at only medium screen sizes and above.\n\n<div class=\"sr-only md:not-sr-only\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nStroke Width\nTypography\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nScreen-reader-only elements\nUndoing screen-reader-only elements\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Stroke Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/stroke-width",
    "html": "SVG\n\nStroke Width\n\nUtilities for styling the stroke width of SVG elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nstroke-0\tstroke-width: 0;\n\nstroke-1\tstroke-width: 1;\n\nstroke-2\tstroke-width: 2;\n\n​\nBasic usage\n​\nSetting the stroke width\n\nUse the stroke-{width} utilities to set the stroke width of an SVG.\n\n<svg class=\"stroke-1 ...\"></svg>\n<svg class=\"stroke-2 ...\"></svg>\n\nThis can be useful for styling icon sets like Heroicons.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:stroke-2 to only apply the stroke-2 utility on hover.\n\n<svg class=\"stroke-1 hover:stroke-2\">\n  <!-- ... -->\n</svg>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:stroke-2 to apply the stroke-2 utility at only medium screen sizes and above.\n\n<svg class=\"stroke-1 md:stroke-2\">\n  <!-- ... -->\n</svg>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides three stroke-width utilities. You change, add, or remove these by editing the theme.strokeWidth section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      strokeWidth: {\n\n        '2': '2px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off stroke-width value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<svg class=\"stroke-[2px]\">\n  <!-- ... -->\n</svg>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nStroke\nScreen Readers\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the stroke width\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Stroke - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/stroke",
    "html": "SVG\n\nStroke\n\nUtilities for styling the stroke of SVG elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nstroke-none\tstroke: none;\n\nstroke-inherit\tstroke: inherit;\n\nstroke-current\tstroke: currentColor;\n\nstroke-transparent\tstroke: transparent;\n\nstroke-black\tstroke: #000;\n\nstroke-white\tstroke: #fff;\n\nstroke-slate-50\tstroke: #f8fafc;\n\nstroke-slate-100\tstroke: #f1f5f9;\n\nstroke-slate-200\tstroke: #e2e8f0;\n\nstroke-slate-300\tstroke: #cbd5e1;\n\nstroke-slate-400\tstroke: #94a3b8;\n\nstroke-slate-500\tstroke: #64748b;\n\nstroke-slate-600\tstroke: #475569;\n\nstroke-slate-700\tstroke: #334155;\n\nstroke-slate-800\tstroke: #1e293b;\n\nstroke-slate-900\tstroke: #0f172a;\n\nstroke-slate-950\tstroke: #020617;\n\nstroke-gray-50\tstroke: #f9fafb;\n\nstroke-gray-100\tstroke: #f3f4f6;\n\nstroke-gray-200\tstroke: #e5e7eb;\n\nstroke-gray-300\tstroke: #d1d5db;\n\nstroke-gray-400\tstroke: #9ca3af;\n\nstroke-gray-500\tstroke: #6b7280;\n\nstroke-gray-600\tstroke: #4b5563;\n\nstroke-gray-700\tstroke: #374151;\n\nstroke-gray-800\tstroke: #1f2937;\n\nstroke-gray-900\tstroke: #111827;\n\nstroke-gray-950\tstroke: #030712;\n\nstroke-zinc-50\tstroke: #fafafa;\n\nstroke-zinc-100\tstroke: #f4f4f5;\n\nstroke-zinc-200\tstroke: #e4e4e7;\n\nstroke-zinc-300\tstroke: #d4d4d8;\n\nstroke-zinc-400\tstroke: #a1a1aa;\n\nstroke-zinc-500\tstroke: #71717a;\n\nstroke-zinc-600\tstroke: #52525b;\n\nstroke-zinc-700\tstroke: #3f3f46;\n\nstroke-zinc-800\tstroke: #27272a;\n\nstroke-zinc-900\tstroke: #18181b;\n\nstroke-zinc-950\tstroke: #09090b;\n\nstroke-neutral-50\tstroke: #fafafa;\n\nstroke-neutral-100\tstroke: #f5f5f5;\n\nstroke-neutral-200\tstroke: #e5e5e5;\n\nstroke-neutral-300\tstroke: #d4d4d4;\n\nstroke-neutral-400\tstroke: #a3a3a3;\n\nstroke-neutral-500\tstroke: #737373;\n\nstroke-neutral-600\tstroke: #525252;\n\nstroke-neutral-700\tstroke: #404040;\n\nstroke-neutral-800\tstroke: #262626;\n\nstroke-neutral-900\tstroke: #171717;\n\nstroke-neutral-950\tstroke: #0a0a0a;\n\nstroke-stone-50\tstroke: #fafaf9;\n\nstroke-stone-100\tstroke: #f5f5f4;\n\nstroke-stone-200\tstroke: #e7e5e4;\n\nstroke-stone-300\tstroke: #d6d3d1;\n\nstroke-stone-400\tstroke: #a8a29e;\n\nstroke-stone-500\tstroke: #78716c;\n\nstroke-stone-600\tstroke: #57534e;\n\nstroke-stone-700\tstroke: #44403c;\n\nstroke-stone-800\tstroke: #292524;\n\nstroke-stone-900\tstroke: #1c1917;\n\nstroke-stone-950\tstroke: #0c0a09;\n\nstroke-red-50\tstroke: #fef2f2;\n\nstroke-red-100\tstroke: #fee2e2;\n\nstroke-red-200\tstroke: #fecaca;\n\nstroke-red-300\tstroke: #fca5a5;\n\nstroke-red-400\tstroke: #f87171;\n\nstroke-red-500\tstroke: #ef4444;\n\nstroke-red-600\tstroke: #dc2626;\n\nstroke-red-700\tstroke: #b91c1c;\n\nstroke-red-800\tstroke: #991b1b;\n\nstroke-red-900\tstroke: #7f1d1d;\n\nstroke-red-950\tstroke: #450a0a;\n\nstroke-orange-50\tstroke: #fff7ed;\n\nstroke-orange-100\tstroke: #ffedd5;\n\nstroke-orange-200\tstroke: #fed7aa;\n\nstroke-orange-300\tstroke: #fdba74;\n\nstroke-orange-400\tstroke: #fb923c;\n\nstroke-orange-500\tstroke: #f97316;\n\nstroke-orange-600\tstroke: #ea580c;\n\nstroke-orange-700\tstroke: #c2410c;\n\nstroke-orange-800\tstroke: #9a3412;\n\nstroke-orange-900\tstroke: #7c2d12;\n\nstroke-orange-950\tstroke: #431407;\n\nstroke-amber-50\tstroke: #fffbeb;\n\nstroke-amber-100\tstroke: #fef3c7;\n\nstroke-amber-200\tstroke: #fde68a;\n\nstroke-amber-300\tstroke: #fcd34d;\n\nstroke-amber-400\tstroke: #fbbf24;\n\nstroke-amber-500\tstroke: #f59e0b;\n\nstroke-amber-600\tstroke: #d97706;\n\nstroke-amber-700\tstroke: #b45309;\n\nstroke-amber-800\tstroke: #92400e;\n\nstroke-amber-900\tstroke: #78350f;\n\nstroke-amber-950\tstroke: #451a03;\n\nstroke-yellow-50\tstroke: #fefce8;\n\nstroke-yellow-100\tstroke: #fef9c3;\n\nstroke-yellow-200\tstroke: #fef08a;\n\nstroke-yellow-300\tstroke: #fde047;\n\nstroke-yellow-400\tstroke: #facc15;\n\nstroke-yellow-500\tstroke: #eab308;\n\nstroke-yellow-600\tstroke: #ca8a04;\n\nstroke-yellow-700\tstroke: #a16207;\n\nstroke-yellow-800\tstroke: #854d0e;\n\nstroke-yellow-900\tstroke: #713f12;\n\nstroke-yellow-950\tstroke: #422006;\n\nstroke-lime-50\tstroke: #f7fee7;\n\nstroke-lime-100\tstroke: #ecfccb;\n\nstroke-lime-200\tstroke: #d9f99d;\n\nstroke-lime-300\tstroke: #bef264;\n\nstroke-lime-400\tstroke: #a3e635;\n\nstroke-lime-500\tstroke: #84cc16;\n\nstroke-lime-600\tstroke: #65a30d;\n\nstroke-lime-700\tstroke: #4d7c0f;\n\nstroke-lime-800\tstroke: #3f6212;\n\nstroke-lime-900\tstroke: #365314;\n\nstroke-lime-950\tstroke: #1a2e05;\n\nstroke-green-50\tstroke: #f0fdf4;\n\nstroke-green-100\tstroke: #dcfce7;\n\nstroke-green-200\tstroke: #bbf7d0;\n\nstroke-green-300\tstroke: #86efac;\n\nstroke-green-400\tstroke: #4ade80;\n\nstroke-green-500\tstroke: #22c55e;\n\nstroke-green-600\tstroke: #16a34a;\n\nstroke-green-700\tstroke: #15803d;\n\nstroke-green-800\tstroke: #166534;\n\nstroke-green-900\tstroke: #14532d;\n\nstroke-green-950\tstroke: #052e16;\n\nstroke-emerald-50\tstroke: #ecfdf5;\n\nstroke-emerald-100\tstroke: #d1fae5;\n\nstroke-emerald-200\tstroke: #a7f3d0;\n\nstroke-emerald-300\tstroke: #6ee7b7;\n\nstroke-emerald-400\tstroke: #34d399;\n\nstroke-emerald-500\tstroke: #10b981;\n\nstroke-emerald-600\tstroke: #059669;\n\nstroke-emerald-700\tstroke: #047857;\n\nstroke-emerald-800\tstroke: #065f46;\n\nstroke-emerald-900\tstroke: #064e3b;\n\nstroke-emerald-950\tstroke: #022c22;\n\nstroke-teal-50\tstroke: #f0fdfa;\n\nstroke-teal-100\tstroke: #ccfbf1;\n\nstroke-teal-200\tstroke: #99f6e4;\n\nstroke-teal-300\tstroke: #5eead4;\n\nstroke-teal-400\tstroke: #2dd4bf;\n\nstroke-teal-500\tstroke: #14b8a6;\n\nstroke-teal-600\tstroke: #0d9488;\n\nstroke-teal-700\tstroke: #0f766e;\n\nstroke-teal-800\tstroke: #115e59;\n\nstroke-teal-900\tstroke: #134e4a;\n\nstroke-teal-950\tstroke: #042f2e;\n\nstroke-cyan-50\tstroke: #ecfeff;\n\nstroke-cyan-100\tstroke: #cffafe;\n\nstroke-cyan-200\tstroke: #a5f3fc;\n\nstroke-cyan-300\tstroke: #67e8f9;\n\nstroke-cyan-400\tstroke: #22d3ee;\n\nstroke-cyan-500\tstroke: #06b6d4;\n\nstroke-cyan-600\tstroke: #0891b2;\n\nstroke-cyan-700\tstroke: #0e7490;\n\nstroke-cyan-800\tstroke: #155e75;\n\nstroke-cyan-900\tstroke: #164e63;\n\nstroke-cyan-950\tstroke: #083344;\n\nstroke-sky-50\tstroke: #f0f9ff;\n\nstroke-sky-100\tstroke: #e0f2fe;\n\nstroke-sky-200\tstroke: #bae6fd;\n\nstroke-sky-300\tstroke: #7dd3fc;\n\nstroke-sky-400\tstroke: #38bdf8;\n\nstroke-sky-500\tstroke: #0ea5e9;\n\nstroke-sky-600\tstroke: #0284c7;\n\nstroke-sky-700\tstroke: #0369a1;\n\nstroke-sky-800\tstroke: #075985;\n\nstroke-sky-900\tstroke: #0c4a6e;\n\nstroke-sky-950\tstroke: #082f49;\n\nstroke-blue-50\tstroke: #eff6ff;\n\nstroke-blue-100\tstroke: #dbeafe;\n\nstroke-blue-200\tstroke: #bfdbfe;\n\nstroke-blue-300\tstroke: #93c5fd;\n\nstroke-blue-400\tstroke: #60a5fa;\n\nstroke-blue-500\tstroke: #3b82f6;\n\nstroke-blue-600\tstroke: #2563eb;\n\nstroke-blue-700\tstroke: #1d4ed8;\n\nstroke-blue-800\tstroke: #1e40af;\n\nstroke-blue-900\tstroke: #1e3a8a;\n\nstroke-blue-950\tstroke: #172554;\n\nstroke-indigo-50\tstroke: #eef2ff;\n\nstroke-indigo-100\tstroke: #e0e7ff;\n\nstroke-indigo-200\tstroke: #c7d2fe;\n\nstroke-indigo-300\tstroke: #a5b4fc;\n\nstroke-indigo-400\tstroke: #818cf8;\n\nstroke-indigo-500\tstroke: #6366f1;\n\nstroke-indigo-600\tstroke: #4f46e5;\n\nstroke-indigo-700\tstroke: #4338ca;\n\nstroke-indigo-800\tstroke: #3730a3;\n\nstroke-indigo-900\tstroke: #312e81;\n\nstroke-indigo-950\tstroke: #1e1b4b;\n\nstroke-violet-50\tstroke: #f5f3ff;\n\nstroke-violet-100\tstroke: #ede9fe;\n\nstroke-violet-200\tstroke: #ddd6fe;\n\nstroke-violet-300\tstroke: #c4b5fd;\n\nstroke-violet-400\tstroke: #a78bfa;\n\nstroke-violet-500\tstroke: #8b5cf6;\n\nstroke-violet-600\tstroke: #7c3aed;\n\nstroke-violet-700\tstroke: #6d28d9;\n\nstroke-violet-800\tstroke: #5b21b6;\n\nstroke-violet-900\tstroke: #4c1d95;\n\nstroke-violet-950\tstroke: #2e1065;\n\nstroke-purple-50\tstroke: #faf5ff;\n\nstroke-purple-100\tstroke: #f3e8ff;\n\nstroke-purple-200\tstroke: #e9d5ff;\n\nstroke-purple-300\tstroke: #d8b4fe;\n\nstroke-purple-400\tstroke: #c084fc;\n\nstroke-purple-500\tstroke: #a855f7;\n\nstroke-purple-600\tstroke: #9333ea;\n\nstroke-purple-700\tstroke: #7e22ce;\n\nstroke-purple-800\tstroke: #6b21a8;\n\nstroke-purple-900\tstroke: #581c87;\n\nstroke-purple-950\tstroke: #3b0764;\n\nstroke-fuchsia-50\tstroke: #fdf4ff;\n\nstroke-fuchsia-100\tstroke: #fae8ff;\n\nstroke-fuchsia-200\tstroke: #f5d0fe;\n\nstroke-fuchsia-300\tstroke: #f0abfc;\n\nstroke-fuchsia-400\tstroke: #e879f9;\n\nstroke-fuchsia-500\tstroke: #d946ef;\n\nstroke-fuchsia-600\tstroke: #c026d3;\n\nstroke-fuchsia-700\tstroke: #a21caf;\n\nstroke-fuchsia-800\tstroke: #86198f;\n\nstroke-fuchsia-900\tstroke: #701a75;\n\nstroke-fuchsia-950\tstroke: #4a044e;\n\nstroke-pink-50\tstroke: #fdf2f8;\n\nstroke-pink-100\tstroke: #fce7f3;\n\nstroke-pink-200\tstroke: #fbcfe8;\n\nstroke-pink-300\tstroke: #f9a8d4;\n\nstroke-pink-400\tstroke: #f472b6;\n\nstroke-pink-500\tstroke: #ec4899;\n\nstroke-pink-600\tstroke: #db2777;\n\nstroke-pink-700\tstroke: #be185d;\n\nstroke-pink-800\tstroke: #9d174d;\n\nstroke-pink-900\tstroke: #831843;\n\nstroke-pink-950\tstroke: #500724;\n\nstroke-rose-50\tstroke: #fff1f2;\n\nstroke-rose-100\tstroke: #ffe4e6;\n\nstroke-rose-200\tstroke: #fecdd3;\n\nstroke-rose-300\tstroke: #fda4af;\n\nstroke-rose-400\tstroke: #fb7185;\n\nstroke-rose-500\tstroke: #f43f5e;\n\nstroke-rose-600\tstroke: #e11d48;\n\nstroke-rose-700\tstroke: #be123c;\n\nstroke-rose-800\tstroke: #9f1239;\n\nstroke-rose-900\tstroke: #881337;\n\nstroke-rose-950\tstroke: #4c0519;\n\n​\nBasic usage\n​\nSetting the stroke color\n\nUse the stroke-{color} utilities to change the stroke color of an SVG.\n\n<svg class=\"stroke-cyan-500 ...\">\n  <!-- ... -->\n</svg>\n\nThis can be useful for styling icon sets like Heroicons.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:stroke-cyan-700 to only apply the stroke-cyan-700 utility on hover.\n\n<svg class=\"stroke-cyan-500 hover:stroke-cyan-700\">\n  <!-- ... -->\n</svg>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:stroke-cyan-700 to apply the stroke-cyan-700 utility at only medium screen sizes and above.\n\n<svg class=\"stroke-cyan-500 md:stroke-cyan-700\">\n  <!-- ... -->\n</svg>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as stroke colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your stroke colors by editing theme.stroke or theme.extend.stroke in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off stroke value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<svg class=\"stroke-[#243c5a]\">\n  <!-- ... -->\n</svg>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFill\nStroke Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the stroke color\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Fill - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/fill",
    "html": "SVG\n\nFill\n\nUtilities for styling the fill of SVG elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nfill-none\tfill: none;\n\nfill-inherit\tfill: inherit;\n\nfill-current\tfill: currentColor;\n\nfill-transparent\tfill: transparent;\n\nfill-black\tfill: #000;\n\nfill-white\tfill: #fff;\n\nfill-slate-50\tfill: #f8fafc;\n\nfill-slate-100\tfill: #f1f5f9;\n\nfill-slate-200\tfill: #e2e8f0;\n\nfill-slate-300\tfill: #cbd5e1;\n\nfill-slate-400\tfill: #94a3b8;\n\nfill-slate-500\tfill: #64748b;\n\nfill-slate-600\tfill: #475569;\n\nfill-slate-700\tfill: #334155;\n\nfill-slate-800\tfill: #1e293b;\n\nfill-slate-900\tfill: #0f172a;\n\nfill-slate-950\tfill: #020617;\n\nfill-gray-50\tfill: #f9fafb;\n\nfill-gray-100\tfill: #f3f4f6;\n\nfill-gray-200\tfill: #e5e7eb;\n\nfill-gray-300\tfill: #d1d5db;\n\nfill-gray-400\tfill: #9ca3af;\n\nfill-gray-500\tfill: #6b7280;\n\nfill-gray-600\tfill: #4b5563;\n\nfill-gray-700\tfill: #374151;\n\nfill-gray-800\tfill: #1f2937;\n\nfill-gray-900\tfill: #111827;\n\nfill-gray-950\tfill: #030712;\n\nfill-zinc-50\tfill: #fafafa;\n\nfill-zinc-100\tfill: #f4f4f5;\n\nfill-zinc-200\tfill: #e4e4e7;\n\nfill-zinc-300\tfill: #d4d4d8;\n\nfill-zinc-400\tfill: #a1a1aa;\n\nfill-zinc-500\tfill: #71717a;\n\nfill-zinc-600\tfill: #52525b;\n\nfill-zinc-700\tfill: #3f3f46;\n\nfill-zinc-800\tfill: #27272a;\n\nfill-zinc-900\tfill: #18181b;\n\nfill-zinc-950\tfill: #09090b;\n\nfill-neutral-50\tfill: #fafafa;\n\nfill-neutral-100\tfill: #f5f5f5;\n\nfill-neutral-200\tfill: #e5e5e5;\n\nfill-neutral-300\tfill: #d4d4d4;\n\nfill-neutral-400\tfill: #a3a3a3;\n\nfill-neutral-500\tfill: #737373;\n\nfill-neutral-600\tfill: #525252;\n\nfill-neutral-700\tfill: #404040;\n\nfill-neutral-800\tfill: #262626;\n\nfill-neutral-900\tfill: #171717;\n\nfill-neutral-950\tfill: #0a0a0a;\n\nfill-stone-50\tfill: #fafaf9;\n\nfill-stone-100\tfill: #f5f5f4;\n\nfill-stone-200\tfill: #e7e5e4;\n\nfill-stone-300\tfill: #d6d3d1;\n\nfill-stone-400\tfill: #a8a29e;\n\nfill-stone-500\tfill: #78716c;\n\nfill-stone-600\tfill: #57534e;\n\nfill-stone-700\tfill: #44403c;\n\nfill-stone-800\tfill: #292524;\n\nfill-stone-900\tfill: #1c1917;\n\nfill-stone-950\tfill: #0c0a09;\n\nfill-red-50\tfill: #fef2f2;\n\nfill-red-100\tfill: #fee2e2;\n\nfill-red-200\tfill: #fecaca;\n\nfill-red-300\tfill: #fca5a5;\n\nfill-red-400\tfill: #f87171;\n\nfill-red-500\tfill: #ef4444;\n\nfill-red-600\tfill: #dc2626;\n\nfill-red-700\tfill: #b91c1c;\n\nfill-red-800\tfill: #991b1b;\n\nfill-red-900\tfill: #7f1d1d;\n\nfill-red-950\tfill: #450a0a;\n\nfill-orange-50\tfill: #fff7ed;\n\nfill-orange-100\tfill: #ffedd5;\n\nfill-orange-200\tfill: #fed7aa;\n\nfill-orange-300\tfill: #fdba74;\n\nfill-orange-400\tfill: #fb923c;\n\nfill-orange-500\tfill: #f97316;\n\nfill-orange-600\tfill: #ea580c;\n\nfill-orange-700\tfill: #c2410c;\n\nfill-orange-800\tfill: #9a3412;\n\nfill-orange-900\tfill: #7c2d12;\n\nfill-orange-950\tfill: #431407;\n\nfill-amber-50\tfill: #fffbeb;\n\nfill-amber-100\tfill: #fef3c7;\n\nfill-amber-200\tfill: #fde68a;\n\nfill-amber-300\tfill: #fcd34d;\n\nfill-amber-400\tfill: #fbbf24;\n\nfill-amber-500\tfill: #f59e0b;\n\nfill-amber-600\tfill: #d97706;\n\nfill-amber-700\tfill: #b45309;\n\nfill-amber-800\tfill: #92400e;\n\nfill-amber-900\tfill: #78350f;\n\nfill-amber-950\tfill: #451a03;\n\nfill-yellow-50\tfill: #fefce8;\n\nfill-yellow-100\tfill: #fef9c3;\n\nfill-yellow-200\tfill: #fef08a;\n\nfill-yellow-300\tfill: #fde047;\n\nfill-yellow-400\tfill: #facc15;\n\nfill-yellow-500\tfill: #eab308;\n\nfill-yellow-600\tfill: #ca8a04;\n\nfill-yellow-700\tfill: #a16207;\n\nfill-yellow-800\tfill: #854d0e;\n\nfill-yellow-900\tfill: #713f12;\n\nfill-yellow-950\tfill: #422006;\n\nfill-lime-50\tfill: #f7fee7;\n\nfill-lime-100\tfill: #ecfccb;\n\nfill-lime-200\tfill: #d9f99d;\n\nfill-lime-300\tfill: #bef264;\n\nfill-lime-400\tfill: #a3e635;\n\nfill-lime-500\tfill: #84cc16;\n\nfill-lime-600\tfill: #65a30d;\n\nfill-lime-700\tfill: #4d7c0f;\n\nfill-lime-800\tfill: #3f6212;\n\nfill-lime-900\tfill: #365314;\n\nfill-lime-950\tfill: #1a2e05;\n\nfill-green-50\tfill: #f0fdf4;\n\nfill-green-100\tfill: #dcfce7;\n\nfill-green-200\tfill: #bbf7d0;\n\nfill-green-300\tfill: #86efac;\n\nfill-green-400\tfill: #4ade80;\n\nfill-green-500\tfill: #22c55e;\n\nfill-green-600\tfill: #16a34a;\n\nfill-green-700\tfill: #15803d;\n\nfill-green-800\tfill: #166534;\n\nfill-green-900\tfill: #14532d;\n\nfill-green-950\tfill: #052e16;\n\nfill-emerald-50\tfill: #ecfdf5;\n\nfill-emerald-100\tfill: #d1fae5;\n\nfill-emerald-200\tfill: #a7f3d0;\n\nfill-emerald-300\tfill: #6ee7b7;\n\nfill-emerald-400\tfill: #34d399;\n\nfill-emerald-500\tfill: #10b981;\n\nfill-emerald-600\tfill: #059669;\n\nfill-emerald-700\tfill: #047857;\n\nfill-emerald-800\tfill: #065f46;\n\nfill-emerald-900\tfill: #064e3b;\n\nfill-emerald-950\tfill: #022c22;\n\nfill-teal-50\tfill: #f0fdfa;\n\nfill-teal-100\tfill: #ccfbf1;\n\nfill-teal-200\tfill: #99f6e4;\n\nfill-teal-300\tfill: #5eead4;\n\nfill-teal-400\tfill: #2dd4bf;\n\nfill-teal-500\tfill: #14b8a6;\n\nfill-teal-600\tfill: #0d9488;\n\nfill-teal-700\tfill: #0f766e;\n\nfill-teal-800\tfill: #115e59;\n\nfill-teal-900\tfill: #134e4a;\n\nfill-teal-950\tfill: #042f2e;\n\nfill-cyan-50\tfill: #ecfeff;\n\nfill-cyan-100\tfill: #cffafe;\n\nfill-cyan-200\tfill: #a5f3fc;\n\nfill-cyan-300\tfill: #67e8f9;\n\nfill-cyan-400\tfill: #22d3ee;\n\nfill-cyan-500\tfill: #06b6d4;\n\nfill-cyan-600\tfill: #0891b2;\n\nfill-cyan-700\tfill: #0e7490;\n\nfill-cyan-800\tfill: #155e75;\n\nfill-cyan-900\tfill: #164e63;\n\nfill-cyan-950\tfill: #083344;\n\nfill-sky-50\tfill: #f0f9ff;\n\nfill-sky-100\tfill: #e0f2fe;\n\nfill-sky-200\tfill: #bae6fd;\n\nfill-sky-300\tfill: #7dd3fc;\n\nfill-sky-400\tfill: #38bdf8;\n\nfill-sky-500\tfill: #0ea5e9;\n\nfill-sky-600\tfill: #0284c7;\n\nfill-sky-700\tfill: #0369a1;\n\nfill-sky-800\tfill: #075985;\n\nfill-sky-900\tfill: #0c4a6e;\n\nfill-sky-950\tfill: #082f49;\n\nfill-blue-50\tfill: #eff6ff;\n\nfill-blue-100\tfill: #dbeafe;\n\nfill-blue-200\tfill: #bfdbfe;\n\nfill-blue-300\tfill: #93c5fd;\n\nfill-blue-400\tfill: #60a5fa;\n\nfill-blue-500\tfill: #3b82f6;\n\nfill-blue-600\tfill: #2563eb;\n\nfill-blue-700\tfill: #1d4ed8;\n\nfill-blue-800\tfill: #1e40af;\n\nfill-blue-900\tfill: #1e3a8a;\n\nfill-blue-950\tfill: #172554;\n\nfill-indigo-50\tfill: #eef2ff;\n\nfill-indigo-100\tfill: #e0e7ff;\n\nfill-indigo-200\tfill: #c7d2fe;\n\nfill-indigo-300\tfill: #a5b4fc;\n\nfill-indigo-400\tfill: #818cf8;\n\nfill-indigo-500\tfill: #6366f1;\n\nfill-indigo-600\tfill: #4f46e5;\n\nfill-indigo-700\tfill: #4338ca;\n\nfill-indigo-800\tfill: #3730a3;\n\nfill-indigo-900\tfill: #312e81;\n\nfill-indigo-950\tfill: #1e1b4b;\n\nfill-violet-50\tfill: #f5f3ff;\n\nfill-violet-100\tfill: #ede9fe;\n\nfill-violet-200\tfill: #ddd6fe;\n\nfill-violet-300\tfill: #c4b5fd;\n\nfill-violet-400\tfill: #a78bfa;\n\nfill-violet-500\tfill: #8b5cf6;\n\nfill-violet-600\tfill: #7c3aed;\n\nfill-violet-700\tfill: #6d28d9;\n\nfill-violet-800\tfill: #5b21b6;\n\nfill-violet-900\tfill: #4c1d95;\n\nfill-violet-950\tfill: #2e1065;\n\nfill-purple-50\tfill: #faf5ff;\n\nfill-purple-100\tfill: #f3e8ff;\n\nfill-purple-200\tfill: #e9d5ff;\n\nfill-purple-300\tfill: #d8b4fe;\n\nfill-purple-400\tfill: #c084fc;\n\nfill-purple-500\tfill: #a855f7;\n\nfill-purple-600\tfill: #9333ea;\n\nfill-purple-700\tfill: #7e22ce;\n\nfill-purple-800\tfill: #6b21a8;\n\nfill-purple-900\tfill: #581c87;\n\nfill-purple-950\tfill: #3b0764;\n\nfill-fuchsia-50\tfill: #fdf4ff;\n\nfill-fuchsia-100\tfill: #fae8ff;\n\nfill-fuchsia-200\tfill: #f5d0fe;\n\nfill-fuchsia-300\tfill: #f0abfc;\n\nfill-fuchsia-400\tfill: #e879f9;\n\nfill-fuchsia-500\tfill: #d946ef;\n\nfill-fuchsia-600\tfill: #c026d3;\n\nfill-fuchsia-700\tfill: #a21caf;\n\nfill-fuchsia-800\tfill: #86198f;\n\nfill-fuchsia-900\tfill: #701a75;\n\nfill-fuchsia-950\tfill: #4a044e;\n\nfill-pink-50\tfill: #fdf2f8;\n\nfill-pink-100\tfill: #fce7f3;\n\nfill-pink-200\tfill: #fbcfe8;\n\nfill-pink-300\tfill: #f9a8d4;\n\nfill-pink-400\tfill: #f472b6;\n\nfill-pink-500\tfill: #ec4899;\n\nfill-pink-600\tfill: #db2777;\n\nfill-pink-700\tfill: #be185d;\n\nfill-pink-800\tfill: #9d174d;\n\nfill-pink-900\tfill: #831843;\n\nfill-pink-950\tfill: #500724;\n\nfill-rose-50\tfill: #fff1f2;\n\nfill-rose-100\tfill: #ffe4e6;\n\nfill-rose-200\tfill: #fecdd3;\n\nfill-rose-300\tfill: #fda4af;\n\nfill-rose-400\tfill: #fb7185;\n\nfill-rose-500\tfill: #f43f5e;\n\nfill-rose-600\tfill: #e11d48;\n\nfill-rose-700\tfill: #be123c;\n\nfill-rose-800\tfill: #9f1239;\n\nfill-rose-900\tfill: #881337;\n\nfill-rose-950\tfill: #4c0519;\n\n​\nBasic usage\n​\nSetting the fill color\n\nUse the fill-{color} utilities to change the fill color of an SVG.\n\n<svg class=\"fill-blue-500 ...\">\n  <!-- ... -->\n</svg>\n\nThis can be useful for styling icon sets like Heroicons.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:fill-cyan-700 to only apply the fill-cyan-700 utility on hover.\n\n<svg class=\"fill-cyan-500 hover:fill-cyan-700\">\n  <!-- ... -->\n</svg>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:fill-cyan-700 to apply the fill-cyan-700 utility at only medium screen sizes and above.\n\n<svg class=\"fill-cyan-500 md:fill-cyan-700\">\n  <!-- ... -->\n</svg>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as fill colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your fill colors by editing theme.fill or theme.extend.fill in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off fill value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<svg class=\"fill-[#243c5a]\">\n  <!-- ... -->\n</svg>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nWill Change\nStroke\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the fill color\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Will Change - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/will-change",
    "html": "Interactivity\n\nWill Change\n\nUtilities for optimizing upcoming animations of elements that are expected to change.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nwill-change-auto\twill-change: auto;\n\nwill-change-scroll\twill-change: scroll-position;\n\nwill-change-contents\twill-change: contents;\n\nwill-change-transform\twill-change: transform;\n\n​\nBasic usage\n​\nOptimizing with will change\n\nUse will-change-scroll, will-change-contents and will-change-transform to optimize an element that’s expected to change in the near future by instructing the browser to prepare the necessary animation before it actually begins.\n\n<div class=\"overflow-auto will-change-scroll\">\n  <!-- ... -->\n</div>\n\nIt’s recommended that you apply these utilities just before an element changes, and then remove it shortly after it finishes using will-change-auto.\n\nThe will-change property is intended to be used as a last resort when dealing with known performance problems. Avoid using these utilities too much, or simply in anticipation of performance issues, as it could actually cause the page to be less performant.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:will-change-scroll to only apply the will-change-scroll utility on hover.\n\n<div class=\"will-change-auto hover:will-change-scroll\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:will-change-scroll to apply the will-change-scroll utility at only medium screen sizes and above.\n\n<div class=\"will-change-auto md:will-change-scroll\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides four will-change utilities. You can customize these values by editing theme.willChange or theme.extend.willChange in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      willChange: {\n\n        'left-top': 'left, top',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off will-change value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"will-change-[top,left]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nUser Select\nFill\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nOptimizing with will change\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "User Select - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/user-select",
    "html": "Interactivity\n\nUser Select\n\nUtilities for controlling whether the user can select text in an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nselect-none\tuser-select: none;\n\nselect-text\tuser-select: text;\n\nselect-all\tuser-select: all;\n\nselect-auto\tuser-select: auto;\n\n​\nBasic usage\n​\nDisabling text selection\n\nUse select-none to prevent selecting text in an element and its children.\n\nTry selecting the text to see the expected behaviour\n\nThe quick brown fox jumps over the lazy dog.\n<div class=\"select-none ...\">\n  The quick brown fox jumps over the lazy dog.\n</div>\n​\nAllowing text selection\n\nUse select-text to allow selecting text in an element and its children.\n\nTry selecting the text to see the expected behaviour\n\nThe quick brown fox jumps over the lazy dog.\n<div class=\"select-text ...\">\n  The quick brown fox jumps over the lazy dog.\n</div>\n​\nSelecting all text in one click\n\nUse select-all to automatically select all the text in an element when a user clicks.\n\nTry selecting the text to see the expected behaviour\n\nThe quick brown fox jumps over the lazy dog.\n<div class=\"select-all ...\">\n  The quick brown fox jumps over the lazy dog.\n</div>\n​\nUsing auto select behaviour\n\nUse select-auto to use the default browser behavior for selecting text. Useful for undoing other classes like select-none at different breakpoints.\n\nTry selecting the text to see the expected behaviour\n\nThe quick brown fox jumps over the lazy dog.\n<div class=\"select-auto ...\">\n  The quick brown fox jumps over the lazy dog.\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:select-all to only apply the select-all utility on hover.\n\n<div class=\"hover:select-all\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:select-all to apply the select-all utility at only medium screen sizes and above.\n\n<div class=\"md:select-all\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nTouch Action\nWill Change\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nDisabling text selection\nAllowing text selection\nSelecting all text in one click\nUsing auto select behaviour\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Touch Action - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/touch-action",
    "html": "Interactivity\n\nTouch Action\n\nUtilities for controlling how an element can be scrolled and zoomed on touchscreens.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntouch-auto\ttouch-action: auto;\n\ntouch-none\ttouch-action: none;\n\ntouch-pan-x\ttouch-action: pan-x;\n\ntouch-pan-left\ttouch-action: pan-left;\n\ntouch-pan-right\ttouch-action: pan-right;\n\ntouch-pan-y\ttouch-action: pan-y;\n\ntouch-pan-up\ttouch-action: pan-up;\n\ntouch-pan-down\ttouch-action: pan-down;\n\ntouch-pinch-zoom\ttouch-action: pinch-zoom;\n\ntouch-manipulation\ttouch-action: manipulation;\n\n​\nBasic usage\n​\nSetting the touch action\n\nUse the touch-{action} utilities to control how an element can be scrolled (panned) and zoomed (pinched) on touchscreens.\n\nTry panning these images on a touchscreen\n\ntouch-auto\n\ntouch-none\n\ntouch-pan-x\n\ntouch-pan-y\n\n<div class=\"w-full h-48 overflow-auto touch-auto ...\">\n  <img class=\"w-[150%] max-w-none h-auto\" src=\"...\" />\n</div>\n<div class=\"w-full h-48 overflow-auto touch-none ...\">\n  <img class=\"w-[150%] max-w-none h-auto\" src=\"...\" />\n</div>\n<div class=\"w-full h-48 overflow-auto touch-pan-x ...\">\n  <img class=\"w-[150%] max-w-none h-auto\" src=\"...\" />\n</div>\n<div class=\"w-full h-48 overflow-auto touch-pan-y ...\">\n  <img class=\"w-[150%] max-w-none h-auto\" src=\"...\" />\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:touch-pan-x to only apply the touch-pan-x utility on focus.\n\n<div class=\"focus:touch-pan-x\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:touch-pan-x to apply the touch-pan-x utility at only medium screen sizes and above.\n\n<div class=\"md:touch-pan-x\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nScroll Snap Type\nUser Select\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the touch action\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scroll Snap Align - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scroll-snap-align",
    "html": "Interactivity\n\nScroll Snap Align\n\nUtilities for controlling the scroll snap alignment of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nsnap-start\tscroll-snap-align: start;\n\nsnap-end\tscroll-snap-align: end;\n\nsnap-center\tscroll-snap-align: center;\n\nsnap-align-none\tscroll-snap-align: none;\n\n​\nBasic usage\n​\nSnapping to the center\n\nUse the snap-center utility to snap an element to its center when being scrolled inside a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-x ...\">\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nSnapping to the start\n\nUse the snap-start utility to snap an element to its start when being scrolled inside a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-x ...\">\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nSnapping to the end\n\nUse the snap-end utility to snap an element to its end when being scrolled inside a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-x ...\">\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:snap-start to only apply the snap-start utility on hover.\n\n<div class=\"snap-center hover:snap-start\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:snap-start to apply the snap-start utility at only medium screen sizes and above.\n\n<div class=\"snap-center md:snap-start\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nScroll Padding\nScroll Snap Stop\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSnapping to the center\nSnapping to the start\nSnapping to the end\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scroll Snap Stop - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scroll-snap-stop",
    "html": "Interactivity\n\nScroll Snap Stop\n\nUtilities for controlling whether you can skip past possible snap positions.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nsnap-normal\tscroll-snap-stop: normal;\n\nsnap-always\tscroll-snap-stop: always;\n\n​\nBasic usage\n​\nForcing snap position stops\n\nUse the snap-always utility together with the snap-mandatory utility to force a snap container to always stop on an element before the user can continue scrolling to the next item.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-x snap-mandatory ...\">\n  <div class=\"snap-always snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-always snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-always snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-always snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-always snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-always snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nSkipping snap position stops\n\nUse the snap-normal utility to allow a snap container to skip past possible scroll snap positions.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-x ...\">\n  <div class=\"snap-normal snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-normal snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-normal snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-normal snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-normal snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-normal snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:snap-normal to only apply the snap-normal utility on hover.\n\n<div class=\"snap-always hover:snap-normal\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:snap-normal to apply the snap-normal utility at only medium screen sizes and above.\n\n<div class=\"snap-always md:snap-normal\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nScroll Snap Align\nScroll Snap Type\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nForcing snap position stops\nSkipping snap position stops\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scroll Snap Type - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scroll-snap-type",
    "html": "Interactivity\n\nScroll Snap Type\n\nUtilities for controlling how strictly snap points are enforced in a snap container.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nsnap-none\tscroll-snap-type: none;\n\nsnap-x\tscroll-snap-type: x var(--tw-scroll-snap-strictness);\n\nsnap-y\tscroll-snap-type: y var(--tw-scroll-snap-strictness);\n\nsnap-both\tscroll-snap-type: both var(--tw-scroll-snap-strictness);\n\nsnap-mandatory\t--tw-scroll-snap-strictness: mandatory;\n\nsnap-proximity\t--tw-scroll-snap-strictness: proximity;\n\n​\nBasic usage\n​\nHorizontal scroll snapping\n\nUse the snap-x utility to enable horizontal scroll snapping within an element.\n\nFor scroll snapping to work, you need to also set the scroll snap alignment on the children within the element.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-x ...\">\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nMandatory scroll snapping\n\nUse the snap-mandatory utility to force a snap container to always come to rest on a snap point.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-mandatory snap-x ...\">\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nProximity scroll snapping\n\nUse the snap-proximity utility to make a snap container come to rest on snap points that are close in proximity. This is the browser default.\n\nScroll in the grid of images to see the expected behaviour\n\nsnap point\n<div class=\"snap-proximity snap-x ...\">\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:snap-x to only apply the snap-x utility on hover.\n\n<div class=\"hover:snap-x\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:snap-x to apply the snap-x utility at only medium screen sizes and above.\n\n<div class=\"md:snap-x\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nScroll Snap Stop\nTouch Action\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nHorizontal scroll snapping\nMandatory scroll snapping\nProximity scroll snapping\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scroll Padding - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scroll-padding",
    "html": "Interactivity\n\nScroll Padding\n\nUtilities for controlling an element's scroll offset within a snap container.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nscroll-p-0\tscroll-padding: 0px;\n\nscroll-px-0\tscroll-padding-left: 0px;\nscroll-padding-right: 0px;\n\nscroll-py-0\tscroll-padding-top: 0px;\nscroll-padding-bottom: 0px;\n\nscroll-ps-0\tscroll-padding-inline-start: 0px;\n\nscroll-pe-0\tscroll-padding-inline-end: 0px;\n\nscroll-pt-0\tscroll-padding-top: 0px;\n\nscroll-pr-0\tscroll-padding-right: 0px;\n\nscroll-pb-0\tscroll-padding-bottom: 0px;\n\nscroll-pl-0\tscroll-padding-left: 0px;\n\nscroll-p-px\tscroll-padding: 1px;\n\nscroll-px-px\tscroll-padding-left: 1px;\nscroll-padding-right: 1px;\n\nscroll-py-px\tscroll-padding-top: 1px;\nscroll-padding-bottom: 1px;\n\nscroll-ps-px\tscroll-padding-inline-start: 1px;\n\nscroll-pe-px\tscroll-padding-inline-end: 1px;\n\nscroll-pt-px\tscroll-padding-top: 1px;\n\nscroll-pr-px\tscroll-padding-right: 1px;\n\nscroll-pb-px\tscroll-padding-bottom: 1px;\n\nscroll-pl-px\tscroll-padding-left: 1px;\n\nscroll-p-0.5\tscroll-padding: 0.125rem; /* 2px */\n\nscroll-px-0.5\tscroll-padding-left: 0.125rem; /* 2px */\nscroll-padding-right: 0.125rem; /* 2px */\n\nscroll-py-0.5\tscroll-padding-top: 0.125rem; /* 2px */\nscroll-padding-bottom: 0.125rem; /* 2px */\n\nscroll-ps-0.5\tscroll-padding-inline-start: 0.125rem; /* 2px */\n\nscroll-pe-0.5\tscroll-padding-inline-end: 0.125rem; /* 2px */\n\nscroll-pt-0.5\tscroll-padding-top: 0.125rem; /* 2px */\n\nscroll-pr-0.5\tscroll-padding-right: 0.125rem; /* 2px */\n\nscroll-pb-0.5\tscroll-padding-bottom: 0.125rem; /* 2px */\n\nscroll-pl-0.5\tscroll-padding-left: 0.125rem; /* 2px */\n\nscroll-p-1\tscroll-padding: 0.25rem; /* 4px */\n\nscroll-px-1\tscroll-padding-left: 0.25rem; /* 4px */\nscroll-padding-right: 0.25rem; /* 4px */\n\nscroll-py-1\tscroll-padding-top: 0.25rem; /* 4px */\nscroll-padding-bottom: 0.25rem; /* 4px */\n\nscroll-ps-1\tscroll-padding-inline-start: 0.25rem; /* 4px */\n\nscroll-pe-1\tscroll-padding-inline-end: 0.25rem; /* 4px */\n\nscroll-pt-1\tscroll-padding-top: 0.25rem; /* 4px */\n\nscroll-pr-1\tscroll-padding-right: 0.25rem; /* 4px */\n\nscroll-pb-1\tscroll-padding-bottom: 0.25rem; /* 4px */\n\nscroll-pl-1\tscroll-padding-left: 0.25rem; /* 4px */\n\nscroll-p-1.5\tscroll-padding: 0.375rem; /* 6px */\n\nscroll-px-1.5\tscroll-padding-left: 0.375rem; /* 6px */\nscroll-padding-right: 0.375rem; /* 6px */\n\nscroll-py-1.5\tscroll-padding-top: 0.375rem; /* 6px */\nscroll-padding-bottom: 0.375rem; /* 6px */\n\nscroll-ps-1.5\tscroll-padding-inline-start: 0.375rem; /* 6px */\n\nscroll-pe-1.5\tscroll-padding-inline-end: 0.375rem; /* 6px */\n\nscroll-pt-1.5\tscroll-padding-top: 0.375rem; /* 6px */\n\nscroll-pr-1.5\tscroll-padding-right: 0.375rem; /* 6px */\n\nscroll-pb-1.5\tscroll-padding-bottom: 0.375rem; /* 6px */\n\nscroll-pl-1.5\tscroll-padding-left: 0.375rem; /* 6px */\n\nscroll-p-2\tscroll-padding: 0.5rem; /* 8px */\n\nscroll-px-2\tscroll-padding-left: 0.5rem; /* 8px */\nscroll-padding-right: 0.5rem; /* 8px */\n\nscroll-py-2\tscroll-padding-top: 0.5rem; /* 8px */\nscroll-padding-bottom: 0.5rem; /* 8px */\n\nscroll-ps-2\tscroll-padding-inline-start: 0.5rem; /* 8px */\n\nscroll-pe-2\tscroll-padding-inline-end: 0.5rem; /* 8px */\n\nscroll-pt-2\tscroll-padding-top: 0.5rem; /* 8px */\n\nscroll-pr-2\tscroll-padding-right: 0.5rem; /* 8px */\n\nscroll-pb-2\tscroll-padding-bottom: 0.5rem; /* 8px */\n\nscroll-pl-2\tscroll-padding-left: 0.5rem; /* 8px */\n\nscroll-p-2.5\tscroll-padding: 0.625rem; /* 10px */\n\nscroll-px-2.5\tscroll-padding-left: 0.625rem; /* 10px */\nscroll-padding-right: 0.625rem; /* 10px */\n\nscroll-py-2.5\tscroll-padding-top: 0.625rem; /* 10px */\nscroll-padding-bottom: 0.625rem; /* 10px */\n\nscroll-ps-2.5\tscroll-padding-inline-start: 0.625rem; /* 10px */\n\nscroll-pe-2.5\tscroll-padding-inline-end: 0.625rem; /* 10px */\n\nscroll-pt-2.5\tscroll-padding-top: 0.625rem; /* 10px */\n\nscroll-pr-2.5\tscroll-padding-right: 0.625rem; /* 10px */\n\nscroll-pb-2.5\tscroll-padding-bottom: 0.625rem; /* 10px */\n\nscroll-pl-2.5\tscroll-padding-left: 0.625rem; /* 10px */\n\nscroll-p-3\tscroll-padding: 0.75rem; /* 12px */\n\nscroll-px-3\tscroll-padding-left: 0.75rem; /* 12px */\nscroll-padding-right: 0.75rem; /* 12px */\n\nscroll-py-3\tscroll-padding-top: 0.75rem; /* 12px */\nscroll-padding-bottom: 0.75rem; /* 12px */\n\nscroll-ps-3\tscroll-padding-inline-start: 0.75rem; /* 12px */\n\nscroll-pe-3\tscroll-padding-inline-end: 0.75rem; /* 12px */\n\nscroll-pt-3\tscroll-padding-top: 0.75rem; /* 12px */\n\nscroll-pr-3\tscroll-padding-right: 0.75rem; /* 12px */\n\nscroll-pb-3\tscroll-padding-bottom: 0.75rem; /* 12px */\n\nscroll-pl-3\tscroll-padding-left: 0.75rem; /* 12px */\n\nscroll-p-3.5\tscroll-padding: 0.875rem; /* 14px */\n\nscroll-px-3.5\tscroll-padding-left: 0.875rem; /* 14px */\nscroll-padding-right: 0.875rem; /* 14px */\n\nscroll-py-3.5\tscroll-padding-top: 0.875rem; /* 14px */\nscroll-padding-bottom: 0.875rem; /* 14px */\n\nscroll-ps-3.5\tscroll-padding-inline-start: 0.875rem; /* 14px */\n\nscroll-pe-3.5\tscroll-padding-inline-end: 0.875rem; /* 14px */\n\nscroll-pt-3.5\tscroll-padding-top: 0.875rem; /* 14px */\n\nscroll-pr-3.5\tscroll-padding-right: 0.875rem; /* 14px */\n\nscroll-pb-3.5\tscroll-padding-bottom: 0.875rem; /* 14px */\n\nscroll-pl-3.5\tscroll-padding-left: 0.875rem; /* 14px */\n\nscroll-p-4\tscroll-padding: 1rem; /* 16px */\n\nscroll-px-4\tscroll-padding-left: 1rem; /* 16px */\nscroll-padding-right: 1rem; /* 16px */\n\nscroll-py-4\tscroll-padding-top: 1rem; /* 16px */\nscroll-padding-bottom: 1rem; /* 16px */\n\nscroll-ps-4\tscroll-padding-inline-start: 1rem; /* 16px */\n\nscroll-pe-4\tscroll-padding-inline-end: 1rem; /* 16px */\n\nscroll-pt-4\tscroll-padding-top: 1rem; /* 16px */\n\nscroll-pr-4\tscroll-padding-right: 1rem; /* 16px */\n\nscroll-pb-4\tscroll-padding-bottom: 1rem; /* 16px */\n\nscroll-pl-4\tscroll-padding-left: 1rem; /* 16px */\n\nscroll-p-5\tscroll-padding: 1.25rem; /* 20px */\n\nscroll-px-5\tscroll-padding-left: 1.25rem; /* 20px */\nscroll-padding-right: 1.25rem; /* 20px */\n\nscroll-py-5\tscroll-padding-top: 1.25rem; /* 20px */\nscroll-padding-bottom: 1.25rem; /* 20px */\n\nscroll-ps-5\tscroll-padding-inline-start: 1.25rem; /* 20px */\n\nscroll-pe-5\tscroll-padding-inline-end: 1.25rem; /* 20px */\n\nscroll-pt-5\tscroll-padding-top: 1.25rem; /* 20px */\n\nscroll-pr-5\tscroll-padding-right: 1.25rem; /* 20px */\n\nscroll-pb-5\tscroll-padding-bottom: 1.25rem; /* 20px */\n\nscroll-pl-5\tscroll-padding-left: 1.25rem; /* 20px */\n\nscroll-p-6\tscroll-padding: 1.5rem; /* 24px */\n\nscroll-px-6\tscroll-padding-left: 1.5rem; /* 24px */\nscroll-padding-right: 1.5rem; /* 24px */\n\nscroll-py-6\tscroll-padding-top: 1.5rem; /* 24px */\nscroll-padding-bottom: 1.5rem; /* 24px */\n\nscroll-ps-6\tscroll-padding-inline-start: 1.5rem; /* 24px */\n\nscroll-pe-6\tscroll-padding-inline-end: 1.5rem; /* 24px */\n\nscroll-pt-6\tscroll-padding-top: 1.5rem; /* 24px */\n\nscroll-pr-6\tscroll-padding-right: 1.5rem; /* 24px */\n\nscroll-pb-6\tscroll-padding-bottom: 1.5rem; /* 24px */\n\nscroll-pl-6\tscroll-padding-left: 1.5rem; /* 24px */\n\nscroll-p-7\tscroll-padding: 1.75rem; /* 28px */\n\nscroll-px-7\tscroll-padding-left: 1.75rem; /* 28px */\nscroll-padding-right: 1.75rem; /* 28px */\n\nscroll-py-7\tscroll-padding-top: 1.75rem; /* 28px */\nscroll-padding-bottom: 1.75rem; /* 28px */\n\nscroll-ps-7\tscroll-padding-inline-start: 1.75rem; /* 28px */\n\nscroll-pe-7\tscroll-padding-inline-end: 1.75rem; /* 28px */\n\nscroll-pt-7\tscroll-padding-top: 1.75rem; /* 28px */\n\nscroll-pr-7\tscroll-padding-right: 1.75rem; /* 28px */\n\nscroll-pb-7\tscroll-padding-bottom: 1.75rem; /* 28px */\n\nscroll-pl-7\tscroll-padding-left: 1.75rem; /* 28px */\n\nscroll-p-8\tscroll-padding: 2rem; /* 32px */\n\nscroll-px-8\tscroll-padding-left: 2rem; /* 32px */\nscroll-padding-right: 2rem; /* 32px */\n\nscroll-py-8\tscroll-padding-top: 2rem; /* 32px */\nscroll-padding-bottom: 2rem; /* 32px */\n\nscroll-ps-8\tscroll-padding-inline-start: 2rem; /* 32px */\n\nscroll-pe-8\tscroll-padding-inline-end: 2rem; /* 32px */\n\nscroll-pt-8\tscroll-padding-top: 2rem; /* 32px */\n\nscroll-pr-8\tscroll-padding-right: 2rem; /* 32px */\n\nscroll-pb-8\tscroll-padding-bottom: 2rem; /* 32px */\n\nscroll-pl-8\tscroll-padding-left: 2rem; /* 32px */\n\nscroll-p-9\tscroll-padding: 2.25rem; /* 36px */\n\nscroll-px-9\tscroll-padding-left: 2.25rem; /* 36px */\nscroll-padding-right: 2.25rem; /* 36px */\n\nscroll-py-9\tscroll-padding-top: 2.25rem; /* 36px */\nscroll-padding-bottom: 2.25rem; /* 36px */\n\nscroll-ps-9\tscroll-padding-inline-start: 2.25rem; /* 36px */\n\nscroll-pe-9\tscroll-padding-inline-end: 2.25rem; /* 36px */\n\nscroll-pt-9\tscroll-padding-top: 2.25rem; /* 36px */\n\nscroll-pr-9\tscroll-padding-right: 2.25rem; /* 36px */\n\nscroll-pb-9\tscroll-padding-bottom: 2.25rem; /* 36px */\n\nscroll-pl-9\tscroll-padding-left: 2.25rem; /* 36px */\n\nscroll-p-10\tscroll-padding: 2.5rem; /* 40px */\n\nscroll-px-10\tscroll-padding-left: 2.5rem; /* 40px */\nscroll-padding-right: 2.5rem; /* 40px */\n\nscroll-py-10\tscroll-padding-top: 2.5rem; /* 40px */\nscroll-padding-bottom: 2.5rem; /* 40px */\n\nscroll-ps-10\tscroll-padding-inline-start: 2.5rem; /* 40px */\n\nscroll-pe-10\tscroll-padding-inline-end: 2.5rem; /* 40px */\n\nscroll-pt-10\tscroll-padding-top: 2.5rem; /* 40px */\n\nscroll-pr-10\tscroll-padding-right: 2.5rem; /* 40px */\n\nscroll-pb-10\tscroll-padding-bottom: 2.5rem; /* 40px */\n\nscroll-pl-10\tscroll-padding-left: 2.5rem; /* 40px */\n\nscroll-p-11\tscroll-padding: 2.75rem; /* 44px */\n\nscroll-px-11\tscroll-padding-left: 2.75rem; /* 44px */\nscroll-padding-right: 2.75rem; /* 44px */\n\nscroll-py-11\tscroll-padding-top: 2.75rem; /* 44px */\nscroll-padding-bottom: 2.75rem; /* 44px */\n\nscroll-ps-11\tscroll-padding-inline-start: 2.75rem; /* 44px */\n\nscroll-pe-11\tscroll-padding-inline-end: 2.75rem; /* 44px */\n\nscroll-pt-11\tscroll-padding-top: 2.75rem; /* 44px */\n\nscroll-pr-11\tscroll-padding-right: 2.75rem; /* 44px */\n\nscroll-pb-11\tscroll-padding-bottom: 2.75rem; /* 44px */\n\nscroll-pl-11\tscroll-padding-left: 2.75rem; /* 44px */\n\nscroll-p-12\tscroll-padding: 3rem; /* 48px */\n\nscroll-px-12\tscroll-padding-left: 3rem; /* 48px */\nscroll-padding-right: 3rem; /* 48px */\n\nscroll-py-12\tscroll-padding-top: 3rem; /* 48px */\nscroll-padding-bottom: 3rem; /* 48px */\n\nscroll-ps-12\tscroll-padding-inline-start: 3rem; /* 48px */\n\nscroll-pe-12\tscroll-padding-inline-end: 3rem; /* 48px */\n\nscroll-pt-12\tscroll-padding-top: 3rem; /* 48px */\n\nscroll-pr-12\tscroll-padding-right: 3rem; /* 48px */\n\nscroll-pb-12\tscroll-padding-bottom: 3rem; /* 48px */\n\nscroll-pl-12\tscroll-padding-left: 3rem; /* 48px */\n\nscroll-p-14\tscroll-padding: 3.5rem; /* 56px */\n\nscroll-px-14\tscroll-padding-left: 3.5rem; /* 56px */\nscroll-padding-right: 3.5rem; /* 56px */\n\nscroll-py-14\tscroll-padding-top: 3.5rem; /* 56px */\nscroll-padding-bottom: 3.5rem; /* 56px */\n\nscroll-ps-14\tscroll-padding-inline-start: 3.5rem; /* 56px */\n\nscroll-pe-14\tscroll-padding-inline-end: 3.5rem; /* 56px */\n\nscroll-pt-14\tscroll-padding-top: 3.5rem; /* 56px */\n\nscroll-pr-14\tscroll-padding-right: 3.5rem; /* 56px */\n\nscroll-pb-14\tscroll-padding-bottom: 3.5rem; /* 56px */\n\nscroll-pl-14\tscroll-padding-left: 3.5rem; /* 56px */\n\nscroll-p-16\tscroll-padding: 4rem; /* 64px */\n\nscroll-px-16\tscroll-padding-left: 4rem; /* 64px */\nscroll-padding-right: 4rem; /* 64px */\n\nscroll-py-16\tscroll-padding-top: 4rem; /* 64px */\nscroll-padding-bottom: 4rem; /* 64px */\n\nscroll-ps-16\tscroll-padding-inline-start: 4rem; /* 64px */\n\nscroll-pe-16\tscroll-padding-inline-end: 4rem; /* 64px */\n\nscroll-pt-16\tscroll-padding-top: 4rem; /* 64px */\n\nscroll-pr-16\tscroll-padding-right: 4rem; /* 64px */\n\nscroll-pb-16\tscroll-padding-bottom: 4rem; /* 64px */\n\nscroll-pl-16\tscroll-padding-left: 4rem; /* 64px */\n\nscroll-p-20\tscroll-padding: 5rem; /* 80px */\n\nscroll-px-20\tscroll-padding-left: 5rem; /* 80px */\nscroll-padding-right: 5rem; /* 80px */\n\nscroll-py-20\tscroll-padding-top: 5rem; /* 80px */\nscroll-padding-bottom: 5rem; /* 80px */\n\nscroll-ps-20\tscroll-padding-inline-start: 5rem; /* 80px */\n\nscroll-pe-20\tscroll-padding-inline-end: 5rem; /* 80px */\n\nscroll-pt-20\tscroll-padding-top: 5rem; /* 80px */\n\nscroll-pr-20\tscroll-padding-right: 5rem; /* 80px */\n\nscroll-pb-20\tscroll-padding-bottom: 5rem; /* 80px */\n\nscroll-pl-20\tscroll-padding-left: 5rem; /* 80px */\n\nscroll-p-24\tscroll-padding: 6rem; /* 96px */\n\nscroll-px-24\tscroll-padding-left: 6rem; /* 96px */\nscroll-padding-right: 6rem; /* 96px */\n\nscroll-py-24\tscroll-padding-top: 6rem; /* 96px */\nscroll-padding-bottom: 6rem; /* 96px */\n\nscroll-ps-24\tscroll-padding-inline-start: 6rem; /* 96px */\n\nscroll-pe-24\tscroll-padding-inline-end: 6rem; /* 96px */\n\nscroll-pt-24\tscroll-padding-top: 6rem; /* 96px */\n\nscroll-pr-24\tscroll-padding-right: 6rem; /* 96px */\n\nscroll-pb-24\tscroll-padding-bottom: 6rem; /* 96px */\n\nscroll-pl-24\tscroll-padding-left: 6rem; /* 96px */\n\nscroll-p-28\tscroll-padding: 7rem; /* 112px */\n\nscroll-px-28\tscroll-padding-left: 7rem; /* 112px */\nscroll-padding-right: 7rem; /* 112px */\n\nscroll-py-28\tscroll-padding-top: 7rem; /* 112px */\nscroll-padding-bottom: 7rem; /* 112px */\n\nscroll-ps-28\tscroll-padding-inline-start: 7rem; /* 112px */\n\nscroll-pe-28\tscroll-padding-inline-end: 7rem; /* 112px */\n\nscroll-pt-28\tscroll-padding-top: 7rem; /* 112px */\n\nscroll-pr-28\tscroll-padding-right: 7rem; /* 112px */\n\nscroll-pb-28\tscroll-padding-bottom: 7rem; /* 112px */\n\nscroll-pl-28\tscroll-padding-left: 7rem; /* 112px */\n\nscroll-p-32\tscroll-padding: 8rem; /* 128px */\n\nscroll-px-32\tscroll-padding-left: 8rem; /* 128px */\nscroll-padding-right: 8rem; /* 128px */\n\nscroll-py-32\tscroll-padding-top: 8rem; /* 128px */\nscroll-padding-bottom: 8rem; /* 128px */\n\nscroll-ps-32\tscroll-padding-inline-start: 8rem; /* 128px */\n\nscroll-pe-32\tscroll-padding-inline-end: 8rem; /* 128px */\n\nscroll-pt-32\tscroll-padding-top: 8rem; /* 128px */\n\nscroll-pr-32\tscroll-padding-right: 8rem; /* 128px */\n\nscroll-pb-32\tscroll-padding-bottom: 8rem; /* 128px */\n\nscroll-pl-32\tscroll-padding-left: 8rem; /* 128px */\n\nscroll-p-36\tscroll-padding: 9rem; /* 144px */\n\nscroll-px-36\tscroll-padding-left: 9rem; /* 144px */\nscroll-padding-right: 9rem; /* 144px */\n\nscroll-py-36\tscroll-padding-top: 9rem; /* 144px */\nscroll-padding-bottom: 9rem; /* 144px */\n\nscroll-ps-36\tscroll-padding-inline-start: 9rem; /* 144px */\n\nscroll-pe-36\tscroll-padding-inline-end: 9rem; /* 144px */\n\nscroll-pt-36\tscroll-padding-top: 9rem; /* 144px */\n\nscroll-pr-36\tscroll-padding-right: 9rem; /* 144px */\n\nscroll-pb-36\tscroll-padding-bottom: 9rem; /* 144px */\n\nscroll-pl-36\tscroll-padding-left: 9rem; /* 144px */\n\nscroll-p-40\tscroll-padding: 10rem; /* 160px */\n\nscroll-px-40\tscroll-padding-left: 10rem; /* 160px */\nscroll-padding-right: 10rem; /* 160px */\n\nscroll-py-40\tscroll-padding-top: 10rem; /* 160px */\nscroll-padding-bottom: 10rem; /* 160px */\n\nscroll-ps-40\tscroll-padding-inline-start: 10rem; /* 160px */\n\nscroll-pe-40\tscroll-padding-inline-end: 10rem; /* 160px */\n\nscroll-pt-40\tscroll-padding-top: 10rem; /* 160px */\n\nscroll-pr-40\tscroll-padding-right: 10rem; /* 160px */\n\nscroll-pb-40\tscroll-padding-bottom: 10rem; /* 160px */\n\nscroll-pl-40\tscroll-padding-left: 10rem; /* 160px */\n\nscroll-p-44\tscroll-padding: 11rem; /* 176px */\n\nscroll-px-44\tscroll-padding-left: 11rem; /* 176px */\nscroll-padding-right: 11rem; /* 176px */\n\nscroll-py-44\tscroll-padding-top: 11rem; /* 176px */\nscroll-padding-bottom: 11rem; /* 176px */\n\nscroll-ps-44\tscroll-padding-inline-start: 11rem; /* 176px */\n\nscroll-pe-44\tscroll-padding-inline-end: 11rem; /* 176px */\n\nscroll-pt-44\tscroll-padding-top: 11rem; /* 176px */\n\nscroll-pr-44\tscroll-padding-right: 11rem; /* 176px */\n\nscroll-pb-44\tscroll-padding-bottom: 11rem; /* 176px */\n\nscroll-pl-44\tscroll-padding-left: 11rem; /* 176px */\n\nscroll-p-48\tscroll-padding: 12rem; /* 192px */\n\nscroll-px-48\tscroll-padding-left: 12rem; /* 192px */\nscroll-padding-right: 12rem; /* 192px */\n\nscroll-py-48\tscroll-padding-top: 12rem; /* 192px */\nscroll-padding-bottom: 12rem; /* 192px */\n\nscroll-ps-48\tscroll-padding-inline-start: 12rem; /* 192px */\n\nscroll-pe-48\tscroll-padding-inline-end: 12rem; /* 192px */\n\nscroll-pt-48\tscroll-padding-top: 12rem; /* 192px */\n\nscroll-pr-48\tscroll-padding-right: 12rem; /* 192px */\n\nscroll-pb-48\tscroll-padding-bottom: 12rem; /* 192px */\n\nscroll-pl-48\tscroll-padding-left: 12rem; /* 192px */\n\nscroll-p-52\tscroll-padding: 13rem; /* 208px */\n\nscroll-px-52\tscroll-padding-left: 13rem; /* 208px */\nscroll-padding-right: 13rem; /* 208px */\n\nscroll-py-52\tscroll-padding-top: 13rem; /* 208px */\nscroll-padding-bottom: 13rem; /* 208px */\n\nscroll-ps-52\tscroll-padding-inline-start: 13rem; /* 208px */\n\nscroll-pe-52\tscroll-padding-inline-end: 13rem; /* 208px */\n\nscroll-pt-52\tscroll-padding-top: 13rem; /* 208px */\n\nscroll-pr-52\tscroll-padding-right: 13rem; /* 208px */\n\nscroll-pb-52\tscroll-padding-bottom: 13rem; /* 208px */\n\nscroll-pl-52\tscroll-padding-left: 13rem; /* 208px */\n\nscroll-p-56\tscroll-padding: 14rem; /* 224px */\n\nscroll-px-56\tscroll-padding-left: 14rem; /* 224px */\nscroll-padding-right: 14rem; /* 224px */\n\nscroll-py-56\tscroll-padding-top: 14rem; /* 224px */\nscroll-padding-bottom: 14rem; /* 224px */\n\nscroll-ps-56\tscroll-padding-inline-start: 14rem; /* 224px */\n\nscroll-pe-56\tscroll-padding-inline-end: 14rem; /* 224px */\n\nscroll-pt-56\tscroll-padding-top: 14rem; /* 224px */\n\nscroll-pr-56\tscroll-padding-right: 14rem; /* 224px */\n\nscroll-pb-56\tscroll-padding-bottom: 14rem; /* 224px */\n\nscroll-pl-56\tscroll-padding-left: 14rem; /* 224px */\n\nscroll-p-60\tscroll-padding: 15rem; /* 240px */\n\nscroll-px-60\tscroll-padding-left: 15rem; /* 240px */\nscroll-padding-right: 15rem; /* 240px */\n\nscroll-py-60\tscroll-padding-top: 15rem; /* 240px */\nscroll-padding-bottom: 15rem; /* 240px */\n\nscroll-ps-60\tscroll-padding-inline-start: 15rem; /* 240px */\n\nscroll-pe-60\tscroll-padding-inline-end: 15rem; /* 240px */\n\nscroll-pt-60\tscroll-padding-top: 15rem; /* 240px */\n\nscroll-pr-60\tscroll-padding-right: 15rem; /* 240px */\n\nscroll-pb-60\tscroll-padding-bottom: 15rem; /* 240px */\n\nscroll-pl-60\tscroll-padding-left: 15rem; /* 240px */\n\nscroll-p-64\tscroll-padding: 16rem; /* 256px */\n\nscroll-px-64\tscroll-padding-left: 16rem; /* 256px */\nscroll-padding-right: 16rem; /* 256px */\n\nscroll-py-64\tscroll-padding-top: 16rem; /* 256px */\nscroll-padding-bottom: 16rem; /* 256px */\n\nscroll-ps-64\tscroll-padding-inline-start: 16rem; /* 256px */\n\nscroll-pe-64\tscroll-padding-inline-end: 16rem; /* 256px */\n\nscroll-pt-64\tscroll-padding-top: 16rem; /* 256px */\n\nscroll-pr-64\tscroll-padding-right: 16rem; /* 256px */\n\nscroll-pb-64\tscroll-padding-bottom: 16rem; /* 256px */\n\nscroll-pl-64\tscroll-padding-left: 16rem; /* 256px */\n\nscroll-p-72\tscroll-padding: 18rem; /* 288px */\n\nscroll-px-72\tscroll-padding-left: 18rem; /* 288px */\nscroll-padding-right: 18rem; /* 288px */\n\nscroll-py-72\tscroll-padding-top: 18rem; /* 288px */\nscroll-padding-bottom: 18rem; /* 288px */\n\nscroll-ps-72\tscroll-padding-inline-start: 18rem; /* 288px */\n\nscroll-pe-72\tscroll-padding-inline-end: 18rem; /* 288px */\n\nscroll-pt-72\tscroll-padding-top: 18rem; /* 288px */\n\nscroll-pr-72\tscroll-padding-right: 18rem; /* 288px */\n\nscroll-pb-72\tscroll-padding-bottom: 18rem; /* 288px */\n\nscroll-pl-72\tscroll-padding-left: 18rem; /* 288px */\n\nscroll-p-80\tscroll-padding: 20rem; /* 320px */\n\nscroll-px-80\tscroll-padding-left: 20rem; /* 320px */\nscroll-padding-right: 20rem; /* 320px */\n\nscroll-py-80\tscroll-padding-top: 20rem; /* 320px */\nscroll-padding-bottom: 20rem; /* 320px */\n\nscroll-ps-80\tscroll-padding-inline-start: 20rem; /* 320px */\n\nscroll-pe-80\tscroll-padding-inline-end: 20rem; /* 320px */\n\nscroll-pt-80\tscroll-padding-top: 20rem; /* 320px */\n\nscroll-pr-80\tscroll-padding-right: 20rem; /* 320px */\n\nscroll-pb-80\tscroll-padding-bottom: 20rem; /* 320px */\n\nscroll-pl-80\tscroll-padding-left: 20rem; /* 320px */\n\nscroll-p-96\tscroll-padding: 24rem; /* 384px */\n\nscroll-px-96\tscroll-padding-left: 24rem; /* 384px */\nscroll-padding-right: 24rem; /* 384px */\n\nscroll-py-96\tscroll-padding-top: 24rem; /* 384px */\nscroll-padding-bottom: 24rem; /* 384px */\n\nscroll-ps-96\tscroll-padding-inline-start: 24rem; /* 384px */\n\nscroll-pe-96\tscroll-padding-inline-end: 24rem; /* 384px */\n\nscroll-pt-96\tscroll-padding-top: 24rem; /* 384px */\n\nscroll-pr-96\tscroll-padding-right: 24rem; /* 384px */\n\nscroll-pb-96\tscroll-padding-bottom: 24rem; /* 384px */\n\nscroll-pl-96\tscroll-padding-left: 24rem; /* 384px */\n\n​\nBasic usage\n​\nSetting the scroll padding\n\nUse the scroll-p{side}-{size} utilities to set the scroll offset of an element within a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\n<div class=\"scroll-pl-6 snap-x ...\">\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nUsing logical properties\n\nUse the scroll-ps-* and scroll-pe-* utilities to set the scroll-padding-inline-start and scroll-padding-inline-end logical properties, which map to either the left or right side based on the text direction.\n\nScroll in the grid of images to see the expected behaviour\n\nLeft-to-right\n\nRight-to-left\n\n<div dir=\"ltr\">\n  <div class=\"scroll-ps-6 snap-x ...\">\n    <!-- ... -->\n  </div>\n</div>\n\n<div dir=\"rtl\">\n  <div class=\"scroll-ps-6 snap-x ...\">\n    <!-- ... -->\n  </div>\n</div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:scroll-p-0 to only apply the scroll-p-0 utility on hover.\n\n<div class=\"scroll-p-8 hover:scroll-p-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:scroll-p-0 to apply the scroll-p-0 utility at only medium screen sizes and above.\n\n<div class=\"scroll-p-8 md:scroll-p-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s scroll padding scale uses the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '96': '24rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the scroll padding scale by editing theme.scrollPadding or theme.extend.scrollPadding in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      scrollPadding: {\n\n        '96': '24rem',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off scroll-padding value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"scroll-p-[24rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nScroll Margin\nScroll Snap Align\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the scroll padding\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scroll Margin - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scroll-margin",
    "html": "Interactivity\n\nScroll Margin\n\nUtilities for controlling the scroll offset around items in a snap container.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nscroll-m-0\tscroll-margin: 0px;\n\nscroll-mx-0\tscroll-margin-left: 0px;\nscroll-margin-right: 0px;\n\nscroll-my-0\tscroll-margin-top: 0px;\nscroll-margin-bottom: 0px;\n\nscroll-ms-0\tscroll-margin-inline-start: 0px;\n\nscroll-me-0\tscroll-margin-inline-end: 0px;\n\nscroll-mt-0\tscroll-margin-top: 0px;\n\nscroll-mr-0\tscroll-margin-right: 0px;\n\nscroll-mb-0\tscroll-margin-bottom: 0px;\n\nscroll-ml-0\tscroll-margin-left: 0px;\n\nscroll-m-px\tscroll-margin: 1px;\n\nscroll-mx-px\tscroll-margin-left: 1px;\nscroll-margin-right: 1px;\n\nscroll-my-px\tscroll-margin-top: 1px;\nscroll-margin-bottom: 1px;\n\nscroll-ms-px\tscroll-margin-inline-start: 1px;\n\nscroll-me-px\tscroll-margin-inline-end: 1px;\n\nscroll-mt-px\tscroll-margin-top: 1px;\n\nscroll-mr-px\tscroll-margin-right: 1px;\n\nscroll-mb-px\tscroll-margin-bottom: 1px;\n\nscroll-ml-px\tscroll-margin-left: 1px;\n\nscroll-m-0.5\tscroll-margin: 0.125rem; /* 2px */\n\nscroll-mx-0.5\tscroll-margin-left: 0.125rem; /* 2px */\nscroll-margin-right: 0.125rem; /* 2px */\n\nscroll-my-0.5\tscroll-margin-top: 0.125rem; /* 2px */\nscroll-margin-bottom: 0.125rem; /* 2px */\n\nscroll-ms-0.5\tscroll-margin-inline-start: 0.125rem; /* 2px */\n\nscroll-me-0.5\tscroll-margin-inline-end: 0.125rem; /* 2px */\n\nscroll-mt-0.5\tscroll-margin-top: 0.125rem; /* 2px */\n\nscroll-mr-0.5\tscroll-margin-right: 0.125rem; /* 2px */\n\nscroll-mb-0.5\tscroll-margin-bottom: 0.125rem; /* 2px */\n\nscroll-ml-0.5\tscroll-margin-left: 0.125rem; /* 2px */\n\nscroll-m-1\tscroll-margin: 0.25rem; /* 4px */\n\nscroll-mx-1\tscroll-margin-left: 0.25rem; /* 4px */\nscroll-margin-right: 0.25rem; /* 4px */\n\nscroll-my-1\tscroll-margin-top: 0.25rem; /* 4px */\nscroll-margin-bottom: 0.25rem; /* 4px */\n\nscroll-ms-1\tscroll-margin-inline-start: 0.25rem; /* 4px */\n\nscroll-me-1\tscroll-margin-inline-end: 0.25rem; /* 4px */\n\nscroll-mt-1\tscroll-margin-top: 0.25rem; /* 4px */\n\nscroll-mr-1\tscroll-margin-right: 0.25rem; /* 4px */\n\nscroll-mb-1\tscroll-margin-bottom: 0.25rem; /* 4px */\n\nscroll-ml-1\tscroll-margin-left: 0.25rem; /* 4px */\n\nscroll-m-1.5\tscroll-margin: 0.375rem; /* 6px */\n\nscroll-mx-1.5\tscroll-margin-left: 0.375rem; /* 6px */\nscroll-margin-right: 0.375rem; /* 6px */\n\nscroll-my-1.5\tscroll-margin-top: 0.375rem; /* 6px */\nscroll-margin-bottom: 0.375rem; /* 6px */\n\nscroll-ms-1.5\tscroll-margin-inline-start: 0.375rem; /* 6px */\n\nscroll-me-1.5\tscroll-margin-inline-end: 0.375rem; /* 6px */\n\nscroll-mt-1.5\tscroll-margin-top: 0.375rem; /* 6px */\n\nscroll-mr-1.5\tscroll-margin-right: 0.375rem; /* 6px */\n\nscroll-mb-1.5\tscroll-margin-bottom: 0.375rem; /* 6px */\n\nscroll-ml-1.5\tscroll-margin-left: 0.375rem; /* 6px */\n\nscroll-m-2\tscroll-margin: 0.5rem; /* 8px */\n\nscroll-mx-2\tscroll-margin-left: 0.5rem; /* 8px */\nscroll-margin-right: 0.5rem; /* 8px */\n\nscroll-my-2\tscroll-margin-top: 0.5rem; /* 8px */\nscroll-margin-bottom: 0.5rem; /* 8px */\n\nscroll-ms-2\tscroll-margin-inline-start: 0.5rem; /* 8px */\n\nscroll-me-2\tscroll-margin-inline-end: 0.5rem; /* 8px */\n\nscroll-mt-2\tscroll-margin-top: 0.5rem; /* 8px */\n\nscroll-mr-2\tscroll-margin-right: 0.5rem; /* 8px */\n\nscroll-mb-2\tscroll-margin-bottom: 0.5rem; /* 8px */\n\nscroll-ml-2\tscroll-margin-left: 0.5rem; /* 8px */\n\nscroll-m-2.5\tscroll-margin: 0.625rem; /* 10px */\n\nscroll-mx-2.5\tscroll-margin-left: 0.625rem; /* 10px */\nscroll-margin-right: 0.625rem; /* 10px */\n\nscroll-my-2.5\tscroll-margin-top: 0.625rem; /* 10px */\nscroll-margin-bottom: 0.625rem; /* 10px */\n\nscroll-ms-2.5\tscroll-margin-inline-start: 0.625rem; /* 10px */\n\nscroll-me-2.5\tscroll-margin-inline-end: 0.625rem; /* 10px */\n\nscroll-mt-2.5\tscroll-margin-top: 0.625rem; /* 10px */\n\nscroll-mr-2.5\tscroll-margin-right: 0.625rem; /* 10px */\n\nscroll-mb-2.5\tscroll-margin-bottom: 0.625rem; /* 10px */\n\nscroll-ml-2.5\tscroll-margin-left: 0.625rem; /* 10px */\n\nscroll-m-3\tscroll-margin: 0.75rem; /* 12px */\n\nscroll-mx-3\tscroll-margin-left: 0.75rem; /* 12px */\nscroll-margin-right: 0.75rem; /* 12px */\n\nscroll-my-3\tscroll-margin-top: 0.75rem; /* 12px */\nscroll-margin-bottom: 0.75rem; /* 12px */\n\nscroll-ms-3\tscroll-margin-inline-start: 0.75rem; /* 12px */\n\nscroll-me-3\tscroll-margin-inline-end: 0.75rem; /* 12px */\n\nscroll-mt-3\tscroll-margin-top: 0.75rem; /* 12px */\n\nscroll-mr-3\tscroll-margin-right: 0.75rem; /* 12px */\n\nscroll-mb-3\tscroll-margin-bottom: 0.75rem; /* 12px */\n\nscroll-ml-3\tscroll-margin-left: 0.75rem; /* 12px */\n\nscroll-m-3.5\tscroll-margin: 0.875rem; /* 14px */\n\nscroll-mx-3.5\tscroll-margin-left: 0.875rem; /* 14px */\nscroll-margin-right: 0.875rem; /* 14px */\n\nscroll-my-3.5\tscroll-margin-top: 0.875rem; /* 14px */\nscroll-margin-bottom: 0.875rem; /* 14px */\n\nscroll-ms-3.5\tscroll-margin-inline-start: 0.875rem; /* 14px */\n\nscroll-me-3.5\tscroll-margin-inline-end: 0.875rem; /* 14px */\n\nscroll-mt-3.5\tscroll-margin-top: 0.875rem; /* 14px */\n\nscroll-mr-3.5\tscroll-margin-right: 0.875rem; /* 14px */\n\nscroll-mb-3.5\tscroll-margin-bottom: 0.875rem; /* 14px */\n\nscroll-ml-3.5\tscroll-margin-left: 0.875rem; /* 14px */\n\nscroll-m-4\tscroll-margin: 1rem; /* 16px */\n\nscroll-mx-4\tscroll-margin-left: 1rem; /* 16px */\nscroll-margin-right: 1rem; /* 16px */\n\nscroll-my-4\tscroll-margin-top: 1rem; /* 16px */\nscroll-margin-bottom: 1rem; /* 16px */\n\nscroll-ms-4\tscroll-margin-inline-start: 1rem; /* 16px */\n\nscroll-me-4\tscroll-margin-inline-end: 1rem; /* 16px */\n\nscroll-mt-4\tscroll-margin-top: 1rem; /* 16px */\n\nscroll-mr-4\tscroll-margin-right: 1rem; /* 16px */\n\nscroll-mb-4\tscroll-margin-bottom: 1rem; /* 16px */\n\nscroll-ml-4\tscroll-margin-left: 1rem; /* 16px */\n\nscroll-m-5\tscroll-margin: 1.25rem; /* 20px */\n\nscroll-mx-5\tscroll-margin-left: 1.25rem; /* 20px */\nscroll-margin-right: 1.25rem; /* 20px */\n\nscroll-my-5\tscroll-margin-top: 1.25rem; /* 20px */\nscroll-margin-bottom: 1.25rem; /* 20px */\n\nscroll-ms-5\tscroll-margin-inline-start: 1.25rem; /* 20px */\n\nscroll-me-5\tscroll-margin-inline-end: 1.25rem; /* 20px */\n\nscroll-mt-5\tscroll-margin-top: 1.25rem; /* 20px */\n\nscroll-mr-5\tscroll-margin-right: 1.25rem; /* 20px */\n\nscroll-mb-5\tscroll-margin-bottom: 1.25rem; /* 20px */\n\nscroll-ml-5\tscroll-margin-left: 1.25rem; /* 20px */\n\nscroll-m-6\tscroll-margin: 1.5rem; /* 24px */\n\nscroll-mx-6\tscroll-margin-left: 1.5rem; /* 24px */\nscroll-margin-right: 1.5rem; /* 24px */\n\nscroll-my-6\tscroll-margin-top: 1.5rem; /* 24px */\nscroll-margin-bottom: 1.5rem; /* 24px */\n\nscroll-ms-6\tscroll-margin-inline-start: 1.5rem; /* 24px */\n\nscroll-me-6\tscroll-margin-inline-end: 1.5rem; /* 24px */\n\nscroll-mt-6\tscroll-margin-top: 1.5rem; /* 24px */\n\nscroll-mr-6\tscroll-margin-right: 1.5rem; /* 24px */\n\nscroll-mb-6\tscroll-margin-bottom: 1.5rem; /* 24px */\n\nscroll-ml-6\tscroll-margin-left: 1.5rem; /* 24px */\n\nscroll-m-7\tscroll-margin: 1.75rem; /* 28px */\n\nscroll-mx-7\tscroll-margin-left: 1.75rem; /* 28px */\nscroll-margin-right: 1.75rem; /* 28px */\n\nscroll-my-7\tscroll-margin-top: 1.75rem; /* 28px */\nscroll-margin-bottom: 1.75rem; /* 28px */\n\nscroll-ms-7\tscroll-margin-inline-start: 1.75rem; /* 28px */\n\nscroll-me-7\tscroll-margin-inline-end: 1.75rem; /* 28px */\n\nscroll-mt-7\tscroll-margin-top: 1.75rem; /* 28px */\n\nscroll-mr-7\tscroll-margin-right: 1.75rem; /* 28px */\n\nscroll-mb-7\tscroll-margin-bottom: 1.75rem; /* 28px */\n\nscroll-ml-7\tscroll-margin-left: 1.75rem; /* 28px */\n\nscroll-m-8\tscroll-margin: 2rem; /* 32px */\n\nscroll-mx-8\tscroll-margin-left: 2rem; /* 32px */\nscroll-margin-right: 2rem; /* 32px */\n\nscroll-my-8\tscroll-margin-top: 2rem; /* 32px */\nscroll-margin-bottom: 2rem; /* 32px */\n\nscroll-ms-8\tscroll-margin-inline-start: 2rem; /* 32px */\n\nscroll-me-8\tscroll-margin-inline-end: 2rem; /* 32px */\n\nscroll-mt-8\tscroll-margin-top: 2rem; /* 32px */\n\nscroll-mr-8\tscroll-margin-right: 2rem; /* 32px */\n\nscroll-mb-8\tscroll-margin-bottom: 2rem; /* 32px */\n\nscroll-ml-8\tscroll-margin-left: 2rem; /* 32px */\n\nscroll-m-9\tscroll-margin: 2.25rem; /* 36px */\n\nscroll-mx-9\tscroll-margin-left: 2.25rem; /* 36px */\nscroll-margin-right: 2.25rem; /* 36px */\n\nscroll-my-9\tscroll-margin-top: 2.25rem; /* 36px */\nscroll-margin-bottom: 2.25rem; /* 36px */\n\nscroll-ms-9\tscroll-margin-inline-start: 2.25rem; /* 36px */\n\nscroll-me-9\tscroll-margin-inline-end: 2.25rem; /* 36px */\n\nscroll-mt-9\tscroll-margin-top: 2.25rem; /* 36px */\n\nscroll-mr-9\tscroll-margin-right: 2.25rem; /* 36px */\n\nscroll-mb-9\tscroll-margin-bottom: 2.25rem; /* 36px */\n\nscroll-ml-9\tscroll-margin-left: 2.25rem; /* 36px */\n\nscroll-m-10\tscroll-margin: 2.5rem; /* 40px */\n\nscroll-mx-10\tscroll-margin-left: 2.5rem; /* 40px */\nscroll-margin-right: 2.5rem; /* 40px */\n\nscroll-my-10\tscroll-margin-top: 2.5rem; /* 40px */\nscroll-margin-bottom: 2.5rem; /* 40px */\n\nscroll-ms-10\tscroll-margin-inline-start: 2.5rem; /* 40px */\n\nscroll-me-10\tscroll-margin-inline-end: 2.5rem; /* 40px */\n\nscroll-mt-10\tscroll-margin-top: 2.5rem; /* 40px */\n\nscroll-mr-10\tscroll-margin-right: 2.5rem; /* 40px */\n\nscroll-mb-10\tscroll-margin-bottom: 2.5rem; /* 40px */\n\nscroll-ml-10\tscroll-margin-left: 2.5rem; /* 40px */\n\nscroll-m-11\tscroll-margin: 2.75rem; /* 44px */\n\nscroll-mx-11\tscroll-margin-left: 2.75rem; /* 44px */\nscroll-margin-right: 2.75rem; /* 44px */\n\nscroll-my-11\tscroll-margin-top: 2.75rem; /* 44px */\nscroll-margin-bottom: 2.75rem; /* 44px */\n\nscroll-ms-11\tscroll-margin-inline-start: 2.75rem; /* 44px */\n\nscroll-me-11\tscroll-margin-inline-end: 2.75rem; /* 44px */\n\nscroll-mt-11\tscroll-margin-top: 2.75rem; /* 44px */\n\nscroll-mr-11\tscroll-margin-right: 2.75rem; /* 44px */\n\nscroll-mb-11\tscroll-margin-bottom: 2.75rem; /* 44px */\n\nscroll-ml-11\tscroll-margin-left: 2.75rem; /* 44px */\n\nscroll-m-12\tscroll-margin: 3rem; /* 48px */\n\nscroll-mx-12\tscroll-margin-left: 3rem; /* 48px */\nscroll-margin-right: 3rem; /* 48px */\n\nscroll-my-12\tscroll-margin-top: 3rem; /* 48px */\nscroll-margin-bottom: 3rem; /* 48px */\n\nscroll-ms-12\tscroll-margin-inline-start: 3rem; /* 48px */\n\nscroll-me-12\tscroll-margin-inline-end: 3rem; /* 48px */\n\nscroll-mt-12\tscroll-margin-top: 3rem; /* 48px */\n\nscroll-mr-12\tscroll-margin-right: 3rem; /* 48px */\n\nscroll-mb-12\tscroll-margin-bottom: 3rem; /* 48px */\n\nscroll-ml-12\tscroll-margin-left: 3rem; /* 48px */\n\nscroll-m-14\tscroll-margin: 3.5rem; /* 56px */\n\nscroll-mx-14\tscroll-margin-left: 3.5rem; /* 56px */\nscroll-margin-right: 3.5rem; /* 56px */\n\nscroll-my-14\tscroll-margin-top: 3.5rem; /* 56px */\nscroll-margin-bottom: 3.5rem; /* 56px */\n\nscroll-ms-14\tscroll-margin-inline-start: 3.5rem; /* 56px */\n\nscroll-me-14\tscroll-margin-inline-end: 3.5rem; /* 56px */\n\nscroll-mt-14\tscroll-margin-top: 3.5rem; /* 56px */\n\nscroll-mr-14\tscroll-margin-right: 3.5rem; /* 56px */\n\nscroll-mb-14\tscroll-margin-bottom: 3.5rem; /* 56px */\n\nscroll-ml-14\tscroll-margin-left: 3.5rem; /* 56px */\n\nscroll-m-16\tscroll-margin: 4rem; /* 64px */\n\nscroll-mx-16\tscroll-margin-left: 4rem; /* 64px */\nscroll-margin-right: 4rem; /* 64px */\n\nscroll-my-16\tscroll-margin-top: 4rem; /* 64px */\nscroll-margin-bottom: 4rem; /* 64px */\n\nscroll-ms-16\tscroll-margin-inline-start: 4rem; /* 64px */\n\nscroll-me-16\tscroll-margin-inline-end: 4rem; /* 64px */\n\nscroll-mt-16\tscroll-margin-top: 4rem; /* 64px */\n\nscroll-mr-16\tscroll-margin-right: 4rem; /* 64px */\n\nscroll-mb-16\tscroll-margin-bottom: 4rem; /* 64px */\n\nscroll-ml-16\tscroll-margin-left: 4rem; /* 64px */\n\nscroll-m-20\tscroll-margin: 5rem; /* 80px */\n\nscroll-mx-20\tscroll-margin-left: 5rem; /* 80px */\nscroll-margin-right: 5rem; /* 80px */\n\nscroll-my-20\tscroll-margin-top: 5rem; /* 80px */\nscroll-margin-bottom: 5rem; /* 80px */\n\nscroll-ms-20\tscroll-margin-inline-start: 5rem; /* 80px */\n\nscroll-me-20\tscroll-margin-inline-end: 5rem; /* 80px */\n\nscroll-mt-20\tscroll-margin-top: 5rem; /* 80px */\n\nscroll-mr-20\tscroll-margin-right: 5rem; /* 80px */\n\nscroll-mb-20\tscroll-margin-bottom: 5rem; /* 80px */\n\nscroll-ml-20\tscroll-margin-left: 5rem; /* 80px */\n\nscroll-m-24\tscroll-margin: 6rem; /* 96px */\n\nscroll-mx-24\tscroll-margin-left: 6rem; /* 96px */\nscroll-margin-right: 6rem; /* 96px */\n\nscroll-my-24\tscroll-margin-top: 6rem; /* 96px */\nscroll-margin-bottom: 6rem; /* 96px */\n\nscroll-ms-24\tscroll-margin-inline-start: 6rem; /* 96px */\n\nscroll-me-24\tscroll-margin-inline-end: 6rem; /* 96px */\n\nscroll-mt-24\tscroll-margin-top: 6rem; /* 96px */\n\nscroll-mr-24\tscroll-margin-right: 6rem; /* 96px */\n\nscroll-mb-24\tscroll-margin-bottom: 6rem; /* 96px */\n\nscroll-ml-24\tscroll-margin-left: 6rem; /* 96px */\n\nscroll-m-28\tscroll-margin: 7rem; /* 112px */\n\nscroll-mx-28\tscroll-margin-left: 7rem; /* 112px */\nscroll-margin-right: 7rem; /* 112px */\n\nscroll-my-28\tscroll-margin-top: 7rem; /* 112px */\nscroll-margin-bottom: 7rem; /* 112px */\n\nscroll-ms-28\tscroll-margin-inline-start: 7rem; /* 112px */\n\nscroll-me-28\tscroll-margin-inline-end: 7rem; /* 112px */\n\nscroll-mt-28\tscroll-margin-top: 7rem; /* 112px */\n\nscroll-mr-28\tscroll-margin-right: 7rem; /* 112px */\n\nscroll-mb-28\tscroll-margin-bottom: 7rem; /* 112px */\n\nscroll-ml-28\tscroll-margin-left: 7rem; /* 112px */\n\nscroll-m-32\tscroll-margin: 8rem; /* 128px */\n\nscroll-mx-32\tscroll-margin-left: 8rem; /* 128px */\nscroll-margin-right: 8rem; /* 128px */\n\nscroll-my-32\tscroll-margin-top: 8rem; /* 128px */\nscroll-margin-bottom: 8rem; /* 128px */\n\nscroll-ms-32\tscroll-margin-inline-start: 8rem; /* 128px */\n\nscroll-me-32\tscroll-margin-inline-end: 8rem; /* 128px */\n\nscroll-mt-32\tscroll-margin-top: 8rem; /* 128px */\n\nscroll-mr-32\tscroll-margin-right: 8rem; /* 128px */\n\nscroll-mb-32\tscroll-margin-bottom: 8rem; /* 128px */\n\nscroll-ml-32\tscroll-margin-left: 8rem; /* 128px */\n\nscroll-m-36\tscroll-margin: 9rem; /* 144px */\n\nscroll-mx-36\tscroll-margin-left: 9rem; /* 144px */\nscroll-margin-right: 9rem; /* 144px */\n\nscroll-my-36\tscroll-margin-top: 9rem; /* 144px */\nscroll-margin-bottom: 9rem; /* 144px */\n\nscroll-ms-36\tscroll-margin-inline-start: 9rem; /* 144px */\n\nscroll-me-36\tscroll-margin-inline-end: 9rem; /* 144px */\n\nscroll-mt-36\tscroll-margin-top: 9rem; /* 144px */\n\nscroll-mr-36\tscroll-margin-right: 9rem; /* 144px */\n\nscroll-mb-36\tscroll-margin-bottom: 9rem; /* 144px */\n\nscroll-ml-36\tscroll-margin-left: 9rem; /* 144px */\n\nscroll-m-40\tscroll-margin: 10rem; /* 160px */\n\nscroll-mx-40\tscroll-margin-left: 10rem; /* 160px */\nscroll-margin-right: 10rem; /* 160px */\n\nscroll-my-40\tscroll-margin-top: 10rem; /* 160px */\nscroll-margin-bottom: 10rem; /* 160px */\n\nscroll-ms-40\tscroll-margin-inline-start: 10rem; /* 160px */\n\nscroll-me-40\tscroll-margin-inline-end: 10rem; /* 160px */\n\nscroll-mt-40\tscroll-margin-top: 10rem; /* 160px */\n\nscroll-mr-40\tscroll-margin-right: 10rem; /* 160px */\n\nscroll-mb-40\tscroll-margin-bottom: 10rem; /* 160px */\n\nscroll-ml-40\tscroll-margin-left: 10rem; /* 160px */\n\nscroll-m-44\tscroll-margin: 11rem; /* 176px */\n\nscroll-mx-44\tscroll-margin-left: 11rem; /* 176px */\nscroll-margin-right: 11rem; /* 176px */\n\nscroll-my-44\tscroll-margin-top: 11rem; /* 176px */\nscroll-margin-bottom: 11rem; /* 176px */\n\nscroll-ms-44\tscroll-margin-inline-start: 11rem; /* 176px */\n\nscroll-me-44\tscroll-margin-inline-end: 11rem; /* 176px */\n\nscroll-mt-44\tscroll-margin-top: 11rem; /* 176px */\n\nscroll-mr-44\tscroll-margin-right: 11rem; /* 176px */\n\nscroll-mb-44\tscroll-margin-bottom: 11rem; /* 176px */\n\nscroll-ml-44\tscroll-margin-left: 11rem; /* 176px */\n\nscroll-m-48\tscroll-margin: 12rem; /* 192px */\n\nscroll-mx-48\tscroll-margin-left: 12rem; /* 192px */\nscroll-margin-right: 12rem; /* 192px */\n\nscroll-my-48\tscroll-margin-top: 12rem; /* 192px */\nscroll-margin-bottom: 12rem; /* 192px */\n\nscroll-ms-48\tscroll-margin-inline-start: 12rem; /* 192px */\n\nscroll-me-48\tscroll-margin-inline-end: 12rem; /* 192px */\n\nscroll-mt-48\tscroll-margin-top: 12rem; /* 192px */\n\nscroll-mr-48\tscroll-margin-right: 12rem; /* 192px */\n\nscroll-mb-48\tscroll-margin-bottom: 12rem; /* 192px */\n\nscroll-ml-48\tscroll-margin-left: 12rem; /* 192px */\n\nscroll-m-52\tscroll-margin: 13rem; /* 208px */\n\nscroll-mx-52\tscroll-margin-left: 13rem; /* 208px */\nscroll-margin-right: 13rem; /* 208px */\n\nscroll-my-52\tscroll-margin-top: 13rem; /* 208px */\nscroll-margin-bottom: 13rem; /* 208px */\n\nscroll-ms-52\tscroll-margin-inline-start: 13rem; /* 208px */\n\nscroll-me-52\tscroll-margin-inline-end: 13rem; /* 208px */\n\nscroll-mt-52\tscroll-margin-top: 13rem; /* 208px */\n\nscroll-mr-52\tscroll-margin-right: 13rem; /* 208px */\n\nscroll-mb-52\tscroll-margin-bottom: 13rem; /* 208px */\n\nscroll-ml-52\tscroll-margin-left: 13rem; /* 208px */\n\nscroll-m-56\tscroll-margin: 14rem; /* 224px */\n\nscroll-mx-56\tscroll-margin-left: 14rem; /* 224px */\nscroll-margin-right: 14rem; /* 224px */\n\nscroll-my-56\tscroll-margin-top: 14rem; /* 224px */\nscroll-margin-bottom: 14rem; /* 224px */\n\nscroll-ms-56\tscroll-margin-inline-start: 14rem; /* 224px */\n\nscroll-me-56\tscroll-margin-inline-end: 14rem; /* 224px */\n\nscroll-mt-56\tscroll-margin-top: 14rem; /* 224px */\n\nscroll-mr-56\tscroll-margin-right: 14rem; /* 224px */\n\nscroll-mb-56\tscroll-margin-bottom: 14rem; /* 224px */\n\nscroll-ml-56\tscroll-margin-left: 14rem; /* 224px */\n\nscroll-m-60\tscroll-margin: 15rem; /* 240px */\n\nscroll-mx-60\tscroll-margin-left: 15rem; /* 240px */\nscroll-margin-right: 15rem; /* 240px */\n\nscroll-my-60\tscroll-margin-top: 15rem; /* 240px */\nscroll-margin-bottom: 15rem; /* 240px */\n\nscroll-ms-60\tscroll-margin-inline-start: 15rem; /* 240px */\n\nscroll-me-60\tscroll-margin-inline-end: 15rem; /* 240px */\n\nscroll-mt-60\tscroll-margin-top: 15rem; /* 240px */\n\nscroll-mr-60\tscroll-margin-right: 15rem; /* 240px */\n\nscroll-mb-60\tscroll-margin-bottom: 15rem; /* 240px */\n\nscroll-ml-60\tscroll-margin-left: 15rem; /* 240px */\n\nscroll-m-64\tscroll-margin: 16rem; /* 256px */\n\nscroll-mx-64\tscroll-margin-left: 16rem; /* 256px */\nscroll-margin-right: 16rem; /* 256px */\n\nscroll-my-64\tscroll-margin-top: 16rem; /* 256px */\nscroll-margin-bottom: 16rem; /* 256px */\n\nscroll-ms-64\tscroll-margin-inline-start: 16rem; /* 256px */\n\nscroll-me-64\tscroll-margin-inline-end: 16rem; /* 256px */\n\nscroll-mt-64\tscroll-margin-top: 16rem; /* 256px */\n\nscroll-mr-64\tscroll-margin-right: 16rem; /* 256px */\n\nscroll-mb-64\tscroll-margin-bottom: 16rem; /* 256px */\n\nscroll-ml-64\tscroll-margin-left: 16rem; /* 256px */\n\nscroll-m-72\tscroll-margin: 18rem; /* 288px */\n\nscroll-mx-72\tscroll-margin-left: 18rem; /* 288px */\nscroll-margin-right: 18rem; /* 288px */\n\nscroll-my-72\tscroll-margin-top: 18rem; /* 288px */\nscroll-margin-bottom: 18rem; /* 288px */\n\nscroll-ms-72\tscroll-margin-inline-start: 18rem; /* 288px */\n\nscroll-me-72\tscroll-margin-inline-end: 18rem; /* 288px */\n\nscroll-mt-72\tscroll-margin-top: 18rem; /* 288px */\n\nscroll-mr-72\tscroll-margin-right: 18rem; /* 288px */\n\nscroll-mb-72\tscroll-margin-bottom: 18rem; /* 288px */\n\nscroll-ml-72\tscroll-margin-left: 18rem; /* 288px */\n\nscroll-m-80\tscroll-margin: 20rem; /* 320px */\n\nscroll-mx-80\tscroll-margin-left: 20rem; /* 320px */\nscroll-margin-right: 20rem; /* 320px */\n\nscroll-my-80\tscroll-margin-top: 20rem; /* 320px */\nscroll-margin-bottom: 20rem; /* 320px */\n\nscroll-ms-80\tscroll-margin-inline-start: 20rem; /* 320px */\n\nscroll-me-80\tscroll-margin-inline-end: 20rem; /* 320px */\n\nscroll-mt-80\tscroll-margin-top: 20rem; /* 320px */\n\nscroll-mr-80\tscroll-margin-right: 20rem; /* 320px */\n\nscroll-mb-80\tscroll-margin-bottom: 20rem; /* 320px */\n\nscroll-ml-80\tscroll-margin-left: 20rem; /* 320px */\n\nscroll-m-96\tscroll-margin: 24rem; /* 384px */\n\nscroll-mx-96\tscroll-margin-left: 24rem; /* 384px */\nscroll-margin-right: 24rem; /* 384px */\n\nscroll-my-96\tscroll-margin-top: 24rem; /* 384px */\nscroll-margin-bottom: 24rem; /* 384px */\n\nscroll-ms-96\tscroll-margin-inline-start: 24rem; /* 384px */\n\nscroll-me-96\tscroll-margin-inline-end: 24rem; /* 384px */\n\nscroll-mt-96\tscroll-margin-top: 24rem; /* 384px */\n\nscroll-mr-96\tscroll-margin-right: 24rem; /* 384px */\n\nscroll-mb-96\tscroll-margin-bottom: 24rem; /* 384px */\n\nscroll-ml-96\tscroll-margin-left: 24rem; /* 384px */\n\n​\nBasic usage\n​\nSetting the scroll margin\n\nUse the scroll-m{side}-{size} utilities to set the scroll offset around items within a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\n<div class=\"snap-x ...\">\n  <div class=\"scroll-ml-6 snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"scroll-ml-6 snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"scroll-ml-6 snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"scroll-ml-6 snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"scroll-ml-6 snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n​\nUsing negative values\n\nTo use a negative scroll margin value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"-scroll-ml-6 snap-start ...\">\n  <!-- ... -->\n</div>\n​\nUsing logical properties\n\nUse the scroll-ms-* and scroll-me-* utilities to set the scroll-margin-inline-start and scroll-margin-inline-end logical properties, which map to either the left or right side based on the text direction.\n\nScroll in the grid of images to see the expected behaviour\n\nLeft-to-right\n\nRight-to-left\n\n<div dir=\"ltr\">\n  <div class=\"snap-x ...\">\n    <div class=\"scroll-ms-6 snap-start ...\">\n      <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n    </div>\n    <!-- ... -->\n  </div>\n</div>\n\n<div dir=\"rtl\">\n  <div class=\"snap-x ...\">\n    <div class=\"scroll-ms-6 snap-start ...\">\n      <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n    </div>\n    <!-- ... -->\n  </div>\n</div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:scroll-m-0 to only apply the scroll-m-0 utility on hover.\n\n<div class=\"scroll-m-8 hover:scroll-m-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:scroll-m-0 to apply the scroll-m-0 utility at only medium screen sizes and above.\n\n<div class=\"scroll-m-8 md:scroll-m-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s scroll margin scale uses the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '96': '24rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the scroll margin scale by editing theme.scrollMargin or theme.extend.scrollMargin in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      scrollMargin: {\n\n        '96': '24rem',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off scroll-margin value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"scroll-m-[24rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nScroll Behavior\nScroll Padding\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the scroll margin\nUsing negative values\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scroll Behavior - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scroll-behavior",
    "html": "Interactivity\n\nScroll Behavior\n\nUtilities for controlling the scroll behavior of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nscroll-auto\tscroll-behavior: auto;\n\nscroll-smooth\tscroll-behavior: smooth;\n\n​\nBasic usage\n​\nAdding smooth scrolling\n\nUse the scroll-smooth utilities to enable smooth scrolling within an element.\n\n<html class=\"scroll-smooth\">\n  <!-- ... -->\n</html>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:scroll-auto to only apply the scroll-auto utility on focus.\n\n<html class=\"scroll-smooth focus:scroll-auto\">\n  <!-- ... -->\n</html>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:scroll-auto to apply the scroll-auto utility at only medium screen sizes and above.\n\n<html class=\"scroll-smooth md:scroll-auto\">\n  <!-- ... -->\n</html>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nResize\nScroll Margin\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding smooth scrolling\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Resize - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/resize",
    "html": "Interactivity\n\nResize\n\nUtilities for controlling how an element can be resized.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nresize-none\tresize: none;\n\nresize-y\tresize: vertical;\n\nresize-x\tresize: horizontal;\n\nresize\tresize: both;\n\n​\nBasic usage\n​\nResizing in all directions\n\nUse resize to make an element horizontally and vertically resizable.\n\nDrag the textarea handle in the demo to see the expected behaviour\n\n<textarea class=\"resize rounded-md\"></textarea>\n​\nResizing vertically\n\nUse resize-y to make an element vertically resizable.\n\nDrag the textarea handle in the demo to see the expected behaviour\n\n<textarea class=\"resize-y rounded-md\"></textarea>\n​\nResizing horizontally\n\nUse resize-x to make an element horizontally resizable.\n\nDrag the textarea handle in the demo to see the expected behaviour\n\n<textarea class=\"resize-x rounded-md\"></textarea>\n​\nPreventing resizing\n\nUse resize-none to prevent an element from being resizable.\n\nNotice that the textarea handle is gone\n\n<textarea class=\"resize-none rounded-md\"></textarea>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:resize to only apply the resize utility on hover.\n\n<div class=\"resize-none hover:resize\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:resize to apply the resize utility at only medium screen sizes and above.\n\n<div class=\"resize-none md:resize\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nPointer Events\nScroll Behavior\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nResizing in all directions\nResizing vertically\nResizing horizontally\nPreventing resizing\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Cursor - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/cursor",
    "html": "Interactivity\n\nCursor\n\nUtilities for controlling the cursor style when hovering over an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\t\nPreview\n \n\ncursor-auto\tcursor: auto;\n\t\n\ncursor-default\tcursor: default;\n\t\n\ncursor-pointer\tcursor: pointer;\n\t\n\ncursor-wait\tcursor: wait;\n\t\n\ncursor-text\tcursor: text;\n\t\n\ncursor-move\tcursor: move;\n\t\n\ncursor-help\tcursor: help;\n\t\n\ncursor-not-allowed\tcursor: not-allowed;\n\t\n\ncursor-none\tcursor: none;\n\t\ncursor-context-menu\tcursor: context-menu;\n\t\n\ncursor-progress\tcursor: progress;\n\t\n\ncursor-cell\tcursor: cell;\n\t\n\ncursor-crosshair\tcursor: crosshair;\n\t\n\ncursor-vertical-text\tcursor: vertical-text;\n\t\n\ncursor-alias\tcursor: alias;\n\t\n\ncursor-copy\tcursor: copy;\n\t\n\ncursor-no-drop\tcursor: no-drop;\n\t\n\ncursor-grab\tcursor: grab;\n\t\n\ncursor-grabbing\tcursor: grabbing;\n\t\n\ncursor-all-scroll\tcursor: all-scroll;\n\t\n\ncursor-col-resize\tcursor: col-resize;\n\t\n\ncursor-row-resize\tcursor: row-resize;\n\t\n\ncursor-n-resize\tcursor: n-resize;\n\t\n\ncursor-e-resize\tcursor: e-resize;\n\t\n\ncursor-s-resize\tcursor: s-resize;\n\t\n\ncursor-w-resize\tcursor: w-resize;\n\t\n\ncursor-ne-resize\tcursor: ne-resize;\n\t\n\ncursor-nw-resize\tcursor: nw-resize;\n\t\n\ncursor-se-resize\tcursor: se-resize;\n\t\n\ncursor-sw-resize\tcursor: sw-resize;\n\t\n\ncursor-ew-resize\tcursor: ew-resize;\n\t\n\ncursor-ns-resize\tcursor: ns-resize;\n\t\n\ncursor-nesw-resize\tcursor: nesw-resize;\n\t\n\ncursor-nwse-resize\tcursor: nwse-resize;\n\t\n\ncursor-zoom-in\tcursor: zoom-in;\n\t\n\ncursor-zoom-out\tcursor: zoom-out;\n\t\n​\nBasic usage\n​\nSetting the cursor style\n\nUse the cursor-{style} to control which cursor is displayed when hovering over an element.\n\nHover over each button to see the cursor change\n\nSubmit\nSaving...\nConfirm\n<button type=\"button\" class=\"cursor-pointer ...\">\n  Submit\n</button>\n<button type=\"button\" class=\"cursor-progress ...\">\n  Saving...\n</button>\n<button type=\"button\" disabled class=\"cursor-not-allowed ...\">\n  Confirm\n</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:cursor-auto to only apply the cursor-auto utility on focus.\n\n<div class=\"cursor-not-allowed focus:cursor-auto\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:cursor-auto to apply the cursor-auto utility at only medium screen sizes and above.\n\n<div class=\"cursor-not-allowed md:cursor-auto\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes cursor utilities for many built in options. You can customize these values by editing theme.cursor or theme.extend.cursor in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      cursor: {\n\n        'fancy': 'url(hand.cur), pointer',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off cursor value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"cursor-[url(hand.cur),_pointer]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nAppearance\nCaret Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the cursor style\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Caret Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/caret-color",
    "html": "Interactivity\n\nCaret Color\n\nUtilities for controlling the color of the text input cursor.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncaret-inherit\tcaret-color: inherit;\n\ncaret-current\tcaret-color: currentColor;\n\ncaret-transparent\tcaret-color: transparent;\n\ncaret-black\tcaret-color: #000;\n\ncaret-white\tcaret-color: #fff;\n\ncaret-slate-50\tcaret-color: #f8fafc;\n\ncaret-slate-100\tcaret-color: #f1f5f9;\n\ncaret-slate-200\tcaret-color: #e2e8f0;\n\ncaret-slate-300\tcaret-color: #cbd5e1;\n\ncaret-slate-400\tcaret-color: #94a3b8;\n\ncaret-slate-500\tcaret-color: #64748b;\n\ncaret-slate-600\tcaret-color: #475569;\n\ncaret-slate-700\tcaret-color: #334155;\n\ncaret-slate-800\tcaret-color: #1e293b;\n\ncaret-slate-900\tcaret-color: #0f172a;\n\ncaret-slate-950\tcaret-color: #020617;\n\ncaret-gray-50\tcaret-color: #f9fafb;\n\ncaret-gray-100\tcaret-color: #f3f4f6;\n\ncaret-gray-200\tcaret-color: #e5e7eb;\n\ncaret-gray-300\tcaret-color: #d1d5db;\n\ncaret-gray-400\tcaret-color: #9ca3af;\n\ncaret-gray-500\tcaret-color: #6b7280;\n\ncaret-gray-600\tcaret-color: #4b5563;\n\ncaret-gray-700\tcaret-color: #374151;\n\ncaret-gray-800\tcaret-color: #1f2937;\n\ncaret-gray-900\tcaret-color: #111827;\n\ncaret-gray-950\tcaret-color: #030712;\n\ncaret-zinc-50\tcaret-color: #fafafa;\n\ncaret-zinc-100\tcaret-color: #f4f4f5;\n\ncaret-zinc-200\tcaret-color: #e4e4e7;\n\ncaret-zinc-300\tcaret-color: #d4d4d8;\n\ncaret-zinc-400\tcaret-color: #a1a1aa;\n\ncaret-zinc-500\tcaret-color: #71717a;\n\ncaret-zinc-600\tcaret-color: #52525b;\n\ncaret-zinc-700\tcaret-color: #3f3f46;\n\ncaret-zinc-800\tcaret-color: #27272a;\n\ncaret-zinc-900\tcaret-color: #18181b;\n\ncaret-zinc-950\tcaret-color: #09090b;\n\ncaret-neutral-50\tcaret-color: #fafafa;\n\ncaret-neutral-100\tcaret-color: #f5f5f5;\n\ncaret-neutral-200\tcaret-color: #e5e5e5;\n\ncaret-neutral-300\tcaret-color: #d4d4d4;\n\ncaret-neutral-400\tcaret-color: #a3a3a3;\n\ncaret-neutral-500\tcaret-color: #737373;\n\ncaret-neutral-600\tcaret-color: #525252;\n\ncaret-neutral-700\tcaret-color: #404040;\n\ncaret-neutral-800\tcaret-color: #262626;\n\ncaret-neutral-900\tcaret-color: #171717;\n\ncaret-neutral-950\tcaret-color: #0a0a0a;\n\ncaret-stone-50\tcaret-color: #fafaf9;\n\ncaret-stone-100\tcaret-color: #f5f5f4;\n\ncaret-stone-200\tcaret-color: #e7e5e4;\n\ncaret-stone-300\tcaret-color: #d6d3d1;\n\ncaret-stone-400\tcaret-color: #a8a29e;\n\ncaret-stone-500\tcaret-color: #78716c;\n\ncaret-stone-600\tcaret-color: #57534e;\n\ncaret-stone-700\tcaret-color: #44403c;\n\ncaret-stone-800\tcaret-color: #292524;\n\ncaret-stone-900\tcaret-color: #1c1917;\n\ncaret-stone-950\tcaret-color: #0c0a09;\n\ncaret-red-50\tcaret-color: #fef2f2;\n\ncaret-red-100\tcaret-color: #fee2e2;\n\ncaret-red-200\tcaret-color: #fecaca;\n\ncaret-red-300\tcaret-color: #fca5a5;\n\ncaret-red-400\tcaret-color: #f87171;\n\ncaret-red-500\tcaret-color: #ef4444;\n\ncaret-red-600\tcaret-color: #dc2626;\n\ncaret-red-700\tcaret-color: #b91c1c;\n\ncaret-red-800\tcaret-color: #991b1b;\n\ncaret-red-900\tcaret-color: #7f1d1d;\n\ncaret-red-950\tcaret-color: #450a0a;\n\ncaret-orange-50\tcaret-color: #fff7ed;\n\ncaret-orange-100\tcaret-color: #ffedd5;\n\ncaret-orange-200\tcaret-color: #fed7aa;\n\ncaret-orange-300\tcaret-color: #fdba74;\n\ncaret-orange-400\tcaret-color: #fb923c;\n\ncaret-orange-500\tcaret-color: #f97316;\n\ncaret-orange-600\tcaret-color: #ea580c;\n\ncaret-orange-700\tcaret-color: #c2410c;\n\ncaret-orange-800\tcaret-color: #9a3412;\n\ncaret-orange-900\tcaret-color: #7c2d12;\n\ncaret-orange-950\tcaret-color: #431407;\n\ncaret-amber-50\tcaret-color: #fffbeb;\n\ncaret-amber-100\tcaret-color: #fef3c7;\n\ncaret-amber-200\tcaret-color: #fde68a;\n\ncaret-amber-300\tcaret-color: #fcd34d;\n\ncaret-amber-400\tcaret-color: #fbbf24;\n\ncaret-amber-500\tcaret-color: #f59e0b;\n\ncaret-amber-600\tcaret-color: #d97706;\n\ncaret-amber-700\tcaret-color: #b45309;\n\ncaret-amber-800\tcaret-color: #92400e;\n\ncaret-amber-900\tcaret-color: #78350f;\n\ncaret-amber-950\tcaret-color: #451a03;\n\ncaret-yellow-50\tcaret-color: #fefce8;\n\ncaret-yellow-100\tcaret-color: #fef9c3;\n\ncaret-yellow-200\tcaret-color: #fef08a;\n\ncaret-yellow-300\tcaret-color: #fde047;\n\ncaret-yellow-400\tcaret-color: #facc15;\n\ncaret-yellow-500\tcaret-color: #eab308;\n\ncaret-yellow-600\tcaret-color: #ca8a04;\n\ncaret-yellow-700\tcaret-color: #a16207;\n\ncaret-yellow-800\tcaret-color: #854d0e;\n\ncaret-yellow-900\tcaret-color: #713f12;\n\ncaret-yellow-950\tcaret-color: #422006;\n\ncaret-lime-50\tcaret-color: #f7fee7;\n\ncaret-lime-100\tcaret-color: #ecfccb;\n\ncaret-lime-200\tcaret-color: #d9f99d;\n\ncaret-lime-300\tcaret-color: #bef264;\n\ncaret-lime-400\tcaret-color: #a3e635;\n\ncaret-lime-500\tcaret-color: #84cc16;\n\ncaret-lime-600\tcaret-color: #65a30d;\n\ncaret-lime-700\tcaret-color: #4d7c0f;\n\ncaret-lime-800\tcaret-color: #3f6212;\n\ncaret-lime-900\tcaret-color: #365314;\n\ncaret-lime-950\tcaret-color: #1a2e05;\n\ncaret-green-50\tcaret-color: #f0fdf4;\n\ncaret-green-100\tcaret-color: #dcfce7;\n\ncaret-green-200\tcaret-color: #bbf7d0;\n\ncaret-green-300\tcaret-color: #86efac;\n\ncaret-green-400\tcaret-color: #4ade80;\n\ncaret-green-500\tcaret-color: #22c55e;\n\ncaret-green-600\tcaret-color: #16a34a;\n\ncaret-green-700\tcaret-color: #15803d;\n\ncaret-green-800\tcaret-color: #166534;\n\ncaret-green-900\tcaret-color: #14532d;\n\ncaret-green-950\tcaret-color: #052e16;\n\ncaret-emerald-50\tcaret-color: #ecfdf5;\n\ncaret-emerald-100\tcaret-color: #d1fae5;\n\ncaret-emerald-200\tcaret-color: #a7f3d0;\n\ncaret-emerald-300\tcaret-color: #6ee7b7;\n\ncaret-emerald-400\tcaret-color: #34d399;\n\ncaret-emerald-500\tcaret-color: #10b981;\n\ncaret-emerald-600\tcaret-color: #059669;\n\ncaret-emerald-700\tcaret-color: #047857;\n\ncaret-emerald-800\tcaret-color: #065f46;\n\ncaret-emerald-900\tcaret-color: #064e3b;\n\ncaret-emerald-950\tcaret-color: #022c22;\n\ncaret-teal-50\tcaret-color: #f0fdfa;\n\ncaret-teal-100\tcaret-color: #ccfbf1;\n\ncaret-teal-200\tcaret-color: #99f6e4;\n\ncaret-teal-300\tcaret-color: #5eead4;\n\ncaret-teal-400\tcaret-color: #2dd4bf;\n\ncaret-teal-500\tcaret-color: #14b8a6;\n\ncaret-teal-600\tcaret-color: #0d9488;\n\ncaret-teal-700\tcaret-color: #0f766e;\n\ncaret-teal-800\tcaret-color: #115e59;\n\ncaret-teal-900\tcaret-color: #134e4a;\n\ncaret-teal-950\tcaret-color: #042f2e;\n\ncaret-cyan-50\tcaret-color: #ecfeff;\n\ncaret-cyan-100\tcaret-color: #cffafe;\n\ncaret-cyan-200\tcaret-color: #a5f3fc;\n\ncaret-cyan-300\tcaret-color: #67e8f9;\n\ncaret-cyan-400\tcaret-color: #22d3ee;\n\ncaret-cyan-500\tcaret-color: #06b6d4;\n\ncaret-cyan-600\tcaret-color: #0891b2;\n\ncaret-cyan-700\tcaret-color: #0e7490;\n\ncaret-cyan-800\tcaret-color: #155e75;\n\ncaret-cyan-900\tcaret-color: #164e63;\n\ncaret-cyan-950\tcaret-color: #083344;\n\ncaret-sky-50\tcaret-color: #f0f9ff;\n\ncaret-sky-100\tcaret-color: #e0f2fe;\n\ncaret-sky-200\tcaret-color: #bae6fd;\n\ncaret-sky-300\tcaret-color: #7dd3fc;\n\ncaret-sky-400\tcaret-color: #38bdf8;\n\ncaret-sky-500\tcaret-color: #0ea5e9;\n\ncaret-sky-600\tcaret-color: #0284c7;\n\ncaret-sky-700\tcaret-color: #0369a1;\n\ncaret-sky-800\tcaret-color: #075985;\n\ncaret-sky-900\tcaret-color: #0c4a6e;\n\ncaret-sky-950\tcaret-color: #082f49;\n\ncaret-blue-50\tcaret-color: #eff6ff;\n\ncaret-blue-100\tcaret-color: #dbeafe;\n\ncaret-blue-200\tcaret-color: #bfdbfe;\n\ncaret-blue-300\tcaret-color: #93c5fd;\n\ncaret-blue-400\tcaret-color: #60a5fa;\n\ncaret-blue-500\tcaret-color: #3b82f6;\n\ncaret-blue-600\tcaret-color: #2563eb;\n\ncaret-blue-700\tcaret-color: #1d4ed8;\n\ncaret-blue-800\tcaret-color: #1e40af;\n\ncaret-blue-900\tcaret-color: #1e3a8a;\n\ncaret-blue-950\tcaret-color: #172554;\n\ncaret-indigo-50\tcaret-color: #eef2ff;\n\ncaret-indigo-100\tcaret-color: #e0e7ff;\n\ncaret-indigo-200\tcaret-color: #c7d2fe;\n\ncaret-indigo-300\tcaret-color: #a5b4fc;\n\ncaret-indigo-400\tcaret-color: #818cf8;\n\ncaret-indigo-500\tcaret-color: #6366f1;\n\ncaret-indigo-600\tcaret-color: #4f46e5;\n\ncaret-indigo-700\tcaret-color: #4338ca;\n\ncaret-indigo-800\tcaret-color: #3730a3;\n\ncaret-indigo-900\tcaret-color: #312e81;\n\ncaret-indigo-950\tcaret-color: #1e1b4b;\n\ncaret-violet-50\tcaret-color: #f5f3ff;\n\ncaret-violet-100\tcaret-color: #ede9fe;\n\ncaret-violet-200\tcaret-color: #ddd6fe;\n\ncaret-violet-300\tcaret-color: #c4b5fd;\n\ncaret-violet-400\tcaret-color: #a78bfa;\n\ncaret-violet-500\tcaret-color: #8b5cf6;\n\ncaret-violet-600\tcaret-color: #7c3aed;\n\ncaret-violet-700\tcaret-color: #6d28d9;\n\ncaret-violet-800\tcaret-color: #5b21b6;\n\ncaret-violet-900\tcaret-color: #4c1d95;\n\ncaret-violet-950\tcaret-color: #2e1065;\n\ncaret-purple-50\tcaret-color: #faf5ff;\n\ncaret-purple-100\tcaret-color: #f3e8ff;\n\ncaret-purple-200\tcaret-color: #e9d5ff;\n\ncaret-purple-300\tcaret-color: #d8b4fe;\n\ncaret-purple-400\tcaret-color: #c084fc;\n\ncaret-purple-500\tcaret-color: #a855f7;\n\ncaret-purple-600\tcaret-color: #9333ea;\n\ncaret-purple-700\tcaret-color: #7e22ce;\n\ncaret-purple-800\tcaret-color: #6b21a8;\n\ncaret-purple-900\tcaret-color: #581c87;\n\ncaret-purple-950\tcaret-color: #3b0764;\n\ncaret-fuchsia-50\tcaret-color: #fdf4ff;\n\ncaret-fuchsia-100\tcaret-color: #fae8ff;\n\ncaret-fuchsia-200\tcaret-color: #f5d0fe;\n\ncaret-fuchsia-300\tcaret-color: #f0abfc;\n\ncaret-fuchsia-400\tcaret-color: #e879f9;\n\ncaret-fuchsia-500\tcaret-color: #d946ef;\n\ncaret-fuchsia-600\tcaret-color: #c026d3;\n\ncaret-fuchsia-700\tcaret-color: #a21caf;\n\ncaret-fuchsia-800\tcaret-color: #86198f;\n\ncaret-fuchsia-900\tcaret-color: #701a75;\n\ncaret-fuchsia-950\tcaret-color: #4a044e;\n\ncaret-pink-50\tcaret-color: #fdf2f8;\n\ncaret-pink-100\tcaret-color: #fce7f3;\n\ncaret-pink-200\tcaret-color: #fbcfe8;\n\ncaret-pink-300\tcaret-color: #f9a8d4;\n\ncaret-pink-400\tcaret-color: #f472b6;\n\ncaret-pink-500\tcaret-color: #ec4899;\n\ncaret-pink-600\tcaret-color: #db2777;\n\ncaret-pink-700\tcaret-color: #be185d;\n\ncaret-pink-800\tcaret-color: #9d174d;\n\ncaret-pink-900\tcaret-color: #831843;\n\ncaret-pink-950\tcaret-color: #500724;\n\ncaret-rose-50\tcaret-color: #fff1f2;\n\ncaret-rose-100\tcaret-color: #ffe4e6;\n\ncaret-rose-200\tcaret-color: #fecdd3;\n\ncaret-rose-300\tcaret-color: #fda4af;\n\ncaret-rose-400\tcaret-color: #fb7185;\n\ncaret-rose-500\tcaret-color: #f43f5e;\n\ncaret-rose-600\tcaret-color: #e11d48;\n\ncaret-rose-700\tcaret-color: #be123c;\n\ncaret-rose-800\tcaret-color: #9f1239;\n\ncaret-rose-900\tcaret-color: #881337;\n\ncaret-rose-950\tcaret-color: #4c0519;\n\n​\nBasic usage\n​\nSetting the caret color\n\nUse the caret-{color} utilities to change the color of the text input cursor.\n\nFocus the textarea to see the new caret color\n\n<textarea class=\"caret-pink-500 ...\"></textarea>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:caret-indigo-500 to only apply the caret-indigo-500 utility on focus.\n\n<textarea class=\"caret-blue-500 focus:caret-indigo-500\"></textarea>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:caret-indigo-500 to apply the caret-indigo-500 utility at only medium screen sizes and above.\n\n<textarea class=\"caret-blue-500 md:caret-indigo-500\"></textarea>\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as caret colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your caret colors by editing theme.caretColor or theme.extend.caretColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off caret-color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<textarea class=\"caret-[#50d71e]\"></textarea>\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nCursor\nPointer Events\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the caret color\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Pointer Events - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/pointer-events",
    "html": "Interactivity\n\nPointer Events\n\nUtilities for controlling whether an element responds to pointer events.\n\n​\nQuick reference\nClass\n\t\nProperties\n\npointer-events-none\tpointer-events: none;\n\npointer-events-auto\tpointer-events: auto;\n\n​\nBasic usage\n​\nControlling pointer event behavior\n\nUse pointer-events-auto to revert to the default browser behavior for pointer events (like :hover and click).\n\nUse pointer-events-none to make an element ignore pointer events. The pointer events will still trigger on child elements and pass-through to elements that are “beneath” the target.\n\nTry clicking the search icons to see the expected behaviour\n\npointer-events-auto\n\npointer-events-none\n\n<div class=\"relative ...\">\n  <div class=\"absolute pointer-events-auto ...\">\n    <svg class=\"absolute text-slate-400 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n    </svg>\n  </div>\n  <input type=\"text\" placeholder=\"Search\" class=\"...\">\n</div>\n\n<div class=\"relative ...\">\n  <div class=\"absolute pointer-events-none ...\">\n    <svg class=\"absolute text-slate-400 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n    </svg>\n  </div>\n  <input type=\"text\" placeholder=\"Search\" class=\"...\">\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:pointer-events-auto to only apply the pointer-events-auto utility on focus.\n\n<div class=\"pointer-events-none focus:pointer-events-auto\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:pointer-events-auto to apply the pointer-events-auto utility at only medium screen sizes and above.\n\n<div class=\"pointer-events-none md:pointer-events-auto\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nCaret Color\nResize\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling pointer event behavior\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Accent Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/accent-color",
    "html": "Interactivity\n\nAccent Color\n\nUtilities for controlling the accented color of a form control.\n\n​\nQuick reference\nClass\n\t\nProperties\n\naccent-inherit\taccent-color: inherit;\n\naccent-current\taccent-color: currentColor;\n\naccent-transparent\taccent-color: transparent;\n\naccent-black\taccent-color: #000;\n\naccent-white\taccent-color: #fff;\n\naccent-slate-50\taccent-color: #f8fafc;\n\naccent-slate-100\taccent-color: #f1f5f9;\n\naccent-slate-200\taccent-color: #e2e8f0;\n\naccent-slate-300\taccent-color: #cbd5e1;\n\naccent-slate-400\taccent-color: #94a3b8;\n\naccent-slate-500\taccent-color: #64748b;\n\naccent-slate-600\taccent-color: #475569;\n\naccent-slate-700\taccent-color: #334155;\n\naccent-slate-800\taccent-color: #1e293b;\n\naccent-slate-900\taccent-color: #0f172a;\n\naccent-slate-950\taccent-color: #020617;\n\naccent-gray-50\taccent-color: #f9fafb;\n\naccent-gray-100\taccent-color: #f3f4f6;\n\naccent-gray-200\taccent-color: #e5e7eb;\n\naccent-gray-300\taccent-color: #d1d5db;\n\naccent-gray-400\taccent-color: #9ca3af;\n\naccent-gray-500\taccent-color: #6b7280;\n\naccent-gray-600\taccent-color: #4b5563;\n\naccent-gray-700\taccent-color: #374151;\n\naccent-gray-800\taccent-color: #1f2937;\n\naccent-gray-900\taccent-color: #111827;\n\naccent-gray-950\taccent-color: #030712;\n\naccent-zinc-50\taccent-color: #fafafa;\n\naccent-zinc-100\taccent-color: #f4f4f5;\n\naccent-zinc-200\taccent-color: #e4e4e7;\n\naccent-zinc-300\taccent-color: #d4d4d8;\n\naccent-zinc-400\taccent-color: #a1a1aa;\n\naccent-zinc-500\taccent-color: #71717a;\n\naccent-zinc-600\taccent-color: #52525b;\n\naccent-zinc-700\taccent-color: #3f3f46;\n\naccent-zinc-800\taccent-color: #27272a;\n\naccent-zinc-900\taccent-color: #18181b;\n\naccent-zinc-950\taccent-color: #09090b;\n\naccent-neutral-50\taccent-color: #fafafa;\n\naccent-neutral-100\taccent-color: #f5f5f5;\n\naccent-neutral-200\taccent-color: #e5e5e5;\n\naccent-neutral-300\taccent-color: #d4d4d4;\n\naccent-neutral-400\taccent-color: #a3a3a3;\n\naccent-neutral-500\taccent-color: #737373;\n\naccent-neutral-600\taccent-color: #525252;\n\naccent-neutral-700\taccent-color: #404040;\n\naccent-neutral-800\taccent-color: #262626;\n\naccent-neutral-900\taccent-color: #171717;\n\naccent-neutral-950\taccent-color: #0a0a0a;\n\naccent-stone-50\taccent-color: #fafaf9;\n\naccent-stone-100\taccent-color: #f5f5f4;\n\naccent-stone-200\taccent-color: #e7e5e4;\n\naccent-stone-300\taccent-color: #d6d3d1;\n\naccent-stone-400\taccent-color: #a8a29e;\n\naccent-stone-500\taccent-color: #78716c;\n\naccent-stone-600\taccent-color: #57534e;\n\naccent-stone-700\taccent-color: #44403c;\n\naccent-stone-800\taccent-color: #292524;\n\naccent-stone-900\taccent-color: #1c1917;\n\naccent-stone-950\taccent-color: #0c0a09;\n\naccent-red-50\taccent-color: #fef2f2;\n\naccent-red-100\taccent-color: #fee2e2;\n\naccent-red-200\taccent-color: #fecaca;\n\naccent-red-300\taccent-color: #fca5a5;\n\naccent-red-400\taccent-color: #f87171;\n\naccent-red-500\taccent-color: #ef4444;\n\naccent-red-600\taccent-color: #dc2626;\n\naccent-red-700\taccent-color: #b91c1c;\n\naccent-red-800\taccent-color: #991b1b;\n\naccent-red-900\taccent-color: #7f1d1d;\n\naccent-red-950\taccent-color: #450a0a;\n\naccent-orange-50\taccent-color: #fff7ed;\n\naccent-orange-100\taccent-color: #ffedd5;\n\naccent-orange-200\taccent-color: #fed7aa;\n\naccent-orange-300\taccent-color: #fdba74;\n\naccent-orange-400\taccent-color: #fb923c;\n\naccent-orange-500\taccent-color: #f97316;\n\naccent-orange-600\taccent-color: #ea580c;\n\naccent-orange-700\taccent-color: #c2410c;\n\naccent-orange-800\taccent-color: #9a3412;\n\naccent-orange-900\taccent-color: #7c2d12;\n\naccent-orange-950\taccent-color: #431407;\n\naccent-amber-50\taccent-color: #fffbeb;\n\naccent-amber-100\taccent-color: #fef3c7;\n\naccent-amber-200\taccent-color: #fde68a;\n\naccent-amber-300\taccent-color: #fcd34d;\n\naccent-amber-400\taccent-color: #fbbf24;\n\naccent-amber-500\taccent-color: #f59e0b;\n\naccent-amber-600\taccent-color: #d97706;\n\naccent-amber-700\taccent-color: #b45309;\n\naccent-amber-800\taccent-color: #92400e;\n\naccent-amber-900\taccent-color: #78350f;\n\naccent-amber-950\taccent-color: #451a03;\n\naccent-yellow-50\taccent-color: #fefce8;\n\naccent-yellow-100\taccent-color: #fef9c3;\n\naccent-yellow-200\taccent-color: #fef08a;\n\naccent-yellow-300\taccent-color: #fde047;\n\naccent-yellow-400\taccent-color: #facc15;\n\naccent-yellow-500\taccent-color: #eab308;\n\naccent-yellow-600\taccent-color: #ca8a04;\n\naccent-yellow-700\taccent-color: #a16207;\n\naccent-yellow-800\taccent-color: #854d0e;\n\naccent-yellow-900\taccent-color: #713f12;\n\naccent-yellow-950\taccent-color: #422006;\n\naccent-lime-50\taccent-color: #f7fee7;\n\naccent-lime-100\taccent-color: #ecfccb;\n\naccent-lime-200\taccent-color: #d9f99d;\n\naccent-lime-300\taccent-color: #bef264;\n\naccent-lime-400\taccent-color: #a3e635;\n\naccent-lime-500\taccent-color: #84cc16;\n\naccent-lime-600\taccent-color: #65a30d;\n\naccent-lime-700\taccent-color: #4d7c0f;\n\naccent-lime-800\taccent-color: #3f6212;\n\naccent-lime-900\taccent-color: #365314;\n\naccent-lime-950\taccent-color: #1a2e05;\n\naccent-green-50\taccent-color: #f0fdf4;\n\naccent-green-100\taccent-color: #dcfce7;\n\naccent-green-200\taccent-color: #bbf7d0;\n\naccent-green-300\taccent-color: #86efac;\n\naccent-green-400\taccent-color: #4ade80;\n\naccent-green-500\taccent-color: #22c55e;\n\naccent-green-600\taccent-color: #16a34a;\n\naccent-green-700\taccent-color: #15803d;\n\naccent-green-800\taccent-color: #166534;\n\naccent-green-900\taccent-color: #14532d;\n\naccent-green-950\taccent-color: #052e16;\n\naccent-emerald-50\taccent-color: #ecfdf5;\n\naccent-emerald-100\taccent-color: #d1fae5;\n\naccent-emerald-200\taccent-color: #a7f3d0;\n\naccent-emerald-300\taccent-color: #6ee7b7;\n\naccent-emerald-400\taccent-color: #34d399;\n\naccent-emerald-500\taccent-color: #10b981;\n\naccent-emerald-600\taccent-color: #059669;\n\naccent-emerald-700\taccent-color: #047857;\n\naccent-emerald-800\taccent-color: #065f46;\n\naccent-emerald-900\taccent-color: #064e3b;\n\naccent-emerald-950\taccent-color: #022c22;\n\naccent-teal-50\taccent-color: #f0fdfa;\n\naccent-teal-100\taccent-color: #ccfbf1;\n\naccent-teal-200\taccent-color: #99f6e4;\n\naccent-teal-300\taccent-color: #5eead4;\n\naccent-teal-400\taccent-color: #2dd4bf;\n\naccent-teal-500\taccent-color: #14b8a6;\n\naccent-teal-600\taccent-color: #0d9488;\n\naccent-teal-700\taccent-color: #0f766e;\n\naccent-teal-800\taccent-color: #115e59;\n\naccent-teal-900\taccent-color: #134e4a;\n\naccent-teal-950\taccent-color: #042f2e;\n\naccent-cyan-50\taccent-color: #ecfeff;\n\naccent-cyan-100\taccent-color: #cffafe;\n\naccent-cyan-200\taccent-color: #a5f3fc;\n\naccent-cyan-300\taccent-color: #67e8f9;\n\naccent-cyan-400\taccent-color: #22d3ee;\n\naccent-cyan-500\taccent-color: #06b6d4;\n\naccent-cyan-600\taccent-color: #0891b2;\n\naccent-cyan-700\taccent-color: #0e7490;\n\naccent-cyan-800\taccent-color: #155e75;\n\naccent-cyan-900\taccent-color: #164e63;\n\naccent-cyan-950\taccent-color: #083344;\n\naccent-sky-50\taccent-color: #f0f9ff;\n\naccent-sky-100\taccent-color: #e0f2fe;\n\naccent-sky-200\taccent-color: #bae6fd;\n\naccent-sky-300\taccent-color: #7dd3fc;\n\naccent-sky-400\taccent-color: #38bdf8;\n\naccent-sky-500\taccent-color: #0ea5e9;\n\naccent-sky-600\taccent-color: #0284c7;\n\naccent-sky-700\taccent-color: #0369a1;\n\naccent-sky-800\taccent-color: #075985;\n\naccent-sky-900\taccent-color: #0c4a6e;\n\naccent-sky-950\taccent-color: #082f49;\n\naccent-blue-50\taccent-color: #eff6ff;\n\naccent-blue-100\taccent-color: #dbeafe;\n\naccent-blue-200\taccent-color: #bfdbfe;\n\naccent-blue-300\taccent-color: #93c5fd;\n\naccent-blue-400\taccent-color: #60a5fa;\n\naccent-blue-500\taccent-color: #3b82f6;\n\naccent-blue-600\taccent-color: #2563eb;\n\naccent-blue-700\taccent-color: #1d4ed8;\n\naccent-blue-800\taccent-color: #1e40af;\n\naccent-blue-900\taccent-color: #1e3a8a;\n\naccent-blue-950\taccent-color: #172554;\n\naccent-indigo-50\taccent-color: #eef2ff;\n\naccent-indigo-100\taccent-color: #e0e7ff;\n\naccent-indigo-200\taccent-color: #c7d2fe;\n\naccent-indigo-300\taccent-color: #a5b4fc;\n\naccent-indigo-400\taccent-color: #818cf8;\n\naccent-indigo-500\taccent-color: #6366f1;\n\naccent-indigo-600\taccent-color: #4f46e5;\n\naccent-indigo-700\taccent-color: #4338ca;\n\naccent-indigo-800\taccent-color: #3730a3;\n\naccent-indigo-900\taccent-color: #312e81;\n\naccent-indigo-950\taccent-color: #1e1b4b;\n\naccent-violet-50\taccent-color: #f5f3ff;\n\naccent-violet-100\taccent-color: #ede9fe;\n\naccent-violet-200\taccent-color: #ddd6fe;\n\naccent-violet-300\taccent-color: #c4b5fd;\n\naccent-violet-400\taccent-color: #a78bfa;\n\naccent-violet-500\taccent-color: #8b5cf6;\n\naccent-violet-600\taccent-color: #7c3aed;\n\naccent-violet-700\taccent-color: #6d28d9;\n\naccent-violet-800\taccent-color: #5b21b6;\n\naccent-violet-900\taccent-color: #4c1d95;\n\naccent-violet-950\taccent-color: #2e1065;\n\naccent-purple-50\taccent-color: #faf5ff;\n\naccent-purple-100\taccent-color: #f3e8ff;\n\naccent-purple-200\taccent-color: #e9d5ff;\n\naccent-purple-300\taccent-color: #d8b4fe;\n\naccent-purple-400\taccent-color: #c084fc;\n\naccent-purple-500\taccent-color: #a855f7;\n\naccent-purple-600\taccent-color: #9333ea;\n\naccent-purple-700\taccent-color: #7e22ce;\n\naccent-purple-800\taccent-color: #6b21a8;\n\naccent-purple-900\taccent-color: #581c87;\n\naccent-purple-950\taccent-color: #3b0764;\n\naccent-fuchsia-50\taccent-color: #fdf4ff;\n\naccent-fuchsia-100\taccent-color: #fae8ff;\n\naccent-fuchsia-200\taccent-color: #f5d0fe;\n\naccent-fuchsia-300\taccent-color: #f0abfc;\n\naccent-fuchsia-400\taccent-color: #e879f9;\n\naccent-fuchsia-500\taccent-color: #d946ef;\n\naccent-fuchsia-600\taccent-color: #c026d3;\n\naccent-fuchsia-700\taccent-color: #a21caf;\n\naccent-fuchsia-800\taccent-color: #86198f;\n\naccent-fuchsia-900\taccent-color: #701a75;\n\naccent-fuchsia-950\taccent-color: #4a044e;\n\naccent-pink-50\taccent-color: #fdf2f8;\n\naccent-pink-100\taccent-color: #fce7f3;\n\naccent-pink-200\taccent-color: #fbcfe8;\n\naccent-pink-300\taccent-color: #f9a8d4;\n\naccent-pink-400\taccent-color: #f472b6;\n\naccent-pink-500\taccent-color: #ec4899;\n\naccent-pink-600\taccent-color: #db2777;\n\naccent-pink-700\taccent-color: #be185d;\n\naccent-pink-800\taccent-color: #9d174d;\n\naccent-pink-900\taccent-color: #831843;\n\naccent-pink-950\taccent-color: #500724;\n\naccent-rose-50\taccent-color: #fff1f2;\n\naccent-rose-100\taccent-color: #ffe4e6;\n\naccent-rose-200\taccent-color: #fecdd3;\n\naccent-rose-300\taccent-color: #fda4af;\n\naccent-rose-400\taccent-color: #fb7185;\n\naccent-rose-500\taccent-color: #f43f5e;\n\naccent-rose-600\taccent-color: #e11d48;\n\naccent-rose-700\taccent-color: #be123c;\n\naccent-rose-800\taccent-color: #9f1239;\n\naccent-rose-900\taccent-color: #881337;\n\naccent-rose-950\taccent-color: #4c0519;\n\naccent-auto\taccent-color: auto;\n\n​\nBasic usage\n​\nSetting the accent color\n\nUse the accent-{color} utilities to change the accent color of an element. This is helpful for styling elements like checkboxes and radio groups by overriding the browser’s default color.\n\nBrowser default\nCustomized\n<label>\n  <input type=\"checkbox\" checked> Browser default\n</label>\n<label>\n  <input type=\"checkbox\" class=\"accent-pink-500\" checked> Customized\n</label>\n​\nChanging the opacity\n\nWhile it’s possible to control the opacity of the accent color using the color opacity modifier, the rgba() alpha value is only supported in Firefox at this time (last tested November 2021).\n\n<input type=\"checkbox\" class=\"accent-emerald-500/25\" checked> Emerald\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:accent-pink-500 to only apply the accent-pink-500 utility on hover.\n\n<input type=\"checkbox\" class=\"accent-pink-300 focus:accent-pink-500\" checked>\n\nNote, while it’s possible to set an accent color using the hover and active modifiers, the resulting color will be slightly different than what you set, as browsers automatically adjust the brightness of the accent color for these two states.\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:accent-pink-500 to apply the accent-pink-500 utility at only medium screen sizes and above.\n\n<input type=\"checkbox\" class=\"accent-pink-300 md:accent-pink-500\" checked>\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as accent colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your accent colors by editing theme.accentColor or theme.extend.accentColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off accent-color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<input type=\"checkbox\" class=\"accent-[#50d71e]\" checked>\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nTransform Origin\nAppearance\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the accent color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Appearance - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/appearance",
    "html": "Interactivity\n\nAppearance\n\nUtilities for suppressing native form control styling.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nappearance-none\tappearance: none;\n\n​\nBasic usage\n​\nRemoving default element appearance\n\nUse appearance-none to reset any browser specific styling on an element. This utility is often used when creating custom form components.\n\nYes\nNo\nMaybe\nDefault browser styles applied\nYes\nNo\nMaybe\nDefault styles removed\n<select>\n  <option>Yes</option>\n  <option>No</option>\n  <option>Maybe</option>\n</select>\n\n<select class=\"appearance-none\">\n  <option>Yes</option>\n  <option>No</option>\n  <option>Maybe</option>\n</select>\nAccent Color\nCursor\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRemoving default element appearance\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Transform Origin - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/transform-origin",
    "html": "Transforms\n\nTransform Origin\n\nUtilities for specifying the origin for an element's transformations.\n\n​\nQuick reference\nClass\n\t\nProperties\n\norigin-center\ttransform-origin: center;\n\norigin-top\ttransform-origin: top;\n\norigin-top-right\ttransform-origin: top right;\n\norigin-right\ttransform-origin: right;\n\norigin-bottom-right\ttransform-origin: bottom right;\n\norigin-bottom\ttransform-origin: bottom;\n\norigin-bottom-left\ttransform-origin: bottom left;\n\norigin-left\ttransform-origin: left;\n\norigin-top-left\ttransform-origin: top left;\n\n​\nBasic usage\n​\nChanging the transform origin\n\nSpecify an element’s transform origin using the origin-{keyword} utilities.\n\norigin-center\n\norigin-top-left\n\norigin-bottom\n\n<img class=\"origin-center rotate-45 ...\">\n<img class=\"origin-top-left rotate-12 ...\">\n<img class=\"origin-bottom -rotate-12 ...\">\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:origin-top to only apply the origin-top utility on hover.\n\n<div class=\"origin-center hover:origin-top\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:origin-top to apply the origin-top utility at only medium screen sizes and above.\n\n<div class=\"origin-center md:origin-top\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides transform-origin utilities for all of the built-in browser keyword options. You can customize these values by editing theme.transformOrigin or theme.extend.transformOrigin in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      transformOrigin: {\n\n        'top-left-1/3-3/4': '33% 75%',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off transform-origin value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"origin-[33%_75%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nSkew\nAccent Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging the transform origin\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Animation - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/animation",
    "html": "Transitions & Animation\n\nAnimation\n\nUtilities for animating elements with CSS animations.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nanimate-none\tanimation: none;\nanimate-spin\tanimation: spin 1s linear infinite;\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\nanimate-ping\tanimation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;\n\n@keyframes ping {\n  75%, 100% {\n    transform: scale(2);\n    opacity: 0;\n  }\n}\nanimate-pulse\tanimation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: .5;\n  }\n}\nanimate-bounce\tanimation: bounce 1s infinite;\n\n@keyframes bounce {\n  0%, 100% {\n    transform: translateY(-25%);\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\n  }\n  50% {\n    transform: translateY(0);\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  }\n}\n​\nBasic usage\n​\nSpin\n\nAdd the animate-spin utility to add a linear spin animation to elements like loading indicators.\n\nProcessing...\n<button type=\"button\" class=\"bg-indigo-500 ...\" disabled>\n  <svg class=\"animate-spin h-5 w-5 mr-3 ...\" viewBox=\"0 0 24 24\">\n    <!-- ... -->\n  </svg>\n  Processing...\n</button>\n​\nPing\n\nAdd the animate-ping utility to make an element scale and fade like a radar ping or ripple of water — useful for things like notification badges.\n\nTransactions\n<span class=\"relative flex h-3 w-3\">\n  <span class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-sky-400 opacity-75\"></span>\n  <span class=\"relative inline-flex rounded-full h-3 w-3 bg-sky-500\"></span>\n</span>\n​\nPulse\n\nAdd the animate-pulse utility to make an element gently fade in and out — useful for things like skeleton loaders.\n\n<div class=\"border border-blue-300 shadow rounded-md p-4 max-w-sm w-full mx-auto\">\n  <div class=\"animate-pulse flex space-x-4\">\n    <div class=\"rounded-full bg-slate-700 h-10 w-10\"></div>\n    <div class=\"flex-1 space-y-6 py-1\">\n      <div class=\"h-2 bg-slate-700 rounded\"></div>\n      <div class=\"space-y-3\">\n        <div class=\"grid grid-cols-3 gap-4\">\n          <div class=\"h-2 bg-slate-700 rounded col-span-2\"></div>\n          <div class=\"h-2 bg-slate-700 rounded col-span-1\"></div>\n        </div>\n        <div class=\"h-2 bg-slate-700 rounded\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n​\nBounce\n\nAdd the animate-bounce utility to make an element bounce up and down — useful for things like “scroll down” indicators.\n\n<svg class=\"animate-bounce w-6 h-6 ...\">\n  <!-- ... -->\n</svg>\n​\nPrefers-reduced-motion\n\nFor situations where the user has specified that they prefer reduced motion, you can conditionally apply animations and transitions using the motion-safe and motion-reduce variants:\n\n<button type=\"button\" class=\"bg-indigo-600 ...\" disabled>\n  <svg class=\"motion-safe:animate-spin h-5 w-5 mr-3 ...\" viewBox=\"0 0 24 24\">\n    <!-- ... -->\n  </svg>\n  Processing\n</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:animate-spin to only apply the animate-spin utility on hover.\n\n<div class=\"hover:animate-spin\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:animate-spin to apply the animate-spin utility at only medium screen sizes and above.\n\n<div class=\"md:animate-spin\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nAnimations by their very nature tend to be highly project-specific. The animations we include by default are best thought of as helpful examples, and you’re encouraged to customize your animations to better suit your needs.\n\nBy default, Tailwind provides utilities for four different example animations, as well as the animate-none utility. You can customize these values by editing theme.animation or theme.extend.animation in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      animation: {\n\n        'spin-slow': 'spin 3s linear infinite',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nTo add new animation @keyframes, use the keyframes section of your theme configuration:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      keyframes: {\n\n        wiggle: {\n\n          '0%, 100%': { transform: 'rotate(-3deg)' },\n\n          '50%': { transform: 'rotate(3deg)' },\n\n        }\n\n      }\n\n    }\n\n  }\n\n}\n\n\nYou can then reference these keyframes by name in the animation section of your theme configuration:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      animation: {\n\n        wiggle: 'wiggle 1s ease-in-out infinite',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off animation value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"animate-[wiggle_1s_ease-in-out_infinite]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nTransition Delay\nScale\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSpin\nPing\nPulse\nBounce\nPrefers-reduced-motion\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Translate - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/translate",
    "html": "Transforms\n\nTranslate\n\nUtilities for translating elements with transform.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntranslate-x-0\ttransform: translateX(0px);\n\ntranslate-y-0\ttransform: translateY(0px);\n\ntranslate-x-px\ttransform: translateX(1px);\n\ntranslate-y-px\ttransform: translateY(1px);\n\ntranslate-x-0.5\ttransform: translateX(0.125rem);\n\ntranslate-y-0.5\ttransform: translateY(0.125rem);\n\ntranslate-x-1\ttransform: translateX(0.25rem);\n\ntranslate-y-1\ttransform: translateY(0.25rem);\n\ntranslate-x-1.5\ttransform: translateX(0.375rem);\n\ntranslate-y-1.5\ttransform: translateY(0.375rem);\n\ntranslate-x-2\ttransform: translateX(0.5rem);\n\ntranslate-y-2\ttransform: translateY(0.5rem);\n\ntranslate-x-2.5\ttransform: translateX(0.625rem);\n\ntranslate-y-2.5\ttransform: translateY(0.625rem);\n\ntranslate-x-3\ttransform: translateX(0.75rem);\n\ntranslate-y-3\ttransform: translateY(0.75rem);\n\ntranslate-x-3.5\ttransform: translateX(0.875rem);\n\ntranslate-y-3.5\ttransform: translateY(0.875rem);\n\ntranslate-x-4\ttransform: translateX(1rem);\n\ntranslate-y-4\ttransform: translateY(1rem);\n\ntranslate-x-5\ttransform: translateX(1.25rem);\n\ntranslate-y-5\ttransform: translateY(1.25rem);\n\ntranslate-x-6\ttransform: translateX(1.5rem);\n\ntranslate-y-6\ttransform: translateY(1.5rem);\n\ntranslate-x-7\ttransform: translateX(1.75rem);\n\ntranslate-y-7\ttransform: translateY(1.75rem);\n\ntranslate-x-8\ttransform: translateX(2rem);\n\ntranslate-y-8\ttransform: translateY(2rem);\n\ntranslate-x-9\ttransform: translateX(2.25rem);\n\ntranslate-y-9\ttransform: translateY(2.25rem);\n\ntranslate-x-10\ttransform: translateX(2.5rem);\n\ntranslate-y-10\ttransform: translateY(2.5rem);\n\ntranslate-x-11\ttransform: translateX(2.75rem);\n\ntranslate-y-11\ttransform: translateY(2.75rem);\n\ntranslate-x-12\ttransform: translateX(3rem);\n\ntranslate-y-12\ttransform: translateY(3rem);\n\ntranslate-x-14\ttransform: translateX(3.5rem);\n\ntranslate-y-14\ttransform: translateY(3.5rem);\n\ntranslate-x-16\ttransform: translateX(4rem);\n\ntranslate-y-16\ttransform: translateY(4rem);\n\ntranslate-x-20\ttransform: translateX(5rem);\n\ntranslate-y-20\ttransform: translateY(5rem);\n\ntranslate-x-24\ttransform: translateX(6rem);\n\ntranslate-y-24\ttransform: translateY(6rem);\n\ntranslate-x-28\ttransform: translateX(7rem);\n\ntranslate-y-28\ttransform: translateY(7rem);\n\ntranslate-x-32\ttransform: translateX(8rem);\n\ntranslate-y-32\ttransform: translateY(8rem);\n\ntranslate-x-36\ttransform: translateX(9rem);\n\ntranslate-y-36\ttransform: translateY(9rem);\n\ntranslate-x-40\ttransform: translateX(10rem);\n\ntranslate-y-40\ttransform: translateY(10rem);\n\ntranslate-x-44\ttransform: translateX(11rem);\n\ntranslate-y-44\ttransform: translateY(11rem);\n\ntranslate-x-48\ttransform: translateX(12rem);\n\ntranslate-y-48\ttransform: translateY(12rem);\n\ntranslate-x-52\ttransform: translateX(13rem);\n\ntranslate-y-52\ttransform: translateY(13rem);\n\ntranslate-x-56\ttransform: translateX(14rem);\n\ntranslate-y-56\ttransform: translateY(14rem);\n\ntranslate-x-60\ttransform: translateX(15rem);\n\ntranslate-y-60\ttransform: translateY(15rem);\n\ntranslate-x-64\ttransform: translateX(16rem);\n\ntranslate-y-64\ttransform: translateY(16rem);\n\ntranslate-x-72\ttransform: translateX(18rem);\n\ntranslate-y-72\ttransform: translateY(18rem);\n\ntranslate-x-80\ttransform: translateX(20rem);\n\ntranslate-y-80\ttransform: translateY(20rem);\n\ntranslate-x-96\ttransform: translateX(24rem);\n\ntranslate-y-96\ttransform: translateY(24rem);\n\ntranslate-x-1/2\ttransform: translateX(50%);\n\ntranslate-x-1/3\ttransform: translateX(33.333333%);\n\ntranslate-x-2/3\ttransform: translateX(66.666667%);\n\ntranslate-x-1/4\ttransform: translateX(25%);\n\ntranslate-x-2/4\ttransform: translateX(50%);\n\ntranslate-x-3/4\ttransform: translateX(75%);\n\ntranslate-x-full\ttransform: translateX(100%);\n\ntranslate-y-1/2\ttransform: translateY(50%);\n\ntranslate-y-1/3\ttransform: translateY(33.333333%);\n\ntranslate-y-2/3\ttransform: translateY(66.666667%);\n\ntranslate-y-1/4\ttransform: translateY(25%);\n\ntranslate-y-2/4\ttransform: translateY(50%);\n\ntranslate-y-3/4\ttransform: translateY(75%);\n\ntranslate-y-full\ttransform: translateY(100%);\n\n​\nBasic usage\n​\nTranslating an element\n\nUse the translate-x-{amount} and translate-y-{amount} utilities to translate an element.\n\ntranslate-y-6\n\n-translate-y-6\n\ntranslate-x-6\n\n<img class=\"translate-y-6 ...\">\n<img class=\"-translate-y-6 ...\">\n<img class=\"translate-x-6 ...\">\n​\nUsing negative values\n\nTo use a negative translate value, prefix the class name with a dash to convert it to a negative value.\n\n<img class=\"-translate-y-6 ...\">\n​\nRemoving transforms\n\nTo remove all of the transforms on an element at once, use the transform-none utility:\n\n<div class=\"scale-75 translate-x-4 skew-y-3 md:transform-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove transforms conditionally, such as on hover or at a particular breakpoint.\n\n​\nHardware acceleration\n\nIf your transition performs better when rendered by the GPU instead of the CPU, you can force hardware acceleration by adding the transform-gpu utility:\n\n<div class=\"translate-y-6 transform-gpu\">\n  <!-- ... -->\n</div>\n\n\nUse transform-cpu to force things back to the CPU if you need to undo this conditionally.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:translate-y-12 to only apply the translate-y-12 utility on hover.\n\n<div class=\"hover:translate-y-12\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:translate-y-12 to apply the translate-y-12 utility at only medium screen sizes and above.\n\n<div class=\"md:translate-y-12\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides fixed value translate utilities that match the default spacing scale, as well as 50% and 100% variations for translating relative to the element’s size. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '4.25': '17rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the translate scale by editing theme.translate or theme.extend.translate in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      translate: {\n\n        '4.25': '17rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off translate value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"translate-y-[17rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nRotate\nSkew\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nTranslating an element\nUsing negative values\nRemoving transforms\nHardware acceleration\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Rotate - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/rotate",
    "html": "Transforms\n\nRotate\n\nUtilities for rotating elements with transform.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nrotate-0\ttransform: rotate(0deg);\n\nrotate-1\ttransform: rotate(1deg);\n\nrotate-2\ttransform: rotate(2deg);\n\nrotate-3\ttransform: rotate(3deg);\n\nrotate-6\ttransform: rotate(6deg);\n\nrotate-12\ttransform: rotate(12deg);\n\nrotate-45\ttransform: rotate(45deg);\n\nrotate-90\ttransform: rotate(90deg);\n\nrotate-180\ttransform: rotate(180deg);\n\n​\nBasic usage\n​\nRotating an element\n\nUse the rotate-{angle} utilities to rotate an element.\n\nrotate-0\n\nrotate-45\n\nrotate-90\n\nrotate-180\n\n<img class=\"rotate-0 ...\">\n<img class=\"rotate-45 ...\">\n<img class=\"rotate-90 ...\">\n<img class=\"rotate-180 ...\">\n​\nUsing negative values\n\nTo use a negative rotate value, prefix the class name with a dash to convert it to a negative value.\n\n<img class=\"-rotate-45 ...\">\n​\nRemoving transforms\n\nTo remove all of the transforms on an element at once, use the transform-none utility:\n\n<div class=\"scale-75 translate-x-4 skew-y-3 md:transform-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove transforms conditionally, such as on hover or at a particular breakpoint.\n\n​\nHardware acceleration\n\nIf your transition performs better when rendered by the GPU instead of the CPU, you can force hardware acceleration by adding the transform-gpu utility:\n\n<div class=\"rotate-45 transform-gpu\">\n  <!-- ... -->\n</div>\n\n\nUse transform-cpu to force things back to the CPU if you need to undo this conditionally.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:rotate-45 to only apply the rotate-45 utility on hover.\n\n<div class=\"hover:rotate-45\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:rotate-45 to apply the rotate-45 utility at only medium screen sizes and above.\n\n<div class=\"md:rotate-45\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose rotate utilities. You can customize these values by editing theme.rotate or theme.extend.rotate in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      rotate: {\n\n        '17': '17deg',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off rotate value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"rotate-[17deg]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nScale\nTranslate\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRotating an element\nUsing negative values\nRemoving transforms\nHardware acceleration\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Skew - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/skew",
    "html": "Transforms\n\nSkew\n\nUtilities for skewing elements with transform.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nskew-x-0\ttransform: skewX(0deg);\n\nskew-y-0\ttransform: skewY(0deg);\n\nskew-x-1\ttransform: skewX(1deg);\n\nskew-y-1\ttransform: skewY(1deg);\n\nskew-x-2\ttransform: skewX(2deg);\n\nskew-y-2\ttransform: skewY(2deg);\n\nskew-x-3\ttransform: skewX(3deg);\n\nskew-y-3\ttransform: skewY(3deg);\n\nskew-x-6\ttransform: skewX(6deg);\n\nskew-y-6\ttransform: skewY(6deg);\n\nskew-x-12\ttransform: skewX(12deg);\n\nskew-y-12\ttransform: skewY(12deg);\n\n​\nBasic usage\n​\nSkewing an element\n\nUse the skew-x-{amount} and skew-y-{amount} utilities to skew an element.\n\nskew-y-0\n\nskew-y-3\n\nskew-y-6\n\nskew-y-12\n\n<img class=\"skew-y-0 ...\">\n<img class=\"skew-y-3 ...\">\n<img class=\"skew-y-6 ...\">\n<img class=\"skew-y-12 ...\">\n​\nUsing negative values\n\nTo use a negative skew value, prefix the class name with a dash to convert it to a negative value.\n\n<img class=\"-skew-y-6 ...\">\n​\nRemoving transforms\n\nTo remove all of the transforms on an element at once, use the transform-none utility:\n\n<div class=\"scale-75 translate-x-4 skew-y-3 md:transform-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove transforms conditionally, such as on hover or at a particular breakpoint.\n\n​\nHardware acceleration\n\nIf your transition performs better when rendered by the GPU instead of the CPU, you can force hardware acceleration by adding the transform-gpu utility:\n\n<div class=\"skew-y-6 transform-gpu\">\n  <!-- ... -->\n</div>\n\n\nUse transform-cpu to force things back to the CPU if you need to undo this conditionally.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:skew-y-12 to only apply the skew-y-12 utility on hover.\n\n<div class=\"hover:skew-y-12\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:skew-y-12 to apply the skew-y-12 utility at only medium screen sizes and above.\n\n<div class=\"md:skew-y-12\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose skew utilities. You can customize these values by editing theme.skew or theme.extend.skew in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      skew: {\n\n        '17': '17deg',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off skew value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"skew-y-[17deg]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nTranslate\nTransform Origin\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSkewing an element\nUsing negative values\nRemoving transforms\nHardware acceleration\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Scale - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/scale",
    "html": "Transforms\n\nScale\n\nUtilities for scaling elements with transform.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nscale-0\ttransform: scale(0);\n\nscale-x-0\ttransform: scaleX(0);\n\nscale-y-0\ttransform: scaleY(0);\n\nscale-50\ttransform: scale(.5);\n\nscale-x-50\ttransform: scaleX(.5);\n\nscale-y-50\ttransform: scaleY(.5);\n\nscale-75\ttransform: scale(.75);\n\nscale-x-75\ttransform: scaleX(.75);\n\nscale-y-75\ttransform: scaleY(.75);\n\nscale-90\ttransform: scale(.9);\n\nscale-x-90\ttransform: scaleX(.9);\n\nscale-y-90\ttransform: scaleY(.9);\n\nscale-95\ttransform: scale(.95);\n\nscale-x-95\ttransform: scaleX(.95);\n\nscale-y-95\ttransform: scaleY(.95);\n\nscale-100\ttransform: scale(1);\n\nscale-x-100\ttransform: scaleX(1);\n\nscale-y-100\ttransform: scaleY(1);\n\nscale-105\ttransform: scale(1.05);\n\nscale-x-105\ttransform: scaleX(1.05);\n\nscale-y-105\ttransform: scaleY(1.05);\n\nscale-110\ttransform: scale(1.1);\n\nscale-x-110\ttransform: scaleX(1.1);\n\nscale-y-110\ttransform: scaleY(1.1);\n\nscale-125\ttransform: scale(1.25);\n\nscale-x-125\ttransform: scaleX(1.25);\n\nscale-y-125\ttransform: scaleY(1.25);\n\nscale-150\ttransform: scale(1.5);\n\nscale-x-150\ttransform: scaleX(1.5);\n\nscale-y-150\ttransform: scaleY(1.5);\n\n​\nBasic usage\n​\nScaling an element\n\nUse the scale-{percentage}, scale-x-{percentage}, and scale-y-{percentage} utilities to scale an element.\n\nscale-75\n\nscale-100\n\nscale-125\n\n<img class=\"scale-75 ...\">\n<img class=\"scale-100 ...\">\n<img class=\"scale-125 ...\">\n​\nUsing negative values\n\nTo use a negative scale value, prefix the class name with a dash to convert it to a negative value.\n\n<img class=\"-scale-50\">\n​\nRemoving transforms\n\nTo remove all of the transforms on an element at once, use the transform-none utility:\n\n<div class=\"scale-75 translate-x-4 skew-y-3 md:transform-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove transforms conditionally, such as on hover or at a particular breakpoint.\n\n​\nHardware acceleration\n\nIf your transition performs better when rendered by the GPU instead of the CPU, you can force hardware acceleration by adding the transform-gpu utility:\n\n<div class=\"scale-150 transform-gpu\">\n  <!-- ... -->\n</div>\n\n\nUse transform-cpu to force things back to the CPU if you need to undo this conditionally.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:scale-125 to only apply the scale-125 utility on hover.\n\n<div class=\"hover:scale-125\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:scale-125 to apply the scale-125 utility at only medium screen sizes and above.\n\n<div class=\"md:scale-125\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose scale utilities. You can customize these values by editing theme.scale or theme.extend.scale in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      scale: {\n\n        '175': '1.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off scale value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"scale-[1.7]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nAnimation\nRotate\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nScaling an element\nUsing negative values\nRemoving transforms\nHardware acceleration\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Transition Delay - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/transition-delay",
    "html": "Transitions & Animation\n\nTransition Delay\n\nUtilities for controlling the delay of CSS transitions.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndelay-0\ttransition-delay: 0s;\n\ndelay-75\ttransition-delay: 75ms;\n\ndelay-100\ttransition-delay: 100ms;\n\ndelay-150\ttransition-delay: 150ms;\n\ndelay-200\ttransition-delay: 200ms;\n\ndelay-300\ttransition-delay: 300ms;\n\ndelay-500\ttransition-delay: 500ms;\n\ndelay-700\ttransition-delay: 700ms;\n\ndelay-1000\ttransition-delay: 1000ms;\n\n​\nBasic usage\n​\nDelaying transitions\n\nUse the delay-{amount} utilities to control an element’s transition-delay.\n\nHover each button to see the expected behaviour\n\ndelay-150\n\nButton A\n\ndelay-300\n\nButton B\n\ndelay-700\n\nButton C\n<button class=\"transition delay-150 duration-300 ease-in-out ...\">Button A</button>\n<button class=\"transition delay-300 duration-300 ease-in-out ...\">Button B</button>\n<button class=\"transition delay-700 duration-300 ease-in-out ...\">Button C</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:delay-300 to only apply the delay-300 utility on hover.\n\n<div class=\"transition duration-300 delay-150 hover:delay-300\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:delay-300 to apply the delay-300 utility at only medium screen sizes and above.\n\n<div class=\"transition duration-300 delay-150 md:delay-300\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides eight general purpose transition-delay utilities. You can customize these values by editing theme.transitionDelay or theme.extend.transitionDelay in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      transitionDelay: {\n\n        '2000': '2000ms',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off transition-delay value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"delay-[2000ms]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nTransition Timing Function\nAnimation\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nDelaying transitions\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Transition Timing Function - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/transition-timing-function",
    "html": "Transitions & Animation\n\nTransition Timing Function\n\nUtilities for controlling the easing of CSS transitions.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nease-linear\ttransition-timing-function: linear;\n\nease-in\ttransition-timing-function: cubic-bezier(0.4, 0, 1, 1);\n\nease-out\ttransition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n\nease-in-out\ttransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n​\nBasic usage\n​\nControlling the easing curve\n\nUse the ease-{timing} utilities to control an element’s easing curve.\n\nHover each button to see the expected behaviour\n\nease-in\n\nButton A\n\nease-out\n\nButton B\n\nease-in-out\n\nButton C\n<button class=\"ease-in duration-300 ...\">Button A</button>\n<button class=\"ease-out duration-300 ...\">Button B</button>\n<button class=\"ease-in-out duration-300 ...\">Button C</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:ease-in to only apply the ease-in utility on hover.\n\n<div class=\"transition duration-150 ease-out hover:ease-in\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:ease-in to apply the ease-in utility at only medium screen sizes and above.\n\n<div class=\"transition duration-150 ease-out md:ease-in\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides four general purpose transition-timing-function utilities. You can customize these values by editing theme.transitionTimingFunction or theme.extend.transitionTimingFunction in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      transitionTimingFunction: {\n\n        'in-expo': 'cubic-bezier(0.95, 0.05, 0.795, 0.035)',\n\n        'out-expo': 'cubic-bezier(0.19, 1, 0.22, 1)',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off transition-timing-function value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"ease-[cubic-bezier(0.95,0.05,0.795,0.035)]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nTransition Duration\nTransition Delay\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling the easing curve\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Transition Duration - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/transition-duration",
    "html": "Transitions & Animation\n\nTransition Duration\n\nUtilities for controlling the duration of CSS transitions.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nduration-0\ttransition-duration: 0s;\n\nduration-75\ttransition-duration: 75ms;\n\nduration-100\ttransition-duration: 100ms;\n\nduration-150\ttransition-duration: 150ms;\n\nduration-200\ttransition-duration: 200ms;\n\nduration-300\ttransition-duration: 300ms;\n\nduration-500\ttransition-duration: 500ms;\n\nduration-700\ttransition-duration: 700ms;\n\nduration-1000\ttransition-duration: 1000ms;\n\n​\nBasic usage\n​\nChanging transition duration\n\nUse the duration-{amount} utilities to control an element’s transition-duration.\n\nHover each button to see the expected behaviour\n\nduration-150\n\nButton A\n\nduration-300\n\nButton B\n\nduration-700\n\nButton C\n<button class=\"transition duration-150 ease-in-out ...\">Button A</button>\n<button class=\"transition duration-300 ease-in-out ...\">Button B</button>\n<button class=\"transition duration-700 ease-in-out ...\">Button C</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:duration-150 to only apply the duration-150 utility on hover.\n\n<div class=\"transition duration-0 hover:duration-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:duration-150 to apply the duration-150 utility at only medium screen sizes and above.\n\n<div class=\"transition duration-0 md:duration-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides eight general purpose transition-duration utilities. You can customize these values by editing theme.transitionDuration or theme.extend.transitionDuration in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      transitionDuration: {\n\n        '2000': '2000ms',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off transition-duration value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"duration-[2000ms]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nTransition Property\nTransition Timing Function\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging transition duration\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Transition Property - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/transition-property",
    "html": "Transitions & Animation\n\nTransition Property\n\nUtilities for controlling which CSS properties transition.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntransition-none\ttransition-property: none;\n\ntransition-all\ttransition-property: all;\ntransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\ntransition-duration: 150ms;\n\ntransition\ttransition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\ntransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\ntransition-duration: 150ms;\n\ntransition-colors\ttransition-property: color, background-color, border-color, text-decoration-color, fill, stroke;\ntransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\ntransition-duration: 150ms;\n\ntransition-opacity\ttransition-property: opacity;\ntransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\ntransition-duration: 150ms;\n\ntransition-shadow\ttransition-property: box-shadow;\ntransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\ntransition-duration: 150ms;\n\ntransition-transform\ttransition-property: transform;\ntransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\ntransition-duration: 150ms;\n\n​\nBasic usage\n​\nControlling transitioned properties\n\nUse the transition-{properties} utilities to specify which properties should transition when they change.\n\nHover the button to see the expected behaviour\n\nSave Changes\n<button class=\"transition ease-in-out delay-150 bg-blue-500 hover:-translate-y-1 hover:scale-110 hover:bg-indigo-500 duration-300 ...\">\n  Save Changes\n</button>\n​\nPrefers-reduced-motion\n\nFor situations where the user has specified that they prefer reduced motion, you can conditionally apply animations and transitions using the motion-safe and motion-reduce variants:\n\n<button class=\"transition transform hover:-translate-y-1 motion-reduce:transition-none motion-reduce:hover:transform-none ...\">\n  Hover me\n</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:transition-all to only apply the transition-all utility on hover.\n\n<div class=\"hover:transition-all\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:transition-all to apply the transition-all utility at only medium screen sizes and above.\n\n<div class=\"md:transition-all\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides transition-property utilities for seven common property combinations. You can customize these values by editing theme.transitionProperty or theme.extend.transitionProperty in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      transitionProperty: {\n\n        'height': 'height',\n\n        'spacing': 'margin, padding',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off transition-property value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"transition-[height]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nCaption Side\nTransition Duration\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling transitioned properties\nPrefers-reduced-motion\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Caption Side - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/caption-side",
    "html": "Tables\n\nCaption Side\n\nUtilities for controlling the alignment of a caption element inside of a table.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncaption-top\tcaption-side: top;\n\ncaption-bottom\tcaption-side: bottom;\n\n​\nBasic usage\n​\nTop\n\nUse caption-top to position a caption element at the top of a table.\n\nTable 3.1: Professional wrestlers and their signature moves.\nWrestler\tSignature Move(s)\n\"Stone Cold\" Steve Austin\tStone Cold Stunner, Lou Thesz Press\nBret \"The Hitman\" Hart\tThe Sharpshooter\nRazor Ramon\tRazor's Edge, Fallaway Slam\n<table>\n  <caption class=\"caption-top\">\n    Table 3.1: Professional wrestlers and their signature moves.\n  </caption>\n  <thead>\n    <tr>\n      <th>Wrestler</th>\n      <th>Signature Move(s)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\"Stone Cold\" Steve Austin</td>\n      <td>Stone Cold Stunner, Lou Thesz Press</td>\n    </tr>\n    <tr>\n      <td>Bret \"The Hitman\" Hart</td>\n      <td >The Sharpshooter</td>\n    </tr>\n    <tr>\n      <td>Razor Ramon</td>\n      <td>Razor's Edge, Fallaway Slam</td>\n    </tr>\n  </tbody>\n</table>\n​\nBottom\n\nUse caption-bottom to position a caption element at the bottom of a table.\n\nTable 3.1: Professional wrestlers and their signature moves.\nWrestler\tSignature Move(s)\n\"Stone Cold\" Steve Austin\tStone Cold Stunner, Lou Thesz Press\nBret \"The Hitman\" Hart\tThe Sharpshooter\nRazor Ramon\tRazor's Edge, Fallaway Slam\n<table>\n  <caption class=\"caption-bottom\">\n    Table 3.1: Professional wrestlers and their signature moves.\n  </caption>\n  <thead>\n    <tr>\n      <th>Wrestler</th>\n      <th>Signature Move(s)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\"Stone Cold\" Steve Austin</td>\n      <td>Stone Cold Stunner, Lou Thesz Press</td>\n    </tr>\n    <tr>\n      <td>Bret \"The Hitman\" Hart</td>\n      <td >The Sharpshooter</td>\n    </tr>\n    <tr>\n      <td>Razor Ramon</td>\n      <td>Razor's Edge, Fallaway Slam</td>\n    </tr>\n  </tbody>\n</table>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:caption-bottom to only apply the caption-bottom utility on hover.\n\n<table class=\"caption-top hover:caption-bottom\">\n  <!-- ... -->\n</table>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:caption-bottom to apply the caption-bottom utility at only medium screen sizes and above.\n\n<table class=\"caption-top md:caption-bottom\">\n  <!-- ... -->\n</table>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nTable Layout\nTransition Property\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nTop\nBottom\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Table Layout - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/table-layout",
    "html": "Tables\n\nTable Layout\n\nUtilities for controlling the table layout algorithm.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntable-auto\ttable-layout: auto;\n\ntable-fixed\ttable-layout: fixed;\n\n​\nBasic usage\n​\nAuto\n\nUse table-auto to allow the table to automatically size columns to fit the contents of the cell.\n\nSong\tArtist\tYear\nThe Sliding Mr. Bones (Next Stop, Pottersville)\tMalcolm Lockyer\t1961\nWitchy Woman\tThe Eagles\t1972\nShining Star\tEarth, Wind, and Fire\t1975\n<table class=\"table-auto\">\n  <thead>\n    <tr>\n      <th>Song</th>\n      <th>Artist</th>\n      <th>Year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>The Sliding Mr. Bones (Next Stop, Pottersville)</td>\n      <td>Malcolm Lockyer</td>\n      <td>1961</td>\n    </tr>\n    <tr>\n      <td>Witchy Woman</td>\n      <td>The Eagles</td>\n      <td>1972</td>\n    </tr>\n    <tr>\n      <td>Shining Star</td>\n      <td>Earth, Wind, and Fire</td>\n      <td>1975</td>\n    </tr>\n  </tbody>\n</table>\n​\nFixed\n\nUse table-fixed to allow the table to ignore the content and use fixed widths for columns. The width of the first row will set the column widths for the whole table.\n\nYou can manually set the widths for some columns and the rest of the available width will be divided evenly amongst the columns without explicit width.\n\nSong\tArtist\tYear\nThe Sliding Mr. Bones (Next Stop, Pottersville)\tMalcolm Lockyer\t1961\nWitchy Woman\tThe Eagles\t1972\nShining Star\tEarth, Wind, and Fire\t1975\n<table class=\"table-fixed\">\n  <thead>\n    <tr>\n      <th>Song</th>\n      <th>Artist</th>\n      <th>Year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>The Sliding Mr. Bones (Next Stop, Pottersville)</td>\n      <td>Malcolm Lockyer</td>\n      <td>1961</td>\n    </tr>\n    <tr>\n      <td>Witchy Woman</td>\n      <td>The Eagles</td>\n      <td>1972</td>\n    </tr>\n    <tr>\n      <td>Shining Star</td>\n      <td>Earth, Wind, and Fire</td>\n      <td>1975</td>\n    </tr>\n  </tbody>\n</table>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:table-fixed to only apply the table-fixed utility on hover.\n\n<table class=\"hover:table-fixed\">\n  <!-- ... -->\n</table>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:table-fixed to apply the table-fixed utility at only medium screen sizes and above.\n\n<table class=\"md:table-fixed\">\n  <!-- ... -->\n</table>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBorder Spacing\nCaption Side\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAuto\nFixed\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Border Spacing - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/border-spacing",
    "html": "Tables\n\nBorder Spacing\n\nUtilities for controlling the spacing between table borders.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nborder-spacing-0\tborder-spacing: 0px 0px;\n\nborder-spacing-x-0\tborder-spacing: 0px var(--tw-border-spacing-y);\n\nborder-spacing-y-0\tborder-spacing: var(--tw-border-spacing-x) 0px;\n\nborder-spacing-px\tborder-spacing: 1px 1px;\n\nborder-spacing-x-px\tborder-spacing: 1px var(--tw-border-spacing-y);\n\nborder-spacing-y-px\tborder-spacing: var(--tw-border-spacing-x) 1px;\n\nborder-spacing-0.5\tborder-spacing: 0.125rem 0.125rem;\n\nborder-spacing-x-0.5\tborder-spacing: 0.125rem var(--tw-border-spacing-y);\n\nborder-spacing-y-0.5\tborder-spacing: var(--tw-border-spacing-x) 0.125rem;\n\nborder-spacing-1\tborder-spacing: 0.25rem 0.25rem;\n\nborder-spacing-x-1\tborder-spacing: 0.25rem var(--tw-border-spacing-y);\n\nborder-spacing-y-1\tborder-spacing: var(--tw-border-spacing-x) 0.25rem;\n\nborder-spacing-1.5\tborder-spacing: 0.375rem 0.375rem;\n\nborder-spacing-x-1.5\tborder-spacing: 0.375rem var(--tw-border-spacing-y);\n\nborder-spacing-y-1.5\tborder-spacing: var(--tw-border-spacing-x) 0.375rem;\n\nborder-spacing-2\tborder-spacing: 0.5rem 0.5rem;\n\nborder-spacing-x-2\tborder-spacing: 0.5rem var(--tw-border-spacing-y);\n\nborder-spacing-y-2\tborder-spacing: var(--tw-border-spacing-x) 0.5rem;\n\nborder-spacing-2.5\tborder-spacing: 0.625rem 0.625rem;\n\nborder-spacing-x-2.5\tborder-spacing: 0.625rem var(--tw-border-spacing-y);\n\nborder-spacing-y-2.5\tborder-spacing: var(--tw-border-spacing-x) 0.625rem;\n\nborder-spacing-3\tborder-spacing: 0.75rem 0.75rem;\n\nborder-spacing-x-3\tborder-spacing: 0.75rem var(--tw-border-spacing-y);\n\nborder-spacing-y-3\tborder-spacing: var(--tw-border-spacing-x) 0.75rem;\n\nborder-spacing-3.5\tborder-spacing: 0.875rem 0.875rem;\n\nborder-spacing-x-3.5\tborder-spacing: 0.875rem var(--tw-border-spacing-y);\n\nborder-spacing-y-3.5\tborder-spacing: var(--tw-border-spacing-x) 0.875rem;\n\nborder-spacing-4\tborder-spacing: 1rem 1rem;\n\nborder-spacing-x-4\tborder-spacing: 1rem var(--tw-border-spacing-y);\n\nborder-spacing-y-4\tborder-spacing: var(--tw-border-spacing-x) 1rem;\n\nborder-spacing-5\tborder-spacing: 1.25rem 1.25rem;\n\nborder-spacing-x-5\tborder-spacing: 1.25rem var(--tw-border-spacing-y);\n\nborder-spacing-y-5\tborder-spacing: var(--tw-border-spacing-x) 1.25rem;\n\nborder-spacing-6\tborder-spacing: 1.5rem 1.5rem;\n\nborder-spacing-x-6\tborder-spacing: 1.5rem var(--tw-border-spacing-y);\n\nborder-spacing-y-6\tborder-spacing: var(--tw-border-spacing-x) 1.5rem;\n\nborder-spacing-7\tborder-spacing: 1.75rem 1.75rem;\n\nborder-spacing-x-7\tborder-spacing: 1.75rem var(--tw-border-spacing-y);\n\nborder-spacing-y-7\tborder-spacing: var(--tw-border-spacing-x) 1.75rem;\n\nborder-spacing-8\tborder-spacing: 2rem 2rem;\n\nborder-spacing-x-8\tborder-spacing: 2rem var(--tw-border-spacing-y);\n\nborder-spacing-y-8\tborder-spacing: var(--tw-border-spacing-x) 2rem;\n\nborder-spacing-9\tborder-spacing: 2.25rem 2.25rem;\n\nborder-spacing-x-9\tborder-spacing: 2.25rem var(--tw-border-spacing-y);\n\nborder-spacing-y-9\tborder-spacing: var(--tw-border-spacing-x) 2.25rem;\n\nborder-spacing-10\tborder-spacing: 2.5rem 2.5rem;\n\nborder-spacing-x-10\tborder-spacing: 2.5rem var(--tw-border-spacing-y);\n\nborder-spacing-y-10\tborder-spacing: var(--tw-border-spacing-x) 2.5rem;\n\nborder-spacing-11\tborder-spacing: 2.75rem 2.75rem;\n\nborder-spacing-x-11\tborder-spacing: 2.75rem var(--tw-border-spacing-y);\n\nborder-spacing-y-11\tborder-spacing: var(--tw-border-spacing-x) 2.75rem;\n\nborder-spacing-12\tborder-spacing: 3rem 3rem;\n\nborder-spacing-x-12\tborder-spacing: 3rem var(--tw-border-spacing-y);\n\nborder-spacing-y-12\tborder-spacing: var(--tw-border-spacing-x) 3rem;\n\nborder-spacing-14\tborder-spacing: 3.5rem 3.5rem;\n\nborder-spacing-x-14\tborder-spacing: 3.5rem var(--tw-border-spacing-y);\n\nborder-spacing-y-14\tborder-spacing: var(--tw-border-spacing-x) 3.5rem;\n\nborder-spacing-16\tborder-spacing: 4rem 4rem;\n\nborder-spacing-x-16\tborder-spacing: 4rem var(--tw-border-spacing-y);\n\nborder-spacing-y-16\tborder-spacing: var(--tw-border-spacing-x) 4rem;\n\nborder-spacing-20\tborder-spacing: 5rem 5rem;\n\nborder-spacing-x-20\tborder-spacing: 5rem var(--tw-border-spacing-y);\n\nborder-spacing-y-20\tborder-spacing: var(--tw-border-spacing-x) 5rem;\n\nborder-spacing-24\tborder-spacing: 6rem 6rem;\n\nborder-spacing-x-24\tborder-spacing: 6rem var(--tw-border-spacing-y);\n\nborder-spacing-y-24\tborder-spacing: var(--tw-border-spacing-x) 6rem;\n\nborder-spacing-28\tborder-spacing: 7rem 7rem;\n\nborder-spacing-x-28\tborder-spacing: 7rem var(--tw-border-spacing-y);\n\nborder-spacing-y-28\tborder-spacing: var(--tw-border-spacing-x) 7rem;\n\nborder-spacing-32\tborder-spacing: 8rem 8rem;\n\nborder-spacing-x-32\tborder-spacing: 8rem var(--tw-border-spacing-y);\n\nborder-spacing-y-32\tborder-spacing: var(--tw-border-spacing-x) 8rem;\n\nborder-spacing-36\tborder-spacing: 9rem 9rem;\n\nborder-spacing-x-36\tborder-spacing: 9rem var(--tw-border-spacing-y);\n\nborder-spacing-y-36\tborder-spacing: var(--tw-border-spacing-x) 9rem;\n\nborder-spacing-40\tborder-spacing: 10rem 10rem;\n\nborder-spacing-x-40\tborder-spacing: 10rem var(--tw-border-spacing-y);\n\nborder-spacing-y-40\tborder-spacing: var(--tw-border-spacing-x) 10rem;\n\nborder-spacing-44\tborder-spacing: 11rem 11rem;\n\nborder-spacing-x-44\tborder-spacing: 11rem var(--tw-border-spacing-y);\n\nborder-spacing-y-44\tborder-spacing: var(--tw-border-spacing-x) 11rem;\n\nborder-spacing-48\tborder-spacing: 12rem 12rem;\n\nborder-spacing-x-48\tborder-spacing: 12rem var(--tw-border-spacing-y);\n\nborder-spacing-y-48\tborder-spacing: var(--tw-border-spacing-x) 12rem;\n\nborder-spacing-52\tborder-spacing: 13rem 13rem;\n\nborder-spacing-x-52\tborder-spacing: 13rem var(--tw-border-spacing-y);\n\nborder-spacing-y-52\tborder-spacing: var(--tw-border-spacing-x) 13rem;\n\nborder-spacing-56\tborder-spacing: 14rem 14rem;\n\nborder-spacing-x-56\tborder-spacing: 14rem var(--tw-border-spacing-y);\n\nborder-spacing-y-56\tborder-spacing: var(--tw-border-spacing-x) 14rem;\n\nborder-spacing-60\tborder-spacing: 15rem 15rem;\n\nborder-spacing-x-60\tborder-spacing: 15rem var(--tw-border-spacing-y);\n\nborder-spacing-y-60\tborder-spacing: var(--tw-border-spacing-x) 15rem;\n\nborder-spacing-64\tborder-spacing: 16rem 16rem;\n\nborder-spacing-x-64\tborder-spacing: 16rem var(--tw-border-spacing-y);\n\nborder-spacing-y-64\tborder-spacing: var(--tw-border-spacing-x) 16rem;\n\nborder-spacing-72\tborder-spacing: 18rem 18rem;\n\nborder-spacing-x-72\tborder-spacing: 18rem var(--tw-border-spacing-y);\n\nborder-spacing-y-72\tborder-spacing: var(--tw-border-spacing-x) 18rem;\n\nborder-spacing-80\tborder-spacing: 20rem 20rem;\n\nborder-spacing-x-80\tborder-spacing: 20rem var(--tw-border-spacing-y);\n\nborder-spacing-y-80\tborder-spacing: var(--tw-border-spacing-x) 20rem;\n\nborder-spacing-96\tborder-spacing: 24rem 24rem;\n\nborder-spacing-x-96\tborder-spacing: 24rem var(--tw-border-spacing-y);\n\nborder-spacing-y-96\tborder-spacing: var(--tw-border-spacing-x) 24rem;\n\n​\nBasic usage\n​\nSetting the border spacing\n\nUse the border-spacing-*, border-spacing-x-*, and border-spacing-y-* utilities to control the space between the borders of table cells with separate borders.\n\nState\tCity\nIndiana\tIndianapolis\nOhio\tColumbus\nMichigan\tDetroit\n<table class=\"border-separate border-spacing-2 border border-slate-500 ...\">\n  <thead>\n    <tr>\n      <th class=\"border border-slate-600 ...\">State</th>\n      <th class=\"border border-slate-600 ...\">City</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Indiana</td>\n      <td class=\"border border-slate-700 ...\">Indianapolis</td>\n    </tr>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Ohio</td>\n      <td class=\"border border-slate-700 ...\">Columbus</td>\n    </tr>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Michigan</td>\n      <td class=\"border border-slate-700 ...\">Detroit</td>\n    </tr>\n  </tbody>\n</table>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:border-spacing-2 to only apply the border-spacing-2 utility on hover.\n\n<table class=\"hover:border-spacing-2\">\n  <!-- ... -->\n</table>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:border-spacing-4 to apply the border-spacing-4 utility at only medium screen sizes and above.\n\n<table class=\"md:border-spacing-4\">\n  <!-- ... -->\n</table>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s border spacing utilities use the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '13': '3.25rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the border spacing scale by editing theme.borderSpacing or theme.extend.borderSpacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      borderSpacing: {\n\n        '13': '3.25rem',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off border-spacing value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"border-spacing-[7px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBorder Collapse\nTable Layout\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the border spacing\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Sepia - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-sepia",
    "html": "Filters\n\nBackdrop Sepia\n\nUtilities for applying backdrop sepia filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-sepia-0\tbackdrop-filter: sepia(0);\n\nbackdrop-sepia\tbackdrop-filter: sepia(100%);\n\n​\nBasic usage\n​\nAdding backdrop sepia filters\n\nUse the backdrop-sepia and backdrop-sepia-0 utilities to control whether an element’s backdrop should be rendered as sepia or in full color.\n\nbackdrop-sepia-0\n\nbackdrop-sepia\n\n<div class=\"backdrop-sepia-0 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-sepia bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-sepia md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-sepia-0 to only apply the backdrop-sepia-0 utility on hover.\n\n<div class=\"backdrop-sepia hover:backdrop-sepia-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-sepia-0 to apply the backdrop-sepia-0 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-sepia md:backdrop-sepia-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-sepia utilities. You can customize these values by editing theme.backdropSepia or theme.extend.backdropSepia in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropSepia: {\n\n        25: '.25',\n\n        75: '.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-sepia value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-sepia-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Saturate\nBorder Collapse\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding backdrop sepia filters\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Border Collapse - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/border-collapse",
    "html": "Tables\n\nBorder Collapse\n\nUtilities for controlling whether table borders should collapse or be separated.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nborder-collapse\tborder-collapse: collapse;\n\nborder-separate\tborder-collapse: separate;\n\n​\nBasic usage\n​\nCollapse\n\nUse border-collapse to combine adjacent cell borders into a single border when possible. Note that this includes collapsing borders on the top-level <table> tag.\n\nState\tCity\nIndiana\tIndianapolis\nOhio\tColumbus\nMichigan\tDetroit\n<table class=\"border-collapse border border-slate-500 ...\">\n  <thead>\n    <tr>\n      <th class=\"border border-slate-600 ...\">State</th>\n      <th class=\"border border-slate-600 ...\">City</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Indiana</td>\n      <td class=\"border border-slate-700 ...\">Indianapolis</td>\n    </tr>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Ohio</td>\n      <td class=\"border border-slate-700 ...\">Columbus</td>\n    </tr>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Michigan</td>\n      <td class=\"border border-slate-700 ...\">Detroit</td>\n    </tr>\n  </tbody>\n</table>\n​\nSeparate\n\nUse border-separate to force each cell to display its own separate borders.\n\nState\tCity\nIndiana\tIndianapolis\nOhio\tColumbus\nMichigan\tDetroit\n<table class=\"border-separate border border-slate-500 ...\">\n  <thead>\n    <tr>\n      <th class=\"border border-slate-600 ...\">State</th>\n      <th class=\"border border-slate-600 ...\">City</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Indiana</td>\n      <td class=\"border border-slate-700 ...\">Indianapolis</td>\n    </tr>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Ohio</td>\n      <td class=\"border border-slate-700 ...\">Columbus</td>\n    </tr>\n    <tr>\n      <td class=\"border border-slate-700 ...\">Michigan</td>\n      <td class=\"border border-slate-700 ...\">Detroit</td>\n    </tr>\n  </tbody>\n</table>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:border-collapse to only apply the border-collapse utility on hover.\n\n<table class=\"hover:border-collapse\">\n  <!-- ... -->\n</table>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:border-collapse to apply the border-collapse utility at only medium screen sizes and above.\n\n<table class=\"md:border-collapse\">\n  <!-- ... -->\n</table>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBackdrop Sepia\nBorder Spacing\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nCollapse\nSeparate\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Saturate - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-saturate",
    "html": "Filters\n\nBackdrop Saturate\n\nUtilities for applying backdrop saturation filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-saturate-0\tbackdrop-filter: saturate(0);\n\nbackdrop-saturate-50\tbackdrop-filter: saturate(.5);\n\nbackdrop-saturate-100\tbackdrop-filter: saturate(1);\n\nbackdrop-saturate-150\tbackdrop-filter: saturate(1.5);\n\nbackdrop-saturate-200\tbackdrop-filter: saturate(2);\n\n​\nBasic usage\n​\nChanging backdrop saturation\n\nUse the backdrop-saturate-{amount} utilities to control an element’s backdrop saturation.\n\nbackdrop-saturate-50\n\nbackdrop-saturate-125\n\nbackdrop-saturate-200\n\n<div class=\"backdrop-saturate-50 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-saturate-125 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-saturate-200 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-saturate-150 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-saturate-150 to only apply the backdrop-saturate-150 utility on hover.\n\n<div class=\"backdrop-saturate-50 hover:backdrop-saturate-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-saturate-150 to apply the backdrop-saturate-150 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-saturate-50 md:backdrop-saturate-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-saturate utilities. You can customize these values by editing theme.backdropSaturate or theme.extend.backdropSaturate in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropSaturate: {\n\n        25: '.25',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-saturate value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-saturate-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Opacity\nBackdrop Sepia\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging backdrop saturation\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Invert - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-invert",
    "html": "Filters\n\nBackdrop Invert\n\nUtilities for applying backdrop invert filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-invert-0\tbackdrop-filter: invert(0);\n\nbackdrop-invert\tbackdrop-filter: invert(100%);\n\n​\nBasic usage\n​\nInverting an element’s backdrop\n\nUse the backdrop-invert and backdrop-invert-0 utilities to control whether an element should be rendered with inverted backdrop colors or normally.\n\nbackdrop-invert-0\n\nbackdrop-invert\n\n<div class=\"backdrop-invert-0 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-invert md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-invert-0 to only apply the backdrop-invert-0 utility on hover.\n\n<div class=\"backdrop-invert hover:backdrop-invert-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-invert-0 to apply the backdrop-invert-0 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-invert md:backdrop-invert-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-invert utilities. You can customize these values by editing theme.backdropInvert or theme.extend.backdropInvert in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropInvert: {\n\n        25: '.25',\n\n        75: '.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-invert value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-invert-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Hue Rotate\nBackdrop Opacity\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nInverting an element's backdrop\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Opacity - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-opacity",
    "html": "Filters\n\nBackdrop Opacity\n\nUtilities for applying backdrop opacity filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-opacity-0\tbackdrop-filter: opacity(0);\n\nbackdrop-opacity-5\tbackdrop-filter: opacity(0.05);\n\nbackdrop-opacity-10\tbackdrop-filter: opacity(0.1);\n\nbackdrop-opacity-20\tbackdrop-filter: opacity(0.2);\n\nbackdrop-opacity-25\tbackdrop-filter: opacity(0.25);\n\nbackdrop-opacity-30\tbackdrop-filter: opacity(0.3);\n\nbackdrop-opacity-40\tbackdrop-filter: opacity(0.4);\n\nbackdrop-opacity-50\tbackdrop-filter: opacity(0.5);\n\nbackdrop-opacity-60\tbackdrop-filter: opacity(0.6);\n\nbackdrop-opacity-70\tbackdrop-filter: opacity(0.7);\n\nbackdrop-opacity-75\tbackdrop-filter: opacity(0.75);\n\nbackdrop-opacity-80\tbackdrop-filter: opacity(0.8);\n\nbackdrop-opacity-90\tbackdrop-filter: opacity(0.9);\n\nbackdrop-opacity-95\tbackdrop-filter: opacity(0.95);\n\nbackdrop-opacity-100\tbackdrop-filter: opacity(1);\n\n​\nBasic usage\n​\nControlling opacity of backdrop filters\n\nUse the backdrop-opacity-{amount} utilities to control the opacity of other backdrop filters applied to an element.\n\nbackdrop-opacity-10\n\nbackdrop-opacity-60\n\nbackdrop-opacity-95\n\n<div class=\"backdrop-opacity-10 backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-opacity-60 backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-opacity-95 backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-opacity-60 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-opacity-60 to only apply the backdrop-opacity-60 utility on hover.\n\n<div class=\"backdrop-opacity-100 hover:backdrop-opacity-60\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-opacity-60 to apply the backdrop-opacity-60 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-opacity-100 md:backdrop-opacity-60\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-opacity utilities. You can customize these values by editing theme.backdropOpacity or theme.extend.backdropOpacity in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropOpacity: {\n\n        15: '.15',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-opacity value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-opacity-[.15]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Invert\nBackdrop Saturate\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling opacity of backdrop filters\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Hue Rotate - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-hue-rotate",
    "html": "Filters\n\nBackdrop Hue Rotate\n\nUtilities for applying backdrop hue-rotate filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-hue-rotate-0\tbackdrop-filter: hue-rotate(0deg);\n\nbackdrop-hue-rotate-15\tbackdrop-filter: hue-rotate(15deg);\n\nbackdrop-hue-rotate-30\tbackdrop-filter: hue-rotate(30deg);\n\nbackdrop-hue-rotate-60\tbackdrop-filter: hue-rotate(60deg);\n\nbackdrop-hue-rotate-90\tbackdrop-filter: hue-rotate(90deg);\n\nbackdrop-hue-rotate-180\tbackdrop-filter: hue-rotate(180deg);\n\n​\nBasic usage\n​\nRotating the backdrop’s hue\n\nUse the backdrop-hue-rotate-{amount} utilities to rotate the hue of an element’s backdrop.\n\nbackdrop-hue-rotate-90\n\nbackdrop-hue-rotate-180\n\n-backdrop-hue-rotate-60\n\n<div class=\"backdrop-hue-rotate-90 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-hue-rotate-180 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"-backdrop-hue-rotate-60 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nUsing negative values\n\nTo use a negative backdrop hue rotate value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"-backdrop-hue-rotate-60\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-hue-rotate-180 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-hue-rotate-60 to only apply the backdrop-hue-rotate-60 utility on hover.\n\n<div class=\"backdrop-hue-rotate-15 hover:backdrop-hue-rotate-60\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-hue-rotate-60 to apply the backdrop-hue-rotate-60 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-hue-rotate-15 md:backdrop-hue-rotate-60\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-hue-rotate utilities. You can customize these values by editing theme.backdropHueRotate or theme.extend.backdropHueRotate in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropHueRotate: {\n\n        '-270': '-270deg',\n\n        270: '270deg',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-hue-rotate value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-hue-rotate-[270deg]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Grayscale\nBackdrop Invert\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRotating the backdrop's hue\nUsing negative values\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Grayscale - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-grayscale",
    "html": "Filters\n\nBackdrop Grayscale\n\nUtilities for applying backdrop grayscale filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-grayscale-0\tbackdrop-filter: grayscale(0);\n\nbackdrop-grayscale\tbackdrop-filter: grayscale(100%);\n\n​\nBasic usage\n​\nMaking an element grayscale\n\nUse the backdrop-grayscale and backdrop-grayscale-0 utilities to control whether an element’s backdrop should be rendered as grayscale or in full color.\n\nbackdrop-grayscale-0\n\nbackdrop-grayscale\n\n<div class=\"backdrop-grayscale-0 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-grayscale bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-grayscale md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-grayscale-0 to only apply the backdrop-grayscale-0 utility on hover.\n\n<div class=\"backdrop-grayscale hover:backdrop-grayscale-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-grayscale-0 to apply the backdrop-grayscale-0 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-grayscale md:backdrop-grayscale-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-grayscale utilities. You can customize these values by editing theme.backdropGrayscale or theme.extend.backdropGrayscale in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropGrayscale: {\n\n        50: '.5',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-grayscale value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-grayscale-[.5]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Contrast\nBackdrop Hue Rotate\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nMaking an element grayscale\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Blur - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-blur",
    "html": "Filters\n\nBackdrop Blur\n\nUtilities for applying backdrop blur filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-blur-none\tbackdrop-filter: blur(0);\n\nbackdrop-blur-sm\tbackdrop-filter: blur(4px);\n\nbackdrop-blur\tbackdrop-filter: blur(8px);\n\nbackdrop-blur-md\tbackdrop-filter: blur(12px);\n\nbackdrop-blur-lg\tbackdrop-filter: blur(16px);\n\nbackdrop-blur-xl\tbackdrop-filter: blur(24px);\n\nbackdrop-blur-2xl\tbackdrop-filter: blur(40px);\n\nbackdrop-blur-3xl\tbackdrop-filter: blur(64px);\n\n​\nBasic usage\n​\nBlurring behind an element\n\nUse the backdrop-blur-{amount?} utilities to control an element’s backdrop blur.\n\nbackdrop-blur-sm\n\nbackdrop-blur-md\n\nbackdrop-blur-xl\n\n<div class=\"backdrop-blur-sm bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-blur-md bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-blur-xl bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-brightness-150 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-blur-lg to only apply the backdrop-blur-lg utility on hover.\n\n<div class=\"backdrop-blur-sm hover:backdrop-blur-lg\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-blur-lg to apply the backdrop-blur-lg utility at only medium screen sizes and above.\n\n<div class=\"backdrop-blur-sm md:backdrop-blur-lg\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-blur utilities. You can customize these values by editing theme.backdropBlur or theme.extend.backdropBlur in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropBlur: {\n\n        xs: '2px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-blur value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-blur-[2px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nSepia\nBackdrop Brightness\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nBlurring behind an element\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Sepia - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/sepia",
    "html": "Filters\n\nSepia\n\nUtilities for applying sepia filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nsepia-0\tfilter: sepia(0);\n\nsepia\tfilter: sepia(100%);\n\n​\nBasic usage\n​\nAdding sepia filters\n\nUse the sepia and sepia-0 utilities to control whether an element should be rendered as sepia or in full color.\n\nsepia-0\n\nsepia\n\n<div class=\"sepia-0 ...\">\n  <!-- ... -->\n</div>\n<div class=\"sepia ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert sepia md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:sepia-0 to only apply the sepia-0 utility on hover.\n\n<div class=\"sepia hover:sepia-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:sepia-0 to apply the sepia-0 utility at only medium screen sizes and above.\n\n<div class=\"sepia md:sepia-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose sepia utilities. You can customize these values by editing theme.sepia or theme.extend.sepia in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      sepia: {\n\n        25: '.25',\n\n        75: '.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off sepia value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"sepia-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nSaturate\nBackdrop Blur\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding sepia filters\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Brightness - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-brightness",
    "html": "Filters\n\nBackdrop Brightness\n\nUtilities for applying backdrop brightness filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-brightness-0\tbackdrop-filter: brightness(0);\n\nbackdrop-brightness-50\tbackdrop-filter: brightness(.5);\n\nbackdrop-brightness-75\tbackdrop-filter: brightness(.75);\n\nbackdrop-brightness-90\tbackdrop-filter: brightness(.9);\n\nbackdrop-brightness-95\tbackdrop-filter: brightness(.95);\n\nbackdrop-brightness-100\tbackdrop-filter: brightness(1);\n\nbackdrop-brightness-105\tbackdrop-filter: brightness(1.05);\n\nbackdrop-brightness-110\tbackdrop-filter: brightness(1.1);\n\nbackdrop-brightness-125\tbackdrop-filter: brightness(1.25);\n\nbackdrop-brightness-150\tbackdrop-filter: brightness(1.5);\n\nbackdrop-brightness-200\tbackdrop-filter: brightness(2);\n\n​\nBasic usage\n​\nControlling backdrop brightness\n\nUse the backdrop-brightness-{amount?} utilities to control an element’s backdrop brightness.\n\nbackdrop-brightness-50\n\nbackdrop-brightness-125\n\nbackdrop-brightness-200\n\n<div class=\"backdrop-brightness-50 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-brightness-125 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-brightness-200 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-brightness-150 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-brightness-150 to only apply the backdrop-brightness-150 utility on hover.\n\n<div class=\"backdrop-brightness-110 hover:backdrop-brightness-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-brightness-150 to apply the backdrop-brightness-150 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-brightness-110 md:backdrop-brightness-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-brightness utilities. You can customize these values by editing theme.backdropBrightness or theme.extend.backdropBrightness in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropBrightness: {\n\n        25: '.25',\n\n        175: '1.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-brightness value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-brightness-[1.75]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Blur\nBackdrop Contrast\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling backdrop brightness\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Backdrop Contrast - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/backdrop-contrast",
    "html": "Filters\n\nBackdrop Contrast\n\nUtilities for applying backdrop contrast filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbackdrop-contrast-0\tbackdrop-filter: contrast(0);\n\nbackdrop-contrast-50\tbackdrop-filter: contrast(.5);\n\nbackdrop-contrast-75\tbackdrop-filter: contrast(.75);\n\nbackdrop-contrast-100\tbackdrop-filter: contrast(1);\n\nbackdrop-contrast-125\tbackdrop-filter: contrast(1.25);\n\nbackdrop-contrast-150\tbackdrop-filter: contrast(1.5);\n\nbackdrop-contrast-200\tbackdrop-filter: contrast(2);\n\n​\nBasic usage\n​\nControlling backdrop contrast\n\nUse the backdrop-contrast-{amount?} utilities to control an element’s backdrop contrast.\n\nbackdrop-contrast-50\n\nbackdrop-contrast-125\n\nbackdrop-contrast-200\n\n<div class=\"backdrop-contrast-50 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-contrast-125 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-contrast-200 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving backdrop filters\n\nTo remove all of the backdrop filters on an element at once, use the backdrop-filter-none utility:\n\n<div class=\"backdrop-blur-md backdrop-contrast-125 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:backdrop-contrast-150 to only apply the backdrop-contrast-150 utility on hover.\n\n<div class=\"backdrop-contrast-125 hover:backdrop-contrast-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:backdrop-contrast-150 to apply the backdrop-contrast-150 utility at only medium screen sizes and above.\n\n<div class=\"backdrop-contrast-125 md:backdrop-contrast-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose backdrop-contrast utilities. You can customize these values by editing theme.backdropContrast or theme.extend.backdropContrast in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backdropContrast: {\n\n        25: '.25',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off backdrop-contrast value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"backdrop-contrast-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackdrop Brightness\nBackdrop Grayscale\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling backdrop contrast\nRemoving backdrop filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Saturate - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/saturate",
    "html": "Filters\n\nSaturate\n\nUtilities for applying saturation filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nsaturate-0\tfilter: saturate(0);\n\nsaturate-50\tfilter: saturate(.5);\n\nsaturate-100\tfilter: saturate(1);\n\nsaturate-150\tfilter: saturate(1.5);\n\nsaturate-200\tfilter: saturate(2);\n\n​\nBasic usage\n​\nChanging element saturation\n\nUse the saturate-{amount} utilities to control an element’s saturation.\n\nsaturate-50\n\nsaturate-100\n\nsaturate-150\n\nsaturate-200\n\n<div class=\"saturate-50 ...\">\n  <!-- ... -->\n</div>\n<div class=\"saturate-100 ...\">\n  <!-- ... -->\n</div>\n<div class=\"saturate-150 ...\">\n  <!-- ... -->\n</div>\n<div class=\"saturate-200 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert saturate-150 md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:saturate-150 to only apply the saturate-150 utility on hover.\n\n<div class=\"saturate-50 hover:saturate-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:saturate-150 to apply the saturate-150 utility at only medium screen sizes and above.\n\n<div class=\"saturate-50 md:saturate-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose saturate utilities. You can customize these values by editing theme.saturate or theme.extend.saturate in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      saturate: {\n\n        25: '.25',\n\n        75: '.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off saturate value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"saturate-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nInvert\nSepia\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging element saturation\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Invert - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/invert",
    "html": "Filters\n\nInvert\n\nUtilities for applying invert filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ninvert-0\tfilter: invert(0);\n\ninvert\tfilter: invert(100%);\n\n​\nBasic usage\n​\nInverting an element’s color\n\nUse the invert and invert-0 utilities to control whether an element should be rendered with inverted colors or normally.\n\ninvert-0\n\ninvert\n\n<div class=\"invert-0 ...\">\n  <!-- ... -->\n</div>\n<div class=\"invert ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert brightness-150 md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:invert-0 to only apply the invert-0 utility on hover.\n\n<div class=\"invert hover:invert-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:invert-0 to apply the invert-0 utility at only medium screen sizes and above.\n\n<div class=\"invert md:invert-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose invert utilities. You can customize these values by editing theme.invert or theme.extend.invert in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      invert: {\n\n        25: '.25',\n\n        50: '.5',\n\n        75: '.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off invert value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"invert-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nHue Rotate\nSaturate\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nInverting an element's color\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Hue Rotate - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/hue-rotate",
    "html": "Filters\n\nHue Rotate\n\nUtilities for applying hue-rotate filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nhue-rotate-0\tfilter: hue-rotate(0deg);\n\nhue-rotate-15\tfilter: hue-rotate(15deg);\n\nhue-rotate-30\tfilter: hue-rotate(30deg);\n\nhue-rotate-60\tfilter: hue-rotate(60deg);\n\nhue-rotate-90\tfilter: hue-rotate(90deg);\n\nhue-rotate-180\tfilter: hue-rotate(180deg);\n\n​\nBasic usage\n​\nRotating an element’s hue\n\nUse the hue-rotate-{amount} utilities to rotate the hue of an element.\n\nhue-rotate-15\n\nhue-rotate-90\n\nhue-rotate-180\n\n-hue-rotate-60\n\n<div class=\"hue-rotate-15 ...\">\n  <!-- ... -->\n</div>\n<div class=\"hue-rotate-90 ...\">\n  <!-- ... -->\n</div>\n<div class=\"hue-rotate-180 ...\">\n  <!-- ... -->\n</div>\n<div class=\"-hue-rotate-60 ...\">\n  <!-- ... -->\n</div>\n​\nUsing negative values\n\nTo use a negative hue-rotate value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"-hue-rotate-60 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert hue-rotate-180 md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:hue-rotate-0 to only apply the hue-rotate-0 utility on hover.\n\n<div class=\"hue-rotate-60 hover:hue-rotate-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:hue-rotate-0 to apply the hue-rotate-0 utility at only medium screen sizes and above.\n\n<div class=\"hue-rotate-60 md:hue-rotate-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose hue-rotate utilities. You can customize these values by editing theme.hueRotate or theme.extend.hueRotate in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      hueRotate: {\n\n        '-270': '-270deg',\n\n        270: '270deg',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off hue-rotate value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"hue-rotate-[270deg]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrayscale\nInvert\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRotating an element's hue\nUsing negative values\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grayscale - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grayscale",
    "html": "Filters\n\nGrayscale\n\nUtilities for applying grayscale filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ngrayscale-0\tfilter: grayscale(0);\n\ngrayscale\tfilter: grayscale(100%);\n\n​\nBasic usage\n​\nMaking an element grayscale\n\nUse the grayscale and grayscale-0 utilities to control whether an element should be rendered as grayscale or in full color.\n\ngrayscale-0\n\ngrayscale\n\n<div class=\"grayscale-0 ...\">\n  <!-- ... -->\n</div>\n<div class=\"grayscale ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert grayscale md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:grayscale-0 to only apply the grayscale-0 utility on hover.\n\n<div class=\"grayscale hover:grayscale-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:grayscale-0 to apply the grayscale-0 utility at only medium screen sizes and above.\n\n<div class=\"grayscale md:grayscale-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose grayscale utilities. You can customize these values by editing theme.grayscale or theme.extend.grayscale in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      grayscale: {\n\n        50: '50%',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grayscale value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grayscale-[50%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nDrop Shadow\nHue Rotate\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nMaking an element grayscale\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Drop Shadow - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/drop-shadow",
    "html": "Filters\n\nDrop Shadow\n\nUtilities for applying drop-shadow filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndrop-shadow-sm\tfilter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));\n\ndrop-shadow\tfilter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));\n\ndrop-shadow-md\tfilter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));\n\ndrop-shadow-lg\tfilter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));\n\ndrop-shadow-xl\tfilter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));\n\ndrop-shadow-2xl\tfilter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));\n\ndrop-shadow-none\tfilter: drop-shadow(0 0 #0000);\n\n​\nBasic usage\n​\nAdding a drop shadow\n\nUse the drop-shadow-{amount} utilities to add a drop shadow to an element.\n\ndrop-shadow-md\n\ndrop-shadow-lg\n\ndrop-shadow-xl\n\ndrop-shadow-2xl\n\n<div class=\"drop-shadow-md ...\">\n  <!-- ... -->\n</div>\n<div class=\"drop-shadow-lg ...\">\n  <!-- ... -->\n</div>\n<div class=\"drop-shadow-xl ...\">\n  <!-- ... -->\n</div>\n<div class=\"drop-shadow-2xl ...\">\n  <!-- ... -->\n</div>\n\nThis is useful for applying shadows to irregular shapes, like text and SVG elements. For applying shadows to regular elements, you probably want to use box shadow instead.\n\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert drop-shadow-xl md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:drop-shadow-xl to only apply the drop-shadow-xl utility on hover.\n\n<div class=\"drop-shadow-md hover:drop-shadow-xl\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:drop-shadow-xl to apply the drop-shadow-xl utility at only medium screen sizes and above.\n\n<div class=\"drop-shadow-md md:drop-shadow-xl\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose dropShadow utilities. You can customize these values by editing theme.dropShadow or theme.extend.dropShadow in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      dropShadow: {\n\n        '3xl': '0 35px 35px rgba(0, 0, 0, 0.25)',\n\n        '4xl': [\n\n            '0 35px 35px rgba(0, 0, 0, 0.25)',\n\n            '0 45px 65px rgba(0, 0, 0, 0.15)'\n\n        ]\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off drop-shadow value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nContrast\nGrayscale\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding a drop shadow\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Contrast - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/contrast",
    "html": "Filters\n\nContrast\n\nUtilities for applying contrast filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncontrast-0\tfilter: contrast(0);\n\ncontrast-50\tfilter: contrast(.5);\n\ncontrast-75\tfilter: contrast(.75);\n\ncontrast-100\tfilter: contrast(1);\n\ncontrast-125\tfilter: contrast(1.25);\n\ncontrast-150\tfilter: contrast(1.5);\n\ncontrast-200\tfilter: contrast(2);\n\n​\nBasic usage\n​\nChanging element contrast\n\nUse the contrast-{amount?} utilities to control an element’s contrast.\n\ncontrast-50\n\ncontrast-100\n\ncontrast-125\n\ncontrast-200\n\n<div class=\"contrast-50 ...\">\n  <!-- ... -->\n</div>\n<div class=\"contrast-100 ...\">\n  <!-- ... -->\n</div>\n<div class=\"contrast-125 ...\">\n  <!-- ... -->\n</div>\n<div class=\"contrast-200 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert contrast-125 md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:contrast-150 to only apply the contrast-150 utility on hover.\n\n<div class=\"contrast-125 hover:contrast-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:contrast-150 to apply the contrast-150 utility at only medium screen sizes and above.\n\n<div class=\"contrast-125 md:contrast-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose contrast utilities. You can customize these values by editing theme.contrast or theme.extend.contrast in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      contrast: {\n\n        25: '.25',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off contrast value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"contrast-[.25]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBrightness\nDrop Shadow\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging element contrast\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Blur - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/blur",
    "html": "Filters\n\nBlur\n\nUtilities for applying blur filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nblur-none\tfilter: blur(0);\n\nblur-sm\tfilter: blur(4px);\n\nblur\tfilter: blur(8px);\n\nblur-md\tfilter: blur(12px);\n\nblur-lg\tfilter: blur(16px);\n\nblur-xl\tfilter: blur(24px);\n\nblur-2xl\tfilter: blur(40px);\n\nblur-3xl\tfilter: blur(64px);\n\n​\nBasic usage\n​\nBlurring elements\n\nUse the blur-{amount?} utilities to blur an element.\n\nblur-none\n\nblur-sm\n\nblur-lg\n\nblur-2xl\n\n<div class=\"blur-none ...\">\n  <!-- ... -->\n</div>\n<div class=\"blur-sm ...\">\n  <!-- ... -->\n</div>\n<div class=\"blur-lg ...\">\n  <!-- ... -->\n</div>\n<div class=\"blur-2xl ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert brightness-150 md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:blur-lg to only apply the blur-lg utility on hover.\n\n<div class=\"blur hover:blur-lg\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:blur-lg to apply the blur-lg utility at only medium screen sizes and above.\n\n<div class=\"blur md:blur-lg\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose blur utilities. You can customize these values by editing theme.blur or theme.extend.blur in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      blur: {\n\n        xs: '2px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off blur value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"blur-[2px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackground Blend Mode\nBrightness\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nBlurring elements\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Brightness - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/brightness",
    "html": "Filters\n\nBrightness\n\nUtilities for applying brightness filters to an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbrightness-0\tfilter: brightness(0);\n\nbrightness-50\tfilter: brightness(.5);\n\nbrightness-75\tfilter: brightness(.75);\n\nbrightness-90\tfilter: brightness(.9);\n\nbrightness-95\tfilter: brightness(.95);\n\nbrightness-100\tfilter: brightness(1);\n\nbrightness-105\tfilter: brightness(1.05);\n\nbrightness-110\tfilter: brightness(1.1);\n\nbrightness-125\tfilter: brightness(1.25);\n\nbrightness-150\tfilter: brightness(1.5);\n\nbrightness-200\tfilter: brightness(2);\n\n​\nBasic usage\n​\nChanging element brightness\n\nUse the brightness-{amount?} utilities to control an element’s brightness.\n\nbrightness-50\n\nbrightness-100\n\nbrightness-125\n\nbrightness-200\n\n<div class=\"brightness-50 ...\">\n  <!-- ... -->\n</div>\n<div class=\"brightness-100 ...\">\n  <!-- ... -->\n</div>\n<div class=\"brightness-125 ...\">\n  <!-- ... -->\n</div>\n<div class=\"brightness-200 ...\">\n  <!-- ... -->\n</div>\n​\nRemoving filters\n\nTo remove all of the filters on an element at once, use the filter-none utility:\n\n<div class=\"blur-md invert brightness-150 md:filter-none\">\n  <!-- ... -->\n</div>\n\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:brightness-150 to only apply the brightness-150 utility on hover.\n\n<div class=\"brightness-110 hover:brightness-150\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:brightness-150 to apply the brightness-150 utility at only medium screen sizes and above.\n\n<div class=\"brightness-110 md:brightness-150\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose brightness utilities. You can customize these values by editing theme.brightness or theme.extend.brightness in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      brightness: {\n\n        25: '.25',\n\n        175: '1.75',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off brightness value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"brightness-[1.75]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBlur\nContrast\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging element brightness\nRemoving filters\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Blend Mode - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-blend-mode",
    "html": "Effects\n\nBackground Blend Mode\n\nUtilities for controlling how an element's background image should blend with its background color.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-blend-normal\tbackground-blend-mode: normal;\n\nbg-blend-multiply\tbackground-blend-mode: multiply;\n\nbg-blend-screen\tbackground-blend-mode: screen;\n\nbg-blend-overlay\tbackground-blend-mode: overlay;\n\nbg-blend-darken\tbackground-blend-mode: darken;\n\nbg-blend-lighten\tbackground-blend-mode: lighten;\n\nbg-blend-color-dodge\tbackground-blend-mode: color-dodge;\n\nbg-blend-color-burn\tbackground-blend-mode: color-burn;\n\nbg-blend-hard-light\tbackground-blend-mode: hard-light;\n\nbg-blend-soft-light\tbackground-blend-mode: soft-light;\n\nbg-blend-difference\tbackground-blend-mode: difference;\n\nbg-blend-exclusion\tbackground-blend-mode: exclusion;\n\nbg-blend-hue\tbackground-blend-mode: hue;\n\nbg-blend-saturation\tbackground-blend-mode: saturation;\n\nbg-blend-color\tbackground-blend-mode: color;\n\nbg-blend-luminosity\tbackground-blend-mode: luminosity;\n\n​\nBasic usage\n​\nSetting the background blend mode\n\nUse the bg-blend-{mode} utilities to control how an element’s background image(s) should blend with its background color.\n\n<div class=\"bg-blend-multiply ...\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-blend-darken to only apply the bg-blend-darken utility on hover.\n\n<div class=\"bg-blend-lighten hover:bg-blend-darken\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-blend-darken to apply the bg-blend-darken utility at only medium screen sizes and above.\n\n<div class=\"bg-blend-lighten md:bg-blend-darken\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nMix Blend Mode\nBlur\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the background blend mode\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Opacity - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/opacity",
    "html": "Effects\n\nOpacity\n\nUtilities for controlling the opacity of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nopacity-0\topacity: 0;\n\nopacity-5\topacity: 0.05;\n\nopacity-10\topacity: 0.1;\n\nopacity-20\topacity: 0.2;\n\nopacity-25\topacity: 0.25;\n\nopacity-30\topacity: 0.3;\n\nopacity-40\topacity: 0.4;\n\nopacity-50\topacity: 0.5;\n\nopacity-60\topacity: 0.6;\n\nopacity-70\topacity: 0.7;\n\nopacity-75\topacity: 0.75;\n\nopacity-80\topacity: 0.8;\n\nopacity-90\topacity: 0.9;\n\nopacity-95\topacity: 0.95;\n\nopacity-100\topacity: 1;\n\n​\nBasic usage\n​\nChanging an element’s opacity\n\nControl the opacity of an element using the opacity-{amount} utilities.\n\nopacity-100\n\nButton A\n\nopacity-75\n\nButton B\n\nopacity-50\n\nButton C\n\nopacity-25\n\nButton D\n<button class=\"bg-indigo-500 opacity-100 ...\"></button>\n<button class=\"bg-indigo-500 opacity-75 ...\"></button>\n<button class=\"bg-indigo-500 opacity-50 ...\"></button>\n<button class=\"bg-indigo-500 opacity-25 ...\"></button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:opacity-100 to only apply the opacity-100 utility on hover.\n\n<div class=\"opacity-50 hover:opacity-100\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:opacity-100 to apply the opacity-100 utility at only medium screen sizes and above.\n\n<div class=\"opacity-50 md:opacity-100\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides several opacity utilities for general purpose use. You can customize these values by editing theme.opacity or theme.extend.opacity in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      opacity: {\n\n        '67': '.67',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off opacity value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"opacity-[.67]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBox Shadow Color\nMix Blend Mode\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nChanging an element's opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Mix Blend Mode - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/mix-blend-mode",
    "html": "Effects\n\nMix Blend Mode\n\nUtilities for controlling how an element should blend with the background.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nmix-blend-normal\tmix-blend-mode: normal;\n\nmix-blend-multiply\tmix-blend-mode: multiply;\n\nmix-blend-screen\tmix-blend-mode: screen;\n\nmix-blend-overlay\tmix-blend-mode: overlay;\n\nmix-blend-darken\tmix-blend-mode: darken;\n\nmix-blend-lighten\tmix-blend-mode: lighten;\n\nmix-blend-color-dodge\tmix-blend-mode: color-dodge;\n\nmix-blend-color-burn\tmix-blend-mode: color-burn;\n\nmix-blend-hard-light\tmix-blend-mode: hard-light;\n\nmix-blend-soft-light\tmix-blend-mode: soft-light;\n\nmix-blend-difference\tmix-blend-mode: difference;\n\nmix-blend-exclusion\tmix-blend-mode: exclusion;\n\nmix-blend-hue\tmix-blend-mode: hue;\n\nmix-blend-saturation\tmix-blend-mode: saturation;\n\nmix-blend-color\tmix-blend-mode: color;\n\nmix-blend-luminosity\tmix-blend-mode: luminosity;\n\nmix-blend-plus-lighter\tmix-blend-mode: plus-lighter;\n\n​\nBasic usage\n​\nSetting an element’s blend mode\n\nUse the mix-blend-{mode} utilities to control how an element’s content should be blended with the background.\n\n<div class=\"flex justify-center -space-x-14\">\n  <div class=\"mix-blend-multiply bg-blue-400 ...\"></div>\n  <div class=\"mix-blend-multiply bg-pink-400 ...\"></div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:mix-blend-overlay to only apply the mix-blend-overlay utility on hover.\n\n<div class=\"mix-blend-multiply hover:mix-blend-overlay\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:mix-blend-overlay to apply the mix-blend-overlay utility at only medium screen sizes and above.\n\n<div class=\"mix-blend-multiply md:mix-blend-overlay\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nOpacity\nBackground Blend Mode\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting an element's blend mode\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Box Shadow Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/box-shadow-color",
    "html": "Effects\n\nBox Shadow Color\n\nUtilities for controlling the color of a box shadow.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nshadow-inherit\t--tw-shadow-color: inherit;\n\nshadow-current\t--tw-shadow-color: currentColor;\n\nshadow-transparent\t--tw-shadow-color: transparent;\n\nshadow-black\t--tw-shadow-color: #000;\n\nshadow-white\t--tw-shadow-color: #fff;\n\nshadow-slate-50\t--tw-shadow-color: #f8fafc;\n\nshadow-slate-100\t--tw-shadow-color: #f1f5f9;\n\nshadow-slate-200\t--tw-shadow-color: #e2e8f0;\n\nshadow-slate-300\t--tw-shadow-color: #cbd5e1;\n\nshadow-slate-400\t--tw-shadow-color: #94a3b8;\n\nshadow-slate-500\t--tw-shadow-color: #64748b;\n\nshadow-slate-600\t--tw-shadow-color: #475569;\n\nshadow-slate-700\t--tw-shadow-color: #334155;\n\nshadow-slate-800\t--tw-shadow-color: #1e293b;\n\nshadow-slate-900\t--tw-shadow-color: #0f172a;\n\nshadow-slate-950\t--tw-shadow-color: #020617;\n\nshadow-gray-50\t--tw-shadow-color: #f9fafb;\n\nshadow-gray-100\t--tw-shadow-color: #f3f4f6;\n\nshadow-gray-200\t--tw-shadow-color: #e5e7eb;\n\nshadow-gray-300\t--tw-shadow-color: #d1d5db;\n\nshadow-gray-400\t--tw-shadow-color: #9ca3af;\n\nshadow-gray-500\t--tw-shadow-color: #6b7280;\n\nshadow-gray-600\t--tw-shadow-color: #4b5563;\n\nshadow-gray-700\t--tw-shadow-color: #374151;\n\nshadow-gray-800\t--tw-shadow-color: #1f2937;\n\nshadow-gray-900\t--tw-shadow-color: #111827;\n\nshadow-gray-950\t--tw-shadow-color: #030712;\n\nshadow-zinc-50\t--tw-shadow-color: #fafafa;\n\nshadow-zinc-100\t--tw-shadow-color: #f4f4f5;\n\nshadow-zinc-200\t--tw-shadow-color: #e4e4e7;\n\nshadow-zinc-300\t--tw-shadow-color: #d4d4d8;\n\nshadow-zinc-400\t--tw-shadow-color: #a1a1aa;\n\nshadow-zinc-500\t--tw-shadow-color: #71717a;\n\nshadow-zinc-600\t--tw-shadow-color: #52525b;\n\nshadow-zinc-700\t--tw-shadow-color: #3f3f46;\n\nshadow-zinc-800\t--tw-shadow-color: #27272a;\n\nshadow-zinc-900\t--tw-shadow-color: #18181b;\n\nshadow-zinc-950\t--tw-shadow-color: #09090b;\n\nshadow-neutral-50\t--tw-shadow-color: #fafafa;\n\nshadow-neutral-100\t--tw-shadow-color: #f5f5f5;\n\nshadow-neutral-200\t--tw-shadow-color: #e5e5e5;\n\nshadow-neutral-300\t--tw-shadow-color: #d4d4d4;\n\nshadow-neutral-400\t--tw-shadow-color: #a3a3a3;\n\nshadow-neutral-500\t--tw-shadow-color: #737373;\n\nshadow-neutral-600\t--tw-shadow-color: #525252;\n\nshadow-neutral-700\t--tw-shadow-color: #404040;\n\nshadow-neutral-800\t--tw-shadow-color: #262626;\n\nshadow-neutral-900\t--tw-shadow-color: #171717;\n\nshadow-neutral-950\t--tw-shadow-color: #0a0a0a;\n\nshadow-stone-50\t--tw-shadow-color: #fafaf9;\n\nshadow-stone-100\t--tw-shadow-color: #f5f5f4;\n\nshadow-stone-200\t--tw-shadow-color: #e7e5e4;\n\nshadow-stone-300\t--tw-shadow-color: #d6d3d1;\n\nshadow-stone-400\t--tw-shadow-color: #a8a29e;\n\nshadow-stone-500\t--tw-shadow-color: #78716c;\n\nshadow-stone-600\t--tw-shadow-color: #57534e;\n\nshadow-stone-700\t--tw-shadow-color: #44403c;\n\nshadow-stone-800\t--tw-shadow-color: #292524;\n\nshadow-stone-900\t--tw-shadow-color: #1c1917;\n\nshadow-stone-950\t--tw-shadow-color: #0c0a09;\n\nshadow-red-50\t--tw-shadow-color: #fef2f2;\n\nshadow-red-100\t--tw-shadow-color: #fee2e2;\n\nshadow-red-200\t--tw-shadow-color: #fecaca;\n\nshadow-red-300\t--tw-shadow-color: #fca5a5;\n\nshadow-red-400\t--tw-shadow-color: #f87171;\n\nshadow-red-500\t--tw-shadow-color: #ef4444;\n\nshadow-red-600\t--tw-shadow-color: #dc2626;\n\nshadow-red-700\t--tw-shadow-color: #b91c1c;\n\nshadow-red-800\t--tw-shadow-color: #991b1b;\n\nshadow-red-900\t--tw-shadow-color: #7f1d1d;\n\nshadow-red-950\t--tw-shadow-color: #450a0a;\n\nshadow-orange-50\t--tw-shadow-color: #fff7ed;\n\nshadow-orange-100\t--tw-shadow-color: #ffedd5;\n\nshadow-orange-200\t--tw-shadow-color: #fed7aa;\n\nshadow-orange-300\t--tw-shadow-color: #fdba74;\n\nshadow-orange-400\t--tw-shadow-color: #fb923c;\n\nshadow-orange-500\t--tw-shadow-color: #f97316;\n\nshadow-orange-600\t--tw-shadow-color: #ea580c;\n\nshadow-orange-700\t--tw-shadow-color: #c2410c;\n\nshadow-orange-800\t--tw-shadow-color: #9a3412;\n\nshadow-orange-900\t--tw-shadow-color: #7c2d12;\n\nshadow-orange-950\t--tw-shadow-color: #431407;\n\nshadow-amber-50\t--tw-shadow-color: #fffbeb;\n\nshadow-amber-100\t--tw-shadow-color: #fef3c7;\n\nshadow-amber-200\t--tw-shadow-color: #fde68a;\n\nshadow-amber-300\t--tw-shadow-color: #fcd34d;\n\nshadow-amber-400\t--tw-shadow-color: #fbbf24;\n\nshadow-amber-500\t--tw-shadow-color: #f59e0b;\n\nshadow-amber-600\t--tw-shadow-color: #d97706;\n\nshadow-amber-700\t--tw-shadow-color: #b45309;\n\nshadow-amber-800\t--tw-shadow-color: #92400e;\n\nshadow-amber-900\t--tw-shadow-color: #78350f;\n\nshadow-amber-950\t--tw-shadow-color: #451a03;\n\nshadow-yellow-50\t--tw-shadow-color: #fefce8;\n\nshadow-yellow-100\t--tw-shadow-color: #fef9c3;\n\nshadow-yellow-200\t--tw-shadow-color: #fef08a;\n\nshadow-yellow-300\t--tw-shadow-color: #fde047;\n\nshadow-yellow-400\t--tw-shadow-color: #facc15;\n\nshadow-yellow-500\t--tw-shadow-color: #eab308;\n\nshadow-yellow-600\t--tw-shadow-color: #ca8a04;\n\nshadow-yellow-700\t--tw-shadow-color: #a16207;\n\nshadow-yellow-800\t--tw-shadow-color: #854d0e;\n\nshadow-yellow-900\t--tw-shadow-color: #713f12;\n\nshadow-yellow-950\t--tw-shadow-color: #422006;\n\nshadow-lime-50\t--tw-shadow-color: #f7fee7;\n\nshadow-lime-100\t--tw-shadow-color: #ecfccb;\n\nshadow-lime-200\t--tw-shadow-color: #d9f99d;\n\nshadow-lime-300\t--tw-shadow-color: #bef264;\n\nshadow-lime-400\t--tw-shadow-color: #a3e635;\n\nshadow-lime-500\t--tw-shadow-color: #84cc16;\n\nshadow-lime-600\t--tw-shadow-color: #65a30d;\n\nshadow-lime-700\t--tw-shadow-color: #4d7c0f;\n\nshadow-lime-800\t--tw-shadow-color: #3f6212;\n\nshadow-lime-900\t--tw-shadow-color: #365314;\n\nshadow-lime-950\t--tw-shadow-color: #1a2e05;\n\nshadow-green-50\t--tw-shadow-color: #f0fdf4;\n\nshadow-green-100\t--tw-shadow-color: #dcfce7;\n\nshadow-green-200\t--tw-shadow-color: #bbf7d0;\n\nshadow-green-300\t--tw-shadow-color: #86efac;\n\nshadow-green-400\t--tw-shadow-color: #4ade80;\n\nshadow-green-500\t--tw-shadow-color: #22c55e;\n\nshadow-green-600\t--tw-shadow-color: #16a34a;\n\nshadow-green-700\t--tw-shadow-color: #15803d;\n\nshadow-green-800\t--tw-shadow-color: #166534;\n\nshadow-green-900\t--tw-shadow-color: #14532d;\n\nshadow-green-950\t--tw-shadow-color: #052e16;\n\nshadow-emerald-50\t--tw-shadow-color: #ecfdf5;\n\nshadow-emerald-100\t--tw-shadow-color: #d1fae5;\n\nshadow-emerald-200\t--tw-shadow-color: #a7f3d0;\n\nshadow-emerald-300\t--tw-shadow-color: #6ee7b7;\n\nshadow-emerald-400\t--tw-shadow-color: #34d399;\n\nshadow-emerald-500\t--tw-shadow-color: #10b981;\n\nshadow-emerald-600\t--tw-shadow-color: #059669;\n\nshadow-emerald-700\t--tw-shadow-color: #047857;\n\nshadow-emerald-800\t--tw-shadow-color: #065f46;\n\nshadow-emerald-900\t--tw-shadow-color: #064e3b;\n\nshadow-emerald-950\t--tw-shadow-color: #022c22;\n\nshadow-teal-50\t--tw-shadow-color: #f0fdfa;\n\nshadow-teal-100\t--tw-shadow-color: #ccfbf1;\n\nshadow-teal-200\t--tw-shadow-color: #99f6e4;\n\nshadow-teal-300\t--tw-shadow-color: #5eead4;\n\nshadow-teal-400\t--tw-shadow-color: #2dd4bf;\n\nshadow-teal-500\t--tw-shadow-color: #14b8a6;\n\nshadow-teal-600\t--tw-shadow-color: #0d9488;\n\nshadow-teal-700\t--tw-shadow-color: #0f766e;\n\nshadow-teal-800\t--tw-shadow-color: #115e59;\n\nshadow-teal-900\t--tw-shadow-color: #134e4a;\n\nshadow-teal-950\t--tw-shadow-color: #042f2e;\n\nshadow-cyan-50\t--tw-shadow-color: #ecfeff;\n\nshadow-cyan-100\t--tw-shadow-color: #cffafe;\n\nshadow-cyan-200\t--tw-shadow-color: #a5f3fc;\n\nshadow-cyan-300\t--tw-shadow-color: #67e8f9;\n\nshadow-cyan-400\t--tw-shadow-color: #22d3ee;\n\nshadow-cyan-500\t--tw-shadow-color: #06b6d4;\n\nshadow-cyan-600\t--tw-shadow-color: #0891b2;\n\nshadow-cyan-700\t--tw-shadow-color: #0e7490;\n\nshadow-cyan-800\t--tw-shadow-color: #155e75;\n\nshadow-cyan-900\t--tw-shadow-color: #164e63;\n\nshadow-cyan-950\t--tw-shadow-color: #083344;\n\nshadow-sky-50\t--tw-shadow-color: #f0f9ff;\n\nshadow-sky-100\t--tw-shadow-color: #e0f2fe;\n\nshadow-sky-200\t--tw-shadow-color: #bae6fd;\n\nshadow-sky-300\t--tw-shadow-color: #7dd3fc;\n\nshadow-sky-400\t--tw-shadow-color: #38bdf8;\n\nshadow-sky-500\t--tw-shadow-color: #0ea5e9;\n\nshadow-sky-600\t--tw-shadow-color: #0284c7;\n\nshadow-sky-700\t--tw-shadow-color: #0369a1;\n\nshadow-sky-800\t--tw-shadow-color: #075985;\n\nshadow-sky-900\t--tw-shadow-color: #0c4a6e;\n\nshadow-sky-950\t--tw-shadow-color: #082f49;\n\nshadow-blue-50\t--tw-shadow-color: #eff6ff;\n\nshadow-blue-100\t--tw-shadow-color: #dbeafe;\n\nshadow-blue-200\t--tw-shadow-color: #bfdbfe;\n\nshadow-blue-300\t--tw-shadow-color: #93c5fd;\n\nshadow-blue-400\t--tw-shadow-color: #60a5fa;\n\nshadow-blue-500\t--tw-shadow-color: #3b82f6;\n\nshadow-blue-600\t--tw-shadow-color: #2563eb;\n\nshadow-blue-700\t--tw-shadow-color: #1d4ed8;\n\nshadow-blue-800\t--tw-shadow-color: #1e40af;\n\nshadow-blue-900\t--tw-shadow-color: #1e3a8a;\n\nshadow-blue-950\t--tw-shadow-color: #172554;\n\nshadow-indigo-50\t--tw-shadow-color: #eef2ff;\n\nshadow-indigo-100\t--tw-shadow-color: #e0e7ff;\n\nshadow-indigo-200\t--tw-shadow-color: #c7d2fe;\n\nshadow-indigo-300\t--tw-shadow-color: #a5b4fc;\n\nshadow-indigo-400\t--tw-shadow-color: #818cf8;\n\nshadow-indigo-500\t--tw-shadow-color: #6366f1;\n\nshadow-indigo-600\t--tw-shadow-color: #4f46e5;\n\nshadow-indigo-700\t--tw-shadow-color: #4338ca;\n\nshadow-indigo-800\t--tw-shadow-color: #3730a3;\n\nshadow-indigo-900\t--tw-shadow-color: #312e81;\n\nshadow-indigo-950\t--tw-shadow-color: #1e1b4b;\n\nshadow-violet-50\t--tw-shadow-color: #f5f3ff;\n\nshadow-violet-100\t--tw-shadow-color: #ede9fe;\n\nshadow-violet-200\t--tw-shadow-color: #ddd6fe;\n\nshadow-violet-300\t--tw-shadow-color: #c4b5fd;\n\nshadow-violet-400\t--tw-shadow-color: #a78bfa;\n\nshadow-violet-500\t--tw-shadow-color: #8b5cf6;\n\nshadow-violet-600\t--tw-shadow-color: #7c3aed;\n\nshadow-violet-700\t--tw-shadow-color: #6d28d9;\n\nshadow-violet-800\t--tw-shadow-color: #5b21b6;\n\nshadow-violet-900\t--tw-shadow-color: #4c1d95;\n\nshadow-violet-950\t--tw-shadow-color: #2e1065;\n\nshadow-purple-50\t--tw-shadow-color: #faf5ff;\n\nshadow-purple-100\t--tw-shadow-color: #f3e8ff;\n\nshadow-purple-200\t--tw-shadow-color: #e9d5ff;\n\nshadow-purple-300\t--tw-shadow-color: #d8b4fe;\n\nshadow-purple-400\t--tw-shadow-color: #c084fc;\n\nshadow-purple-500\t--tw-shadow-color: #a855f7;\n\nshadow-purple-600\t--tw-shadow-color: #9333ea;\n\nshadow-purple-700\t--tw-shadow-color: #7e22ce;\n\nshadow-purple-800\t--tw-shadow-color: #6b21a8;\n\nshadow-purple-900\t--tw-shadow-color: #581c87;\n\nshadow-purple-950\t--tw-shadow-color: #3b0764;\n\nshadow-fuchsia-50\t--tw-shadow-color: #fdf4ff;\n\nshadow-fuchsia-100\t--tw-shadow-color: #fae8ff;\n\nshadow-fuchsia-200\t--tw-shadow-color: #f5d0fe;\n\nshadow-fuchsia-300\t--tw-shadow-color: #f0abfc;\n\nshadow-fuchsia-400\t--tw-shadow-color: #e879f9;\n\nshadow-fuchsia-500\t--tw-shadow-color: #d946ef;\n\nshadow-fuchsia-600\t--tw-shadow-color: #c026d3;\n\nshadow-fuchsia-700\t--tw-shadow-color: #a21caf;\n\nshadow-fuchsia-800\t--tw-shadow-color: #86198f;\n\nshadow-fuchsia-900\t--tw-shadow-color: #701a75;\n\nshadow-fuchsia-950\t--tw-shadow-color: #4a044e;\n\nshadow-pink-50\t--tw-shadow-color: #fdf2f8;\n\nshadow-pink-100\t--tw-shadow-color: #fce7f3;\n\nshadow-pink-200\t--tw-shadow-color: #fbcfe8;\n\nshadow-pink-300\t--tw-shadow-color: #f9a8d4;\n\nshadow-pink-400\t--tw-shadow-color: #f472b6;\n\nshadow-pink-500\t--tw-shadow-color: #ec4899;\n\nshadow-pink-600\t--tw-shadow-color: #db2777;\n\nshadow-pink-700\t--tw-shadow-color: #be185d;\n\nshadow-pink-800\t--tw-shadow-color: #9d174d;\n\nshadow-pink-900\t--tw-shadow-color: #831843;\n\nshadow-pink-950\t--tw-shadow-color: #500724;\n\nshadow-rose-50\t--tw-shadow-color: #fff1f2;\n\nshadow-rose-100\t--tw-shadow-color: #ffe4e6;\n\nshadow-rose-200\t--tw-shadow-color: #fecdd3;\n\nshadow-rose-300\t--tw-shadow-color: #fda4af;\n\nshadow-rose-400\t--tw-shadow-color: #fb7185;\n\nshadow-rose-500\t--tw-shadow-color: #f43f5e;\n\nshadow-rose-600\t--tw-shadow-color: #e11d48;\n\nshadow-rose-700\t--tw-shadow-color: #be123c;\n\nshadow-rose-800\t--tw-shadow-color: #9f1239;\n\nshadow-rose-900\t--tw-shadow-color: #881337;\n\nshadow-rose-950\t--tw-shadow-color: #4c0519;\n\n​\nBasic usage\n​\nSetting the box shadow color\n\nUse the shadow-{color} utilities to change the color of an existing box shadow. By default colored shadows have an opacity of 100%, but you can adjust this using the opacity modifier.\n\nshadow-cyan-500/50\n\nSubscribe\n\nshadow-blue-500/50\n\nSubscribe\n\nshadow-indigo-500/50\n\nSubscribe\n<button class=\"bg-cyan-500 shadow-lg shadow-cyan-500/50 ...\">Subscribe</button>\n<button class=\"bg-blue-500 shadow-lg shadow-blue-500/50 ...\">Subscribe</button>\n<button class=\"bg-indigo-500 shadow-lg shadow-indigo-500/50 ...\">Subscribe</button>\n​\nUsing shadows on colored backgrounds\n\nWhen using shadows on a colored background, colored shadows can often look more natural than the default black-based shadows, which tend to appear gray and washed-out.\n\nDefault shadow\n\nSubscribe\n\nColored shadow\n\nSubscribe\n<!-- Default shadow-->\n<button class=\"shadow-lg\">Subscribe</button>\n\n<!-- Colored shadow-->\n<button class=\"shadow-lg shadow-indigo-500/40 ...\">Subscribe</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:shadow-indigo-500/40 to only apply the shadow-indigo-500/40 utility on hover.\n\n<button class=\"shadow shadow-blue-500/40 hover:shadow-indigo-500/40\">\n  <!-- ... -->\n</button>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:shadow-indigo-500/40 to apply the shadow-indigo-500/40 utility at only medium screen sizes and above.\n\n<button class=\"shadow shadow-blue-500/40 md:shadow-indigo-500/40\">\n  <!-- ... -->\n</button>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nPreserving shadow color when changing the shadow size\n\nNote that if you change the box shadow size at a different breakpoint, or on another state like hover, it will override any existing shadow colors.\n\n<!-- This shadow will NOT be red at medium screens and above -->\n<div class=\"shadow-lg shadow-red-500 md:shadow-xl\"></div>\n\nTo preserve the shadow color in these states, it needs to be respecified:\n\n<!-- This shadow WILL be red at medium screens and above -->\n<div class=\"shadow-lg shadow-red-500 md:shadow-xl md:shadow-red-500\"></div>\n\nIt’s necessary for Tailwind to work this way, as otherwise there would be no way to switch back to the default shadow.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as box shadow colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your box shadow colors by editing theme.boxShadowColor or theme.extend.boxShadowColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off box-shadow value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<button class=\"shadow-[#50d71e]\">\n  <!-- ... -->\n</button>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBox Shadow\nOpacity\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the box shadow color\nUsing shadows on colored backgrounds\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nPreserving shadow color when changing the shadow size\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Ring Offset Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/ring-offset-color",
    "html": "Borders\n\nRing Offset Color\n\nUtilities for setting the color of outline ring offsets.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nring-offset-inherit\t--tw-ring-offset-color: inherit;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-current\t--tw-ring-offset-color: currentColor;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-transparent\t--tw-ring-offset-color: transparent;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-black\t--tw-ring-offset-color: #000;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-white\t--tw-ring-offset-color: #fff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-50\t--tw-ring-offset-color: #f8fafc;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-100\t--tw-ring-offset-color: #f1f5f9;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-200\t--tw-ring-offset-color: #e2e8f0;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-300\t--tw-ring-offset-color: #cbd5e1;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-400\t--tw-ring-offset-color: #94a3b8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-500\t--tw-ring-offset-color: #64748b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-600\t--tw-ring-offset-color: #475569;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-700\t--tw-ring-offset-color: #334155;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-800\t--tw-ring-offset-color: #1e293b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-900\t--tw-ring-offset-color: #0f172a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-slate-950\t--tw-ring-offset-color: #020617;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-50\t--tw-ring-offset-color: #f9fafb;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-100\t--tw-ring-offset-color: #f3f4f6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-200\t--tw-ring-offset-color: #e5e7eb;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-300\t--tw-ring-offset-color: #d1d5db;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-400\t--tw-ring-offset-color: #9ca3af;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-500\t--tw-ring-offset-color: #6b7280;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-600\t--tw-ring-offset-color: #4b5563;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-700\t--tw-ring-offset-color: #374151;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-800\t--tw-ring-offset-color: #1f2937;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-900\t--tw-ring-offset-color: #111827;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-gray-950\t--tw-ring-offset-color: #030712;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-50\t--tw-ring-offset-color: #fafafa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-100\t--tw-ring-offset-color: #f4f4f5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-200\t--tw-ring-offset-color: #e4e4e7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-300\t--tw-ring-offset-color: #d4d4d8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-400\t--tw-ring-offset-color: #a1a1aa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-500\t--tw-ring-offset-color: #71717a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-600\t--tw-ring-offset-color: #52525b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-700\t--tw-ring-offset-color: #3f3f46;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-800\t--tw-ring-offset-color: #27272a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-900\t--tw-ring-offset-color: #18181b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-zinc-950\t--tw-ring-offset-color: #09090b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-50\t--tw-ring-offset-color: #fafafa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-100\t--tw-ring-offset-color: #f5f5f5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-200\t--tw-ring-offset-color: #e5e5e5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-300\t--tw-ring-offset-color: #d4d4d4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-400\t--tw-ring-offset-color: #a3a3a3;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-500\t--tw-ring-offset-color: #737373;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-600\t--tw-ring-offset-color: #525252;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-700\t--tw-ring-offset-color: #404040;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-800\t--tw-ring-offset-color: #262626;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-900\t--tw-ring-offset-color: #171717;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-neutral-950\t--tw-ring-offset-color: #0a0a0a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-50\t--tw-ring-offset-color: #fafaf9;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-100\t--tw-ring-offset-color: #f5f5f4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-200\t--tw-ring-offset-color: #e7e5e4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-300\t--tw-ring-offset-color: #d6d3d1;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-400\t--tw-ring-offset-color: #a8a29e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-500\t--tw-ring-offset-color: #78716c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-600\t--tw-ring-offset-color: #57534e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-700\t--tw-ring-offset-color: #44403c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-800\t--tw-ring-offset-color: #292524;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-900\t--tw-ring-offset-color: #1c1917;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-stone-950\t--tw-ring-offset-color: #0c0a09;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-50\t--tw-ring-offset-color: #fef2f2;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-100\t--tw-ring-offset-color: #fee2e2;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-200\t--tw-ring-offset-color: #fecaca;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-300\t--tw-ring-offset-color: #fca5a5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-400\t--tw-ring-offset-color: #f87171;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-500\t--tw-ring-offset-color: #ef4444;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-600\t--tw-ring-offset-color: #dc2626;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-700\t--tw-ring-offset-color: #b91c1c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-800\t--tw-ring-offset-color: #991b1b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-900\t--tw-ring-offset-color: #7f1d1d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-red-950\t--tw-ring-offset-color: #450a0a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-50\t--tw-ring-offset-color: #fff7ed;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-100\t--tw-ring-offset-color: #ffedd5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-200\t--tw-ring-offset-color: #fed7aa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-300\t--tw-ring-offset-color: #fdba74;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-400\t--tw-ring-offset-color: #fb923c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-500\t--tw-ring-offset-color: #f97316;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-600\t--tw-ring-offset-color: #ea580c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-700\t--tw-ring-offset-color: #c2410c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-800\t--tw-ring-offset-color: #9a3412;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-900\t--tw-ring-offset-color: #7c2d12;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-orange-950\t--tw-ring-offset-color: #431407;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-50\t--tw-ring-offset-color: #fffbeb;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-100\t--tw-ring-offset-color: #fef3c7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-200\t--tw-ring-offset-color: #fde68a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-300\t--tw-ring-offset-color: #fcd34d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-400\t--tw-ring-offset-color: #fbbf24;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-500\t--tw-ring-offset-color: #f59e0b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-600\t--tw-ring-offset-color: #d97706;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-700\t--tw-ring-offset-color: #b45309;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-800\t--tw-ring-offset-color: #92400e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-900\t--tw-ring-offset-color: #78350f;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-amber-950\t--tw-ring-offset-color: #451a03;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-50\t--tw-ring-offset-color: #fefce8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-100\t--tw-ring-offset-color: #fef9c3;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-200\t--tw-ring-offset-color: #fef08a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-300\t--tw-ring-offset-color: #fde047;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-400\t--tw-ring-offset-color: #facc15;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-500\t--tw-ring-offset-color: #eab308;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-600\t--tw-ring-offset-color: #ca8a04;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-700\t--tw-ring-offset-color: #a16207;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-800\t--tw-ring-offset-color: #854d0e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-900\t--tw-ring-offset-color: #713f12;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-yellow-950\t--tw-ring-offset-color: #422006;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-50\t--tw-ring-offset-color: #f7fee7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-100\t--tw-ring-offset-color: #ecfccb;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-200\t--tw-ring-offset-color: #d9f99d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-300\t--tw-ring-offset-color: #bef264;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-400\t--tw-ring-offset-color: #a3e635;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-500\t--tw-ring-offset-color: #84cc16;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-600\t--tw-ring-offset-color: #65a30d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-700\t--tw-ring-offset-color: #4d7c0f;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-800\t--tw-ring-offset-color: #3f6212;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-900\t--tw-ring-offset-color: #365314;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-lime-950\t--tw-ring-offset-color: #1a2e05;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-50\t--tw-ring-offset-color: #f0fdf4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-100\t--tw-ring-offset-color: #dcfce7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-200\t--tw-ring-offset-color: #bbf7d0;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-300\t--tw-ring-offset-color: #86efac;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-400\t--tw-ring-offset-color: #4ade80;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-500\t--tw-ring-offset-color: #22c55e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-600\t--tw-ring-offset-color: #16a34a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-700\t--tw-ring-offset-color: #15803d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-800\t--tw-ring-offset-color: #166534;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-900\t--tw-ring-offset-color: #14532d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-green-950\t--tw-ring-offset-color: #052e16;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-50\t--tw-ring-offset-color: #ecfdf5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-100\t--tw-ring-offset-color: #d1fae5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-200\t--tw-ring-offset-color: #a7f3d0;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-300\t--tw-ring-offset-color: #6ee7b7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-400\t--tw-ring-offset-color: #34d399;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-500\t--tw-ring-offset-color: #10b981;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-600\t--tw-ring-offset-color: #059669;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-700\t--tw-ring-offset-color: #047857;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-800\t--tw-ring-offset-color: #065f46;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-900\t--tw-ring-offset-color: #064e3b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-emerald-950\t--tw-ring-offset-color: #022c22;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-50\t--tw-ring-offset-color: #f0fdfa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-100\t--tw-ring-offset-color: #ccfbf1;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-200\t--tw-ring-offset-color: #99f6e4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-300\t--tw-ring-offset-color: #5eead4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-400\t--tw-ring-offset-color: #2dd4bf;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-500\t--tw-ring-offset-color: #14b8a6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-600\t--tw-ring-offset-color: #0d9488;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-700\t--tw-ring-offset-color: #0f766e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-800\t--tw-ring-offset-color: #115e59;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-900\t--tw-ring-offset-color: #134e4a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-teal-950\t--tw-ring-offset-color: #042f2e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-50\t--tw-ring-offset-color: #ecfeff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-100\t--tw-ring-offset-color: #cffafe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-200\t--tw-ring-offset-color: #a5f3fc;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-300\t--tw-ring-offset-color: #67e8f9;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-400\t--tw-ring-offset-color: #22d3ee;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-500\t--tw-ring-offset-color: #06b6d4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-600\t--tw-ring-offset-color: #0891b2;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-700\t--tw-ring-offset-color: #0e7490;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-800\t--tw-ring-offset-color: #155e75;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-900\t--tw-ring-offset-color: #164e63;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-cyan-950\t--tw-ring-offset-color: #083344;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-50\t--tw-ring-offset-color: #f0f9ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-100\t--tw-ring-offset-color: #e0f2fe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-200\t--tw-ring-offset-color: #bae6fd;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-300\t--tw-ring-offset-color: #7dd3fc;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-400\t--tw-ring-offset-color: #38bdf8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-500\t--tw-ring-offset-color: #0ea5e9;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-600\t--tw-ring-offset-color: #0284c7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-700\t--tw-ring-offset-color: #0369a1;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-800\t--tw-ring-offset-color: #075985;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-900\t--tw-ring-offset-color: #0c4a6e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-sky-950\t--tw-ring-offset-color: #082f49;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-50\t--tw-ring-offset-color: #eff6ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-100\t--tw-ring-offset-color: #dbeafe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-200\t--tw-ring-offset-color: #bfdbfe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-300\t--tw-ring-offset-color: #93c5fd;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-400\t--tw-ring-offset-color: #60a5fa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-500\t--tw-ring-offset-color: #3b82f6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-600\t--tw-ring-offset-color: #2563eb;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-700\t--tw-ring-offset-color: #1d4ed8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-800\t--tw-ring-offset-color: #1e40af;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-900\t--tw-ring-offset-color: #1e3a8a;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-blue-950\t--tw-ring-offset-color: #172554;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-50\t--tw-ring-offset-color: #eef2ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-100\t--tw-ring-offset-color: #e0e7ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-200\t--tw-ring-offset-color: #c7d2fe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-300\t--tw-ring-offset-color: #a5b4fc;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-400\t--tw-ring-offset-color: #818cf8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-500\t--tw-ring-offset-color: #6366f1;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-600\t--tw-ring-offset-color: #4f46e5;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-700\t--tw-ring-offset-color: #4338ca;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-800\t--tw-ring-offset-color: #3730a3;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-900\t--tw-ring-offset-color: #312e81;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-indigo-950\t--tw-ring-offset-color: #1e1b4b;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-50\t--tw-ring-offset-color: #f5f3ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-100\t--tw-ring-offset-color: #ede9fe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-200\t--tw-ring-offset-color: #ddd6fe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-300\t--tw-ring-offset-color: #c4b5fd;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-400\t--tw-ring-offset-color: #a78bfa;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-500\t--tw-ring-offset-color: #8b5cf6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-600\t--tw-ring-offset-color: #7c3aed;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-700\t--tw-ring-offset-color: #6d28d9;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-800\t--tw-ring-offset-color: #5b21b6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-900\t--tw-ring-offset-color: #4c1d95;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-violet-950\t--tw-ring-offset-color: #2e1065;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-50\t--tw-ring-offset-color: #faf5ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-100\t--tw-ring-offset-color: #f3e8ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-200\t--tw-ring-offset-color: #e9d5ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-300\t--tw-ring-offset-color: #d8b4fe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-400\t--tw-ring-offset-color: #c084fc;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-500\t--tw-ring-offset-color: #a855f7;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-600\t--tw-ring-offset-color: #9333ea;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-700\t--tw-ring-offset-color: #7e22ce;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-800\t--tw-ring-offset-color: #6b21a8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-900\t--tw-ring-offset-color: #581c87;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-purple-950\t--tw-ring-offset-color: #3b0764;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-50\t--tw-ring-offset-color: #fdf4ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-100\t--tw-ring-offset-color: #fae8ff;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-200\t--tw-ring-offset-color: #f5d0fe;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-300\t--tw-ring-offset-color: #f0abfc;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-400\t--tw-ring-offset-color: #e879f9;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-500\t--tw-ring-offset-color: #d946ef;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-600\t--tw-ring-offset-color: #c026d3;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-700\t--tw-ring-offset-color: #a21caf;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-800\t--tw-ring-offset-color: #86198f;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-900\t--tw-ring-offset-color: #701a75;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-fuchsia-950\t--tw-ring-offset-color: #4a044e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-50\t--tw-ring-offset-color: #fdf2f8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-100\t--tw-ring-offset-color: #fce7f3;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-200\t--tw-ring-offset-color: #fbcfe8;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-300\t--tw-ring-offset-color: #f9a8d4;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-400\t--tw-ring-offset-color: #f472b6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-500\t--tw-ring-offset-color: #ec4899;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-600\t--tw-ring-offset-color: #db2777;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-700\t--tw-ring-offset-color: #be185d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-800\t--tw-ring-offset-color: #9d174d;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-900\t--tw-ring-offset-color: #831843;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-pink-950\t--tw-ring-offset-color: #500724;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-50\t--tw-ring-offset-color: #fff1f2;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-100\t--tw-ring-offset-color: #ffe4e6;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-200\t--tw-ring-offset-color: #fecdd3;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-300\t--tw-ring-offset-color: #fda4af;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-400\t--tw-ring-offset-color: #fb7185;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-500\t--tw-ring-offset-color: #f43f5e;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-600\t--tw-ring-offset-color: #e11d48;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-700\t--tw-ring-offset-color: #be123c;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-800\t--tw-ring-offset-color: #9f1239;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-900\t--tw-ring-offset-color: #881337;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-rose-950\t--tw-ring-offset-color: #4c0519;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\n​\nBasic usage\n​\nSetting the ring offset color\n\nUse the ring-offset-{color} utilities to change the color of a ring offset. Usually this is done to try and match the offset to the parent background color, since true box-shadow offsets aren’t actually possible in CSS.\n\ndark:ring-offset-slate-900\n\nSave Changes\n<button class=\"ring-2 ring-purple-500 ring-offset-4 ring-offset-slate-50 dark:ring-offset-slate-900 ...\">\n  Save Changes\n</button>\n​\nChanging the opacity\n\nControl the opacity of an element’s ring offset color using the color opacity modifier.\n\n<button class=\"ring-2 ring-purple-500 ring-offset-4 ring-offset-purple-100/50\"></button>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<button class=\"ring-2 ring-purple-500 ring-offset-4 ring-offset-purple-100/[.55]\"></button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:ring-offset-blue-500 to only apply the ring-offset-blue-500 utility on hover.\n\n<div class=\"ring-2 ring-offset-2 ring-offset-blue-300 hover:ring-offset-blue-500\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:ring-offset-blue-500 to apply the ring-offset-blue-500 utility at only medium screen sizes and above.\n\n<div class=\"ring-2 ring-offset-2 ring-offset-blue-300 md:ring-offset-blue-500\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as ring offset color colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your ring offset color colors by editing theme.ringOffsetColor or theme.extend.ringOffsetColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off ring-offset-{color} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"ring-offset-[#50d71e]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nRing Offset Width\nBox Shadow\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the ring offset color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Box Shadow - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/box-shadow",
    "html": "Effects\n\nBox Shadow\n\nUtilities for controlling the box shadow of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nshadow-sm\tbox-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n\nshadow\tbox-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n\nshadow-md\tbox-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n\nshadow-lg\tbox-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n\nshadow-xl\tbox-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n\nshadow-2xl\tbox-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n\nshadow-inner\tbox-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);\n\nshadow-none\tbox-shadow: 0 0 #0000;\n\n​\nBasic usage\n​\nAdding an outer shadow\n\nUse the shadow-sm, shadow, shadow-md, shadow-lg, shadow-xl, or shadow-2xl utilities to apply different sized outer box shadows to an element.\n\nshadow-md\n\nshadow-lg\n\nshadow-xl\n\nshadow-2xl\n\n<div class=\"shadow-md ...\"></div>\n<div class=\"shadow-lg ...\"></div>\n<div class=\"shadow-xl ...\"></div>\n<div class=\"shadow-2xl ...\"></div>\n​\nAdding an inner shadow\n\nUse the shadow-inner utility to apply a subtle inset box shadow to an element. This can be useful for things like form controls or wells.\n\nshadow-inner\n\n<div class=\"shadow-inner ...\"></div>\n​\nRemoving the shadow\n\nUse shadow-none to remove an existing box shadow from an element. This is most commonly used to remove a shadow that was applied at a smaller breakpoint.\n\nshadow-none\n\n<div class=\"shadow-none ...\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:shadow-lg to only apply the shadow-lg utility on hover.\n\n<div class=\"shadow hover:shadow-lg\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:shadow-lg to apply the shadow-lg utility at only medium screen sizes and above.\n\n<div class=\"shadow md:shadow-lg\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides six drop shadow utilities, one inner shadow utility, and a utility for removing existing shadows. You can customize these values by editing theme.boxShadow or theme.extend.boxShadow in your tailwind.config.js file.\n\nIf a DEFAULT shadow is provided, it will be used for the non-suffixed shadow utility. Any other keys will be used as suffixes, for example the key '2' will create a corresponding shadow-2 utility.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      boxShadow: {\n\n        '3xl': '0 35px 60px -15px rgba(0, 0, 0, 0.3)',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off box-shadow value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"shadow-[0_35px_60px_-15px_rgba(0,0,0,0.3)]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nRing Offset Color\nBox Shadow Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding an outer shadow\nAdding an inner shadow\nRemoving the shadow\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Ring Offset Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/ring-offset-width",
    "html": "Borders\n\nRing Offset Width\n\nUtilities for simulating an offset when adding outline rings.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nring-offset-0\t--tw-ring-offset-width: 0px;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-1\t--tw-ring-offset-width: 1px;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-2\t--tw-ring-offset-width: 2px;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-4\t--tw-ring-offset-width: 4px;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\nring-offset-8\t--tw-ring-offset-width: 8px;\nbox-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);\n\n​\nBasic usage\n​\nSetting the ring offset width\n\nUse the ring-offset-{width} utilities to simulate an offset by adding solid white box-shadow and increasing the thickness of the accompanying outline ring to accommodate the offset.\n\nring-offset-0\n\nButton A\n\nring-offset-2\n\nButton B\n\nring-offset-4\n\nButton C\n<button class=\"... ring ring-pink-500 ring-offset-0\">Button A</button>\n<button class=\"... ring ring-pink-500 ring-offset-2\">Button B</button>\n<button class=\"... ring ring-pink-500 ring-offset-4\">Button C</button>\n​\nChanging the offset color\n\nYou can’t actually offset a box-shadow in CSS, so we have to fake it using a solid color shadow that matches the parent background color. We use white by default, but if you are adding a ring offset over a different background color, you should use the ring-offset-{color} utilities to match the parent background color:\n\ndark:ring-offset-slate-900\n\nSave Changes\n<button class=\"ring ring-pink-500 ring-offset-2 ring-offset-slate-50 dark:ring-offset-slate-900 ...\">\n  Save Changes\n</button>\n\nFor more information, see the ring offset color documentation.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:ring-offset-4 to only apply the ring-offset-4 utility on hover.\n\n<button class=\"ring-2 ring-offset-2 hover:ring-offset-4\">\n  <!-- ... -->\n</button>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:ring-offset-4 to apply the ring-offset-4 utility at only medium screen sizes and above.\n\n<button class=\"ring-2 ring-offset-2 md:ring-offset-4\">\n  <!-- ... -->\n</button>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nTo customize which ring offset width utilities are generated, add your custom values under ringOffsetWidth key in the theme section of your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      ringOffsetWidth: {\n        '3': '3px',\n        '6': '6px',\n        '10': '10px',\n      }\n    }\n  }\n}\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off ring-offset value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"ring-offset-[3px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nRing Color\nRing Offset Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the ring offset width\nChanging the offset color\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Ring Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/ring-width",
    "html": "Borders\n\nRing Width\n\nUtilities for creating outline rings with box-shadows.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nring-0\tbox-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n\nring-1\tbox-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n\nring-2\tbox-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n\nring\tbox-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n\nring-4\tbox-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n\nring-8\tbox-shadow: var(--tw-ring-inset) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n\nring-inset\t--tw-ring-inset: inset;\n\n​\nBasic usage\n​\nAdding a ring\n\nUse the ring-{width} utilities to apply solid box-shadow of a specific thickness to an element. Rings are a semi-transparent blue color by default, similar to the default focus ring style in many systems.\n\nring-2\n\nButton A\n\nring\n\nButton B\n\nring-4\n\nButton C\n<button class=\"... ring-offset-2 ring-2\">Button A</button>\n<button class=\"... ring-offset-2 ring\">Button B</button>\n<button class=\"... ring-offset-2 ring-4\">Button C</button>\n\nRing utilities compose gracefully with regular shadow-{size} utilities and can be combined on the same element.\n\nYou can also control the color, opacity, and offset of rings using the ringColor, ringOpacity, and ringOffsetWidth utilities.\n\n​\nFocus rings\n\nThe ring width utilities make it easy to use custom focus rings by adding focus: to the beginning of any ring-{width} utility.\n\nFocus this button to see the ring appear\n\nSave Changes\n<button class=\"... focus:ring-2\">Save Changes</button>\n\nThe focus variant is enabled by default for the ringColor, ringOpacity, ringOffsetWidth, and ringOffsetColor utilities as well.\n\n​\nInset rings\n\nUse the ring-inset utility to force a ring to render on the inside of an element instead of the outside. This can be useful for elements at the edge of the screen where part of the ring wouldn’t be visible.\n\nSave Changes\n<button class=\"... ring-2 ring-pink-500 ring-inset\">\n  Save Changes\n</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:ring-4 to only apply the ring-4 utility on hover.\n\n<div class=\"ring-2 hover:ring-4\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:ring-4 to apply the ring-4 utility at only medium screen sizes and above.\n\n<div class=\"ring-2 md:ring-4\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes a handful of general purpose ring-width utilities. You can customize these values by editing theme.ringWidth or theme.extend.ringWidth in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      ringWidth: {\n\n        '10': '10px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off ring value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"ring-[10px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nOutline Offset\nRing Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding a ring\nFocus rings\nInset rings\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Ring Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/ring-color",
    "html": "Borders\n\nRing Color\n\nUtilities for setting the color of outline rings.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nring-inherit\t--tw-ring-color: inherit;\n\nring-current\t--tw-ring-color: currentColor;\n\nring-transparent\t--tw-ring-color: transparent;\n\nring-black\t--tw-ring-color: rgb(0 0 0);\n\nring-white\t--tw-ring-color: rgb(255 255 255);\n\nring-slate-50\t--tw-ring-color: rgb(248 250 252);\n\nring-slate-100\t--tw-ring-color: rgb(241 245 249);\n\nring-slate-200\t--tw-ring-color: rgb(226 232 240);\n\nring-slate-300\t--tw-ring-color: rgb(203 213 225);\n\nring-slate-400\t--tw-ring-color: rgb(148 163 184);\n\nring-slate-500\t--tw-ring-color: rgb(100 116 139);\n\nring-slate-600\t--tw-ring-color: rgb(71 85 105);\n\nring-slate-700\t--tw-ring-color: rgb(51 65 85);\n\nring-slate-800\t--tw-ring-color: rgb(30 41 59);\n\nring-slate-900\t--tw-ring-color: rgb(15 23 42);\n\nring-slate-950\t--tw-ring-color: rgb(2 6 23);\n\nring-gray-50\t--tw-ring-color: rgb(249 250 251);\n\nring-gray-100\t--tw-ring-color: rgb(243 244 246);\n\nring-gray-200\t--tw-ring-color: rgb(229 231 235);\n\nring-gray-300\t--tw-ring-color: rgb(209 213 219);\n\nring-gray-400\t--tw-ring-color: rgb(156 163 175);\n\nring-gray-500\t--tw-ring-color: rgb(107 114 128);\n\nring-gray-600\t--tw-ring-color: rgb(75 85 99);\n\nring-gray-700\t--tw-ring-color: rgb(55 65 81);\n\nring-gray-800\t--tw-ring-color: rgb(31 41 55);\n\nring-gray-900\t--tw-ring-color: rgb(17 24 39);\n\nring-gray-950\t--tw-ring-color: rgb(3 7 18);\n\nring-zinc-50\t--tw-ring-color: rgb(250 250 250);\n\nring-zinc-100\t--tw-ring-color: rgb(244 244 245);\n\nring-zinc-200\t--tw-ring-color: rgb(228 228 231);\n\nring-zinc-300\t--tw-ring-color: rgb(212 212 216);\n\nring-zinc-400\t--tw-ring-color: rgb(161 161 170);\n\nring-zinc-500\t--tw-ring-color: rgb(113 113 122);\n\nring-zinc-600\t--tw-ring-color: rgb(82 82 91);\n\nring-zinc-700\t--tw-ring-color: rgb(63 63 70);\n\nring-zinc-800\t--tw-ring-color: rgb(39 39 42);\n\nring-zinc-900\t--tw-ring-color: rgb(24 24 27);\n\nring-zinc-950\t--tw-ring-color: rgb(9 9 11);\n\nring-neutral-50\t--tw-ring-color: rgb(250 250 250);\n\nring-neutral-100\t--tw-ring-color: rgb(245 245 245);\n\nring-neutral-200\t--tw-ring-color: rgb(229 229 229);\n\nring-neutral-300\t--tw-ring-color: rgb(212 212 212);\n\nring-neutral-400\t--tw-ring-color: rgb(163 163 163);\n\nring-neutral-500\t--tw-ring-color: rgb(115 115 115);\n\nring-neutral-600\t--tw-ring-color: rgb(82 82 82);\n\nring-neutral-700\t--tw-ring-color: rgb(64 64 64);\n\nring-neutral-800\t--tw-ring-color: rgb(38 38 38);\n\nring-neutral-900\t--tw-ring-color: rgb(23 23 23);\n\nring-neutral-950\t--tw-ring-color: rgb(10 10 10);\n\nring-stone-50\t--tw-ring-color: rgb(250 250 249);\n\nring-stone-100\t--tw-ring-color: rgb(245 245 244);\n\nring-stone-200\t--tw-ring-color: rgb(231 229 228);\n\nring-stone-300\t--tw-ring-color: rgb(214 211 209);\n\nring-stone-400\t--tw-ring-color: rgb(168 162 158);\n\nring-stone-500\t--tw-ring-color: rgb(120 113 108);\n\nring-stone-600\t--tw-ring-color: rgb(87 83 78);\n\nring-stone-700\t--tw-ring-color: rgb(68 64 60);\n\nring-stone-800\t--tw-ring-color: rgb(41 37 36);\n\nring-stone-900\t--tw-ring-color: rgb(28 25 23);\n\nring-stone-950\t--tw-ring-color: rgb(12 10 9);\n\nring-red-50\t--tw-ring-color: rgb(254 242 242);\n\nring-red-100\t--tw-ring-color: rgb(254 226 226);\n\nring-red-200\t--tw-ring-color: rgb(254 202 202);\n\nring-red-300\t--tw-ring-color: rgb(252 165 165);\n\nring-red-400\t--tw-ring-color: rgb(248 113 113);\n\nring-red-500\t--tw-ring-color: rgb(239 68 68);\n\nring-red-600\t--tw-ring-color: rgb(220 38 38);\n\nring-red-700\t--tw-ring-color: rgb(185 28 28);\n\nring-red-800\t--tw-ring-color: rgb(153 27 27);\n\nring-red-900\t--tw-ring-color: rgb(127 29 29);\n\nring-red-950\t--tw-ring-color: rgb(69 10 10);\n\nring-orange-50\t--tw-ring-color: rgb(255 247 237);\n\nring-orange-100\t--tw-ring-color: rgb(255 237 213);\n\nring-orange-200\t--tw-ring-color: rgb(254 215 170);\n\nring-orange-300\t--tw-ring-color: rgb(253 186 116);\n\nring-orange-400\t--tw-ring-color: rgb(251 146 60);\n\nring-orange-500\t--tw-ring-color: rgb(249 115 22);\n\nring-orange-600\t--tw-ring-color: rgb(234 88 12);\n\nring-orange-700\t--tw-ring-color: rgb(194 65 12);\n\nring-orange-800\t--tw-ring-color: rgb(154 52 18);\n\nring-orange-900\t--tw-ring-color: rgb(124 45 18);\n\nring-orange-950\t--tw-ring-color: rgb(67 20 7);\n\nring-amber-50\t--tw-ring-color: rgb(255 251 235);\n\nring-amber-100\t--tw-ring-color: rgb(254 243 199);\n\nring-amber-200\t--tw-ring-color: rgb(253 230 138);\n\nring-amber-300\t--tw-ring-color: rgb(252 211 77);\n\nring-amber-400\t--tw-ring-color: rgb(251 191 36);\n\nring-amber-500\t--tw-ring-color: rgb(245 158 11);\n\nring-amber-600\t--tw-ring-color: rgb(217 119 6);\n\nring-amber-700\t--tw-ring-color: rgb(180 83 9);\n\nring-amber-800\t--tw-ring-color: rgb(146 64 14);\n\nring-amber-900\t--tw-ring-color: rgb(120 53 15);\n\nring-amber-950\t--tw-ring-color: rgb(69 26 3);\n\nring-yellow-50\t--tw-ring-color: rgb(254 252 232);\n\nring-yellow-100\t--tw-ring-color: rgb(254 249 195);\n\nring-yellow-200\t--tw-ring-color: rgb(254 240 138);\n\nring-yellow-300\t--tw-ring-color: rgb(253 224 71);\n\nring-yellow-400\t--tw-ring-color: rgb(250 204 21);\n\nring-yellow-500\t--tw-ring-color: rgb(234 179 8);\n\nring-yellow-600\t--tw-ring-color: rgb(202 138 4);\n\nring-yellow-700\t--tw-ring-color: rgb(161 98 7);\n\nring-yellow-800\t--tw-ring-color: rgb(133 77 14);\n\nring-yellow-900\t--tw-ring-color: rgb(113 63 18);\n\nring-yellow-950\t--tw-ring-color: rgb(66 32 6);\n\nring-lime-50\t--tw-ring-color: rgb(247 254 231);\n\nring-lime-100\t--tw-ring-color: rgb(236 252 203);\n\nring-lime-200\t--tw-ring-color: rgb(217 249 157);\n\nring-lime-300\t--tw-ring-color: rgb(190 242 100);\n\nring-lime-400\t--tw-ring-color: rgb(163 230 53);\n\nring-lime-500\t--tw-ring-color: rgb(132 204 22);\n\nring-lime-600\t--tw-ring-color: rgb(101 163 13);\n\nring-lime-700\t--tw-ring-color: rgb(77 124 15);\n\nring-lime-800\t--tw-ring-color: rgb(63 98 18);\n\nring-lime-900\t--tw-ring-color: rgb(54 83 20);\n\nring-lime-950\t--tw-ring-color: rgb(26 46 5);\n\nring-green-50\t--tw-ring-color: rgb(240 253 244);\n\nring-green-100\t--tw-ring-color: rgb(220 252 231);\n\nring-green-200\t--tw-ring-color: rgb(187 247 208);\n\nring-green-300\t--tw-ring-color: rgb(134 239 172);\n\nring-green-400\t--tw-ring-color: rgb(74 222 128);\n\nring-green-500\t--tw-ring-color: rgb(34 197 94);\n\nring-green-600\t--tw-ring-color: rgb(22 163 74);\n\nring-green-700\t--tw-ring-color: rgb(21 128 61);\n\nring-green-800\t--tw-ring-color: rgb(22 101 52);\n\nring-green-900\t--tw-ring-color: rgb(20 83 45);\n\nring-green-950\t--tw-ring-color: rgb(5 46 22);\n\nring-emerald-50\t--tw-ring-color: rgb(236 253 245);\n\nring-emerald-100\t--tw-ring-color: rgb(209 250 229);\n\nring-emerald-200\t--tw-ring-color: rgb(167 243 208);\n\nring-emerald-300\t--tw-ring-color: rgb(110 231 183);\n\nring-emerald-400\t--tw-ring-color: rgb(52 211 153);\n\nring-emerald-500\t--tw-ring-color: rgb(16 185 129);\n\nring-emerald-600\t--tw-ring-color: rgb(5 150 105);\n\nring-emerald-700\t--tw-ring-color: rgb(4 120 87);\n\nring-emerald-800\t--tw-ring-color: rgb(6 95 70);\n\nring-emerald-900\t--tw-ring-color: rgb(6 78 59);\n\nring-emerald-950\t--tw-ring-color: rgb(2 44 34);\n\nring-teal-50\t--tw-ring-color: rgb(240 253 250);\n\nring-teal-100\t--tw-ring-color: rgb(204 251 241);\n\nring-teal-200\t--tw-ring-color: rgb(153 246 228);\n\nring-teal-300\t--tw-ring-color: rgb(94 234 212);\n\nring-teal-400\t--tw-ring-color: rgb(45 212 191);\n\nring-teal-500\t--tw-ring-color: rgb(20 184 166);\n\nring-teal-600\t--tw-ring-color: rgb(13 148 136);\n\nring-teal-700\t--tw-ring-color: rgb(15 118 110);\n\nring-teal-800\t--tw-ring-color: rgb(17 94 89);\n\nring-teal-900\t--tw-ring-color: rgb(19 78 74);\n\nring-teal-950\t--tw-ring-color: rgb(4 47 46);\n\nring-cyan-50\t--tw-ring-color: rgb(236 254 255);\n\nring-cyan-100\t--tw-ring-color: rgb(207 250 254);\n\nring-cyan-200\t--tw-ring-color: rgb(165 243 252);\n\nring-cyan-300\t--tw-ring-color: rgb(103 232 249);\n\nring-cyan-400\t--tw-ring-color: rgb(34 211 238);\n\nring-cyan-500\t--tw-ring-color: rgb(6 182 212);\n\nring-cyan-600\t--tw-ring-color: rgb(8 145 178);\n\nring-cyan-700\t--tw-ring-color: rgb(14 116 144);\n\nring-cyan-800\t--tw-ring-color: rgb(21 94 117);\n\nring-cyan-900\t--tw-ring-color: rgb(22 78 99);\n\nring-cyan-950\t--tw-ring-color: rgb(8 51 68);\n\nring-sky-50\t--tw-ring-color: rgb(240 249 255);\n\nring-sky-100\t--tw-ring-color: rgb(224 242 254);\n\nring-sky-200\t--tw-ring-color: rgb(186 230 253);\n\nring-sky-300\t--tw-ring-color: rgb(125 211 252);\n\nring-sky-400\t--tw-ring-color: rgb(56 189 248);\n\nring-sky-500\t--tw-ring-color: rgb(14 165 233);\n\nring-sky-600\t--tw-ring-color: rgb(2 132 199);\n\nring-sky-700\t--tw-ring-color: rgb(3 105 161);\n\nring-sky-800\t--tw-ring-color: rgb(7 89 133);\n\nring-sky-900\t--tw-ring-color: rgb(12 74 110);\n\nring-sky-950\t--tw-ring-color: rgb(8 47 73);\n\nring-blue-50\t--tw-ring-color: rgb(239 246 255);\n\nring-blue-100\t--tw-ring-color: rgb(219 234 254);\n\nring-blue-200\t--tw-ring-color: rgb(191 219 254);\n\nring-blue-300\t--tw-ring-color: rgb(147 197 253);\n\nring-blue-400\t--tw-ring-color: rgb(96 165 250);\n\nring-blue-500\t--tw-ring-color: rgb(59 130 246);\n\nring-blue-600\t--tw-ring-color: rgb(37 99 235);\n\nring-blue-700\t--tw-ring-color: rgb(29 78 216);\n\nring-blue-800\t--tw-ring-color: rgb(30 64 175);\n\nring-blue-900\t--tw-ring-color: rgb(30 58 138);\n\nring-blue-950\t--tw-ring-color: rgb(23 37 84);\n\nring-indigo-50\t--tw-ring-color: rgb(238 242 255);\n\nring-indigo-100\t--tw-ring-color: rgb(224 231 255);\n\nring-indigo-200\t--tw-ring-color: rgb(199 210 254);\n\nring-indigo-300\t--tw-ring-color: rgb(165 180 252);\n\nring-indigo-400\t--tw-ring-color: rgb(129 140 248);\n\nring-indigo-500\t--tw-ring-color: rgb(99 102 241);\n\nring-indigo-600\t--tw-ring-color: rgb(79 70 229);\n\nring-indigo-700\t--tw-ring-color: rgb(67 56 202);\n\nring-indigo-800\t--tw-ring-color: rgb(55 48 163);\n\nring-indigo-900\t--tw-ring-color: rgb(49 46 129);\n\nring-indigo-950\t--tw-ring-color: rgb(30 27 75);\n\nring-violet-50\t--tw-ring-color: rgb(245 243 255);\n\nring-violet-100\t--tw-ring-color: rgb(237 233 254);\n\nring-violet-200\t--tw-ring-color: rgb(221 214 254);\n\nring-violet-300\t--tw-ring-color: rgb(196 181 253);\n\nring-violet-400\t--tw-ring-color: rgb(167 139 250);\n\nring-violet-500\t--tw-ring-color: rgb(139 92 246);\n\nring-violet-600\t--tw-ring-color: rgb(124 58 237);\n\nring-violet-700\t--tw-ring-color: rgb(109 40 217);\n\nring-violet-800\t--tw-ring-color: rgb(91 33 182);\n\nring-violet-900\t--tw-ring-color: rgb(76 29 149);\n\nring-violet-950\t--tw-ring-color: rgb(46 16 101);\n\nring-purple-50\t--tw-ring-color: rgb(250 245 255);\n\nring-purple-100\t--tw-ring-color: rgb(243 232 255);\n\nring-purple-200\t--tw-ring-color: rgb(233 213 255);\n\nring-purple-300\t--tw-ring-color: rgb(216 180 254);\n\nring-purple-400\t--tw-ring-color: rgb(192 132 252);\n\nring-purple-500\t--tw-ring-color: rgb(168 85 247);\n\nring-purple-600\t--tw-ring-color: rgb(147 51 234);\n\nring-purple-700\t--tw-ring-color: rgb(126 34 206);\n\nring-purple-800\t--tw-ring-color: rgb(107 33 168);\n\nring-purple-900\t--tw-ring-color: rgb(88 28 135);\n\nring-purple-950\t--tw-ring-color: rgb(59 7 100);\n\nring-fuchsia-50\t--tw-ring-color: rgb(253 244 255);\n\nring-fuchsia-100\t--tw-ring-color: rgb(250 232 255);\n\nring-fuchsia-200\t--tw-ring-color: rgb(245 208 254);\n\nring-fuchsia-300\t--tw-ring-color: rgb(240 171 252);\n\nring-fuchsia-400\t--tw-ring-color: rgb(232 121 249);\n\nring-fuchsia-500\t--tw-ring-color: rgb(217 70 239);\n\nring-fuchsia-600\t--tw-ring-color: rgb(192 38 211);\n\nring-fuchsia-700\t--tw-ring-color: rgb(162 28 175);\n\nring-fuchsia-800\t--tw-ring-color: rgb(134 25 143);\n\nring-fuchsia-900\t--tw-ring-color: rgb(112 26 117);\n\nring-fuchsia-950\t--tw-ring-color: rgb(74 4 78);\n\nring-pink-50\t--tw-ring-color: rgb(253 242 248);\n\nring-pink-100\t--tw-ring-color: rgb(252 231 243);\n\nring-pink-200\t--tw-ring-color: rgb(251 207 232);\n\nring-pink-300\t--tw-ring-color: rgb(249 168 212);\n\nring-pink-400\t--tw-ring-color: rgb(244 114 182);\n\nring-pink-500\t--tw-ring-color: rgb(236 72 153);\n\nring-pink-600\t--tw-ring-color: rgb(219 39 119);\n\nring-pink-700\t--tw-ring-color: rgb(190 24 93);\n\nring-pink-800\t--tw-ring-color: rgb(157 23 77);\n\nring-pink-900\t--tw-ring-color: rgb(131 24 67);\n\nring-pink-950\t--tw-ring-color: rgb(80 7 36);\n\nring-rose-50\t--tw-ring-color: rgb(255 241 242);\n\nring-rose-100\t--tw-ring-color: rgb(255 228 230);\n\nring-rose-200\t--tw-ring-color: rgb(254 205 211);\n\nring-rose-300\t--tw-ring-color: rgb(253 164 175);\n\nring-rose-400\t--tw-ring-color: rgb(251 113 133);\n\nring-rose-500\t--tw-ring-color: rgb(244 63 94);\n\nring-rose-600\t--tw-ring-color: rgb(225 29 72);\n\nring-rose-700\t--tw-ring-color: rgb(190 18 60);\n\nring-rose-800\t--tw-ring-color: rgb(159 18 57);\n\nring-rose-900\t--tw-ring-color: rgb(136 19 55);\n\nring-rose-950\t--tw-ring-color: rgb(76 5 25);\n\n​\nBasic usage\n​\nSetting the ring color\n\nUse the ring-{color} utilities to set the color of an outline ring.\n\nCreate account\n<button class=\"... ring-2 ring-blue-500\">\n  Create account\n</button>\n​\nChanging the opacity\n\nControl the opacity of an element’s background color using the color opacity modifier.\n\nCreate account\n<button class=\"... ring-2 ring-blue-500/50\">Subscribe</button>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<button class=\"... ring-2 ring-blue-500/[.55]\">Subscribe</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:ring-blue-500 to only apply the ring-blue-500 utility on hover.\n\n<div class=\"ring ring-blue-300 hover:ring-blue-500\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:ring-blue-500 to apply the ring-blue-500 utility at only medium screen sizes and above.\n\n<div class=\"ring ring-blue-300 md:ring-blue-500\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as ring colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your ring colors by editing theme.ringColor or theme.extend.ringColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off ring-{color} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"ring-[#50d71e]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nRing Width\nRing Offset Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the ring color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Outline Offset - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/outline-offset",
    "html": "Borders\n\nOutline Offset\n\nUtilities for controlling the offset of an element's outline.\n\n​\nQuick reference\nClass\n\t\nProperties\n\noutline-offset-0\toutline-offset: 0px;\n\noutline-offset-1\toutline-offset: 1px;\n\noutline-offset-2\toutline-offset: 2px;\n\noutline-offset-4\toutline-offset: 4px;\n\noutline-offset-8\toutline-offset: 8px;\n\n​\nBasic usage\n​\nSetting the outline offset\n\nUse the outline-{offset} utilities to change the offset of an element’s outline.\n\noutline-offset-0\n\nButton A\n\noutline-offset-2\n\nButton B\n\noutline-offset-4\n\nButton C\n<button class=\"outline outline-offset-0 ...\">Button A</button>\n<button class=\"outline outline-offset-2 ...\">Button B</button>\n<button class=\"outline outline-offset-4 ...\">Button C</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:outline-offset-2 to only apply the outline-offset-2 utility on hover.\n\n<button class=\"outline hover:outline-offset-2\">\n  <!-- ... -->\n</button>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:outline-offset-2 to apply the outline-offset-2 utility at only medium screen sizes and above.\n\n<button class=\"outline md:outline-offset-2\">\n  <!-- ... -->\n</button>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize the outline-offset-{width} utilities by editing theme.outlineOffset or theme.extend.outlineOffset in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      outlineOffset: {\n\n        3: '3px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off outline-offset value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<button class=\"outline-offset-[3px]\">\n  <!-- ... -->\n</button>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nOutline Style\nRing Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the outline offset\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Outline Style - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/outline-style",
    "html": "Borders\n\nOutline Style\n\nUtilities for controlling the style of an element's outline.\n\n​\nQuick reference\nClass\n\t\nProperties\n\noutline-none\toutline: 2px solid transparent;\noutline-offset: 2px;\n\noutline\toutline-style: solid;\n\noutline-dashed\toutline-style: dashed;\n\noutline-dotted\toutline-style: dotted;\n\noutline-double\toutline-style: double;\n\n​\nBasic usage\n​\nSetting the outline style\n\nUse the outline-{style} utilities to change the style of an element’s outline.\n\noutline\n\nButton A\n\noutline-dashed\n\nButton B\n\noutline-dotted\n\nButton C\n\noutline-double\n\nButton D\n<button class=\"outline outline-2  outline-offset-2 ...\">Button A</button>\n<button class=\"outline-dashed outline-2 outline-offset-2 ...\">Button B</button>\n<button class=\"outline-dotted outline-2 outline-offset-2 ...\">Button C</button>\n<button class=\"outline-double outline-3 outline-offset-2 ...\">Button D</button>\n​\nRemoving outlines\n\nUse outline-none to hide the default browser outline on focused elements.\n\nIt is highly recommended to apply your own focus styling for accessibility when using this utility.\n\nFocus the input to see the expected behaviour\n\n<input type=\"text\"\n  placeholder=\"Default focus style\"\n  class=\"...\" />\n\n<input type=\"text\"\n  placeholder=\"Custom focus style\"\n  class=\"focus:outline-none focus:ring focus:border-blue-500 ...\" />\n\nThe outline-none utility is implemented using a transparent outline under the hood to ensure elements are still visibly focused to Windows high contrast mode users.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:outline-dashed to only apply the outline-dashed utility on hover.\n\n<div class=\"outline hover:outline-dashed\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:outline-dashed to apply the outline-dashed utility at only medium screen sizes and above.\n\n<div class=\"outline md:outline-dashed\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nOutline Color\nOutline Offset\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the outline style\nRemoving outlines\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Outline Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/outline-color",
    "html": "Borders\n\nOutline Color\n\nUtilities for controlling the color of an element's outline.\n\n​\nQuick reference\nClass\n\t\nProperties\n\noutline-inherit\toutline-color: inherit;\n\noutline-current\toutline-color: currentColor;\n\noutline-transparent\toutline-color: transparent;\n\noutline-black\toutline-color: #000;\n\noutline-white\toutline-color: #fff;\n\noutline-slate-50\toutline-color: #f8fafc;\n\noutline-slate-100\toutline-color: #f1f5f9;\n\noutline-slate-200\toutline-color: #e2e8f0;\n\noutline-slate-300\toutline-color: #cbd5e1;\n\noutline-slate-400\toutline-color: #94a3b8;\n\noutline-slate-500\toutline-color: #64748b;\n\noutline-slate-600\toutline-color: #475569;\n\noutline-slate-700\toutline-color: #334155;\n\noutline-slate-800\toutline-color: #1e293b;\n\noutline-slate-900\toutline-color: #0f172a;\n\noutline-slate-950\toutline-color: #020617;\n\noutline-gray-50\toutline-color: #f9fafb;\n\noutline-gray-100\toutline-color: #f3f4f6;\n\noutline-gray-200\toutline-color: #e5e7eb;\n\noutline-gray-300\toutline-color: #d1d5db;\n\noutline-gray-400\toutline-color: #9ca3af;\n\noutline-gray-500\toutline-color: #6b7280;\n\noutline-gray-600\toutline-color: #4b5563;\n\noutline-gray-700\toutline-color: #374151;\n\noutline-gray-800\toutline-color: #1f2937;\n\noutline-gray-900\toutline-color: #111827;\n\noutline-gray-950\toutline-color: #030712;\n\noutline-zinc-50\toutline-color: #fafafa;\n\noutline-zinc-100\toutline-color: #f4f4f5;\n\noutline-zinc-200\toutline-color: #e4e4e7;\n\noutline-zinc-300\toutline-color: #d4d4d8;\n\noutline-zinc-400\toutline-color: #a1a1aa;\n\noutline-zinc-500\toutline-color: #71717a;\n\noutline-zinc-600\toutline-color: #52525b;\n\noutline-zinc-700\toutline-color: #3f3f46;\n\noutline-zinc-800\toutline-color: #27272a;\n\noutline-zinc-900\toutline-color: #18181b;\n\noutline-zinc-950\toutline-color: #09090b;\n\noutline-neutral-50\toutline-color: #fafafa;\n\noutline-neutral-100\toutline-color: #f5f5f5;\n\noutline-neutral-200\toutline-color: #e5e5e5;\n\noutline-neutral-300\toutline-color: #d4d4d4;\n\noutline-neutral-400\toutline-color: #a3a3a3;\n\noutline-neutral-500\toutline-color: #737373;\n\noutline-neutral-600\toutline-color: #525252;\n\noutline-neutral-700\toutline-color: #404040;\n\noutline-neutral-800\toutline-color: #262626;\n\noutline-neutral-900\toutline-color: #171717;\n\noutline-neutral-950\toutline-color: #0a0a0a;\n\noutline-stone-50\toutline-color: #fafaf9;\n\noutline-stone-100\toutline-color: #f5f5f4;\n\noutline-stone-200\toutline-color: #e7e5e4;\n\noutline-stone-300\toutline-color: #d6d3d1;\n\noutline-stone-400\toutline-color: #a8a29e;\n\noutline-stone-500\toutline-color: #78716c;\n\noutline-stone-600\toutline-color: #57534e;\n\noutline-stone-700\toutline-color: #44403c;\n\noutline-stone-800\toutline-color: #292524;\n\noutline-stone-900\toutline-color: #1c1917;\n\noutline-stone-950\toutline-color: #0c0a09;\n\noutline-red-50\toutline-color: #fef2f2;\n\noutline-red-100\toutline-color: #fee2e2;\n\noutline-red-200\toutline-color: #fecaca;\n\noutline-red-300\toutline-color: #fca5a5;\n\noutline-red-400\toutline-color: #f87171;\n\noutline-red-500\toutline-color: #ef4444;\n\noutline-red-600\toutline-color: #dc2626;\n\noutline-red-700\toutline-color: #b91c1c;\n\noutline-red-800\toutline-color: #991b1b;\n\noutline-red-900\toutline-color: #7f1d1d;\n\noutline-red-950\toutline-color: #450a0a;\n\noutline-orange-50\toutline-color: #fff7ed;\n\noutline-orange-100\toutline-color: #ffedd5;\n\noutline-orange-200\toutline-color: #fed7aa;\n\noutline-orange-300\toutline-color: #fdba74;\n\noutline-orange-400\toutline-color: #fb923c;\n\noutline-orange-500\toutline-color: #f97316;\n\noutline-orange-600\toutline-color: #ea580c;\n\noutline-orange-700\toutline-color: #c2410c;\n\noutline-orange-800\toutline-color: #9a3412;\n\noutline-orange-900\toutline-color: #7c2d12;\n\noutline-orange-950\toutline-color: #431407;\n\noutline-amber-50\toutline-color: #fffbeb;\n\noutline-amber-100\toutline-color: #fef3c7;\n\noutline-amber-200\toutline-color: #fde68a;\n\noutline-amber-300\toutline-color: #fcd34d;\n\noutline-amber-400\toutline-color: #fbbf24;\n\noutline-amber-500\toutline-color: #f59e0b;\n\noutline-amber-600\toutline-color: #d97706;\n\noutline-amber-700\toutline-color: #b45309;\n\noutline-amber-800\toutline-color: #92400e;\n\noutline-amber-900\toutline-color: #78350f;\n\noutline-amber-950\toutline-color: #451a03;\n\noutline-yellow-50\toutline-color: #fefce8;\n\noutline-yellow-100\toutline-color: #fef9c3;\n\noutline-yellow-200\toutline-color: #fef08a;\n\noutline-yellow-300\toutline-color: #fde047;\n\noutline-yellow-400\toutline-color: #facc15;\n\noutline-yellow-500\toutline-color: #eab308;\n\noutline-yellow-600\toutline-color: #ca8a04;\n\noutline-yellow-700\toutline-color: #a16207;\n\noutline-yellow-800\toutline-color: #854d0e;\n\noutline-yellow-900\toutline-color: #713f12;\n\noutline-yellow-950\toutline-color: #422006;\n\noutline-lime-50\toutline-color: #f7fee7;\n\noutline-lime-100\toutline-color: #ecfccb;\n\noutline-lime-200\toutline-color: #d9f99d;\n\noutline-lime-300\toutline-color: #bef264;\n\noutline-lime-400\toutline-color: #a3e635;\n\noutline-lime-500\toutline-color: #84cc16;\n\noutline-lime-600\toutline-color: #65a30d;\n\noutline-lime-700\toutline-color: #4d7c0f;\n\noutline-lime-800\toutline-color: #3f6212;\n\noutline-lime-900\toutline-color: #365314;\n\noutline-lime-950\toutline-color: #1a2e05;\n\noutline-green-50\toutline-color: #f0fdf4;\n\noutline-green-100\toutline-color: #dcfce7;\n\noutline-green-200\toutline-color: #bbf7d0;\n\noutline-green-300\toutline-color: #86efac;\n\noutline-green-400\toutline-color: #4ade80;\n\noutline-green-500\toutline-color: #22c55e;\n\noutline-green-600\toutline-color: #16a34a;\n\noutline-green-700\toutline-color: #15803d;\n\noutline-green-800\toutline-color: #166534;\n\noutline-green-900\toutline-color: #14532d;\n\noutline-green-950\toutline-color: #052e16;\n\noutline-emerald-50\toutline-color: #ecfdf5;\n\noutline-emerald-100\toutline-color: #d1fae5;\n\noutline-emerald-200\toutline-color: #a7f3d0;\n\noutline-emerald-300\toutline-color: #6ee7b7;\n\noutline-emerald-400\toutline-color: #34d399;\n\noutline-emerald-500\toutline-color: #10b981;\n\noutline-emerald-600\toutline-color: #059669;\n\noutline-emerald-700\toutline-color: #047857;\n\noutline-emerald-800\toutline-color: #065f46;\n\noutline-emerald-900\toutline-color: #064e3b;\n\noutline-emerald-950\toutline-color: #022c22;\n\noutline-teal-50\toutline-color: #f0fdfa;\n\noutline-teal-100\toutline-color: #ccfbf1;\n\noutline-teal-200\toutline-color: #99f6e4;\n\noutline-teal-300\toutline-color: #5eead4;\n\noutline-teal-400\toutline-color: #2dd4bf;\n\noutline-teal-500\toutline-color: #14b8a6;\n\noutline-teal-600\toutline-color: #0d9488;\n\noutline-teal-700\toutline-color: #0f766e;\n\noutline-teal-800\toutline-color: #115e59;\n\noutline-teal-900\toutline-color: #134e4a;\n\noutline-teal-950\toutline-color: #042f2e;\n\noutline-cyan-50\toutline-color: #ecfeff;\n\noutline-cyan-100\toutline-color: #cffafe;\n\noutline-cyan-200\toutline-color: #a5f3fc;\n\noutline-cyan-300\toutline-color: #67e8f9;\n\noutline-cyan-400\toutline-color: #22d3ee;\n\noutline-cyan-500\toutline-color: #06b6d4;\n\noutline-cyan-600\toutline-color: #0891b2;\n\noutline-cyan-700\toutline-color: #0e7490;\n\noutline-cyan-800\toutline-color: #155e75;\n\noutline-cyan-900\toutline-color: #164e63;\n\noutline-cyan-950\toutline-color: #083344;\n\noutline-sky-50\toutline-color: #f0f9ff;\n\noutline-sky-100\toutline-color: #e0f2fe;\n\noutline-sky-200\toutline-color: #bae6fd;\n\noutline-sky-300\toutline-color: #7dd3fc;\n\noutline-sky-400\toutline-color: #38bdf8;\n\noutline-sky-500\toutline-color: #0ea5e9;\n\noutline-sky-600\toutline-color: #0284c7;\n\noutline-sky-700\toutline-color: #0369a1;\n\noutline-sky-800\toutline-color: #075985;\n\noutline-sky-900\toutline-color: #0c4a6e;\n\noutline-sky-950\toutline-color: #082f49;\n\noutline-blue-50\toutline-color: #eff6ff;\n\noutline-blue-100\toutline-color: #dbeafe;\n\noutline-blue-200\toutline-color: #bfdbfe;\n\noutline-blue-300\toutline-color: #93c5fd;\n\noutline-blue-400\toutline-color: #60a5fa;\n\noutline-blue-500\toutline-color: #3b82f6;\n\noutline-blue-600\toutline-color: #2563eb;\n\noutline-blue-700\toutline-color: #1d4ed8;\n\noutline-blue-800\toutline-color: #1e40af;\n\noutline-blue-900\toutline-color: #1e3a8a;\n\noutline-blue-950\toutline-color: #172554;\n\noutline-indigo-50\toutline-color: #eef2ff;\n\noutline-indigo-100\toutline-color: #e0e7ff;\n\noutline-indigo-200\toutline-color: #c7d2fe;\n\noutline-indigo-300\toutline-color: #a5b4fc;\n\noutline-indigo-400\toutline-color: #818cf8;\n\noutline-indigo-500\toutline-color: #6366f1;\n\noutline-indigo-600\toutline-color: #4f46e5;\n\noutline-indigo-700\toutline-color: #4338ca;\n\noutline-indigo-800\toutline-color: #3730a3;\n\noutline-indigo-900\toutline-color: #312e81;\n\noutline-indigo-950\toutline-color: #1e1b4b;\n\noutline-violet-50\toutline-color: #f5f3ff;\n\noutline-violet-100\toutline-color: #ede9fe;\n\noutline-violet-200\toutline-color: #ddd6fe;\n\noutline-violet-300\toutline-color: #c4b5fd;\n\noutline-violet-400\toutline-color: #a78bfa;\n\noutline-violet-500\toutline-color: #8b5cf6;\n\noutline-violet-600\toutline-color: #7c3aed;\n\noutline-violet-700\toutline-color: #6d28d9;\n\noutline-violet-800\toutline-color: #5b21b6;\n\noutline-violet-900\toutline-color: #4c1d95;\n\noutline-violet-950\toutline-color: #2e1065;\n\noutline-purple-50\toutline-color: #faf5ff;\n\noutline-purple-100\toutline-color: #f3e8ff;\n\noutline-purple-200\toutline-color: #e9d5ff;\n\noutline-purple-300\toutline-color: #d8b4fe;\n\noutline-purple-400\toutline-color: #c084fc;\n\noutline-purple-500\toutline-color: #a855f7;\n\noutline-purple-600\toutline-color: #9333ea;\n\noutline-purple-700\toutline-color: #7e22ce;\n\noutline-purple-800\toutline-color: #6b21a8;\n\noutline-purple-900\toutline-color: #581c87;\n\noutline-purple-950\toutline-color: #3b0764;\n\noutline-fuchsia-50\toutline-color: #fdf4ff;\n\noutline-fuchsia-100\toutline-color: #fae8ff;\n\noutline-fuchsia-200\toutline-color: #f5d0fe;\n\noutline-fuchsia-300\toutline-color: #f0abfc;\n\noutline-fuchsia-400\toutline-color: #e879f9;\n\noutline-fuchsia-500\toutline-color: #d946ef;\n\noutline-fuchsia-600\toutline-color: #c026d3;\n\noutline-fuchsia-700\toutline-color: #a21caf;\n\noutline-fuchsia-800\toutline-color: #86198f;\n\noutline-fuchsia-900\toutline-color: #701a75;\n\noutline-fuchsia-950\toutline-color: #4a044e;\n\noutline-pink-50\toutline-color: #fdf2f8;\n\noutline-pink-100\toutline-color: #fce7f3;\n\noutline-pink-200\toutline-color: #fbcfe8;\n\noutline-pink-300\toutline-color: #f9a8d4;\n\noutline-pink-400\toutline-color: #f472b6;\n\noutline-pink-500\toutline-color: #ec4899;\n\noutline-pink-600\toutline-color: #db2777;\n\noutline-pink-700\toutline-color: #be185d;\n\noutline-pink-800\toutline-color: #9d174d;\n\noutline-pink-900\toutline-color: #831843;\n\noutline-pink-950\toutline-color: #500724;\n\noutline-rose-50\toutline-color: #fff1f2;\n\noutline-rose-100\toutline-color: #ffe4e6;\n\noutline-rose-200\toutline-color: #fecdd3;\n\noutline-rose-300\toutline-color: #fda4af;\n\noutline-rose-400\toutline-color: #fb7185;\n\noutline-rose-500\toutline-color: #f43f5e;\n\noutline-rose-600\toutline-color: #e11d48;\n\noutline-rose-700\toutline-color: #be123c;\n\noutline-rose-800\toutline-color: #9f1239;\n\noutline-rose-900\toutline-color: #881337;\n\noutline-rose-950\toutline-color: #4c0519;\n\n​\nBasic usage\n​\nSetting the outline color\n\nUse the outline-{color} utilities to change the color of an element’s outline.\n\noutline-blue-500\n\nButton A\n\noutline-cyan-500\n\nButton B\n\noutline-pink-500\n\nButton C\n<button class=\"outline outline-offset-2 outline-blue-500 ...\">Button A</button>\n<button class=\"outline outline-offset-2 outline-cyan-500 ...\">Button B</button>\n<button class=\"outline outline-offset-2 outline-pink-500 ...\">Button C</button>\n​\nChanging the opacity\n\nControl the opacity of an element’s outline color using the color opacity modifier.\n\noutline-blue-500/50\n\nSave Changes\n<button class=\"outline-2 outline-blue-500/50 ...\">Save Changes</button>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<button class=\"outline-4 outline-pink-400/[.55] ...\"></button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:outline-blue-400 to only apply the outline-blue-400 utility on hover.\n\n<button class=\"outline hover:outline-blue-400\">\n  <!-- ... -->\n</button>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:outline-blue-400 to apply the outline-blue-400 utility at only medium screen sizes and above.\n\n<button class=\"outline md:outline-blue-400\">\n  <!-- ... -->\n</button>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as outline colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your outline colors by editing theme.outlineColor or theme.extend.outlineColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off outline-color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<button class=\"outline-[#243c5a]\">\n  <!-- ... -->\n</button>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nOutline Width\nOutline Style\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the outline color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Outline Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/outline-width",
    "html": "Borders\n\nOutline Width\n\nUtilities for controlling the width of an element's outline.\n\n​\nQuick reference\nClass\n\t\nProperties\n\noutline-0\toutline-width: 0px;\n\noutline-1\toutline-width: 1px;\n\noutline-2\toutline-width: 2px;\n\noutline-4\toutline-width: 4px;\n\noutline-8\toutline-width: 8px;\n\n​\nBasic usage\n​\nSetting the outline width\n\nUse the outline-{width} utilities to change the width of an element’s outline.\n\noutline-1\n\nButton A\n\noutline-2\n\nButton B\n\noutline-4\n\nButton C\n<button class=\"outline outline-offset-2 outline-1 ...\">Button A</button>\n<button class=\"outline outline-offset-2 outline-2 ...\">Button B</button>\n<button class=\"outline outline-offset-2 outline-4 ...\">Button C</button>\n\nThe default outline width is 3px.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:outline-2 to only apply the outline-2 utility on hover.\n\n<div class=\"outline hover:outline-2\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:outline-2 to apply the outline-2 utility at only medium screen sizes and above.\n\n<div class=\"outline md:outline-2\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize the outline-{width} utilities by editing theme.outlineWidth or theme.extend.outlineWidth in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      outlineWidth: {\n\n        5: '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off outline-width value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"outline-[5px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nDivide Style\nOutline Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the outline width\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Divide Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/divide-color",
    "html": "Borders\n\nDivide Color\n\nUtilities for controlling the border color between elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\t\nPreview\n \n\ndivide-inherit > * + *\tborder-color: inherit;\n\t\n\ndivide-current > * + *\tborder-color: currentColor;\n\t\n\ndivide-transparent > * + *\tborder-color: transparent;\n\t\n\ndivide-black > * + *\tborder-color: rgb(0 0 0);\n\t\n\ndivide-white > * + *\tborder-color: rgb(255 255 255);\n\t\n\ndivide-slate-50 > * + *\tborder-color: rgb(248 250 252);\n\t\n\ndivide-slate-100 > * + *\tborder-color: rgb(241 245 249);\n\t\n\ndivide-slate-200 > * + *\tborder-color: rgb(226 232 240);\n\t\n\ndivide-slate-300 > * + *\tborder-color: rgb(203 213 225);\n\t\n\ndivide-slate-400 > * + *\tborder-color: rgb(148 163 184);\n\t\n\ndivide-slate-500 > * + *\tborder-color: rgb(100 116 139);\n\t\n\ndivide-slate-600 > * + *\tborder-color: rgb(71 85 105);\n\t\n\ndivide-slate-700 > * + *\tborder-color: rgb(51 65 85);\n\t\n\ndivide-slate-800 > * + *\tborder-color: rgb(30 41 59);\n\t\n\ndivide-slate-900 > * + *\tborder-color: rgb(15 23 42);\n\t\n\ndivide-slate-950 > * + *\tborder-color: rgb(2 6 23);\n\t\n\ndivide-gray-50 > * + *\tborder-color: rgb(249 250 251);\n\t\n\ndivide-gray-100 > * + *\tborder-color: rgb(243 244 246);\n\t\n\ndivide-gray-200 > * + *\tborder-color: rgb(229 231 235);\n\t\n\ndivide-gray-300 > * + *\tborder-color: rgb(209 213 219);\n\t\n\ndivide-gray-400 > * + *\tborder-color: rgb(156 163 175);\n\t\n\ndivide-gray-500 > * + *\tborder-color: rgb(107 114 128);\n\t\n\ndivide-gray-600 > * + *\tborder-color: rgb(75 85 99);\n\t\n\ndivide-gray-700 > * + *\tborder-color: rgb(55 65 81);\n\t\n\ndivide-gray-800 > * + *\tborder-color: rgb(31 41 55);\n\t\n\ndivide-gray-900 > * + *\tborder-color: rgb(17 24 39);\n\t\n\ndivide-gray-950 > * + *\tborder-color: rgb(3 7 18);\n\t\n\ndivide-zinc-50 > * + *\tborder-color: rgb(250 250 250);\n\t\n\ndivide-zinc-100 > * + *\tborder-color: rgb(244 244 245);\n\t\n\ndivide-zinc-200 > * + *\tborder-color: rgb(228 228 231);\n\t\n\ndivide-zinc-300 > * + *\tborder-color: rgb(212 212 216);\n\t\n\ndivide-zinc-400 > * + *\tborder-color: rgb(161 161 170);\n\t\n\ndivide-zinc-500 > * + *\tborder-color: rgb(113 113 122);\n\t\n\ndivide-zinc-600 > * + *\tborder-color: rgb(82 82 91);\n\t\n\ndivide-zinc-700 > * + *\tborder-color: rgb(63 63 70);\n\t\n\ndivide-zinc-800 > * + *\tborder-color: rgb(39 39 42);\n\t\n\ndivide-zinc-900 > * + *\tborder-color: rgb(24 24 27);\n\t\n\ndivide-zinc-950 > * + *\tborder-color: rgb(9 9 11);\n\t\n\ndivide-neutral-50 > * + *\tborder-color: rgb(250 250 250);\n\t\n\ndivide-neutral-100 > * + *\tborder-color: rgb(245 245 245);\n\t\n\ndivide-neutral-200 > * + *\tborder-color: rgb(229 229 229);\n\t\n\ndivide-neutral-300 > * + *\tborder-color: rgb(212 212 212);\n\t\n\ndivide-neutral-400 > * + *\tborder-color: rgb(163 163 163);\n\t\n\ndivide-neutral-500 > * + *\tborder-color: rgb(115 115 115);\n\t\n\ndivide-neutral-600 > * + *\tborder-color: rgb(82 82 82);\n\t\n\ndivide-neutral-700 > * + *\tborder-color: rgb(64 64 64);\n\t\n\ndivide-neutral-800 > * + *\tborder-color: rgb(38 38 38);\n\t\n\ndivide-neutral-900 > * + *\tborder-color: rgb(23 23 23);\n\t\n\ndivide-neutral-950 > * + *\tborder-color: rgb(10 10 10);\n\t\n\ndivide-stone-50 > * + *\tborder-color: rgb(250 250 249);\n\t\n\ndivide-stone-100 > * + *\tborder-color: rgb(245 245 244);\n\t\n\ndivide-stone-200 > * + *\tborder-color: rgb(231 229 228);\n\t\n\ndivide-stone-300 > * + *\tborder-color: rgb(214 211 209);\n\t\n\ndivide-stone-400 > * + *\tborder-color: rgb(168 162 158);\n\t\n\ndivide-stone-500 > * + *\tborder-color: rgb(120 113 108);\n\t\n\ndivide-stone-600 > * + *\tborder-color: rgb(87 83 78);\n\t\n\ndivide-stone-700 > * + *\tborder-color: rgb(68 64 60);\n\t\n\ndivide-stone-800 > * + *\tborder-color: rgb(41 37 36);\n\t\n\ndivide-stone-900 > * + *\tborder-color: rgb(28 25 23);\n\t\n\ndivide-stone-950 > * + *\tborder-color: rgb(12 10 9);\n\t\n\ndivide-red-50 > * + *\tborder-color: rgb(254 242 242);\n\t\n\ndivide-red-100 > * + *\tborder-color: rgb(254 226 226);\n\t\n\ndivide-red-200 > * + *\tborder-color: rgb(254 202 202);\n\t\n\ndivide-red-300 > * + *\tborder-color: rgb(252 165 165);\n\t\n\ndivide-red-400 > * + *\tborder-color: rgb(248 113 113);\n\t\n\ndivide-red-500 > * + *\tborder-color: rgb(239 68 68);\n\t\n\ndivide-red-600 > * + *\tborder-color: rgb(220 38 38);\n\t\n\ndivide-red-700 > * + *\tborder-color: rgb(185 28 28);\n\t\n\ndivide-red-800 > * + *\tborder-color: rgb(153 27 27);\n\t\n\ndivide-red-900 > * + *\tborder-color: rgb(127 29 29);\n\t\n\ndivide-red-950 > * + *\tborder-color: rgb(69 10 10);\n\t\n\ndivide-orange-50 > * + *\tborder-color: rgb(255 247 237);\n\t\n\ndivide-orange-100 > * + *\tborder-color: rgb(255 237 213);\n\t\n\ndivide-orange-200 > * + *\tborder-color: rgb(254 215 170);\n\t\n\ndivide-orange-300 > * + *\tborder-color: rgb(253 186 116);\n\t\n\ndivide-orange-400 > * + *\tborder-color: rgb(251 146 60);\n\t\n\ndivide-orange-500 > * + *\tborder-color: rgb(249 115 22);\n\t\n\ndivide-orange-600 > * + *\tborder-color: rgb(234 88 12);\n\t\n\ndivide-orange-700 > * + *\tborder-color: rgb(194 65 12);\n\t\n\ndivide-orange-800 > * + *\tborder-color: rgb(154 52 18);\n\t\n\ndivide-orange-900 > * + *\tborder-color: rgb(124 45 18);\n\t\n\ndivide-orange-950 > * + *\tborder-color: rgb(67 20 7);\n\t\n\ndivide-amber-50 > * + *\tborder-color: rgb(255 251 235);\n\t\n\ndivide-amber-100 > * + *\tborder-color: rgb(254 243 199);\n\t\n\ndivide-amber-200 > * + *\tborder-color: rgb(253 230 138);\n\t\n\ndivide-amber-300 > * + *\tborder-color: rgb(252 211 77);\n\t\n\ndivide-amber-400 > * + *\tborder-color: rgb(251 191 36);\n\t\n\ndivide-amber-500 > * + *\tborder-color: rgb(245 158 11);\n\t\n\ndivide-amber-600 > * + *\tborder-color: rgb(217 119 6);\n\t\n\ndivide-amber-700 > * + *\tborder-color: rgb(180 83 9);\n\t\n\ndivide-amber-800 > * + *\tborder-color: rgb(146 64 14);\n\t\n\ndivide-amber-900 > * + *\tborder-color: rgb(120 53 15);\n\t\n\ndivide-amber-950 > * + *\tborder-color: rgb(69 26 3);\n\t\n\ndivide-yellow-50 > * + *\tborder-color: rgb(254 252 232);\n\t\n\ndivide-yellow-100 > * + *\tborder-color: rgb(254 249 195);\n\t\n\ndivide-yellow-200 > * + *\tborder-color: rgb(254 240 138);\n\t\n\ndivide-yellow-300 > * + *\tborder-color: rgb(253 224 71);\n\t\n\ndivide-yellow-400 > * + *\tborder-color: rgb(250 204 21);\n\t\n\ndivide-yellow-500 > * + *\tborder-color: rgb(234 179 8);\n\t\n\ndivide-yellow-600 > * + *\tborder-color: rgb(202 138 4);\n\t\n\ndivide-yellow-700 > * + *\tborder-color: rgb(161 98 7);\n\t\n\ndivide-yellow-800 > * + *\tborder-color: rgb(133 77 14);\n\t\n\ndivide-yellow-900 > * + *\tborder-color: rgb(113 63 18);\n\t\n\ndivide-yellow-950 > * + *\tborder-color: rgb(66 32 6);\n\t\n\ndivide-lime-50 > * + *\tborder-color: rgb(247 254 231);\n\t\n\ndivide-lime-100 > * + *\tborder-color: rgb(236 252 203);\n\t\n\ndivide-lime-200 > * + *\tborder-color: rgb(217 249 157);\n\t\n\ndivide-lime-300 > * + *\tborder-color: rgb(190 242 100);\n\t\n\ndivide-lime-400 > * + *\tborder-color: rgb(163 230 53);\n\t\n\ndivide-lime-500 > * + *\tborder-color: rgb(132 204 22);\n\t\n\ndivide-lime-600 > * + *\tborder-color: rgb(101 163 13);\n\t\n\ndivide-lime-700 > * + *\tborder-color: rgb(77 124 15);\n\t\n\ndivide-lime-800 > * + *\tborder-color: rgb(63 98 18);\n\t\n\ndivide-lime-900 > * + *\tborder-color: rgb(54 83 20);\n\t\n\ndivide-lime-950 > * + *\tborder-color: rgb(26 46 5);\n\t\n\ndivide-green-50 > * + *\tborder-color: rgb(240 253 244);\n\t\n\ndivide-green-100 > * + *\tborder-color: rgb(220 252 231);\n\t\n\ndivide-green-200 > * + *\tborder-color: rgb(187 247 208);\n\t\n\ndivide-green-300 > * + *\tborder-color: rgb(134 239 172);\n\t\n\ndivide-green-400 > * + *\tborder-color: rgb(74 222 128);\n\t\n\ndivide-green-500 > * + *\tborder-color: rgb(34 197 94);\n\t\n\ndivide-green-600 > * + *\tborder-color: rgb(22 163 74);\n\t\n\ndivide-green-700 > * + *\tborder-color: rgb(21 128 61);\n\t\n\ndivide-green-800 > * + *\tborder-color: rgb(22 101 52);\n\t\n\ndivide-green-900 > * + *\tborder-color: rgb(20 83 45);\n\t\n\ndivide-green-950 > * + *\tborder-color: rgb(5 46 22);\n\t\n\ndivide-emerald-50 > * + *\tborder-color: rgb(236 253 245);\n\t\n\ndivide-emerald-100 > * + *\tborder-color: rgb(209 250 229);\n\t\n\ndivide-emerald-200 > * + *\tborder-color: rgb(167 243 208);\n\t\n\ndivide-emerald-300 > * + *\tborder-color: rgb(110 231 183);\n\t\n\ndivide-emerald-400 > * + *\tborder-color: rgb(52 211 153);\n\t\n\ndivide-emerald-500 > * + *\tborder-color: rgb(16 185 129);\n\t\n\ndivide-emerald-600 > * + *\tborder-color: rgb(5 150 105);\n\t\n\ndivide-emerald-700 > * + *\tborder-color: rgb(4 120 87);\n\t\n\ndivide-emerald-800 > * + *\tborder-color: rgb(6 95 70);\n\t\n\ndivide-emerald-900 > * + *\tborder-color: rgb(6 78 59);\n\t\n\ndivide-emerald-950 > * + *\tborder-color: rgb(2 44 34);\n\t\n\ndivide-teal-50 > * + *\tborder-color: rgb(240 253 250);\n\t\n\ndivide-teal-100 > * + *\tborder-color: rgb(204 251 241);\n\t\n\ndivide-teal-200 > * + *\tborder-color: rgb(153 246 228);\n\t\n\ndivide-teal-300 > * + *\tborder-color: rgb(94 234 212);\n\t\n\ndivide-teal-400 > * + *\tborder-color: rgb(45 212 191);\n\t\n\ndivide-teal-500 > * + *\tborder-color: rgb(20 184 166);\n\t\n\ndivide-teal-600 > * + *\tborder-color: rgb(13 148 136);\n\t\n\ndivide-teal-700 > * + *\tborder-color: rgb(15 118 110);\n\t\n\ndivide-teal-800 > * + *\tborder-color: rgb(17 94 89);\n\t\n\ndivide-teal-900 > * + *\tborder-color: rgb(19 78 74);\n\t\n\ndivide-teal-950 > * + *\tborder-color: rgb(4 47 46);\n\t\n\ndivide-cyan-50 > * + *\tborder-color: rgb(236 254 255);\n\t\n\ndivide-cyan-100 > * + *\tborder-color: rgb(207 250 254);\n\t\n\ndivide-cyan-200 > * + *\tborder-color: rgb(165 243 252);\n\t\n\ndivide-cyan-300 > * + *\tborder-color: rgb(103 232 249);\n\t\n\ndivide-cyan-400 > * + *\tborder-color: rgb(34 211 238);\n\t\n\ndivide-cyan-500 > * + *\tborder-color: rgb(6 182 212);\n\t\n\ndivide-cyan-600 > * + *\tborder-color: rgb(8 145 178);\n\t\n\ndivide-cyan-700 > * + *\tborder-color: rgb(14 116 144);\n\t\n\ndivide-cyan-800 > * + *\tborder-color: rgb(21 94 117);\n\t\n\ndivide-cyan-900 > * + *\tborder-color: rgb(22 78 99);\n\t\n\ndivide-cyan-950 > * + *\tborder-color: rgb(8 51 68);\n\t\n\ndivide-sky-50 > * + *\tborder-color: rgb(240 249 255);\n\t\n\ndivide-sky-100 > * + *\tborder-color: rgb(224 242 254);\n\t\n\ndivide-sky-200 > * + *\tborder-color: rgb(186 230 253);\n\t\n\ndivide-sky-300 > * + *\tborder-color: rgb(125 211 252);\n\t\n\ndivide-sky-400 > * + *\tborder-color: rgb(56 189 248);\n\t\n\ndivide-sky-500 > * + *\tborder-color: rgb(14 165 233);\n\t\n\ndivide-sky-600 > * + *\tborder-color: rgb(2 132 199);\n\t\n\ndivide-sky-700 > * + *\tborder-color: rgb(3 105 161);\n\t\n\ndivide-sky-800 > * + *\tborder-color: rgb(7 89 133);\n\t\n\ndivide-sky-900 > * + *\tborder-color: rgb(12 74 110);\n\t\n\ndivide-sky-950 > * + *\tborder-color: rgb(8 47 73);\n\t\n\ndivide-blue-50 > * + *\tborder-color: rgb(239 246 255);\n\t\n\ndivide-blue-100 > * + *\tborder-color: rgb(219 234 254);\n\t\n\ndivide-blue-200 > * + *\tborder-color: rgb(191 219 254);\n\t\n\ndivide-blue-300 > * + *\tborder-color: rgb(147 197 253);\n\t\n\ndivide-blue-400 > * + *\tborder-color: rgb(96 165 250);\n\t\n\ndivide-blue-500 > * + *\tborder-color: rgb(59 130 246);\n\t\n\ndivide-blue-600 > * + *\tborder-color: rgb(37 99 235);\n\t\n\ndivide-blue-700 > * + *\tborder-color: rgb(29 78 216);\n\t\n\ndivide-blue-800 > * + *\tborder-color: rgb(30 64 175);\n\t\n\ndivide-blue-900 > * + *\tborder-color: rgb(30 58 138);\n\t\n\ndivide-blue-950 > * + *\tborder-color: rgb(23 37 84);\n\t\n\ndivide-indigo-50 > * + *\tborder-color: rgb(238 242 255);\n\t\n\ndivide-indigo-100 > * + *\tborder-color: rgb(224 231 255);\n\t\n\ndivide-indigo-200 > * + *\tborder-color: rgb(199 210 254);\n\t\n\ndivide-indigo-300 > * + *\tborder-color: rgb(165 180 252);\n\t\n\ndivide-indigo-400 > * + *\tborder-color: rgb(129 140 248);\n\t\n\ndivide-indigo-500 > * + *\tborder-color: rgb(99 102 241);\n\t\n\ndivide-indigo-600 > * + *\tborder-color: rgb(79 70 229);\n\t\n\ndivide-indigo-700 > * + *\tborder-color: rgb(67 56 202);\n\t\n\ndivide-indigo-800 > * + *\tborder-color: rgb(55 48 163);\n\t\n\ndivide-indigo-900 > * + *\tborder-color: rgb(49 46 129);\n\t\n\ndivide-indigo-950 > * + *\tborder-color: rgb(30 27 75);\n\t\n\ndivide-violet-50 > * + *\tborder-color: rgb(245 243 255);\n\t\n\ndivide-violet-100 > * + *\tborder-color: rgb(237 233 254);\n\t\n\ndivide-violet-200 > * + *\tborder-color: rgb(221 214 254);\n\t\n\ndivide-violet-300 > * + *\tborder-color: rgb(196 181 253);\n\t\n\ndivide-violet-400 > * + *\tborder-color: rgb(167 139 250);\n\t\n\ndivide-violet-500 > * + *\tborder-color: rgb(139 92 246);\n\t\n\ndivide-violet-600 > * + *\tborder-color: rgb(124 58 237);\n\t\n\ndivide-violet-700 > * + *\tborder-color: rgb(109 40 217);\n\t\n\ndivide-violet-800 > * + *\tborder-color: rgb(91 33 182);\n\t\n\ndivide-violet-900 > * + *\tborder-color: rgb(76 29 149);\n\t\n\ndivide-violet-950 > * + *\tborder-color: rgb(46 16 101);\n\t\n\ndivide-purple-50 > * + *\tborder-color: rgb(250 245 255);\n\t\n\ndivide-purple-100 > * + *\tborder-color: rgb(243 232 255);\n\t\n\ndivide-purple-200 > * + *\tborder-color: rgb(233 213 255);\n\t\n\ndivide-purple-300 > * + *\tborder-color: rgb(216 180 254);\n\t\n\ndivide-purple-400 > * + *\tborder-color: rgb(192 132 252);\n\t\n\ndivide-purple-500 > * + *\tborder-color: rgb(168 85 247);\n\t\n\ndivide-purple-600 > * + *\tborder-color: rgb(147 51 234);\n\t\n\ndivide-purple-700 > * + *\tborder-color: rgb(126 34 206);\n\t\n\ndivide-purple-800 > * + *\tborder-color: rgb(107 33 168);\n\t\n\ndivide-purple-900 > * + *\tborder-color: rgb(88 28 135);\n\t\n\ndivide-purple-950 > * + *\tborder-color: rgb(59 7 100);\n\t\n\ndivide-fuchsia-50 > * + *\tborder-color: rgb(253 244 255);\n\t\n\ndivide-fuchsia-100 > * + *\tborder-color: rgb(250 232 255);\n\t\n\ndivide-fuchsia-200 > * + *\tborder-color: rgb(245 208 254);\n\t\n\ndivide-fuchsia-300 > * + *\tborder-color: rgb(240 171 252);\n\t\n\ndivide-fuchsia-400 > * + *\tborder-color: rgb(232 121 249);\n\t\n\ndivide-fuchsia-500 > * + *\tborder-color: rgb(217 70 239);\n\t\n\ndivide-fuchsia-600 > * + *\tborder-color: rgb(192 38 211);\n\t\n\ndivide-fuchsia-700 > * + *\tborder-color: rgb(162 28 175);\n\t\n\ndivide-fuchsia-800 > * + *\tborder-color: rgb(134 25 143);\n\t\n\ndivide-fuchsia-900 > * + *\tborder-color: rgb(112 26 117);\n\t\n\ndivide-fuchsia-950 > * + *\tborder-color: rgb(74 4 78);\n\t\n\ndivide-pink-50 > * + *\tborder-color: rgb(253 242 248);\n\t\n\ndivide-pink-100 > * + *\tborder-color: rgb(252 231 243);\n\t\n\ndivide-pink-200 > * + *\tborder-color: rgb(251 207 232);\n\t\n\ndivide-pink-300 > * + *\tborder-color: rgb(249 168 212);\n\t\n\ndivide-pink-400 > * + *\tborder-color: rgb(244 114 182);\n\t\n\ndivide-pink-500 > * + *\tborder-color: rgb(236 72 153);\n\t\n\ndivide-pink-600 > * + *\tborder-color: rgb(219 39 119);\n\t\n\ndivide-pink-700 > * + *\tborder-color: rgb(190 24 93);\n\t\n\ndivide-pink-800 > * + *\tborder-color: rgb(157 23 77);\n\t\n\ndivide-pink-900 > * + *\tborder-color: rgb(131 24 67);\n\t\n\ndivide-pink-950 > * + *\tborder-color: rgb(80 7 36);\n\t\n\ndivide-rose-50 > * + *\tborder-color: rgb(255 241 242);\n\t\n\ndivide-rose-100 > * + *\tborder-color: rgb(255 228 230);\n\t\n\ndivide-rose-200 > * + *\tborder-color: rgb(254 205 211);\n\t\n\ndivide-rose-300 > * + *\tborder-color: rgb(253 164 175);\n\t\n\ndivide-rose-400 > * + *\tborder-color: rgb(251 113 133);\n\t\n\ndivide-rose-500 > * + *\tborder-color: rgb(244 63 94);\n\t\n\ndivide-rose-600 > * + *\tborder-color: rgb(225 29 72);\n\t\n\ndivide-rose-700 > * + *\tborder-color: rgb(190 18 60);\n\t\n\ndivide-rose-800 > * + *\tborder-color: rgb(159 18 57);\n\t\n\ndivide-rose-900 > * + *\tborder-color: rgb(136 19 55);\n\t\n\ndivide-rose-950 > * + *\tborder-color: rgb(76 5 25);\n\t\n​\nBasic usage\n​\nSetting the divide color\n\nControl the border color between elements using the divide-{color} utilities.\n\n01\n02\n03\n<div class=\"divide-y divide-blue-200\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nChanging the opacity\n\nControl the opacity of the divide color using the color opacity modifier.\n\n01\n02\n03\n<div class=\"divide-y-4 divide-slate-400/25 ...\">\n  <!-- ... -->\n</div>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<div class=\"divide-y-4 divide-slate-400/[.24] ...\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:divide-pink-400 to only apply the divide-pink-400 utility on hover.\n\n<div class=\"divide-y divide-teal-400 hover:divide-pink-400\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:divide-pink-400 to apply the divide-pink-400 utility at only medium screen sizes and above.\n\n<div class=\"divide-y divide-teal-400 md:divide-pink-400\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as divide colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your divide colors by editing theme.divideColor or theme.extend.divideColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off divide-{color} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"divide-[#243c5a]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nDivide Width\nDivide Style\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the divide color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Border Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/border-color",
    "html": "Borders\n\nBorder Color\n\nUtilities for controlling the color of an element's borders.\n\n​\nQuick reference\nClass\n\t\nProperties\n\t\nPreview\n \n\nborder-inherit\tborder-color: inherit;\n\t\n\nborder-current\tborder-color: currentColor;\n\t\n\nborder-transparent\tborder-color: transparent;\n\t\n\nborder-black\tborder-color: rgb(0 0 0);\n\t\n\nborder-white\tborder-color: rgb(255 255 255);\n\t\n\nborder-slate-50\tborder-color: rgb(248 250 252);\n\t\n\nborder-slate-100\tborder-color: rgb(241 245 249);\n\t\n\nborder-slate-200\tborder-color: rgb(226 232 240);\n\t\n\nborder-slate-300\tborder-color: rgb(203 213 225);\n\t\n\nborder-slate-400\tborder-color: rgb(148 163 184);\n\t\n\nborder-slate-500\tborder-color: rgb(100 116 139);\n\t\n\nborder-slate-600\tborder-color: rgb(71 85 105);\n\t\n\nborder-slate-700\tborder-color: rgb(51 65 85);\n\t\n\nborder-slate-800\tborder-color: rgb(30 41 59);\n\t\n\nborder-slate-900\tborder-color: rgb(15 23 42);\n\t\n\nborder-slate-950\tborder-color: rgb(2 6 23);\n\t\n\nborder-gray-50\tborder-color: rgb(249 250 251);\n\t\n\nborder-gray-100\tborder-color: rgb(243 244 246);\n\t\n\nborder-gray-200\tborder-color: rgb(229 231 235);\n\t\n\nborder-gray-300\tborder-color: rgb(209 213 219);\n\t\n\nborder-gray-400\tborder-color: rgb(156 163 175);\n\t\n\nborder-gray-500\tborder-color: rgb(107 114 128);\n\t\n\nborder-gray-600\tborder-color: rgb(75 85 99);\n\t\n\nborder-gray-700\tborder-color: rgb(55 65 81);\n\t\n\nborder-gray-800\tborder-color: rgb(31 41 55);\n\t\n\nborder-gray-900\tborder-color: rgb(17 24 39);\n\t\n\nborder-gray-950\tborder-color: rgb(3 7 18);\n\t\n\nborder-zinc-50\tborder-color: rgb(250 250 250);\n\t\n\nborder-zinc-100\tborder-color: rgb(244 244 245);\n\t\n\nborder-zinc-200\tborder-color: rgb(228 228 231);\n\t\n\nborder-zinc-300\tborder-color: rgb(212 212 216);\n\t\n\nborder-zinc-400\tborder-color: rgb(161 161 170);\n\t\n\nborder-zinc-500\tborder-color: rgb(113 113 122);\n\t\n\nborder-zinc-600\tborder-color: rgb(82 82 91);\n\t\n\nborder-zinc-700\tborder-color: rgb(63 63 70);\n\t\n\nborder-zinc-800\tborder-color: rgb(39 39 42);\n\t\n\nborder-zinc-900\tborder-color: rgb(24 24 27);\n\t\n\nborder-zinc-950\tborder-color: rgb(9 9 11);\n\t\n\nborder-neutral-50\tborder-color: rgb(250 250 250);\n\t\n\nborder-neutral-100\tborder-color: rgb(245 245 245);\n\t\n\nborder-neutral-200\tborder-color: rgb(229 229 229);\n\t\n\nborder-neutral-300\tborder-color: rgb(212 212 212);\n\t\n\nborder-neutral-400\tborder-color: rgb(163 163 163);\n\t\n\nborder-neutral-500\tborder-color: rgb(115 115 115);\n\t\n\nborder-neutral-600\tborder-color: rgb(82 82 82);\n\t\n\nborder-neutral-700\tborder-color: rgb(64 64 64);\n\t\n\nborder-neutral-800\tborder-color: rgb(38 38 38);\n\t\n\nborder-neutral-900\tborder-color: rgb(23 23 23);\n\t\n\nborder-neutral-950\tborder-color: rgb(10 10 10);\n\t\n\nborder-stone-50\tborder-color: rgb(250 250 249);\n\t\n\nborder-stone-100\tborder-color: rgb(245 245 244);\n\t\n\nborder-stone-200\tborder-color: rgb(231 229 228);\n\t\n\nborder-stone-300\tborder-color: rgb(214 211 209);\n\t\n\nborder-stone-400\tborder-color: rgb(168 162 158);\n\t\n\nborder-stone-500\tborder-color: rgb(120 113 108);\n\t\n\nborder-stone-600\tborder-color: rgb(87 83 78);\n\t\n\nborder-stone-700\tborder-color: rgb(68 64 60);\n\t\n\nborder-stone-800\tborder-color: rgb(41 37 36);\n\t\n\nborder-stone-900\tborder-color: rgb(28 25 23);\n\t\n\nborder-stone-950\tborder-color: rgb(12 10 9);\n\t\n\nborder-red-50\tborder-color: rgb(254 242 242);\n\t\n\nborder-red-100\tborder-color: rgb(254 226 226);\n\t\n\nborder-red-200\tborder-color: rgb(254 202 202);\n\t\n\nborder-red-300\tborder-color: rgb(252 165 165);\n\t\n\nborder-red-400\tborder-color: rgb(248 113 113);\n\t\n\nborder-red-500\tborder-color: rgb(239 68 68);\n\t\n\nborder-red-600\tborder-color: rgb(220 38 38);\n\t\n\nborder-red-700\tborder-color: rgb(185 28 28);\n\t\n\nborder-red-800\tborder-color: rgb(153 27 27);\n\t\n\nborder-red-900\tborder-color: rgb(127 29 29);\n\t\n\nborder-red-950\tborder-color: rgb(69 10 10);\n\t\n\nborder-orange-50\tborder-color: rgb(255 247 237);\n\t\n\nborder-orange-100\tborder-color: rgb(255 237 213);\n\t\n\nborder-orange-200\tborder-color: rgb(254 215 170);\n\t\n\nborder-orange-300\tborder-color: rgb(253 186 116);\n\t\n\nborder-orange-400\tborder-color: rgb(251 146 60);\n\t\n\nborder-orange-500\tborder-color: rgb(249 115 22);\n\t\n\nborder-orange-600\tborder-color: rgb(234 88 12);\n\t\n\nborder-orange-700\tborder-color: rgb(194 65 12);\n\t\n\nborder-orange-800\tborder-color: rgb(154 52 18);\n\t\n\nborder-orange-900\tborder-color: rgb(124 45 18);\n\t\n\nborder-orange-950\tborder-color: rgb(67 20 7);\n\t\n\nborder-amber-50\tborder-color: rgb(255 251 235);\n\t\n\nborder-amber-100\tborder-color: rgb(254 243 199);\n\t\n\nborder-amber-200\tborder-color: rgb(253 230 138);\n\t\n\nborder-amber-300\tborder-color: rgb(252 211 77);\n\t\n\nborder-amber-400\tborder-color: rgb(251 191 36);\n\t\n\nborder-amber-500\tborder-color: rgb(245 158 11);\n\t\n\nborder-amber-600\tborder-color: rgb(217 119 6);\n\t\n\nborder-amber-700\tborder-color: rgb(180 83 9);\n\t\n\nborder-amber-800\tborder-color: rgb(146 64 14);\n\t\n\nborder-amber-900\tborder-color: rgb(120 53 15);\n\t\n\nborder-amber-950\tborder-color: rgb(69 26 3);\n\t\n\nborder-yellow-50\tborder-color: rgb(254 252 232);\n\t\n\nborder-yellow-100\tborder-color: rgb(254 249 195);\n\t\n\nborder-yellow-200\tborder-color: rgb(254 240 138);\n\t\n\nborder-yellow-300\tborder-color: rgb(253 224 71);\n\t\n\nborder-yellow-400\tborder-color: rgb(250 204 21);\n\t\n\nborder-yellow-500\tborder-color: rgb(234 179 8);\n\t\n\nborder-yellow-600\tborder-color: rgb(202 138 4);\n\t\n\nborder-yellow-700\tborder-color: rgb(161 98 7);\n\t\n\nborder-yellow-800\tborder-color: rgb(133 77 14);\n\t\n\nborder-yellow-900\tborder-color: rgb(113 63 18);\n\t\n\nborder-yellow-950\tborder-color: rgb(66 32 6);\n\t\n\nborder-lime-50\tborder-color: rgb(247 254 231);\n\t\n\nborder-lime-100\tborder-color: rgb(236 252 203);\n\t\n\nborder-lime-200\tborder-color: rgb(217 249 157);\n\t\n\nborder-lime-300\tborder-color: rgb(190 242 100);\n\t\n\nborder-lime-400\tborder-color: rgb(163 230 53);\n\t\n\nborder-lime-500\tborder-color: rgb(132 204 22);\n\t\n\nborder-lime-600\tborder-color: rgb(101 163 13);\n\t\n\nborder-lime-700\tborder-color: rgb(77 124 15);\n\t\n\nborder-lime-800\tborder-color: rgb(63 98 18);\n\t\n\nborder-lime-900\tborder-color: rgb(54 83 20);\n\t\n\nborder-lime-950\tborder-color: rgb(26 46 5);\n\t\n\nborder-green-50\tborder-color: rgb(240 253 244);\n\t\n\nborder-green-100\tborder-color: rgb(220 252 231);\n\t\n\nborder-green-200\tborder-color: rgb(187 247 208);\n\t\n\nborder-green-300\tborder-color: rgb(134 239 172);\n\t\n\nborder-green-400\tborder-color: rgb(74 222 128);\n\t\n\nborder-green-500\tborder-color: rgb(34 197 94);\n\t\n\nborder-green-600\tborder-color: rgb(22 163 74);\n\t\n\nborder-green-700\tborder-color: rgb(21 128 61);\n\t\n\nborder-green-800\tborder-color: rgb(22 101 52);\n\t\n\nborder-green-900\tborder-color: rgb(20 83 45);\n\t\n\nborder-green-950\tborder-color: rgb(5 46 22);\n\t\n\nborder-emerald-50\tborder-color: rgb(236 253 245);\n\t\n\nborder-emerald-100\tborder-color: rgb(209 250 229);\n\t\n\nborder-emerald-200\tborder-color: rgb(167 243 208);\n\t\n\nborder-emerald-300\tborder-color: rgb(110 231 183);\n\t\n\nborder-emerald-400\tborder-color: rgb(52 211 153);\n\t\n\nborder-emerald-500\tborder-color: rgb(16 185 129);\n\t\n\nborder-emerald-600\tborder-color: rgb(5 150 105);\n\t\n\nborder-emerald-700\tborder-color: rgb(4 120 87);\n\t\n\nborder-emerald-800\tborder-color: rgb(6 95 70);\n\t\n\nborder-emerald-900\tborder-color: rgb(6 78 59);\n\t\n\nborder-emerald-950\tborder-color: rgb(2 44 34);\n\t\n\nborder-teal-50\tborder-color: rgb(240 253 250);\n\t\n\nborder-teal-100\tborder-color: rgb(204 251 241);\n\t\n\nborder-teal-200\tborder-color: rgb(153 246 228);\n\t\n\nborder-teal-300\tborder-color: rgb(94 234 212);\n\t\n\nborder-teal-400\tborder-color: rgb(45 212 191);\n\t\n\nborder-teal-500\tborder-color: rgb(20 184 166);\n\t\n\nborder-teal-600\tborder-color: rgb(13 148 136);\n\t\n\nborder-teal-700\tborder-color: rgb(15 118 110);\n\t\n\nborder-teal-800\tborder-color: rgb(17 94 89);\n\t\n\nborder-teal-900\tborder-color: rgb(19 78 74);\n\t\n\nborder-teal-950\tborder-color: rgb(4 47 46);\n\t\n\nborder-cyan-50\tborder-color: rgb(236 254 255);\n\t\n\nborder-cyan-100\tborder-color: rgb(207 250 254);\n\t\n\nborder-cyan-200\tborder-color: rgb(165 243 252);\n\t\n\nborder-cyan-300\tborder-color: rgb(103 232 249);\n\t\n\nborder-cyan-400\tborder-color: rgb(34 211 238);\n\t\n\nborder-cyan-500\tborder-color: rgb(6 182 212);\n\t\n\nborder-cyan-600\tborder-color: rgb(8 145 178);\n\t\n\nborder-cyan-700\tborder-color: rgb(14 116 144);\n\t\n\nborder-cyan-800\tborder-color: rgb(21 94 117);\n\t\n\nborder-cyan-900\tborder-color: rgb(22 78 99);\n\t\n\nborder-cyan-950\tborder-color: rgb(8 51 68);\n\t\n\nborder-sky-50\tborder-color: rgb(240 249 255);\n\t\n\nborder-sky-100\tborder-color: rgb(224 242 254);\n\t\n\nborder-sky-200\tborder-color: rgb(186 230 253);\n\t\n\nborder-sky-300\tborder-color: rgb(125 211 252);\n\t\n\nborder-sky-400\tborder-color: rgb(56 189 248);\n\t\n\nborder-sky-500\tborder-color: rgb(14 165 233);\n\t\n\nborder-sky-600\tborder-color: rgb(2 132 199);\n\t\n\nborder-sky-700\tborder-color: rgb(3 105 161);\n\t\n\nborder-sky-800\tborder-color: rgb(7 89 133);\n\t\n\nborder-sky-900\tborder-color: rgb(12 74 110);\n\t\n\nborder-sky-950\tborder-color: rgb(8 47 73);\n\t\n\nborder-blue-50\tborder-color: rgb(239 246 255);\n\t\n\nborder-blue-100\tborder-color: rgb(219 234 254);\n\t\n\nborder-blue-200\tborder-color: rgb(191 219 254);\n\t\n\nborder-blue-300\tborder-color: rgb(147 197 253);\n\t\n\nborder-blue-400\tborder-color: rgb(96 165 250);\n\t\n\nborder-blue-500\tborder-color: rgb(59 130 246);\n\t\n\nborder-blue-600\tborder-color: rgb(37 99 235);\n\t\n\nborder-blue-700\tborder-color: rgb(29 78 216);\n\t\n\nborder-blue-800\tborder-color: rgb(30 64 175);\n\t\n\nborder-blue-900\tborder-color: rgb(30 58 138);\n\t\n\nborder-blue-950\tborder-color: rgb(23 37 84);\n\t\n\nborder-indigo-50\tborder-color: rgb(238 242 255);\n\t\n\nborder-indigo-100\tborder-color: rgb(224 231 255);\n\t\n\nborder-indigo-200\tborder-color: rgb(199 210 254);\n\t\n\nborder-indigo-300\tborder-color: rgb(165 180 252);\n\t\n\nborder-indigo-400\tborder-color: rgb(129 140 248);\n\t\n\nborder-indigo-500\tborder-color: rgb(99 102 241);\n\t\n\nborder-indigo-600\tborder-color: rgb(79 70 229);\n\t\n\nborder-indigo-700\tborder-color: rgb(67 56 202);\n\t\n\nborder-indigo-800\tborder-color: rgb(55 48 163);\n\t\n\nborder-indigo-900\tborder-color: rgb(49 46 129);\n\t\n\nborder-indigo-950\tborder-color: rgb(30 27 75);\n\t\n\nborder-violet-50\tborder-color: rgb(245 243 255);\n\t\n\nborder-violet-100\tborder-color: rgb(237 233 254);\n\t\n\nborder-violet-200\tborder-color: rgb(221 214 254);\n\t\n\nborder-violet-300\tborder-color: rgb(196 181 253);\n\t\n\nborder-violet-400\tborder-color: rgb(167 139 250);\n\t\n\nborder-violet-500\tborder-color: rgb(139 92 246);\n\t\n\nborder-violet-600\tborder-color: rgb(124 58 237);\n\t\n\nborder-violet-700\tborder-color: rgb(109 40 217);\n\t\n\nborder-violet-800\tborder-color: rgb(91 33 182);\n\t\n\nborder-violet-900\tborder-color: rgb(76 29 149);\n\t\n\nborder-violet-950\tborder-color: rgb(46 16 101);\n\t\n\nborder-purple-50\tborder-color: rgb(250 245 255);\n\t\n\nborder-purple-100\tborder-color: rgb(243 232 255);\n\t\n\nborder-purple-200\tborder-color: rgb(233 213 255);\n\t\n\nborder-purple-300\tborder-color: rgb(216 180 254);\n\t\n\nborder-purple-400\tborder-color: rgb(192 132 252);\n\t\n\nborder-purple-500\tborder-color: rgb(168 85 247);\n\t\n\nborder-purple-600\tborder-color: rgb(147 51 234);\n\t\n\nborder-purple-700\tborder-color: rgb(126 34 206);\n\t\n\nborder-purple-800\tborder-color: rgb(107 33 168);\n\t\n\nborder-purple-900\tborder-color: rgb(88 28 135);\n\t\n\nborder-purple-950\tborder-color: rgb(59 7 100);\n\t\n\nborder-fuchsia-50\tborder-color: rgb(253 244 255);\n\t\n\nborder-fuchsia-100\tborder-color: rgb(250 232 255);\n\t\n\nborder-fuchsia-200\tborder-color: rgb(245 208 254);\n\t\n\nborder-fuchsia-300\tborder-color: rgb(240 171 252);\n\t\n\nborder-fuchsia-400\tborder-color: rgb(232 121 249);\n\t\n\nborder-fuchsia-500\tborder-color: rgb(217 70 239);\n\t\n\nborder-fuchsia-600\tborder-color: rgb(192 38 211);\n\t\n\nborder-fuchsia-700\tborder-color: rgb(162 28 175);\n\t\n\nborder-fuchsia-800\tborder-color: rgb(134 25 143);\n\t\n\nborder-fuchsia-900\tborder-color: rgb(112 26 117);\n\t\n\nborder-fuchsia-950\tborder-color: rgb(74 4 78);\n\t\n\nborder-pink-50\tborder-color: rgb(253 242 248);\n\t\n\nborder-pink-100\tborder-color: rgb(252 231 243);\n\t\n\nborder-pink-200\tborder-color: rgb(251 207 232);\n\t\n\nborder-pink-300\tborder-color: rgb(249 168 212);\n\t\n\nborder-pink-400\tborder-color: rgb(244 114 182);\n\t\n\nborder-pink-500\tborder-color: rgb(236 72 153);\n\t\n\nborder-pink-600\tborder-color: rgb(219 39 119);\n\t\n\nborder-pink-700\tborder-color: rgb(190 24 93);\n\t\n\nborder-pink-800\tborder-color: rgb(157 23 77);\n\t\n\nborder-pink-900\tborder-color: rgb(131 24 67);\n\t\n\nborder-pink-950\tborder-color: rgb(80 7 36);\n\t\n\nborder-rose-50\tborder-color: rgb(255 241 242);\n\t\n\nborder-rose-100\tborder-color: rgb(255 228 230);\n\t\n\nborder-rose-200\tborder-color: rgb(254 205 211);\n\t\n\nborder-rose-300\tborder-color: rgb(253 164 175);\n\t\n\nborder-rose-400\tborder-color: rgb(251 113 133);\n\t\n\nborder-rose-500\tborder-color: rgb(244 63 94);\n\t\n\nborder-rose-600\tborder-color: rgb(225 29 72);\n\t\n\nborder-rose-700\tborder-color: rgb(190 18 60);\n\t\n\nborder-rose-800\tborder-color: rgb(159 18 57);\n\t\n\nborder-rose-900\tborder-color: rgb(136 19 55);\n\t\n\nborder-rose-950\tborder-color: rgb(76 5 25);\n\t\n\nborder-x-inherit\tborder-left-color: inherit;\nborder-right-color: inherit;\n\t\n\nborder-x-current\tborder-left-color: currentColor;\nborder-right-color: currentColor;\n\t\n\nborder-x-transparent\tborder-left-color: transparent;\nborder-right-color: transparent;\n\t\n\nborder-x-black\tborder-left-color: rgb(0 0 0);\nborder-right-color: rgb(0 0 0);\n\t\n\nborder-x-white\tborder-left-color: rgb(255 255 255);\nborder-right-color: rgb(255 255 255);\n\t\n\nborder-x-slate-50\tborder-left-color: rgb(248 250 252);\nborder-right-color: rgb(248 250 252);\n\t\n\nborder-x-slate-100\tborder-left-color: rgb(241 245 249);\nborder-right-color: rgb(241 245 249);\n\t\n\nborder-x-slate-200\tborder-left-color: rgb(226 232 240);\nborder-right-color: rgb(226 232 240);\n\t\n\nborder-x-slate-300\tborder-left-color: rgb(203 213 225);\nborder-right-color: rgb(203 213 225);\n\t\n\nborder-x-slate-400\tborder-left-color: rgb(148 163 184);\nborder-right-color: rgb(148 163 184);\n\t\n\nborder-x-slate-500\tborder-left-color: rgb(100 116 139);\nborder-right-color: rgb(100 116 139);\n\t\n\nborder-x-slate-600\tborder-left-color: rgb(71 85 105);\nborder-right-color: rgb(71 85 105);\n\t\n\nborder-x-slate-700\tborder-left-color: rgb(51 65 85);\nborder-right-color: rgb(51 65 85);\n\t\n\nborder-x-slate-800\tborder-left-color: rgb(30 41 59);\nborder-right-color: rgb(30 41 59);\n\t\n\nborder-x-slate-900\tborder-left-color: rgb(15 23 42);\nborder-right-color: rgb(15 23 42);\n\t\n\nborder-x-slate-950\tborder-left-color: rgb(2 6 23);\nborder-right-color: rgb(2 6 23);\n\t\n\nborder-x-gray-50\tborder-left-color: rgb(249 250 251);\nborder-right-color: rgb(249 250 251);\n\t\n\nborder-x-gray-100\tborder-left-color: rgb(243 244 246);\nborder-right-color: rgb(243 244 246);\n\t\n\nborder-x-gray-200\tborder-left-color: rgb(229 231 235);\nborder-right-color: rgb(229 231 235);\n\t\n\nborder-x-gray-300\tborder-left-color: rgb(209 213 219);\nborder-right-color: rgb(209 213 219);\n\t\n\nborder-x-gray-400\tborder-left-color: rgb(156 163 175);\nborder-right-color: rgb(156 163 175);\n\t\n\nborder-x-gray-500\tborder-left-color: rgb(107 114 128);\nborder-right-color: rgb(107 114 128);\n\t\n\nborder-x-gray-600\tborder-left-color: rgb(75 85 99);\nborder-right-color: rgb(75 85 99);\n\t\n\nborder-x-gray-700\tborder-left-color: rgb(55 65 81);\nborder-right-color: rgb(55 65 81);\n\t\n\nborder-x-gray-800\tborder-left-color: rgb(31 41 55);\nborder-right-color: rgb(31 41 55);\n\t\n\nborder-x-gray-900\tborder-left-color: rgb(17 24 39);\nborder-right-color: rgb(17 24 39);\n\t\n\nborder-x-gray-950\tborder-left-color: rgb(3 7 18);\nborder-right-color: rgb(3 7 18);\n\t\n\nborder-x-zinc-50\tborder-left-color: rgb(250 250 250);\nborder-right-color: rgb(250 250 250);\n\t\n\nborder-x-zinc-100\tborder-left-color: rgb(244 244 245);\nborder-right-color: rgb(244 244 245);\n\t\n\nborder-x-zinc-200\tborder-left-color: rgb(228 228 231);\nborder-right-color: rgb(228 228 231);\n\t\n\nborder-x-zinc-300\tborder-left-color: rgb(212 212 216);\nborder-right-color: rgb(212 212 216);\n\t\n\nborder-x-zinc-400\tborder-left-color: rgb(161 161 170);\nborder-right-color: rgb(161 161 170);\n\t\n\nborder-x-zinc-500\tborder-left-color: rgb(113 113 122);\nborder-right-color: rgb(113 113 122);\n\t\n\nborder-x-zinc-600\tborder-left-color: rgb(82 82 91);\nborder-right-color: rgb(82 82 91);\n\t\n\nborder-x-zinc-700\tborder-left-color: rgb(63 63 70);\nborder-right-color: rgb(63 63 70);\n\t\n\nborder-x-zinc-800\tborder-left-color: rgb(39 39 42);\nborder-right-color: rgb(39 39 42);\n\t\n\nborder-x-zinc-900\tborder-left-color: rgb(24 24 27);\nborder-right-color: rgb(24 24 27);\n\t\n\nborder-x-zinc-950\tborder-left-color: rgb(9 9 11);\nborder-right-color: rgb(9 9 11);\n\t\n\nborder-x-neutral-50\tborder-left-color: rgb(250 250 250);\nborder-right-color: rgb(250 250 250);\n\t\n\nborder-x-neutral-100\tborder-left-color: rgb(245 245 245);\nborder-right-color: rgb(245 245 245);\n\t\n\nborder-x-neutral-200\tborder-left-color: rgb(229 229 229);\nborder-right-color: rgb(229 229 229);\n\t\n\nborder-x-neutral-300\tborder-left-color: rgb(212 212 212);\nborder-right-color: rgb(212 212 212);\n\t\n\nborder-x-neutral-400\tborder-left-color: rgb(163 163 163);\nborder-right-color: rgb(163 163 163);\n\t\n\nborder-x-neutral-500\tborder-left-color: rgb(115 115 115);\nborder-right-color: rgb(115 115 115);\n\t\n\nborder-x-neutral-600\tborder-left-color: rgb(82 82 82);\nborder-right-color: rgb(82 82 82);\n\t\n\nborder-x-neutral-700\tborder-left-color: rgb(64 64 64);\nborder-right-color: rgb(64 64 64);\n\t\n\nborder-x-neutral-800\tborder-left-color: rgb(38 38 38);\nborder-right-color: rgb(38 38 38);\n\t\n\nborder-x-neutral-900\tborder-left-color: rgb(23 23 23);\nborder-right-color: rgb(23 23 23);\n\t\n\nborder-x-neutral-950\tborder-left-color: rgb(10 10 10);\nborder-right-color: rgb(10 10 10);\n\t\n\nborder-x-stone-50\tborder-left-color: rgb(250 250 249);\nborder-right-color: rgb(250 250 249);\n\t\n\nborder-x-stone-100\tborder-left-color: rgb(245 245 244);\nborder-right-color: rgb(245 245 244);\n\t\n\nborder-x-stone-200\tborder-left-color: rgb(231 229 228);\nborder-right-color: rgb(231 229 228);\n\t\n\nborder-x-stone-300\tborder-left-color: rgb(214 211 209);\nborder-right-color: rgb(214 211 209);\n\t\n\nborder-x-stone-400\tborder-left-color: rgb(168 162 158);\nborder-right-color: rgb(168 162 158);\n\t\n\nborder-x-stone-500\tborder-left-color: rgb(120 113 108);\nborder-right-color: rgb(120 113 108);\n\t\n\nborder-x-stone-600\tborder-left-color: rgb(87 83 78);\nborder-right-color: rgb(87 83 78);\n\t\n\nborder-x-stone-700\tborder-left-color: rgb(68 64 60);\nborder-right-color: rgb(68 64 60);\n\t\n\nborder-x-stone-800\tborder-left-color: rgb(41 37 36);\nborder-right-color: rgb(41 37 36);\n\t\n\nborder-x-stone-900\tborder-left-color: rgb(28 25 23);\nborder-right-color: rgb(28 25 23);\n\t\n\nborder-x-stone-950\tborder-left-color: rgb(12 10 9);\nborder-right-color: rgb(12 10 9);\n\t\n\nborder-x-red-50\tborder-left-color: rgb(254 242 242);\nborder-right-color: rgb(254 242 242);\n\t\n\nborder-x-red-100\tborder-left-color: rgb(254 226 226);\nborder-right-color: rgb(254 226 226);\n\t\n\nborder-x-red-200\tborder-left-color: rgb(254 202 202);\nborder-right-color: rgb(254 202 202);\n\t\n\nborder-x-red-300\tborder-left-color: rgb(252 165 165);\nborder-right-color: rgb(252 165 165);\n\t\n\nborder-x-red-400\tborder-left-color: rgb(248 113 113);\nborder-right-color: rgb(248 113 113);\n\t\n\nborder-x-red-500\tborder-left-color: rgb(239 68 68);\nborder-right-color: rgb(239 68 68);\n\t\n\nborder-x-red-600\tborder-left-color: rgb(220 38 38);\nborder-right-color: rgb(220 38 38);\n\t\n\nborder-x-red-700\tborder-left-color: rgb(185 28 28);\nborder-right-color: rgb(185 28 28);\n\t\n\nborder-x-red-800\tborder-left-color: rgb(153 27 27);\nborder-right-color: rgb(153 27 27);\n\t\n\nborder-x-red-900\tborder-left-color: rgb(127 29 29);\nborder-right-color: rgb(127 29 29);\n\t\n\nborder-x-red-950\tborder-left-color: rgb(69 10 10);\nborder-right-color: rgb(69 10 10);\n\t\n\nborder-x-orange-50\tborder-left-color: rgb(255 247 237);\nborder-right-color: rgb(255 247 237);\n\t\n\nborder-x-orange-100\tborder-left-color: rgb(255 237 213);\nborder-right-color: rgb(255 237 213);\n\t\n\nborder-x-orange-200\tborder-left-color: rgb(254 215 170);\nborder-right-color: rgb(254 215 170);\n\t\n\nborder-x-orange-300\tborder-left-color: rgb(253 186 116);\nborder-right-color: rgb(253 186 116);\n\t\n\nborder-x-orange-400\tborder-left-color: rgb(251 146 60);\nborder-right-color: rgb(251 146 60);\n\t\n\nborder-x-orange-500\tborder-left-color: rgb(249 115 22);\nborder-right-color: rgb(249 115 22);\n\t\n\nborder-x-orange-600\tborder-left-color: rgb(234 88 12);\nborder-right-color: rgb(234 88 12);\n\t\n\nborder-x-orange-700\tborder-left-color: rgb(194 65 12);\nborder-right-color: rgb(194 65 12);\n\t\n\nborder-x-orange-800\tborder-left-color: rgb(154 52 18);\nborder-right-color: rgb(154 52 18);\n\t\n\nborder-x-orange-900\tborder-left-color: rgb(124 45 18);\nborder-right-color: rgb(124 45 18);\n\t\n\nborder-x-orange-950\tborder-left-color: rgb(67 20 7);\nborder-right-color: rgb(67 20 7);\n\t\n\nborder-x-amber-50\tborder-left-color: rgb(255 251 235);\nborder-right-color: rgb(255 251 235);\n\t\n\nborder-x-amber-100\tborder-left-color: rgb(254 243 199);\nborder-right-color: rgb(254 243 199);\n\t\n\nborder-x-amber-200\tborder-left-color: rgb(253 230 138);\nborder-right-color: rgb(253 230 138);\n\t\n\nborder-x-amber-300\tborder-left-color: rgb(252 211 77);\nborder-right-color: rgb(252 211 77);\n\t\n\nborder-x-amber-400\tborder-left-color: rgb(251 191 36);\nborder-right-color: rgb(251 191 36);\n\t\n\nborder-x-amber-500\tborder-left-color: rgb(245 158 11);\nborder-right-color: rgb(245 158 11);\n\t\n\nborder-x-amber-600\tborder-left-color: rgb(217 119 6);\nborder-right-color: rgb(217 119 6);\n\t\n\nborder-x-amber-700\tborder-left-color: rgb(180 83 9);\nborder-right-color: rgb(180 83 9);\n\t\n\nborder-x-amber-800\tborder-left-color: rgb(146 64 14);\nborder-right-color: rgb(146 64 14);\n\t\n\nborder-x-amber-900\tborder-left-color: rgb(120 53 15);\nborder-right-color: rgb(120 53 15);\n\t\n\nborder-x-amber-950\tborder-left-color: rgb(69 26 3);\nborder-right-color: rgb(69 26 3);\n\t\n\nborder-x-yellow-50\tborder-left-color: rgb(254 252 232);\nborder-right-color: rgb(254 252 232);\n\t\n\nborder-x-yellow-100\tborder-left-color: rgb(254 249 195);\nborder-right-color: rgb(254 249 195);\n\t\n\nborder-x-yellow-200\tborder-left-color: rgb(254 240 138);\nborder-right-color: rgb(254 240 138);\n\t\n\nborder-x-yellow-300\tborder-left-color: rgb(253 224 71);\nborder-right-color: rgb(253 224 71);\n\t\n\nborder-x-yellow-400\tborder-left-color: rgb(250 204 21);\nborder-right-color: rgb(250 204 21);\n\t\n\nborder-x-yellow-500\tborder-left-color: rgb(234 179 8);\nborder-right-color: rgb(234 179 8);\n\t\n\nborder-x-yellow-600\tborder-left-color: rgb(202 138 4);\nborder-right-color: rgb(202 138 4);\n\t\n\nborder-x-yellow-700\tborder-left-color: rgb(161 98 7);\nborder-right-color: rgb(161 98 7);\n\t\n\nborder-x-yellow-800\tborder-left-color: rgb(133 77 14);\nborder-right-color: rgb(133 77 14);\n\t\n\nborder-x-yellow-900\tborder-left-color: rgb(113 63 18);\nborder-right-color: rgb(113 63 18);\n\t\n\nborder-x-yellow-950\tborder-left-color: rgb(66 32 6);\nborder-right-color: rgb(66 32 6);\n\t\n\nborder-x-lime-50\tborder-left-color: rgb(247 254 231);\nborder-right-color: rgb(247 254 231);\n\t\n\nborder-x-lime-100\tborder-left-color: rgb(236 252 203);\nborder-right-color: rgb(236 252 203);\n\t\n\nborder-x-lime-200\tborder-left-color: rgb(217 249 157);\nborder-right-color: rgb(217 249 157);\n\t\n\nborder-x-lime-300\tborder-left-color: rgb(190 242 100);\nborder-right-color: rgb(190 242 100);\n\t\n\nborder-x-lime-400\tborder-left-color: rgb(163 230 53);\nborder-right-color: rgb(163 230 53);\n\t\n\nborder-x-lime-500\tborder-left-color: rgb(132 204 22);\nborder-right-color: rgb(132 204 22);\n\t\n\nborder-x-lime-600\tborder-left-color: rgb(101 163 13);\nborder-right-color: rgb(101 163 13);\n\t\n\nborder-x-lime-700\tborder-left-color: rgb(77 124 15);\nborder-right-color: rgb(77 124 15);\n\t\n\nborder-x-lime-800\tborder-left-color: rgb(63 98 18);\nborder-right-color: rgb(63 98 18);\n\t\n\nborder-x-lime-900\tborder-left-color: rgb(54 83 20);\nborder-right-color: rgb(54 83 20);\n\t\n\nborder-x-lime-950\tborder-left-color: rgb(26 46 5);\nborder-right-color: rgb(26 46 5);\n\t\n\nborder-x-green-50\tborder-left-color: rgb(240 253 244);\nborder-right-color: rgb(240 253 244);\n\t\n\nborder-x-green-100\tborder-left-color: rgb(220 252 231);\nborder-right-color: rgb(220 252 231);\n\t\n\nborder-x-green-200\tborder-left-color: rgb(187 247 208);\nborder-right-color: rgb(187 247 208);\n\t\n\nborder-x-green-300\tborder-left-color: rgb(134 239 172);\nborder-right-color: rgb(134 239 172);\n\t\n\nborder-x-green-400\tborder-left-color: rgb(74 222 128);\nborder-right-color: rgb(74 222 128);\n\t\n\nborder-x-green-500\tborder-left-color: rgb(34 197 94);\nborder-right-color: rgb(34 197 94);\n\t\n\nborder-x-green-600\tborder-left-color: rgb(22 163 74);\nborder-right-color: rgb(22 163 74);\n\t\n\nborder-x-green-700\tborder-left-color: rgb(21 128 61);\nborder-right-color: rgb(21 128 61);\n\t\n\nborder-x-green-800\tborder-left-color: rgb(22 101 52);\nborder-right-color: rgb(22 101 52);\n\t\n\nborder-x-green-900\tborder-left-color: rgb(20 83 45);\nborder-right-color: rgb(20 83 45);\n\t\n\nborder-x-green-950\tborder-left-color: rgb(5 46 22);\nborder-right-color: rgb(5 46 22);\n\t\n\nborder-x-emerald-50\tborder-left-color: rgb(236 253 245);\nborder-right-color: rgb(236 253 245);\n\t\n\nborder-x-emerald-100\tborder-left-color: rgb(209 250 229);\nborder-right-color: rgb(209 250 229);\n\t\n\nborder-x-emerald-200\tborder-left-color: rgb(167 243 208);\nborder-right-color: rgb(167 243 208);\n\t\n\nborder-x-emerald-300\tborder-left-color: rgb(110 231 183);\nborder-right-color: rgb(110 231 183);\n\t\n\nborder-x-emerald-400\tborder-left-color: rgb(52 211 153);\nborder-right-color: rgb(52 211 153);\n\t\n\nborder-x-emerald-500\tborder-left-color: rgb(16 185 129);\nborder-right-color: rgb(16 185 129);\n\t\n\nborder-x-emerald-600\tborder-left-color: rgb(5 150 105);\nborder-right-color: rgb(5 150 105);\n\t\n\nborder-x-emerald-700\tborder-left-color: rgb(4 120 87);\nborder-right-color: rgb(4 120 87);\n\t\n\nborder-x-emerald-800\tborder-left-color: rgb(6 95 70);\nborder-right-color: rgb(6 95 70);\n\t\n\nborder-x-emerald-900\tborder-left-color: rgb(6 78 59);\nborder-right-color: rgb(6 78 59);\n\t\n\nborder-x-emerald-950\tborder-left-color: rgb(2 44 34);\nborder-right-color: rgb(2 44 34);\n\t\n\nborder-x-teal-50\tborder-left-color: rgb(240 253 250);\nborder-right-color: rgb(240 253 250);\n\t\n\nborder-x-teal-100\tborder-left-color: rgb(204 251 241);\nborder-right-color: rgb(204 251 241);\n\t\n\nborder-x-teal-200\tborder-left-color: rgb(153 246 228);\nborder-right-color: rgb(153 246 228);\n\t\n\nborder-x-teal-300\tborder-left-color: rgb(94 234 212);\nborder-right-color: rgb(94 234 212);\n\t\n\nborder-x-teal-400\tborder-left-color: rgb(45 212 191);\nborder-right-color: rgb(45 212 191);\n\t\n\nborder-x-teal-500\tborder-left-color: rgb(20 184 166);\nborder-right-color: rgb(20 184 166);\n\t\n\nborder-x-teal-600\tborder-left-color: rgb(13 148 136);\nborder-right-color: rgb(13 148 136);\n\t\n\nborder-x-teal-700\tborder-left-color: rgb(15 118 110);\nborder-right-color: rgb(15 118 110);\n\t\n\nborder-x-teal-800\tborder-left-color: rgb(17 94 89);\nborder-right-color: rgb(17 94 89);\n\t\n\nborder-x-teal-900\tborder-left-color: rgb(19 78 74);\nborder-right-color: rgb(19 78 74);\n\t\n\nborder-x-teal-950\tborder-left-color: rgb(4 47 46);\nborder-right-color: rgb(4 47 46);\n\t\n\nborder-x-cyan-50\tborder-left-color: rgb(236 254 255);\nborder-right-color: rgb(236 254 255);\n\t\n\nborder-x-cyan-100\tborder-left-color: rgb(207 250 254);\nborder-right-color: rgb(207 250 254);\n\t\n\nborder-x-cyan-200\tborder-left-color: rgb(165 243 252);\nborder-right-color: rgb(165 243 252);\n\t\n\nborder-x-cyan-300\tborder-left-color: rgb(103 232 249);\nborder-right-color: rgb(103 232 249);\n\t\n\nborder-x-cyan-400\tborder-left-color: rgb(34 211 238);\nborder-right-color: rgb(34 211 238);\n\t\n\nborder-x-cyan-500\tborder-left-color: rgb(6 182 212);\nborder-right-color: rgb(6 182 212);\n\t\n\nborder-x-cyan-600\tborder-left-color: rgb(8 145 178);\nborder-right-color: rgb(8 145 178);\n\t\n\nborder-x-cyan-700\tborder-left-color: rgb(14 116 144);\nborder-right-color: rgb(14 116 144);\n\t\n\nborder-x-cyan-800\tborder-left-color: rgb(21 94 117);\nborder-right-color: rgb(21 94 117);\n\t\n\nborder-x-cyan-900\tborder-left-color: rgb(22 78 99);\nborder-right-color: rgb(22 78 99);\n\t\n\nborder-x-cyan-950\tborder-left-color: rgb(8 51 68);\nborder-right-color: rgb(8 51 68);\n\t\n\nborder-x-sky-50\tborder-left-color: rgb(240 249 255);\nborder-right-color: rgb(240 249 255);\n\t\n\nborder-x-sky-100\tborder-left-color: rgb(224 242 254);\nborder-right-color: rgb(224 242 254);\n\t\n\nborder-x-sky-200\tborder-left-color: rgb(186 230 253);\nborder-right-color: rgb(186 230 253);\n\t\n\nborder-x-sky-300\tborder-left-color: rgb(125 211 252);\nborder-right-color: rgb(125 211 252);\n\t\n\nborder-x-sky-400\tborder-left-color: rgb(56 189 248);\nborder-right-color: rgb(56 189 248);\n\t\n\nborder-x-sky-500\tborder-left-color: rgb(14 165 233);\nborder-right-color: rgb(14 165 233);\n\t\n\nborder-x-sky-600\tborder-left-color: rgb(2 132 199);\nborder-right-color: rgb(2 132 199);\n\t\n\nborder-x-sky-700\tborder-left-color: rgb(3 105 161);\nborder-right-color: rgb(3 105 161);\n\t\n\nborder-x-sky-800\tborder-left-color: rgb(7 89 133);\nborder-right-color: rgb(7 89 133);\n\t\n\nborder-x-sky-900\tborder-left-color: rgb(12 74 110);\nborder-right-color: rgb(12 74 110);\n\t\n\nborder-x-sky-950\tborder-left-color: rgb(8 47 73);\nborder-right-color: rgb(8 47 73);\n\t\n\nborder-x-blue-50\tborder-left-color: rgb(239 246 255);\nborder-right-color: rgb(239 246 255);\n\t\n\nborder-x-blue-100\tborder-left-color: rgb(219 234 254);\nborder-right-color: rgb(219 234 254);\n\t\n\nborder-x-blue-200\tborder-left-color: rgb(191 219 254);\nborder-right-color: rgb(191 219 254);\n\t\n\nborder-x-blue-300\tborder-left-color: rgb(147 197 253);\nborder-right-color: rgb(147 197 253);\n\t\n\nborder-x-blue-400\tborder-left-color: rgb(96 165 250);\nborder-right-color: rgb(96 165 250);\n\t\n\nborder-x-blue-500\tborder-left-color: rgb(59 130 246);\nborder-right-color: rgb(59 130 246);\n\t\n\nborder-x-blue-600\tborder-left-color: rgb(37 99 235);\nborder-right-color: rgb(37 99 235);\n\t\n\nborder-x-blue-700\tborder-left-color: rgb(29 78 216);\nborder-right-color: rgb(29 78 216);\n\t\n\nborder-x-blue-800\tborder-left-color: rgb(30 64 175);\nborder-right-color: rgb(30 64 175);\n\t\n\nborder-x-blue-900\tborder-left-color: rgb(30 58 138);\nborder-right-color: rgb(30 58 138);\n\t\n\nborder-x-blue-950\tborder-left-color: rgb(23 37 84);\nborder-right-color: rgb(23 37 84);\n\t\n\nborder-x-indigo-50\tborder-left-color: rgb(238 242 255);\nborder-right-color: rgb(238 242 255);\n\t\n\nborder-x-indigo-100\tborder-left-color: rgb(224 231 255);\nborder-right-color: rgb(224 231 255);\n\t\n\nborder-x-indigo-200\tborder-left-color: rgb(199 210 254);\nborder-right-color: rgb(199 210 254);\n\t\n\nborder-x-indigo-300\tborder-left-color: rgb(165 180 252);\nborder-right-color: rgb(165 180 252);\n\t\n\nborder-x-indigo-400\tborder-left-color: rgb(129 140 248);\nborder-right-color: rgb(129 140 248);\n\t\n\nborder-x-indigo-500\tborder-left-color: rgb(99 102 241);\nborder-right-color: rgb(99 102 241);\n\t\n\nborder-x-indigo-600\tborder-left-color: rgb(79 70 229);\nborder-right-color: rgb(79 70 229);\n\t\n\nborder-x-indigo-700\tborder-left-color: rgb(67 56 202);\nborder-right-color: rgb(67 56 202);\n\t\n\nborder-x-indigo-800\tborder-left-color: rgb(55 48 163);\nborder-right-color: rgb(55 48 163);\n\t\n\nborder-x-indigo-900\tborder-left-color: rgb(49 46 129);\nborder-right-color: rgb(49 46 129);\n\t\n\nborder-x-indigo-950\tborder-left-color: rgb(30 27 75);\nborder-right-color: rgb(30 27 75);\n\t\n\nborder-x-violet-50\tborder-left-color: rgb(245 243 255);\nborder-right-color: rgb(245 243 255);\n\t\n\nborder-x-violet-100\tborder-left-color: rgb(237 233 254);\nborder-right-color: rgb(237 233 254);\n\t\n\nborder-x-violet-200\tborder-left-color: rgb(221 214 254);\nborder-right-color: rgb(221 214 254);\n\t\n\nborder-x-violet-300\tborder-left-color: rgb(196 181 253);\nborder-right-color: rgb(196 181 253);\n\t\n\nborder-x-violet-400\tborder-left-color: rgb(167 139 250);\nborder-right-color: rgb(167 139 250);\n\t\n\nborder-x-violet-500\tborder-left-color: rgb(139 92 246);\nborder-right-color: rgb(139 92 246);\n\t\n\nborder-x-violet-600\tborder-left-color: rgb(124 58 237);\nborder-right-color: rgb(124 58 237);\n\t\n\nborder-x-violet-700\tborder-left-color: rgb(109 40 217);\nborder-right-color: rgb(109 40 217);\n\t\n\nborder-x-violet-800\tborder-left-color: rgb(91 33 182);\nborder-right-color: rgb(91 33 182);\n\t\n\nborder-x-violet-900\tborder-left-color: rgb(76 29 149);\nborder-right-color: rgb(76 29 149);\n\t\n\nborder-x-violet-950\tborder-left-color: rgb(46 16 101);\nborder-right-color: rgb(46 16 101);\n\t\n\nborder-x-purple-50\tborder-left-color: rgb(250 245 255);\nborder-right-color: rgb(250 245 255);\n\t\n\nborder-x-purple-100\tborder-left-color: rgb(243 232 255);\nborder-right-color: rgb(243 232 255);\n\t\n\nborder-x-purple-200\tborder-left-color: rgb(233 213 255);\nborder-right-color: rgb(233 213 255);\n\t\n\nborder-x-purple-300\tborder-left-color: rgb(216 180 254);\nborder-right-color: rgb(216 180 254);\n\t\n\nborder-x-purple-400\tborder-left-color: rgb(192 132 252);\nborder-right-color: rgb(192 132 252);\n\t\n\nborder-x-purple-500\tborder-left-color: rgb(168 85 247);\nborder-right-color: rgb(168 85 247);\n\t\n\nborder-x-purple-600\tborder-left-color: rgb(147 51 234);\nborder-right-color: rgb(147 51 234);\n\t\n\nborder-x-purple-700\tborder-left-color: rgb(126 34 206);\nborder-right-color: rgb(126 34 206);\n\t\n\nborder-x-purple-800\tborder-left-color: rgb(107 33 168);\nborder-right-color: rgb(107 33 168);\n\t\n\nborder-x-purple-900\tborder-left-color: rgb(88 28 135);\nborder-right-color: rgb(88 28 135);\n\t\n\nborder-x-purple-950\tborder-left-color: rgb(59 7 100);\nborder-right-color: rgb(59 7 100);\n\t\n\nborder-x-fuchsia-50\tborder-left-color: rgb(253 244 255);\nborder-right-color: rgb(253 244 255);\n\t\n\nborder-x-fuchsia-100\tborder-left-color: rgb(250 232 255);\nborder-right-color: rgb(250 232 255);\n\t\n\nborder-x-fuchsia-200\tborder-left-color: rgb(245 208 254);\nborder-right-color: rgb(245 208 254);\n\t\n\nborder-x-fuchsia-300\tborder-left-color: rgb(240 171 252);\nborder-right-color: rgb(240 171 252);\n\t\n\nborder-x-fuchsia-400\tborder-left-color: rgb(232 121 249);\nborder-right-color: rgb(232 121 249);\n\t\n\nborder-x-fuchsia-500\tborder-left-color: rgb(217 70 239);\nborder-right-color: rgb(217 70 239);\n\t\n\nborder-x-fuchsia-600\tborder-left-color: rgb(192 38 211);\nborder-right-color: rgb(192 38 211);\n\t\n\nborder-x-fuchsia-700\tborder-left-color: rgb(162 28 175);\nborder-right-color: rgb(162 28 175);\n\t\n\nborder-x-fuchsia-800\tborder-left-color: rgb(134 25 143);\nborder-right-color: rgb(134 25 143);\n\t\n\nborder-x-fuchsia-900\tborder-left-color: rgb(112 26 117);\nborder-right-color: rgb(112 26 117);\n\t\n\nborder-x-fuchsia-950\tborder-left-color: rgb(74 4 78);\nborder-right-color: rgb(74 4 78);\n\t\n\nborder-x-pink-50\tborder-left-color: rgb(253 242 248);\nborder-right-color: rgb(253 242 248);\n\t\n\nborder-x-pink-100\tborder-left-color: rgb(252 231 243);\nborder-right-color: rgb(252 231 243);\n\t\n\nborder-x-pink-200\tborder-left-color: rgb(251 207 232);\nborder-right-color: rgb(251 207 232);\n\t\n\nborder-x-pink-300\tborder-left-color: rgb(249 168 212);\nborder-right-color: rgb(249 168 212);\n\t\n\nborder-x-pink-400\tborder-left-color: rgb(244 114 182);\nborder-right-color: rgb(244 114 182);\n\t\n\nborder-x-pink-500\tborder-left-color: rgb(236 72 153);\nborder-right-color: rgb(236 72 153);\n\t\n\nborder-x-pink-600\tborder-left-color: rgb(219 39 119);\nborder-right-color: rgb(219 39 119);\n\t\n\nborder-x-pink-700\tborder-left-color: rgb(190 24 93);\nborder-right-color: rgb(190 24 93);\n\t\n\nborder-x-pink-800\tborder-left-color: rgb(157 23 77);\nborder-right-color: rgb(157 23 77);\n\t\n\nborder-x-pink-900\tborder-left-color: rgb(131 24 67);\nborder-right-color: rgb(131 24 67);\n\t\n\nborder-x-pink-950\tborder-left-color: rgb(80 7 36);\nborder-right-color: rgb(80 7 36);\n\t\n\nborder-x-rose-50\tborder-left-color: rgb(255 241 242);\nborder-right-color: rgb(255 241 242);\n\t\n\nborder-x-rose-100\tborder-left-color: rgb(255 228 230);\nborder-right-color: rgb(255 228 230);\n\t\n\nborder-x-rose-200\tborder-left-color: rgb(254 205 211);\nborder-right-color: rgb(254 205 211);\n\t\n\nborder-x-rose-300\tborder-left-color: rgb(253 164 175);\nborder-right-color: rgb(253 164 175);\n\t\n\nborder-x-rose-400\tborder-left-color: rgb(251 113 133);\nborder-right-color: rgb(251 113 133);\n\t\n\nborder-x-rose-500\tborder-left-color: rgb(244 63 94);\nborder-right-color: rgb(244 63 94);\n\t\n\nborder-x-rose-600\tborder-left-color: rgb(225 29 72);\nborder-right-color: rgb(225 29 72);\n\t\n\nborder-x-rose-700\tborder-left-color: rgb(190 18 60);\nborder-right-color: rgb(190 18 60);\n\t\n\nborder-x-rose-800\tborder-left-color: rgb(159 18 57);\nborder-right-color: rgb(159 18 57);\n\t\n\nborder-x-rose-900\tborder-left-color: rgb(136 19 55);\nborder-right-color: rgb(136 19 55);\n\t\n\nborder-x-rose-950\tborder-left-color: rgb(76 5 25);\nborder-right-color: rgb(76 5 25);\n\t\n\nborder-y-inherit\tborder-top-color: inherit;\nborder-bottom-color: inherit;\n\t\n\nborder-y-current\tborder-top-color: currentColor;\nborder-bottom-color: currentColor;\n\t\n\nborder-y-transparent\tborder-top-color: transparent;\nborder-bottom-color: transparent;\n\t\n\nborder-y-black\tborder-top-color: rgb(0 0 0);\nborder-bottom-color: rgb(0 0 0);\n\t\n\nborder-y-white\tborder-top-color: rgb(255 255 255);\nborder-bottom-color: rgb(255 255 255);\n\t\n\nborder-y-slate-50\tborder-top-color: rgb(248 250 252);\nborder-bottom-color: rgb(248 250 252);\n\t\n\nborder-y-slate-100\tborder-top-color: rgb(241 245 249);\nborder-bottom-color: rgb(241 245 249);\n\t\n\nborder-y-slate-200\tborder-top-color: rgb(226 232 240);\nborder-bottom-color: rgb(226 232 240);\n\t\n\nborder-y-slate-300\tborder-top-color: rgb(203 213 225);\nborder-bottom-color: rgb(203 213 225);\n\t\n\nborder-y-slate-400\tborder-top-color: rgb(148 163 184);\nborder-bottom-color: rgb(148 163 184);\n\t\n\nborder-y-slate-500\tborder-top-color: rgb(100 116 139);\nborder-bottom-color: rgb(100 116 139);\n\t\n\nborder-y-slate-600\tborder-top-color: rgb(71 85 105);\nborder-bottom-color: rgb(71 85 105);\n\t\n\nborder-y-slate-700\tborder-top-color: rgb(51 65 85);\nborder-bottom-color: rgb(51 65 85);\n\t\n\nborder-y-slate-800\tborder-top-color: rgb(30 41 59);\nborder-bottom-color: rgb(30 41 59);\n\t\n\nborder-y-slate-900\tborder-top-color: rgb(15 23 42);\nborder-bottom-color: rgb(15 23 42);\n\t\n\nborder-y-slate-950\tborder-top-color: rgb(2 6 23);\nborder-bottom-color: rgb(2 6 23);\n\t\n\nborder-y-gray-50\tborder-top-color: rgb(249 250 251);\nborder-bottom-color: rgb(249 250 251);\n\t\n\nborder-y-gray-100\tborder-top-color: rgb(243 244 246);\nborder-bottom-color: rgb(243 244 246);\n\t\n\nborder-y-gray-200\tborder-top-color: rgb(229 231 235);\nborder-bottom-color: rgb(229 231 235);\n\t\n\nborder-y-gray-300\tborder-top-color: rgb(209 213 219);\nborder-bottom-color: rgb(209 213 219);\n\t\n\nborder-y-gray-400\tborder-top-color: rgb(156 163 175);\nborder-bottom-color: rgb(156 163 175);\n\t\n\nborder-y-gray-500\tborder-top-color: rgb(107 114 128);\nborder-bottom-color: rgb(107 114 128);\n\t\n\nborder-y-gray-600\tborder-top-color: rgb(75 85 99);\nborder-bottom-color: rgb(75 85 99);\n\t\n\nborder-y-gray-700\tborder-top-color: rgb(55 65 81);\nborder-bottom-color: rgb(55 65 81);\n\t\n\nborder-y-gray-800\tborder-top-color: rgb(31 41 55);\nborder-bottom-color: rgb(31 41 55);\n\t\n\nborder-y-gray-900\tborder-top-color: rgb(17 24 39);\nborder-bottom-color: rgb(17 24 39);\n\t\n\nborder-y-gray-950\tborder-top-color: rgb(3 7 18);\nborder-bottom-color: rgb(3 7 18);\n\t\n\nborder-y-zinc-50\tborder-top-color: rgb(250 250 250);\nborder-bottom-color: rgb(250 250 250);\n\t\n\nborder-y-zinc-100\tborder-top-color: rgb(244 244 245);\nborder-bottom-color: rgb(244 244 245);\n\t\n\nborder-y-zinc-200\tborder-top-color: rgb(228 228 231);\nborder-bottom-color: rgb(228 228 231);\n\t\n\nborder-y-zinc-300\tborder-top-color: rgb(212 212 216);\nborder-bottom-color: rgb(212 212 216);\n\t\n\nborder-y-zinc-400\tborder-top-color: rgb(161 161 170);\nborder-bottom-color: rgb(161 161 170);\n\t\n\nborder-y-zinc-500\tborder-top-color: rgb(113 113 122);\nborder-bottom-color: rgb(113 113 122);\n\t\n\nborder-y-zinc-600\tborder-top-color: rgb(82 82 91);\nborder-bottom-color: rgb(82 82 91);\n\t\n\nborder-y-zinc-700\tborder-top-color: rgb(63 63 70);\nborder-bottom-color: rgb(63 63 70);\n\t\n\nborder-y-zinc-800\tborder-top-color: rgb(39 39 42);\nborder-bottom-color: rgb(39 39 42);\n\t\n\nborder-y-zinc-900\tborder-top-color: rgb(24 24 27);\nborder-bottom-color: rgb(24 24 27);\n\t\n\nborder-y-zinc-950\tborder-top-color: rgb(9 9 11);\nborder-bottom-color: rgb(9 9 11);\n\t\n\nborder-y-neutral-50\tborder-top-color: rgb(250 250 250);\nborder-bottom-color: rgb(250 250 250);\n\t\n\nborder-y-neutral-100\tborder-top-color: rgb(245 245 245);\nborder-bottom-color: rgb(245 245 245);\n\t\n\nborder-y-neutral-200\tborder-top-color: rgb(229 229 229);\nborder-bottom-color: rgb(229 229 229);\n\t\n\nborder-y-neutral-300\tborder-top-color: rgb(212 212 212);\nborder-bottom-color: rgb(212 212 212);\n\t\n\nborder-y-neutral-400\tborder-top-color: rgb(163 163 163);\nborder-bottom-color: rgb(163 163 163);\n\t\n\nborder-y-neutral-500\tborder-top-color: rgb(115 115 115);\nborder-bottom-color: rgb(115 115 115);\n\t\n\nborder-y-neutral-600\tborder-top-color: rgb(82 82 82);\nborder-bottom-color: rgb(82 82 82);\n\t\n\nborder-y-neutral-700\tborder-top-color: rgb(64 64 64);\nborder-bottom-color: rgb(64 64 64);\n\t\n\nborder-y-neutral-800\tborder-top-color: rgb(38 38 38);\nborder-bottom-color: rgb(38 38 38);\n\t\n\nborder-y-neutral-900\tborder-top-color: rgb(23 23 23);\nborder-bottom-color: rgb(23 23 23);\n\t\n\nborder-y-neutral-950\tborder-top-color: rgb(10 10 10);\nborder-bottom-color: rgb(10 10 10);\n\t\n\nborder-y-stone-50\tborder-top-color: rgb(250 250 249);\nborder-bottom-color: rgb(250 250 249);\n\t\n\nborder-y-stone-100\tborder-top-color: rgb(245 245 244);\nborder-bottom-color: rgb(245 245 244);\n\t\n\nborder-y-stone-200\tborder-top-color: rgb(231 229 228);\nborder-bottom-color: rgb(231 229 228);\n\t\n\nborder-y-stone-300\tborder-top-color: rgb(214 211 209);\nborder-bottom-color: rgb(214 211 209);\n\t\n\nborder-y-stone-400\tborder-top-color: rgb(168 162 158);\nborder-bottom-color: rgb(168 162 158);\n\t\n\nborder-y-stone-500\tborder-top-color: rgb(120 113 108);\nborder-bottom-color: rgb(120 113 108);\n\t\n\nborder-y-stone-600\tborder-top-color: rgb(87 83 78);\nborder-bottom-color: rgb(87 83 78);\n\t\n\nborder-y-stone-700\tborder-top-color: rgb(68 64 60);\nborder-bottom-color: rgb(68 64 60);\n\t\n\nborder-y-stone-800\tborder-top-color: rgb(41 37 36);\nborder-bottom-color: rgb(41 37 36);\n\t\n\nborder-y-stone-900\tborder-top-color: rgb(28 25 23);\nborder-bottom-color: rgb(28 25 23);\n\t\n\nborder-y-stone-950\tborder-top-color: rgb(12 10 9);\nborder-bottom-color: rgb(12 10 9);\n\t\n\nborder-y-red-50\tborder-top-color: rgb(254 242 242);\nborder-bottom-color: rgb(254 242 242);\n\t\n\nborder-y-red-100\tborder-top-color: rgb(254 226 226);\nborder-bottom-color: rgb(254 226 226);\n\t\n\nborder-y-red-200\tborder-top-color: rgb(254 202 202);\nborder-bottom-color: rgb(254 202 202);\n\t\n\nborder-y-red-300\tborder-top-color: rgb(252 165 165);\nborder-bottom-color: rgb(252 165 165);\n\t\n\nborder-y-red-400\tborder-top-color: rgb(248 113 113);\nborder-bottom-color: rgb(248 113 113);\n\t\n\nborder-y-red-500\tborder-top-color: rgb(239 68 68);\nborder-bottom-color: rgb(239 68 68);\n\t\n\nborder-y-red-600\tborder-top-color: rgb(220 38 38);\nborder-bottom-color: rgb(220 38 38);\n\t\n\nborder-y-red-700\tborder-top-color: rgb(185 28 28);\nborder-bottom-color: rgb(185 28 28);\n\t\n\nborder-y-red-800\tborder-top-color: rgb(153 27 27);\nborder-bottom-color: rgb(153 27 27);\n\t\n\nborder-y-red-900\tborder-top-color: rgb(127 29 29);\nborder-bottom-color: rgb(127 29 29);\n\t\n\nborder-y-red-950\tborder-top-color: rgb(69 10 10);\nborder-bottom-color: rgb(69 10 10);\n\t\n\nborder-y-orange-50\tborder-top-color: rgb(255 247 237);\nborder-bottom-color: rgb(255 247 237);\n\t\n\nborder-y-orange-100\tborder-top-color: rgb(255 237 213);\nborder-bottom-color: rgb(255 237 213);\n\t\n\nborder-y-orange-200\tborder-top-color: rgb(254 215 170);\nborder-bottom-color: rgb(254 215 170);\n\t\n\nborder-y-orange-300\tborder-top-color: rgb(253 186 116);\nborder-bottom-color: rgb(253 186 116);\n\t\n\nborder-y-orange-400\tborder-top-color: rgb(251 146 60);\nborder-bottom-color: rgb(251 146 60);\n\t\n\nborder-y-orange-500\tborder-top-color: rgb(249 115 22);\nborder-bottom-color: rgb(249 115 22);\n\t\n\nborder-y-orange-600\tborder-top-color: rgb(234 88 12);\nborder-bottom-color: rgb(234 88 12);\n\t\n\nborder-y-orange-700\tborder-top-color: rgb(194 65 12);\nborder-bottom-color: rgb(194 65 12);\n\t\n\nborder-y-orange-800\tborder-top-color: rgb(154 52 18);\nborder-bottom-color: rgb(154 52 18);\n\t\n\nborder-y-orange-900\tborder-top-color: rgb(124 45 18);\nborder-bottom-color: rgb(124 45 18);\n\t\n\nborder-y-orange-950\tborder-top-color: rgb(67 20 7);\nborder-bottom-color: rgb(67 20 7);\n\t\n\nborder-y-amber-50\tborder-top-color: rgb(255 251 235);\nborder-bottom-color: rgb(255 251 235);\n\t\n\nborder-y-amber-100\tborder-top-color: rgb(254 243 199);\nborder-bottom-color: rgb(254 243 199);\n\t\n\nborder-y-amber-200\tborder-top-color: rgb(253 230 138);\nborder-bottom-color: rgb(253 230 138);\n\t\n\nborder-y-amber-300\tborder-top-color: rgb(252 211 77);\nborder-bottom-color: rgb(252 211 77);\n\t\n\nborder-y-amber-400\tborder-top-color: rgb(251 191 36);\nborder-bottom-color: rgb(251 191 36);\n\t\n\nborder-y-amber-500\tborder-top-color: rgb(245 158 11);\nborder-bottom-color: rgb(245 158 11);\n\t\n\nborder-y-amber-600\tborder-top-color: rgb(217 119 6);\nborder-bottom-color: rgb(217 119 6);\n\t\n\nborder-y-amber-700\tborder-top-color: rgb(180 83 9);\nborder-bottom-color: rgb(180 83 9);\n\t\n\nborder-y-amber-800\tborder-top-color: rgb(146 64 14);\nborder-bottom-color: rgb(146 64 14);\n\t\n\nborder-y-amber-900\tborder-top-color: rgb(120 53 15);\nborder-bottom-color: rgb(120 53 15);\n\t\n\nborder-y-amber-950\tborder-top-color: rgb(69 26 3);\nborder-bottom-color: rgb(69 26 3);\n\t\n\nborder-y-yellow-50\tborder-top-color: rgb(254 252 232);\nborder-bottom-color: rgb(254 252 232);\n\t\n\nborder-y-yellow-100\tborder-top-color: rgb(254 249 195);\nborder-bottom-color: rgb(254 249 195);\n\t\n\nborder-y-yellow-200\tborder-top-color: rgb(254 240 138);\nborder-bottom-color: rgb(254 240 138);\n\t\n\nborder-y-yellow-300\tborder-top-color: rgb(253 224 71);\nborder-bottom-color: rgb(253 224 71);\n\t\n\nborder-y-yellow-400\tborder-top-color: rgb(250 204 21);\nborder-bottom-color: rgb(250 204 21);\n\t\n\nborder-y-yellow-500\tborder-top-color: rgb(234 179 8);\nborder-bottom-color: rgb(234 179 8);\n\t\n\nborder-y-yellow-600\tborder-top-color: rgb(202 138 4);\nborder-bottom-color: rgb(202 138 4);\n\t\n\nborder-y-yellow-700\tborder-top-color: rgb(161 98 7);\nborder-bottom-color: rgb(161 98 7);\n\t\n\nborder-y-yellow-800\tborder-top-color: rgb(133 77 14);\nborder-bottom-color: rgb(133 77 14);\n\t\n\nborder-y-yellow-900\tborder-top-color: rgb(113 63 18);\nborder-bottom-color: rgb(113 63 18);\n\t\n\nborder-y-yellow-950\tborder-top-color: rgb(66 32 6);\nborder-bottom-color: rgb(66 32 6);\n\t\n\nborder-y-lime-50\tborder-top-color: rgb(247 254 231);\nborder-bottom-color: rgb(247 254 231);\n\t\n\nborder-y-lime-100\tborder-top-color: rgb(236 252 203);\nborder-bottom-color: rgb(236 252 203);\n\t\n\nborder-y-lime-200\tborder-top-color: rgb(217 249 157);\nborder-bottom-color: rgb(217 249 157);\n\t\n\nborder-y-lime-300\tborder-top-color: rgb(190 242 100);\nborder-bottom-color: rgb(190 242 100);\n\t\n\nborder-y-lime-400\tborder-top-color: rgb(163 230 53);\nborder-bottom-color: rgb(163 230 53);\n\t\n\nborder-y-lime-500\tborder-top-color: rgb(132 204 22);\nborder-bottom-color: rgb(132 204 22);\n\t\n\nborder-y-lime-600\tborder-top-color: rgb(101 163 13);\nborder-bottom-color: rgb(101 163 13);\n\t\n\nborder-y-lime-700\tborder-top-color: rgb(77 124 15);\nborder-bottom-color: rgb(77 124 15);\n\t\n\nborder-y-lime-800\tborder-top-color: rgb(63 98 18);\nborder-bottom-color: rgb(63 98 18);\n\t\n\nborder-y-lime-900\tborder-top-color: rgb(54 83 20);\nborder-bottom-color: rgb(54 83 20);\n\t\n\nborder-y-lime-950\tborder-top-color: rgb(26 46 5);\nborder-bottom-color: rgb(26 46 5);\n\t\n\nborder-y-green-50\tborder-top-color: rgb(240 253 244);\nborder-bottom-color: rgb(240 253 244);\n\t\n\nborder-y-green-100\tborder-top-color: rgb(220 252 231);\nborder-bottom-color: rgb(220 252 231);\n\t\n\nborder-y-green-200\tborder-top-color: rgb(187 247 208);\nborder-bottom-color: rgb(187 247 208);\n\t\n\nborder-y-green-300\tborder-top-color: rgb(134 239 172);\nborder-bottom-color: rgb(134 239 172);\n\t\n\nborder-y-green-400\tborder-top-color: rgb(74 222 128);\nborder-bottom-color: rgb(74 222 128);\n\t\n\nborder-y-green-500\tborder-top-color: rgb(34 197 94);\nborder-bottom-color: rgb(34 197 94);\n\t\n\nborder-y-green-600\tborder-top-color: rgb(22 163 74);\nborder-bottom-color: rgb(22 163 74);\n\t\n\nborder-y-green-700\tborder-top-color: rgb(21 128 61);\nborder-bottom-color: rgb(21 128 61);\n\t\n\nborder-y-green-800\tborder-top-color: rgb(22 101 52);\nborder-bottom-color: rgb(22 101 52);\n\t\n\nborder-y-green-900\tborder-top-color: rgb(20 83 45);\nborder-bottom-color: rgb(20 83 45);\n\t\n\nborder-y-green-950\tborder-top-color: rgb(5 46 22);\nborder-bottom-color: rgb(5 46 22);\n\t\n\nborder-y-emerald-50\tborder-top-color: rgb(236 253 245);\nborder-bottom-color: rgb(236 253 245);\n\t\n\nborder-y-emerald-100\tborder-top-color: rgb(209 250 229);\nborder-bottom-color: rgb(209 250 229);\n\t\n\nborder-y-emerald-200\tborder-top-color: rgb(167 243 208);\nborder-bottom-color: rgb(167 243 208);\n\t\n\nborder-y-emerald-300\tborder-top-color: rgb(110 231 183);\nborder-bottom-color: rgb(110 231 183);\n\t\n\nborder-y-emerald-400\tborder-top-color: rgb(52 211 153);\nborder-bottom-color: rgb(52 211 153);\n\t\n\nborder-y-emerald-500\tborder-top-color: rgb(16 185 129);\nborder-bottom-color: rgb(16 185 129);\n\t\n\nborder-y-emerald-600\tborder-top-color: rgb(5 150 105);\nborder-bottom-color: rgb(5 150 105);\n\t\n\nborder-y-emerald-700\tborder-top-color: rgb(4 120 87);\nborder-bottom-color: rgb(4 120 87);\n\t\n\nborder-y-emerald-800\tborder-top-color: rgb(6 95 70);\nborder-bottom-color: rgb(6 95 70);\n\t\n\nborder-y-emerald-900\tborder-top-color: rgb(6 78 59);\nborder-bottom-color: rgb(6 78 59);\n\t\n\nborder-y-emerald-950\tborder-top-color: rgb(2 44 34);\nborder-bottom-color: rgb(2 44 34);\n\t\n\nborder-y-teal-50\tborder-top-color: rgb(240 253 250);\nborder-bottom-color: rgb(240 253 250);\n\t\n\nborder-y-teal-100\tborder-top-color: rgb(204 251 241);\nborder-bottom-color: rgb(204 251 241);\n\t\n\nborder-y-teal-200\tborder-top-color: rgb(153 246 228);\nborder-bottom-color: rgb(153 246 228);\n\t\n\nborder-y-teal-300\tborder-top-color: rgb(94 234 212);\nborder-bottom-color: rgb(94 234 212);\n\t\n\nborder-y-teal-400\tborder-top-color: rgb(45 212 191);\nborder-bottom-color: rgb(45 212 191);\n\t\n\nborder-y-teal-500\tborder-top-color: rgb(20 184 166);\nborder-bottom-color: rgb(20 184 166);\n\t\n\nborder-y-teal-600\tborder-top-color: rgb(13 148 136);\nborder-bottom-color: rgb(13 148 136);\n\t\n\nborder-y-teal-700\tborder-top-color: rgb(15 118 110);\nborder-bottom-color: rgb(15 118 110);\n\t\n\nborder-y-teal-800\tborder-top-color: rgb(17 94 89);\nborder-bottom-color: rgb(17 94 89);\n\t\n\nborder-y-teal-900\tborder-top-color: rgb(19 78 74);\nborder-bottom-color: rgb(19 78 74);\n\t\n\nborder-y-teal-950\tborder-top-color: rgb(4 47 46);\nborder-bottom-color: rgb(4 47 46);\n\t\n\nborder-y-cyan-50\tborder-top-color: rgb(236 254 255);\nborder-bottom-color: rgb(236 254 255);\n\t\n\nborder-y-cyan-100\tborder-top-color: rgb(207 250 254);\nborder-bottom-color: rgb(207 250 254);\n\t\n\nborder-y-cyan-200\tborder-top-color: rgb(165 243 252);\nborder-bottom-color: rgb(165 243 252);\n\t\n\nborder-y-cyan-300\tborder-top-color: rgb(103 232 249);\nborder-bottom-color: rgb(103 232 249);\n\t\n\nborder-y-cyan-400\tborder-top-color: rgb(34 211 238);\nborder-bottom-color: rgb(34 211 238);\n\t\n\nborder-y-cyan-500\tborder-top-color: rgb(6 182 212);\nborder-bottom-color: rgb(6 182 212);\n\t\n\nborder-y-cyan-600\tborder-top-color: rgb(8 145 178);\nborder-bottom-color: rgb(8 145 178);\n\t\n\nborder-y-cyan-700\tborder-top-color: rgb(14 116 144);\nborder-bottom-color: rgb(14 116 144);\n\t\n\nborder-y-cyan-800\tborder-top-color: rgb(21 94 117);\nborder-bottom-color: rgb(21 94 117);\n\t\n\nborder-y-cyan-900\tborder-top-color: rgb(22 78 99);\nborder-bottom-color: rgb(22 78 99);\n\t\n\nborder-y-cyan-950\tborder-top-color: rgb(8 51 68);\nborder-bottom-color: rgb(8 51 68);\n\t\n\nborder-y-sky-50\tborder-top-color: rgb(240 249 255);\nborder-bottom-color: rgb(240 249 255);\n\t\n\nborder-y-sky-100\tborder-top-color: rgb(224 242 254);\nborder-bottom-color: rgb(224 242 254);\n\t\n\nborder-y-sky-200\tborder-top-color: rgb(186 230 253);\nborder-bottom-color: rgb(186 230 253);\n\t\n\nborder-y-sky-300\tborder-top-color: rgb(125 211 252);\nborder-bottom-color: rgb(125 211 252);\n\t\n\nborder-y-sky-400\tborder-top-color: rgb(56 189 248);\nborder-bottom-color: rgb(56 189 248);\n\t\n\nborder-y-sky-500\tborder-top-color: rgb(14 165 233);\nborder-bottom-color: rgb(14 165 233);\n\t\n\nborder-y-sky-600\tborder-top-color: rgb(2 132 199);\nborder-bottom-color: rgb(2 132 199);\n\t\n\nborder-y-sky-700\tborder-top-color: rgb(3 105 161);\nborder-bottom-color: rgb(3 105 161);\n\t\n\nborder-y-sky-800\tborder-top-color: rgb(7 89 133);\nborder-bottom-color: rgb(7 89 133);\n\t\n\nborder-y-sky-900\tborder-top-color: rgb(12 74 110);\nborder-bottom-color: rgb(12 74 110);\n\t\n\nborder-y-sky-950\tborder-top-color: rgb(8 47 73);\nborder-bottom-color: rgb(8 47 73);\n\t\n\nborder-y-blue-50\tborder-top-color: rgb(239 246 255);\nborder-bottom-color: rgb(239 246 255);\n\t\n\nborder-y-blue-100\tborder-top-color: rgb(219 234 254);\nborder-bottom-color: rgb(219 234 254);\n\t\n\nborder-y-blue-200\tborder-top-color: rgb(191 219 254);\nborder-bottom-color: rgb(191 219 254);\n\t\n\nborder-y-blue-300\tborder-top-color: rgb(147 197 253);\nborder-bottom-color: rgb(147 197 253);\n\t\n\nborder-y-blue-400\tborder-top-color: rgb(96 165 250);\nborder-bottom-color: rgb(96 165 250);\n\t\n\nborder-y-blue-500\tborder-top-color: rgb(59 130 246);\nborder-bottom-color: rgb(59 130 246);\n\t\n\nborder-y-blue-600\tborder-top-color: rgb(37 99 235);\nborder-bottom-color: rgb(37 99 235);\n\t\n\nborder-y-blue-700\tborder-top-color: rgb(29 78 216);\nborder-bottom-color: rgb(29 78 216);\n\t\n\nborder-y-blue-800\tborder-top-color: rgb(30 64 175);\nborder-bottom-color: rgb(30 64 175);\n\t\n\nborder-y-blue-900\tborder-top-color: rgb(30 58 138);\nborder-bottom-color: rgb(30 58 138);\n\t\n\nborder-y-blue-950\tborder-top-color: rgb(23 37 84);\nborder-bottom-color: rgb(23 37 84);\n\t\n\nborder-y-indigo-50\tborder-top-color: rgb(238 242 255);\nborder-bottom-color: rgb(238 242 255);\n\t\n\nborder-y-indigo-100\tborder-top-color: rgb(224 231 255);\nborder-bottom-color: rgb(224 231 255);\n\t\n\nborder-y-indigo-200\tborder-top-color: rgb(199 210 254);\nborder-bottom-color: rgb(199 210 254);\n\t\n\nborder-y-indigo-300\tborder-top-color: rgb(165 180 252);\nborder-bottom-color: rgb(165 180 252);\n\t\n\nborder-y-indigo-400\tborder-top-color: rgb(129 140 248);\nborder-bottom-color: rgb(129 140 248);\n\t\n\nborder-y-indigo-500\tborder-top-color: rgb(99 102 241);\nborder-bottom-color: rgb(99 102 241);\n\t\n\nborder-y-indigo-600\tborder-top-color: rgb(79 70 229);\nborder-bottom-color: rgb(79 70 229);\n\t\n\nborder-y-indigo-700\tborder-top-color: rgb(67 56 202);\nborder-bottom-color: rgb(67 56 202);\n\t\n\nborder-y-indigo-800\tborder-top-color: rgb(55 48 163);\nborder-bottom-color: rgb(55 48 163);\n\t\n\nborder-y-indigo-900\tborder-top-color: rgb(49 46 129);\nborder-bottom-color: rgb(49 46 129);\n\t\n\nborder-y-indigo-950\tborder-top-color: rgb(30 27 75);\nborder-bottom-color: rgb(30 27 75);\n\t\n\nborder-y-violet-50\tborder-top-color: rgb(245 243 255);\nborder-bottom-color: rgb(245 243 255);\n\t\n\nborder-y-violet-100\tborder-top-color: rgb(237 233 254);\nborder-bottom-color: rgb(237 233 254);\n\t\n\nborder-y-violet-200\tborder-top-color: rgb(221 214 254);\nborder-bottom-color: rgb(221 214 254);\n\t\n\nborder-y-violet-300\tborder-top-color: rgb(196 181 253);\nborder-bottom-color: rgb(196 181 253);\n\t\n\nborder-y-violet-400\tborder-top-color: rgb(167 139 250);\nborder-bottom-color: rgb(167 139 250);\n\t\n\nborder-y-violet-500\tborder-top-color: rgb(139 92 246);\nborder-bottom-color: rgb(139 92 246);\n\t\n\nborder-y-violet-600\tborder-top-color: rgb(124 58 237);\nborder-bottom-color: rgb(124 58 237);\n\t\n\nborder-y-violet-700\tborder-top-color: rgb(109 40 217);\nborder-bottom-color: rgb(109 40 217);\n\t\n\nborder-y-violet-800\tborder-top-color: rgb(91 33 182);\nborder-bottom-color: rgb(91 33 182);\n\t\n\nborder-y-violet-900\tborder-top-color: rgb(76 29 149);\nborder-bottom-color: rgb(76 29 149);\n\t\n\nborder-y-violet-950\tborder-top-color: rgb(46 16 101);\nborder-bottom-color: rgb(46 16 101);\n\t\n\nborder-y-purple-50\tborder-top-color: rgb(250 245 255);\nborder-bottom-color: rgb(250 245 255);\n\t\n\nborder-y-purple-100\tborder-top-color: rgb(243 232 255);\nborder-bottom-color: rgb(243 232 255);\n\t\n\nborder-y-purple-200\tborder-top-color: rgb(233 213 255);\nborder-bottom-color: rgb(233 213 255);\n\t\n\nborder-y-purple-300\tborder-top-color: rgb(216 180 254);\nborder-bottom-color: rgb(216 180 254);\n\t\n\nborder-y-purple-400\tborder-top-color: rgb(192 132 252);\nborder-bottom-color: rgb(192 132 252);\n\t\n\nborder-y-purple-500\tborder-top-color: rgb(168 85 247);\nborder-bottom-color: rgb(168 85 247);\n\t\n\nborder-y-purple-600\tborder-top-color: rgb(147 51 234);\nborder-bottom-color: rgb(147 51 234);\n\t\n\nborder-y-purple-700\tborder-top-color: rgb(126 34 206);\nborder-bottom-color: rgb(126 34 206);\n\t\n\nborder-y-purple-800\tborder-top-color: rgb(107 33 168);\nborder-bottom-color: rgb(107 33 168);\n\t\n\nborder-y-purple-900\tborder-top-color: rgb(88 28 135);\nborder-bottom-color: rgb(88 28 135);\n\t\n\nborder-y-purple-950\tborder-top-color: rgb(59 7 100);\nborder-bottom-color: rgb(59 7 100);\n\t\n\nborder-y-fuchsia-50\tborder-top-color: rgb(253 244 255);\nborder-bottom-color: rgb(253 244 255);\n\t\n\nborder-y-fuchsia-100\tborder-top-color: rgb(250 232 255);\nborder-bottom-color: rgb(250 232 255);\n\t\n\nborder-y-fuchsia-200\tborder-top-color: rgb(245 208 254);\nborder-bottom-color: rgb(245 208 254);\n\t\n\nborder-y-fuchsia-300\tborder-top-color: rgb(240 171 252);\nborder-bottom-color: rgb(240 171 252);\n\t\n\nborder-y-fuchsia-400\tborder-top-color: rgb(232 121 249);\nborder-bottom-color: rgb(232 121 249);\n\t\n\nborder-y-fuchsia-500\tborder-top-color: rgb(217 70 239);\nborder-bottom-color: rgb(217 70 239);\n\t\n\nborder-y-fuchsia-600\tborder-top-color: rgb(192 38 211);\nborder-bottom-color: rgb(192 38 211);\n\t\n\nborder-y-fuchsia-700\tborder-top-color: rgb(162 28 175);\nborder-bottom-color: rgb(162 28 175);\n\t\n\nborder-y-fuchsia-800\tborder-top-color: rgb(134 25 143);\nborder-bottom-color: rgb(134 25 143);\n\t\n\nborder-y-fuchsia-900\tborder-top-color: rgb(112 26 117);\nborder-bottom-color: rgb(112 26 117);\n\t\n\nborder-y-fuchsia-950\tborder-top-color: rgb(74 4 78);\nborder-bottom-color: rgb(74 4 78);\n\t\n\nborder-y-pink-50\tborder-top-color: rgb(253 242 248);\nborder-bottom-color: rgb(253 242 248);\n\t\n\nborder-y-pink-100\tborder-top-color: rgb(252 231 243);\nborder-bottom-color: rgb(252 231 243);\n\t\n\nborder-y-pink-200\tborder-top-color: rgb(251 207 232);\nborder-bottom-color: rgb(251 207 232);\n\t\n\nborder-y-pink-300\tborder-top-color: rgb(249 168 212);\nborder-bottom-color: rgb(249 168 212);\n\t\n\nborder-y-pink-400\tborder-top-color: rgb(244 114 182);\nborder-bottom-color: rgb(244 114 182);\n\t\n\nborder-y-pink-500\tborder-top-color: rgb(236 72 153);\nborder-bottom-color: rgb(236 72 153);\n\t\n\nborder-y-pink-600\tborder-top-color: rgb(219 39 119);\nborder-bottom-color: rgb(219 39 119);\n\t\n\nborder-y-pink-700\tborder-top-color: rgb(190 24 93);\nborder-bottom-color: rgb(190 24 93);\n\t\n\nborder-y-pink-800\tborder-top-color: rgb(157 23 77);\nborder-bottom-color: rgb(157 23 77);\n\t\n\nborder-y-pink-900\tborder-top-color: rgb(131 24 67);\nborder-bottom-color: rgb(131 24 67);\n\t\n\nborder-y-pink-950\tborder-top-color: rgb(80 7 36);\nborder-bottom-color: rgb(80 7 36);\n\t\n\nborder-y-rose-50\tborder-top-color: rgb(255 241 242);\nborder-bottom-color: rgb(255 241 242);\n\t\n\nborder-y-rose-100\tborder-top-color: rgb(255 228 230);\nborder-bottom-color: rgb(255 228 230);\n\t\n\nborder-y-rose-200\tborder-top-color: rgb(254 205 211);\nborder-bottom-color: rgb(254 205 211);\n\t\n\nborder-y-rose-300\tborder-top-color: rgb(253 164 175);\nborder-bottom-color: rgb(253 164 175);\n\t\n\nborder-y-rose-400\tborder-top-color: rgb(251 113 133);\nborder-bottom-color: rgb(251 113 133);\n\t\n\nborder-y-rose-500\tborder-top-color: rgb(244 63 94);\nborder-bottom-color: rgb(244 63 94);\n\t\n\nborder-y-rose-600\tborder-top-color: rgb(225 29 72);\nborder-bottom-color: rgb(225 29 72);\n\t\n\nborder-y-rose-700\tborder-top-color: rgb(190 18 60);\nborder-bottom-color: rgb(190 18 60);\n\t\n\nborder-y-rose-800\tborder-top-color: rgb(159 18 57);\nborder-bottom-color: rgb(159 18 57);\n\t\n\nborder-y-rose-900\tborder-top-color: rgb(136 19 55);\nborder-bottom-color: rgb(136 19 55);\n\t\n\nborder-y-rose-950\tborder-top-color: rgb(76 5 25);\nborder-bottom-color: rgb(76 5 25);\n\t\n\nborder-s-inherit\tborder-inline-start-color: inherit;\n\t\n\nborder-s-current\tborder-inline-start-color: currentColor;\n\t\n\nborder-s-transparent\tborder-inline-start-color: transparent;\n\t\n\nborder-s-black\tborder-inline-start-color: rgb(0 0 0);\n\t\n\nborder-s-white\tborder-inline-start-color: rgb(255 255 255);\n\t\n\nborder-s-slate-50\tborder-inline-start-color: rgb(248 250 252);\n\t\n\nborder-s-slate-100\tborder-inline-start-color: rgb(241 245 249);\n\t\n\nborder-s-slate-200\tborder-inline-start-color: rgb(226 232 240);\n\t\n\nborder-s-slate-300\tborder-inline-start-color: rgb(203 213 225);\n\t\n\nborder-s-slate-400\tborder-inline-start-color: rgb(148 163 184);\n\t\n\nborder-s-slate-500\tborder-inline-start-color: rgb(100 116 139);\n\t\n\nborder-s-slate-600\tborder-inline-start-color: rgb(71 85 105);\n\t\n\nborder-s-slate-700\tborder-inline-start-color: rgb(51 65 85);\n\t\n\nborder-s-slate-800\tborder-inline-start-color: rgb(30 41 59);\n\t\n\nborder-s-slate-900\tborder-inline-start-color: rgb(15 23 42);\n\t\n\nborder-s-slate-950\tborder-inline-start-color: rgb(2 6 23);\n\t\n\nborder-s-gray-50\tborder-inline-start-color: rgb(249 250 251);\n\t\n\nborder-s-gray-100\tborder-inline-start-color: rgb(243 244 246);\n\t\n\nborder-s-gray-200\tborder-inline-start-color: rgb(229 231 235);\n\t\n\nborder-s-gray-300\tborder-inline-start-color: rgb(209 213 219);\n\t\n\nborder-s-gray-400\tborder-inline-start-color: rgb(156 163 175);\n\t\n\nborder-s-gray-500\tborder-inline-start-color: rgb(107 114 128);\n\t\n\nborder-s-gray-600\tborder-inline-start-color: rgb(75 85 99);\n\t\n\nborder-s-gray-700\tborder-inline-start-color: rgb(55 65 81);\n\t\n\nborder-s-gray-800\tborder-inline-start-color: rgb(31 41 55);\n\t\n\nborder-s-gray-900\tborder-inline-start-color: rgb(17 24 39);\n\t\n\nborder-s-gray-950\tborder-inline-start-color: rgb(3 7 18);\n\t\n\nborder-s-zinc-50\tborder-inline-start-color: rgb(250 250 250);\n\t\n\nborder-s-zinc-100\tborder-inline-start-color: rgb(244 244 245);\n\t\n\nborder-s-zinc-200\tborder-inline-start-color: rgb(228 228 231);\n\t\n\nborder-s-zinc-300\tborder-inline-start-color: rgb(212 212 216);\n\t\n\nborder-s-zinc-400\tborder-inline-start-color: rgb(161 161 170);\n\t\n\nborder-s-zinc-500\tborder-inline-start-color: rgb(113 113 122);\n\t\n\nborder-s-zinc-600\tborder-inline-start-color: rgb(82 82 91);\n\t\n\nborder-s-zinc-700\tborder-inline-start-color: rgb(63 63 70);\n\t\n\nborder-s-zinc-800\tborder-inline-start-color: rgb(39 39 42);\n\t\n\nborder-s-zinc-900\tborder-inline-start-color: rgb(24 24 27);\n\t\n\nborder-s-zinc-950\tborder-inline-start-color: rgb(9 9 11);\n\t\n\nborder-s-neutral-50\tborder-inline-start-color: rgb(250 250 250);\n\t\n\nborder-s-neutral-100\tborder-inline-start-color: rgb(245 245 245);\n\t\n\nborder-s-neutral-200\tborder-inline-start-color: rgb(229 229 229);\n\t\n\nborder-s-neutral-300\tborder-inline-start-color: rgb(212 212 212);\n\t\n\nborder-s-neutral-400\tborder-inline-start-color: rgb(163 163 163);\n\t\n\nborder-s-neutral-500\tborder-inline-start-color: rgb(115 115 115);\n\t\n\nborder-s-neutral-600\tborder-inline-start-color: rgb(82 82 82);\n\t\n\nborder-s-neutral-700\tborder-inline-start-color: rgb(64 64 64);\n\t\n\nborder-s-neutral-800\tborder-inline-start-color: rgb(38 38 38);\n\t\n\nborder-s-neutral-900\tborder-inline-start-color: rgb(23 23 23);\n\t\n\nborder-s-neutral-950\tborder-inline-start-color: rgb(10 10 10);\n\t\n\nborder-s-stone-50\tborder-inline-start-color: rgb(250 250 249);\n\t\n\nborder-s-stone-100\tborder-inline-start-color: rgb(245 245 244);\n\t\n\nborder-s-stone-200\tborder-inline-start-color: rgb(231 229 228);\n\t\n\nborder-s-stone-300\tborder-inline-start-color: rgb(214 211 209);\n\t\n\nborder-s-stone-400\tborder-inline-start-color: rgb(168 162 158);\n\t\n\nborder-s-stone-500\tborder-inline-start-color: rgb(120 113 108);\n\t\n\nborder-s-stone-600\tborder-inline-start-color: rgb(87 83 78);\n\t\n\nborder-s-stone-700\tborder-inline-start-color: rgb(68 64 60);\n\t\n\nborder-s-stone-800\tborder-inline-start-color: rgb(41 37 36);\n\t\n\nborder-s-stone-900\tborder-inline-start-color: rgb(28 25 23);\n\t\n\nborder-s-stone-950\tborder-inline-start-color: rgb(12 10 9);\n\t\n\nborder-s-red-50\tborder-inline-start-color: rgb(254 242 242);\n\t\n\nborder-s-red-100\tborder-inline-start-color: rgb(254 226 226);\n\t\n\nborder-s-red-200\tborder-inline-start-color: rgb(254 202 202);\n\t\n\nborder-s-red-300\tborder-inline-start-color: rgb(252 165 165);\n\t\n\nborder-s-red-400\tborder-inline-start-color: rgb(248 113 113);\n\t\n\nborder-s-red-500\tborder-inline-start-color: rgb(239 68 68);\n\t\n\nborder-s-red-600\tborder-inline-start-color: rgb(220 38 38);\n\t\n\nborder-s-red-700\tborder-inline-start-color: rgb(185 28 28);\n\t\n\nborder-s-red-800\tborder-inline-start-color: rgb(153 27 27);\n\t\n\nborder-s-red-900\tborder-inline-start-color: rgb(127 29 29);\n\t\n\nborder-s-red-950\tborder-inline-start-color: rgb(69 10 10);\n\t\n\nborder-s-orange-50\tborder-inline-start-color: rgb(255 247 237);\n\t\n\nborder-s-orange-100\tborder-inline-start-color: rgb(255 237 213);\n\t\n\nborder-s-orange-200\tborder-inline-start-color: rgb(254 215 170);\n\t\n\nborder-s-orange-300\tborder-inline-start-color: rgb(253 186 116);\n\t\n\nborder-s-orange-400\tborder-inline-start-color: rgb(251 146 60);\n\t\n\nborder-s-orange-500\tborder-inline-start-color: rgb(249 115 22);\n\t\n\nborder-s-orange-600\tborder-inline-start-color: rgb(234 88 12);\n\t\n\nborder-s-orange-700\tborder-inline-start-color: rgb(194 65 12);\n\t\n\nborder-s-orange-800\tborder-inline-start-color: rgb(154 52 18);\n\t\n\nborder-s-orange-900\tborder-inline-start-color: rgb(124 45 18);\n\t\n\nborder-s-orange-950\tborder-inline-start-color: rgb(67 20 7);\n\t\n\nborder-s-amber-50\tborder-inline-start-color: rgb(255 251 235);\n\t\n\nborder-s-amber-100\tborder-inline-start-color: rgb(254 243 199);\n\t\n\nborder-s-amber-200\tborder-inline-start-color: rgb(253 230 138);\n\t\n\nborder-s-amber-300\tborder-inline-start-color: rgb(252 211 77);\n\t\n\nborder-s-amber-400\tborder-inline-start-color: rgb(251 191 36);\n\t\n\nborder-s-amber-500\tborder-inline-start-color: rgb(245 158 11);\n\t\n\nborder-s-amber-600\tborder-inline-start-color: rgb(217 119 6);\n\t\n\nborder-s-amber-700\tborder-inline-start-color: rgb(180 83 9);\n\t\n\nborder-s-amber-800\tborder-inline-start-color: rgb(146 64 14);\n\t\n\nborder-s-amber-900\tborder-inline-start-color: rgb(120 53 15);\n\t\n\nborder-s-amber-950\tborder-inline-start-color: rgb(69 26 3);\n\t\n\nborder-s-yellow-50\tborder-inline-start-color: rgb(254 252 232);\n\t\n\nborder-s-yellow-100\tborder-inline-start-color: rgb(254 249 195);\n\t\n\nborder-s-yellow-200\tborder-inline-start-color: rgb(254 240 138);\n\t\n\nborder-s-yellow-300\tborder-inline-start-color: rgb(253 224 71);\n\t\n\nborder-s-yellow-400\tborder-inline-start-color: rgb(250 204 21);\n\t\n\nborder-s-yellow-500\tborder-inline-start-color: rgb(234 179 8);\n\t\n\nborder-s-yellow-600\tborder-inline-start-color: rgb(202 138 4);\n\t\n\nborder-s-yellow-700\tborder-inline-start-color: rgb(161 98 7);\n\t\n\nborder-s-yellow-800\tborder-inline-start-color: rgb(133 77 14);\n\t\n\nborder-s-yellow-900\tborder-inline-start-color: rgb(113 63 18);\n\t\n\nborder-s-yellow-950\tborder-inline-start-color: rgb(66 32 6);\n\t\n\nborder-s-lime-50\tborder-inline-start-color: rgb(247 254 231);\n\t\n\nborder-s-lime-100\tborder-inline-start-color: rgb(236 252 203);\n\t\n\nborder-s-lime-200\tborder-inline-start-color: rgb(217 249 157);\n\t\n\nborder-s-lime-300\tborder-inline-start-color: rgb(190 242 100);\n\t\n\nborder-s-lime-400\tborder-inline-start-color: rgb(163 230 53);\n\t\n\nborder-s-lime-500\tborder-inline-start-color: rgb(132 204 22);\n\t\n\nborder-s-lime-600\tborder-inline-start-color: rgb(101 163 13);\n\t\n\nborder-s-lime-700\tborder-inline-start-color: rgb(77 124 15);\n\t\n\nborder-s-lime-800\tborder-inline-start-color: rgb(63 98 18);\n\t\n\nborder-s-lime-900\tborder-inline-start-color: rgb(54 83 20);\n\t\n\nborder-s-lime-950\tborder-inline-start-color: rgb(26 46 5);\n\t\n\nborder-s-green-50\tborder-inline-start-color: rgb(240 253 244);\n\t\n\nborder-s-green-100\tborder-inline-start-color: rgb(220 252 231);\n\t\n\nborder-s-green-200\tborder-inline-start-color: rgb(187 247 208);\n\t\n\nborder-s-green-300\tborder-inline-start-color: rgb(134 239 172);\n\t\n\nborder-s-green-400\tborder-inline-start-color: rgb(74 222 128);\n\t\n\nborder-s-green-500\tborder-inline-start-color: rgb(34 197 94);\n\t\n\nborder-s-green-600\tborder-inline-start-color: rgb(22 163 74);\n\t\n\nborder-s-green-700\tborder-inline-start-color: rgb(21 128 61);\n\t\n\nborder-s-green-800\tborder-inline-start-color: rgb(22 101 52);\n\t\n\nborder-s-green-900\tborder-inline-start-color: rgb(20 83 45);\n\t\n\nborder-s-green-950\tborder-inline-start-color: rgb(5 46 22);\n\t\n\nborder-s-emerald-50\tborder-inline-start-color: rgb(236 253 245);\n\t\n\nborder-s-emerald-100\tborder-inline-start-color: rgb(209 250 229);\n\t\n\nborder-s-emerald-200\tborder-inline-start-color: rgb(167 243 208);\n\t\n\nborder-s-emerald-300\tborder-inline-start-color: rgb(110 231 183);\n\t\n\nborder-s-emerald-400\tborder-inline-start-color: rgb(52 211 153);\n\t\n\nborder-s-emerald-500\tborder-inline-start-color: rgb(16 185 129);\n\t\n\nborder-s-emerald-600\tborder-inline-start-color: rgb(5 150 105);\n\t\n\nborder-s-emerald-700\tborder-inline-start-color: rgb(4 120 87);\n\t\n\nborder-s-emerald-800\tborder-inline-start-color: rgb(6 95 70);\n\t\n\nborder-s-emerald-900\tborder-inline-start-color: rgb(6 78 59);\n\t\n\nborder-s-emerald-950\tborder-inline-start-color: rgb(2 44 34);\n\t\n\nborder-s-teal-50\tborder-inline-start-color: rgb(240 253 250);\n\t\n\nborder-s-teal-100\tborder-inline-start-color: rgb(204 251 241);\n\t\n\nborder-s-teal-200\tborder-inline-start-color: rgb(153 246 228);\n\t\n\nborder-s-teal-300\tborder-inline-start-color: rgb(94 234 212);\n\t\n\nborder-s-teal-400\tborder-inline-start-color: rgb(45 212 191);\n\t\n\nborder-s-teal-500\tborder-inline-start-color: rgb(20 184 166);\n\t\n\nborder-s-teal-600\tborder-inline-start-color: rgb(13 148 136);\n\t\n\nborder-s-teal-700\tborder-inline-start-color: rgb(15 118 110);\n\t\n\nborder-s-teal-800\tborder-inline-start-color: rgb(17 94 89);\n\t\n\nborder-s-teal-900\tborder-inline-start-color: rgb(19 78 74);\n\t\n\nborder-s-teal-950\tborder-inline-start-color: rgb(4 47 46);\n\t\n\nborder-s-cyan-50\tborder-inline-start-color: rgb(236 254 255);\n\t\n\nborder-s-cyan-100\tborder-inline-start-color: rgb(207 250 254);\n\t\n\nborder-s-cyan-200\tborder-inline-start-color: rgb(165 243 252);\n\t\n\nborder-s-cyan-300\tborder-inline-start-color: rgb(103 232 249);\n\t\n\nborder-s-cyan-400\tborder-inline-start-color: rgb(34 211 238);\n\t\n\nborder-s-cyan-500\tborder-inline-start-color: rgb(6 182 212);\n\t\n\nborder-s-cyan-600\tborder-inline-start-color: rgb(8 145 178);\n\t\n\nborder-s-cyan-700\tborder-inline-start-color: rgb(14 116 144);\n\t\n\nborder-s-cyan-800\tborder-inline-start-color: rgb(21 94 117);\n\t\n\nborder-s-cyan-900\tborder-inline-start-color: rgb(22 78 99);\n\t\n\nborder-s-cyan-950\tborder-inline-start-color: rgb(8 51 68);\n\t\n\nborder-s-sky-50\tborder-inline-start-color: rgb(240 249 255);\n\t\n\nborder-s-sky-100\tborder-inline-start-color: rgb(224 242 254);\n\t\n\nborder-s-sky-200\tborder-inline-start-color: rgb(186 230 253);\n\t\n\nborder-s-sky-300\tborder-inline-start-color: rgb(125 211 252);\n\t\n\nborder-s-sky-400\tborder-inline-start-color: rgb(56 189 248);\n\t\n\nborder-s-sky-500\tborder-inline-start-color: rgb(14 165 233);\n\t\n\nborder-s-sky-600\tborder-inline-start-color: rgb(2 132 199);\n\t\n\nborder-s-sky-700\tborder-inline-start-color: rgb(3 105 161);\n\t\n\nborder-s-sky-800\tborder-inline-start-color: rgb(7 89 133);\n\t\n\nborder-s-sky-900\tborder-inline-start-color: rgb(12 74 110);\n\t\n\nborder-s-sky-950\tborder-inline-start-color: rgb(8 47 73);\n\t\n\nborder-s-blue-50\tborder-inline-start-color: rgb(239 246 255);\n\t\n\nborder-s-blue-100\tborder-inline-start-color: rgb(219 234 254);\n\t\n\nborder-s-blue-200\tborder-inline-start-color: rgb(191 219 254);\n\t\n\nborder-s-blue-300\tborder-inline-start-color: rgb(147 197 253);\n\t\n\nborder-s-blue-400\tborder-inline-start-color: rgb(96 165 250);\n\t\n\nborder-s-blue-500\tborder-inline-start-color: rgb(59 130 246);\n\t\n\nborder-s-blue-600\tborder-inline-start-color: rgb(37 99 235);\n\t\n\nborder-s-blue-700\tborder-inline-start-color: rgb(29 78 216);\n\t\n\nborder-s-blue-800\tborder-inline-start-color: rgb(30 64 175);\n\t\n\nborder-s-blue-900\tborder-inline-start-color: rgb(30 58 138);\n\t\n\nborder-s-blue-950\tborder-inline-start-color: rgb(23 37 84);\n\t\n\nborder-s-indigo-50\tborder-inline-start-color: rgb(238 242 255);\n\t\n\nborder-s-indigo-100\tborder-inline-start-color: rgb(224 231 255);\n\t\n\nborder-s-indigo-200\tborder-inline-start-color: rgb(199 210 254);\n\t\n\nborder-s-indigo-300\tborder-inline-start-color: rgb(165 180 252);\n\t\n\nborder-s-indigo-400\tborder-inline-start-color: rgb(129 140 248);\n\t\n\nborder-s-indigo-500\tborder-inline-start-color: rgb(99 102 241);\n\t\n\nborder-s-indigo-600\tborder-inline-start-color: rgb(79 70 229);\n\t\n\nborder-s-indigo-700\tborder-inline-start-color: rgb(67 56 202);\n\t\n\nborder-s-indigo-800\tborder-inline-start-color: rgb(55 48 163);\n\t\n\nborder-s-indigo-900\tborder-inline-start-color: rgb(49 46 129);\n\t\n\nborder-s-indigo-950\tborder-inline-start-color: rgb(30 27 75);\n\t\n\nborder-s-violet-50\tborder-inline-start-color: rgb(245 243 255);\n\t\n\nborder-s-violet-100\tborder-inline-start-color: rgb(237 233 254);\n\t\n\nborder-s-violet-200\tborder-inline-start-color: rgb(221 214 254);\n\t\n\nborder-s-violet-300\tborder-inline-start-color: rgb(196 181 253);\n\t\n\nborder-s-violet-400\tborder-inline-start-color: rgb(167 139 250);\n\t\n\nborder-s-violet-500\tborder-inline-start-color: rgb(139 92 246);\n\t\n\nborder-s-violet-600\tborder-inline-start-color: rgb(124 58 237);\n\t\n\nborder-s-violet-700\tborder-inline-start-color: rgb(109 40 217);\n\t\n\nborder-s-violet-800\tborder-inline-start-color: rgb(91 33 182);\n\t\n\nborder-s-violet-900\tborder-inline-start-color: rgb(76 29 149);\n\t\n\nborder-s-violet-950\tborder-inline-start-color: rgb(46 16 101);\n\t\n\nborder-s-purple-50\tborder-inline-start-color: rgb(250 245 255);\n\t\n\nborder-s-purple-100\tborder-inline-start-color: rgb(243 232 255);\n\t\n\nborder-s-purple-200\tborder-inline-start-color: rgb(233 213 255);\n\t\n\nborder-s-purple-300\tborder-inline-start-color: rgb(216 180 254);\n\t\n\nborder-s-purple-400\tborder-inline-start-color: rgb(192 132 252);\n\t\n\nborder-s-purple-500\tborder-inline-start-color: rgb(168 85 247);\n\t\n\nborder-s-purple-600\tborder-inline-start-color: rgb(147 51 234);\n\t\n\nborder-s-purple-700\tborder-inline-start-color: rgb(126 34 206);\n\t\n\nborder-s-purple-800\tborder-inline-start-color: rgb(107 33 168);\n\t\n\nborder-s-purple-900\tborder-inline-start-color: rgb(88 28 135);\n\t\n\nborder-s-purple-950\tborder-inline-start-color: rgb(59 7 100);\n\t\n\nborder-s-fuchsia-50\tborder-inline-start-color: rgb(253 244 255);\n\t\n\nborder-s-fuchsia-100\tborder-inline-start-color: rgb(250 232 255);\n\t\n\nborder-s-fuchsia-200\tborder-inline-start-color: rgb(245 208 254);\n\t\n\nborder-s-fuchsia-300\tborder-inline-start-color: rgb(240 171 252);\n\t\n\nborder-s-fuchsia-400\tborder-inline-start-color: rgb(232 121 249);\n\t\n\nborder-s-fuchsia-500\tborder-inline-start-color: rgb(217 70 239);\n\t\n\nborder-s-fuchsia-600\tborder-inline-start-color: rgb(192 38 211);\n\t\n\nborder-s-fuchsia-700\tborder-inline-start-color: rgb(162 28 175);\n\t\n\nborder-s-fuchsia-800\tborder-inline-start-color: rgb(134 25 143);\n\t\n\nborder-s-fuchsia-900\tborder-inline-start-color: rgb(112 26 117);\n\t\n\nborder-s-fuchsia-950\tborder-inline-start-color: rgb(74 4 78);\n\t\n\nborder-s-pink-50\tborder-inline-start-color: rgb(253 242 248);\n\t\n\nborder-s-pink-100\tborder-inline-start-color: rgb(252 231 243);\n\t\n\nborder-s-pink-200\tborder-inline-start-color: rgb(251 207 232);\n\t\n\nborder-s-pink-300\tborder-inline-start-color: rgb(249 168 212);\n\t\n\nborder-s-pink-400\tborder-inline-start-color: rgb(244 114 182);\n\t\n\nborder-s-pink-500\tborder-inline-start-color: rgb(236 72 153);\n\t\n\nborder-s-pink-600\tborder-inline-start-color: rgb(219 39 119);\n\t\n\nborder-s-pink-700\tborder-inline-start-color: rgb(190 24 93);\n\t\n\nborder-s-pink-800\tborder-inline-start-color: rgb(157 23 77);\n\t\n\nborder-s-pink-900\tborder-inline-start-color: rgb(131 24 67);\n\t\n\nborder-s-pink-950\tborder-inline-start-color: rgb(80 7 36);\n\t\n\nborder-s-rose-50\tborder-inline-start-color: rgb(255 241 242);\n\t\n\nborder-s-rose-100\tborder-inline-start-color: rgb(255 228 230);\n\t\n\nborder-s-rose-200\tborder-inline-start-color: rgb(254 205 211);\n\t\n\nborder-s-rose-300\tborder-inline-start-color: rgb(253 164 175);\n\t\n\nborder-s-rose-400\tborder-inline-start-color: rgb(251 113 133);\n\t\n\nborder-s-rose-500\tborder-inline-start-color: rgb(244 63 94);\n\t\n\nborder-s-rose-600\tborder-inline-start-color: rgb(225 29 72);\n\t\n\nborder-s-rose-700\tborder-inline-start-color: rgb(190 18 60);\n\t\n\nborder-s-rose-800\tborder-inline-start-color: rgb(159 18 57);\n\t\n\nborder-s-rose-900\tborder-inline-start-color: rgb(136 19 55);\n\t\n\nborder-s-rose-950\tborder-inline-start-color: rgb(76 5 25);\n\t\n\nborder-e-inherit\tborder-inline-end-color: inherit;\n\t\n\nborder-e-current\tborder-inline-end-color: currentColor;\n\t\n\nborder-e-transparent\tborder-inline-end-color: transparent;\n\t\n\nborder-e-black\tborder-inline-end-color: rgb(0 0 0);\n\t\n\nborder-e-white\tborder-inline-end-color: rgb(255 255 255);\n\t\n\nborder-e-slate-50\tborder-inline-end-color: rgb(248 250 252);\n\t\n\nborder-e-slate-100\tborder-inline-end-color: rgb(241 245 249);\n\t\n\nborder-e-slate-200\tborder-inline-end-color: rgb(226 232 240);\n\t\n\nborder-e-slate-300\tborder-inline-end-color: rgb(203 213 225);\n\t\n\nborder-e-slate-400\tborder-inline-end-color: rgb(148 163 184);\n\t\n\nborder-e-slate-500\tborder-inline-end-color: rgb(100 116 139);\n\t\n\nborder-e-slate-600\tborder-inline-end-color: rgb(71 85 105);\n\t\n\nborder-e-slate-700\tborder-inline-end-color: rgb(51 65 85);\n\t\n\nborder-e-slate-800\tborder-inline-end-color: rgb(30 41 59);\n\t\n\nborder-e-slate-900\tborder-inline-end-color: rgb(15 23 42);\n\t\n\nborder-e-slate-950\tborder-inline-end-color: rgb(2 6 23);\n\t\n\nborder-e-gray-50\tborder-inline-end-color: rgb(249 250 251);\n\t\n\nborder-e-gray-100\tborder-inline-end-color: rgb(243 244 246);\n\t\n\nborder-e-gray-200\tborder-inline-end-color: rgb(229 231 235);\n\t\n\nborder-e-gray-300\tborder-inline-end-color: rgb(209 213 219);\n\t\n\nborder-e-gray-400\tborder-inline-end-color: rgb(156 163 175);\n\t\n\nborder-e-gray-500\tborder-inline-end-color: rgb(107 114 128);\n\t\n\nborder-e-gray-600\tborder-inline-end-color: rgb(75 85 99);\n\t\n\nborder-e-gray-700\tborder-inline-end-color: rgb(55 65 81);\n\t\n\nborder-e-gray-800\tborder-inline-end-color: rgb(31 41 55);\n\t\n\nborder-e-gray-900\tborder-inline-end-color: rgb(17 24 39);\n\t\n\nborder-e-gray-950\tborder-inline-end-color: rgb(3 7 18);\n\t\n\nborder-e-zinc-50\tborder-inline-end-color: rgb(250 250 250);\n\t\n\nborder-e-zinc-100\tborder-inline-end-color: rgb(244 244 245);\n\t\n\nborder-e-zinc-200\tborder-inline-end-color: rgb(228 228 231);\n\t\n\nborder-e-zinc-300\tborder-inline-end-color: rgb(212 212 216);\n\t\n\nborder-e-zinc-400\tborder-inline-end-color: rgb(161 161 170);\n\t\n\nborder-e-zinc-500\tborder-inline-end-color: rgb(113 113 122);\n\t\n\nborder-e-zinc-600\tborder-inline-end-color: rgb(82 82 91);\n\t\n\nborder-e-zinc-700\tborder-inline-end-color: rgb(63 63 70);\n\t\n\nborder-e-zinc-800\tborder-inline-end-color: rgb(39 39 42);\n\t\n\nborder-e-zinc-900\tborder-inline-end-color: rgb(24 24 27);\n\t\n\nborder-e-zinc-950\tborder-inline-end-color: rgb(9 9 11);\n\t\n\nborder-e-neutral-50\tborder-inline-end-color: rgb(250 250 250);\n\t\n\nborder-e-neutral-100\tborder-inline-end-color: rgb(245 245 245);\n\t\n\nborder-e-neutral-200\tborder-inline-end-color: rgb(229 229 229);\n\t\n\nborder-e-neutral-300\tborder-inline-end-color: rgb(212 212 212);\n\t\n\nborder-e-neutral-400\tborder-inline-end-color: rgb(163 163 163);\n\t\n\nborder-e-neutral-500\tborder-inline-end-color: rgb(115 115 115);\n\t\n\nborder-e-neutral-600\tborder-inline-end-color: rgb(82 82 82);\n\t\n\nborder-e-neutral-700\tborder-inline-end-color: rgb(64 64 64);\n\t\n\nborder-e-neutral-800\tborder-inline-end-color: rgb(38 38 38);\n\t\n\nborder-e-neutral-900\tborder-inline-end-color: rgb(23 23 23);\n\t\n\nborder-e-neutral-950\tborder-inline-end-color: rgb(10 10 10);\n\t\n\nborder-e-stone-50\tborder-inline-end-color: rgb(250 250 249);\n\t\n\nborder-e-stone-100\tborder-inline-end-color: rgb(245 245 244);\n\t\n\nborder-e-stone-200\tborder-inline-end-color: rgb(231 229 228);\n\t\n\nborder-e-stone-300\tborder-inline-end-color: rgb(214 211 209);\n\t\n\nborder-e-stone-400\tborder-inline-end-color: rgb(168 162 158);\n\t\n\nborder-e-stone-500\tborder-inline-end-color: rgb(120 113 108);\n\t\n\nborder-e-stone-600\tborder-inline-end-color: rgb(87 83 78);\n\t\n\nborder-e-stone-700\tborder-inline-end-color: rgb(68 64 60);\n\t\n\nborder-e-stone-800\tborder-inline-end-color: rgb(41 37 36);\n\t\n\nborder-e-stone-900\tborder-inline-end-color: rgb(28 25 23);\n\t\n\nborder-e-stone-950\tborder-inline-end-color: rgb(12 10 9);\n\t\n\nborder-e-red-50\tborder-inline-end-color: rgb(254 242 242);\n\t\n\nborder-e-red-100\tborder-inline-end-color: rgb(254 226 226);\n\t\n\nborder-e-red-200\tborder-inline-end-color: rgb(254 202 202);\n\t\n\nborder-e-red-300\tborder-inline-end-color: rgb(252 165 165);\n\t\n\nborder-e-red-400\tborder-inline-end-color: rgb(248 113 113);\n\t\n\nborder-e-red-500\tborder-inline-end-color: rgb(239 68 68);\n\t\n\nborder-e-red-600\tborder-inline-end-color: rgb(220 38 38);\n\t\n\nborder-e-red-700\tborder-inline-end-color: rgb(185 28 28);\n\t\n\nborder-e-red-800\tborder-inline-end-color: rgb(153 27 27);\n\t\n\nborder-e-red-900\tborder-inline-end-color: rgb(127 29 29);\n\t\n\nborder-e-red-950\tborder-inline-end-color: rgb(69 10 10);\n\t\n\nborder-e-orange-50\tborder-inline-end-color: rgb(255 247 237);\n\t\n\nborder-e-orange-100\tborder-inline-end-color: rgb(255 237 213);\n\t\n\nborder-e-orange-200\tborder-inline-end-color: rgb(254 215 170);\n\t\n\nborder-e-orange-300\tborder-inline-end-color: rgb(253 186 116);\n\t\n\nborder-e-orange-400\tborder-inline-end-color: rgb(251 146 60);\n\t\n\nborder-e-orange-500\tborder-inline-end-color: rgb(249 115 22);\n\t\n\nborder-e-orange-600\tborder-inline-end-color: rgb(234 88 12);\n\t\n\nborder-e-orange-700\tborder-inline-end-color: rgb(194 65 12);\n\t\n\nborder-e-orange-800\tborder-inline-end-color: rgb(154 52 18);\n\t\n\nborder-e-orange-900\tborder-inline-end-color: rgb(124 45 18);\n\t\n\nborder-e-orange-950\tborder-inline-end-color: rgb(67 20 7);\n\t\n\nborder-e-amber-50\tborder-inline-end-color: rgb(255 251 235);\n\t\n\nborder-e-amber-100\tborder-inline-end-color: rgb(254 243 199);\n\t\n\nborder-e-amber-200\tborder-inline-end-color: rgb(253 230 138);\n\t\n\nborder-e-amber-300\tborder-inline-end-color: rgb(252 211 77);\n\t\n\nborder-e-amber-400\tborder-inline-end-color: rgb(251 191 36);\n\t\n\nborder-e-amber-500\tborder-inline-end-color: rgb(245 158 11);\n\t\n\nborder-e-amber-600\tborder-inline-end-color: rgb(217 119 6);\n\t\n\nborder-e-amber-700\tborder-inline-end-color: rgb(180 83 9);\n\t\n\nborder-e-amber-800\tborder-inline-end-color: rgb(146 64 14);\n\t\n\nborder-e-amber-900\tborder-inline-end-color: rgb(120 53 15);\n\t\n\nborder-e-amber-950\tborder-inline-end-color: rgb(69 26 3);\n\t\n\nborder-e-yellow-50\tborder-inline-end-color: rgb(254 252 232);\n\t\n\nborder-e-yellow-100\tborder-inline-end-color: rgb(254 249 195);\n\t\n\nborder-e-yellow-200\tborder-inline-end-color: rgb(254 240 138);\n\t\n\nborder-e-yellow-300\tborder-inline-end-color: rgb(253 224 71);\n\t\n\nborder-e-yellow-400\tborder-inline-end-color: rgb(250 204 21);\n\t\n\nborder-e-yellow-500\tborder-inline-end-color: rgb(234 179 8);\n\t\n\nborder-e-yellow-600\tborder-inline-end-color: rgb(202 138 4);\n\t\n\nborder-e-yellow-700\tborder-inline-end-color: rgb(161 98 7);\n\t\n\nborder-e-yellow-800\tborder-inline-end-color: rgb(133 77 14);\n\t\n\nborder-e-yellow-900\tborder-inline-end-color: rgb(113 63 18);\n\t\n\nborder-e-yellow-950\tborder-inline-end-color: rgb(66 32 6);\n\t\n\nborder-e-lime-50\tborder-inline-end-color: rgb(247 254 231);\n\t\n\nborder-e-lime-100\tborder-inline-end-color: rgb(236 252 203);\n\t\n\nborder-e-lime-200\tborder-inline-end-color: rgb(217 249 157);\n\t\n\nborder-e-lime-300\tborder-inline-end-color: rgb(190 242 100);\n\t\n\nborder-e-lime-400\tborder-inline-end-color: rgb(163 230 53);\n\t\n\nborder-e-lime-500\tborder-inline-end-color: rgb(132 204 22);\n\t\n\nborder-e-lime-600\tborder-inline-end-color: rgb(101 163 13);\n\t\n\nborder-e-lime-700\tborder-inline-end-color: rgb(77 124 15);\n\t\n\nborder-e-lime-800\tborder-inline-end-color: rgb(63 98 18);\n\t\n\nborder-e-lime-900\tborder-inline-end-color: rgb(54 83 20);\n\t\n\nborder-e-lime-950\tborder-inline-end-color: rgb(26 46 5);\n\t\n\nborder-e-green-50\tborder-inline-end-color: rgb(240 253 244);\n\t\n\nborder-e-green-100\tborder-inline-end-color: rgb(220 252 231);\n\t\n\nborder-e-green-200\tborder-inline-end-color: rgb(187 247 208);\n\t\n\nborder-e-green-300\tborder-inline-end-color: rgb(134 239 172);\n\t\n\nborder-e-green-400\tborder-inline-end-color: rgb(74 222 128);\n\t\n\nborder-e-green-500\tborder-inline-end-color: rgb(34 197 94);\n\t\n\nborder-e-green-600\tborder-inline-end-color: rgb(22 163 74);\n\t\n\nborder-e-green-700\tborder-inline-end-color: rgb(21 128 61);\n\t\n\nborder-e-green-800\tborder-inline-end-color: rgb(22 101 52);\n\t\n\nborder-e-green-900\tborder-inline-end-color: rgb(20 83 45);\n\t\n\nborder-e-green-950\tborder-inline-end-color: rgb(5 46 22);\n\t\n\nborder-e-emerald-50\tborder-inline-end-color: rgb(236 253 245);\n\t\n\nborder-e-emerald-100\tborder-inline-end-color: rgb(209 250 229);\n\t\n\nborder-e-emerald-200\tborder-inline-end-color: rgb(167 243 208);\n\t\n\nborder-e-emerald-300\tborder-inline-end-color: rgb(110 231 183);\n\t\n\nborder-e-emerald-400\tborder-inline-end-color: rgb(52 211 153);\n\t\n\nborder-e-emerald-500\tborder-inline-end-color: rgb(16 185 129);\n\t\n\nborder-e-emerald-600\tborder-inline-end-color: rgb(5 150 105);\n\t\n\nborder-e-emerald-700\tborder-inline-end-color: rgb(4 120 87);\n\t\n\nborder-e-emerald-800\tborder-inline-end-color: rgb(6 95 70);\n\t\n\nborder-e-emerald-900\tborder-inline-end-color: rgb(6 78 59);\n\t\n\nborder-e-emerald-950\tborder-inline-end-color: rgb(2 44 34);\n\t\n\nborder-e-teal-50\tborder-inline-end-color: rgb(240 253 250);\n\t\n\nborder-e-teal-100\tborder-inline-end-color: rgb(204 251 241);\n\t\n\nborder-e-teal-200\tborder-inline-end-color: rgb(153 246 228);\n\t\n\nborder-e-teal-300\tborder-inline-end-color: rgb(94 234 212);\n\t\n\nborder-e-teal-400\tborder-inline-end-color: rgb(45 212 191);\n\t\n\nborder-e-teal-500\tborder-inline-end-color: rgb(20 184 166);\n\t\n\nborder-e-teal-600\tborder-inline-end-color: rgb(13 148 136);\n\t\n\nborder-e-teal-700\tborder-inline-end-color: rgb(15 118 110);\n\t\n\nborder-e-teal-800\tborder-inline-end-color: rgb(17 94 89);\n\t\n\nborder-e-teal-900\tborder-inline-end-color: rgb(19 78 74);\n\t\n\nborder-e-teal-950\tborder-inline-end-color: rgb(4 47 46);\n\t\n\nborder-e-cyan-50\tborder-inline-end-color: rgb(236 254 255);\n\t\n\nborder-e-cyan-100\tborder-inline-end-color: rgb(207 250 254);\n\t\n\nborder-e-cyan-200\tborder-inline-end-color: rgb(165 243 252);\n\t\n\nborder-e-cyan-300\tborder-inline-end-color: rgb(103 232 249);\n\t\n\nborder-e-cyan-400\tborder-inline-end-color: rgb(34 211 238);\n\t\n\nborder-e-cyan-500\tborder-inline-end-color: rgb(6 182 212);\n\t\n\nborder-e-cyan-600\tborder-inline-end-color: rgb(8 145 178);\n\t\n\nborder-e-cyan-700\tborder-inline-end-color: rgb(14 116 144);\n\t\n\nborder-e-cyan-800\tborder-inline-end-color: rgb(21 94 117);\n\t\n\nborder-e-cyan-900\tborder-inline-end-color: rgb(22 78 99);\n\t\n\nborder-e-cyan-950\tborder-inline-end-color: rgb(8 51 68);\n\t\n\nborder-e-sky-50\tborder-inline-end-color: rgb(240 249 255);\n\t\n\nborder-e-sky-100\tborder-inline-end-color: rgb(224 242 254);\n\t\n\nborder-e-sky-200\tborder-inline-end-color: rgb(186 230 253);\n\t\n\nborder-e-sky-300\tborder-inline-end-color: rgb(125 211 252);\n\t\n\nborder-e-sky-400\tborder-inline-end-color: rgb(56 189 248);\n\t\n\nborder-e-sky-500\tborder-inline-end-color: rgb(14 165 233);\n\t\n\nborder-e-sky-600\tborder-inline-end-color: rgb(2 132 199);\n\t\n\nborder-e-sky-700\tborder-inline-end-color: rgb(3 105 161);\n\t\n\nborder-e-sky-800\tborder-inline-end-color: rgb(7 89 133);\n\t\n\nborder-e-sky-900\tborder-inline-end-color: rgb(12 74 110);\n\t\n\nborder-e-sky-950\tborder-inline-end-color: rgb(8 47 73);\n\t\n\nborder-e-blue-50\tborder-inline-end-color: rgb(239 246 255);\n\t\n\nborder-e-blue-100\tborder-inline-end-color: rgb(219 234 254);\n\t\n\nborder-e-blue-200\tborder-inline-end-color: rgb(191 219 254);\n\t\n\nborder-e-blue-300\tborder-inline-end-color: rgb(147 197 253);\n\t\n\nborder-e-blue-400\tborder-inline-end-color: rgb(96 165 250);\n\t\n\nborder-e-blue-500\tborder-inline-end-color: rgb(59 130 246);\n\t\n\nborder-e-blue-600\tborder-inline-end-color: rgb(37 99 235);\n\t\n\nborder-e-blue-700\tborder-inline-end-color: rgb(29 78 216);\n\t\n\nborder-e-blue-800\tborder-inline-end-color: rgb(30 64 175);\n\t\n\nborder-e-blue-900\tborder-inline-end-color: rgb(30 58 138);\n\t\n\nborder-e-blue-950\tborder-inline-end-color: rgb(23 37 84);\n\t\n\nborder-e-indigo-50\tborder-inline-end-color: rgb(238 242 255);\n\t\n\nborder-e-indigo-100\tborder-inline-end-color: rgb(224 231 255);\n\t\n\nborder-e-indigo-200\tborder-inline-end-color: rgb(199 210 254);\n\t\n\nborder-e-indigo-300\tborder-inline-end-color: rgb(165 180 252);\n\t\n\nborder-e-indigo-400\tborder-inline-end-color: rgb(129 140 248);\n\t\n\nborder-e-indigo-500\tborder-inline-end-color: rgb(99 102 241);\n\t\n\nborder-e-indigo-600\tborder-inline-end-color: rgb(79 70 229);\n\t\n\nborder-e-indigo-700\tborder-inline-end-color: rgb(67 56 202);\n\t\n\nborder-e-indigo-800\tborder-inline-end-color: rgb(55 48 163);\n\t\n\nborder-e-indigo-900\tborder-inline-end-color: rgb(49 46 129);\n\t\n\nborder-e-indigo-950\tborder-inline-end-color: rgb(30 27 75);\n\t\n\nborder-e-violet-50\tborder-inline-end-color: rgb(245 243 255);\n\t\n\nborder-e-violet-100\tborder-inline-end-color: rgb(237 233 254);\n\t\n\nborder-e-violet-200\tborder-inline-end-color: rgb(221 214 254);\n\t\n\nborder-e-violet-300\tborder-inline-end-color: rgb(196 181 253);\n\t\n\nborder-e-violet-400\tborder-inline-end-color: rgb(167 139 250);\n\t\n\nborder-e-violet-500\tborder-inline-end-color: rgb(139 92 246);\n\t\n\nborder-e-violet-600\tborder-inline-end-color: rgb(124 58 237);\n\t\n\nborder-e-violet-700\tborder-inline-end-color: rgb(109 40 217);\n\t\n\nborder-e-violet-800\tborder-inline-end-color: rgb(91 33 182);\n\t\n\nborder-e-violet-900\tborder-inline-end-color: rgb(76 29 149);\n\t\n\nborder-e-violet-950\tborder-inline-end-color: rgb(46 16 101);\n\t\n\nborder-e-purple-50\tborder-inline-end-color: rgb(250 245 255);\n\t\n\nborder-e-purple-100\tborder-inline-end-color: rgb(243 232 255);\n\t\n\nborder-e-purple-200\tborder-inline-end-color: rgb(233 213 255);\n\t\n\nborder-e-purple-300\tborder-inline-end-color: rgb(216 180 254);\n\t\n\nborder-e-purple-400\tborder-inline-end-color: rgb(192 132 252);\n\t\n\nborder-e-purple-500\tborder-inline-end-color: rgb(168 85 247);\n\t\n\nborder-e-purple-600\tborder-inline-end-color: rgb(147 51 234);\n\t\n\nborder-e-purple-700\tborder-inline-end-color: rgb(126 34 206);\n\t\n\nborder-e-purple-800\tborder-inline-end-color: rgb(107 33 168);\n\t\n\nborder-e-purple-900\tborder-inline-end-color: rgb(88 28 135);\n\t\n\nborder-e-purple-950\tborder-inline-end-color: rgb(59 7 100);\n\t\n\nborder-e-fuchsia-50\tborder-inline-end-color: rgb(253 244 255);\n\t\n\nborder-e-fuchsia-100\tborder-inline-end-color: rgb(250 232 255);\n\t\n\nborder-e-fuchsia-200\tborder-inline-end-color: rgb(245 208 254);\n\t\n\nborder-e-fuchsia-300\tborder-inline-end-color: rgb(240 171 252);\n\t\n\nborder-e-fuchsia-400\tborder-inline-end-color: rgb(232 121 249);\n\t\n\nborder-e-fuchsia-500\tborder-inline-end-color: rgb(217 70 239);\n\t\n\nborder-e-fuchsia-600\tborder-inline-end-color: rgb(192 38 211);\n\t\n\nborder-e-fuchsia-700\tborder-inline-end-color: rgb(162 28 175);\n\t\n\nborder-e-fuchsia-800\tborder-inline-end-color: rgb(134 25 143);\n\t\n\nborder-e-fuchsia-900\tborder-inline-end-color: rgb(112 26 117);\n\t\n\nborder-e-fuchsia-950\tborder-inline-end-color: rgb(74 4 78);\n\t\n\nborder-e-pink-50\tborder-inline-end-color: rgb(253 242 248);\n\t\n\nborder-e-pink-100\tborder-inline-end-color: rgb(252 231 243);\n\t\n\nborder-e-pink-200\tborder-inline-end-color: rgb(251 207 232);\n\t\n\nborder-e-pink-300\tborder-inline-end-color: rgb(249 168 212);\n\t\n\nborder-e-pink-400\tborder-inline-end-color: rgb(244 114 182);\n\t\n\nborder-e-pink-500\tborder-inline-end-color: rgb(236 72 153);\n\t\n\nborder-e-pink-600\tborder-inline-end-color: rgb(219 39 119);\n\t\n\nborder-e-pink-700\tborder-inline-end-color: rgb(190 24 93);\n\t\n\nborder-e-pink-800\tborder-inline-end-color: rgb(157 23 77);\n\t\n\nborder-e-pink-900\tborder-inline-end-color: rgb(131 24 67);\n\t\n\nborder-e-pink-950\tborder-inline-end-color: rgb(80 7 36);\n\t\n\nborder-e-rose-50\tborder-inline-end-color: rgb(255 241 242);\n\t\n\nborder-e-rose-100\tborder-inline-end-color: rgb(255 228 230);\n\t\n\nborder-e-rose-200\tborder-inline-end-color: rgb(254 205 211);\n\t\n\nborder-e-rose-300\tborder-inline-end-color: rgb(253 164 175);\n\t\n\nborder-e-rose-400\tborder-inline-end-color: rgb(251 113 133);\n\t\n\nborder-e-rose-500\tborder-inline-end-color: rgb(244 63 94);\n\t\n\nborder-e-rose-600\tborder-inline-end-color: rgb(225 29 72);\n\t\n\nborder-e-rose-700\tborder-inline-end-color: rgb(190 18 60);\n\t\n\nborder-e-rose-800\tborder-inline-end-color: rgb(159 18 57);\n\t\n\nborder-e-rose-900\tborder-inline-end-color: rgb(136 19 55);\n\t\n\nborder-e-rose-950\tborder-inline-end-color: rgb(76 5 25);\n\t\n\nborder-t-inherit\tborder-top-color: inherit;\n\t\n\nborder-t-current\tborder-top-color: currentColor;\n\t\n\nborder-t-transparent\tborder-top-color: transparent;\n\t\n\nborder-t-black\tborder-top-color: rgb(0 0 0);\n\t\n\nborder-t-white\tborder-top-color: rgb(255 255 255);\n\t\n\nborder-t-slate-50\tborder-top-color: rgb(248 250 252);\n\t\n\nborder-t-slate-100\tborder-top-color: rgb(241 245 249);\n\t\n\nborder-t-slate-200\tborder-top-color: rgb(226 232 240);\n\t\n\nborder-t-slate-300\tborder-top-color: rgb(203 213 225);\n\t\n\nborder-t-slate-400\tborder-top-color: rgb(148 163 184);\n\t\n\nborder-t-slate-500\tborder-top-color: rgb(100 116 139);\n\t\n\nborder-t-slate-600\tborder-top-color: rgb(71 85 105);\n\t\n\nborder-t-slate-700\tborder-top-color: rgb(51 65 85);\n\t\n\nborder-t-slate-800\tborder-top-color: rgb(30 41 59);\n\t\n\nborder-t-slate-900\tborder-top-color: rgb(15 23 42);\n\t\n\nborder-t-slate-950\tborder-top-color: rgb(2 6 23);\n\t\n\nborder-t-gray-50\tborder-top-color: rgb(249 250 251);\n\t\n\nborder-t-gray-100\tborder-top-color: rgb(243 244 246);\n\t\n\nborder-t-gray-200\tborder-top-color: rgb(229 231 235);\n\t\n\nborder-t-gray-300\tborder-top-color: rgb(209 213 219);\n\t\n\nborder-t-gray-400\tborder-top-color: rgb(156 163 175);\n\t\n\nborder-t-gray-500\tborder-top-color: rgb(107 114 128);\n\t\n\nborder-t-gray-600\tborder-top-color: rgb(75 85 99);\n\t\n\nborder-t-gray-700\tborder-top-color: rgb(55 65 81);\n\t\n\nborder-t-gray-800\tborder-top-color: rgb(31 41 55);\n\t\n\nborder-t-gray-900\tborder-top-color: rgb(17 24 39);\n\t\n\nborder-t-gray-950\tborder-top-color: rgb(3 7 18);\n\t\n\nborder-t-zinc-50\tborder-top-color: rgb(250 250 250);\n\t\n\nborder-t-zinc-100\tborder-top-color: rgb(244 244 245);\n\t\n\nborder-t-zinc-200\tborder-top-color: rgb(228 228 231);\n\t\n\nborder-t-zinc-300\tborder-top-color: rgb(212 212 216);\n\t\n\nborder-t-zinc-400\tborder-top-color: rgb(161 161 170);\n\t\n\nborder-t-zinc-500\tborder-top-color: rgb(113 113 122);\n\t\n\nborder-t-zinc-600\tborder-top-color: rgb(82 82 91);\n\t\n\nborder-t-zinc-700\tborder-top-color: rgb(63 63 70);\n\t\n\nborder-t-zinc-800\tborder-top-color: rgb(39 39 42);\n\t\n\nborder-t-zinc-900\tborder-top-color: rgb(24 24 27);\n\t\n\nborder-t-zinc-950\tborder-top-color: rgb(9 9 11);\n\t\n\nborder-t-neutral-50\tborder-top-color: rgb(250 250 250);\n\t\n\nborder-t-neutral-100\tborder-top-color: rgb(245 245 245);\n\t\n\nborder-t-neutral-200\tborder-top-color: rgb(229 229 229);\n\t\n\nborder-t-neutral-300\tborder-top-color: rgb(212 212 212);\n\t\n\nborder-t-neutral-400\tborder-top-color: rgb(163 163 163);\n\t\n\nborder-t-neutral-500\tborder-top-color: rgb(115 115 115);\n\t\n\nborder-t-neutral-600\tborder-top-color: rgb(82 82 82);\n\t\n\nborder-t-neutral-700\tborder-top-color: rgb(64 64 64);\n\t\n\nborder-t-neutral-800\tborder-top-color: rgb(38 38 38);\n\t\n\nborder-t-neutral-900\tborder-top-color: rgb(23 23 23);\n\t\n\nborder-t-neutral-950\tborder-top-color: rgb(10 10 10);\n\t\n\nborder-t-stone-50\tborder-top-color: rgb(250 250 249);\n\t\n\nborder-t-stone-100\tborder-top-color: rgb(245 245 244);\n\t\n\nborder-t-stone-200\tborder-top-color: rgb(231 229 228);\n\t\n\nborder-t-stone-300\tborder-top-color: rgb(214 211 209);\n\t\n\nborder-t-stone-400\tborder-top-color: rgb(168 162 158);\n\t\n\nborder-t-stone-500\tborder-top-color: rgb(120 113 108);\n\t\n\nborder-t-stone-600\tborder-top-color: rgb(87 83 78);\n\t\n\nborder-t-stone-700\tborder-top-color: rgb(68 64 60);\n\t\n\nborder-t-stone-800\tborder-top-color: rgb(41 37 36);\n\t\n\nborder-t-stone-900\tborder-top-color: rgb(28 25 23);\n\t\n\nborder-t-stone-950\tborder-top-color: rgb(12 10 9);\n\t\n\nborder-t-red-50\tborder-top-color: rgb(254 242 242);\n\t\n\nborder-t-red-100\tborder-top-color: rgb(254 226 226);\n\t\n\nborder-t-red-200\tborder-top-color: rgb(254 202 202);\n\t\n\nborder-t-red-300\tborder-top-color: rgb(252 165 165);\n\t\n\nborder-t-red-400\tborder-top-color: rgb(248 113 113);\n\t\n\nborder-t-red-500\tborder-top-color: rgb(239 68 68);\n\t\n\nborder-t-red-600\tborder-top-color: rgb(220 38 38);\n\t\n\nborder-t-red-700\tborder-top-color: rgb(185 28 28);\n\t\n\nborder-t-red-800\tborder-top-color: rgb(153 27 27);\n\t\n\nborder-t-red-900\tborder-top-color: rgb(127 29 29);\n\t\n\nborder-t-red-950\tborder-top-color: rgb(69 10 10);\n\t\n\nborder-t-orange-50\tborder-top-color: rgb(255 247 237);\n\t\n\nborder-t-orange-100\tborder-top-color: rgb(255 237 213);\n\t\n\nborder-t-orange-200\tborder-top-color: rgb(254 215 170);\n\t\n\nborder-t-orange-300\tborder-top-color: rgb(253 186 116);\n\t\n\nborder-t-orange-400\tborder-top-color: rgb(251 146 60);\n\t\n\nborder-t-orange-500\tborder-top-color: rgb(249 115 22);\n\t\n\nborder-t-orange-600\tborder-top-color: rgb(234 88 12);\n\t\n\nborder-t-orange-700\tborder-top-color: rgb(194 65 12);\n\t\n\nborder-t-orange-800\tborder-top-color: rgb(154 52 18);\n\t\n\nborder-t-orange-900\tborder-top-color: rgb(124 45 18);\n\t\n\nborder-t-orange-950\tborder-top-color: rgb(67 20 7);\n\t\n\nborder-t-amber-50\tborder-top-color: rgb(255 251 235);\n\t\n\nborder-t-amber-100\tborder-top-color: rgb(254 243 199);\n\t\n\nborder-t-amber-200\tborder-top-color: rgb(253 230 138);\n\t\n\nborder-t-amber-300\tborder-top-color: rgb(252 211 77);\n\t\n\nborder-t-amber-400\tborder-top-color: rgb(251 191 36);\n\t\n\nborder-t-amber-500\tborder-top-color: rgb(245 158 11);\n\t\n\nborder-t-amber-600\tborder-top-color: rgb(217 119 6);\n\t\n\nborder-t-amber-700\tborder-top-color: rgb(180 83 9);\n\t\n\nborder-t-amber-800\tborder-top-color: rgb(146 64 14);\n\t\n\nborder-t-amber-900\tborder-top-color: rgb(120 53 15);\n\t\n\nborder-t-amber-950\tborder-top-color: rgb(69 26 3);\n\t\n\nborder-t-yellow-50\tborder-top-color: rgb(254 252 232);\n\t\n\nborder-t-yellow-100\tborder-top-color: rgb(254 249 195);\n\t\n\nborder-t-yellow-200\tborder-top-color: rgb(254 240 138);\n\t\n\nborder-t-yellow-300\tborder-top-color: rgb(253 224 71);\n\t\n\nborder-t-yellow-400\tborder-top-color: rgb(250 204 21);\n\t\n\nborder-t-yellow-500\tborder-top-color: rgb(234 179 8);\n\t\n\nborder-t-yellow-600\tborder-top-color: rgb(202 138 4);\n\t\n\nborder-t-yellow-700\tborder-top-color: rgb(161 98 7);\n\t\n\nborder-t-yellow-800\tborder-top-color: rgb(133 77 14);\n\t\n\nborder-t-yellow-900\tborder-top-color: rgb(113 63 18);\n\t\n\nborder-t-yellow-950\tborder-top-color: rgb(66 32 6);\n\t\n\nborder-t-lime-50\tborder-top-color: rgb(247 254 231);\n\t\n\nborder-t-lime-100\tborder-top-color: rgb(236 252 203);\n\t\n\nborder-t-lime-200\tborder-top-color: rgb(217 249 157);\n\t\n\nborder-t-lime-300\tborder-top-color: rgb(190 242 100);\n\t\n\nborder-t-lime-400\tborder-top-color: rgb(163 230 53);\n\t\n\nborder-t-lime-500\tborder-top-color: rgb(132 204 22);\n\t\n\nborder-t-lime-600\tborder-top-color: rgb(101 163 13);\n\t\n\nborder-t-lime-700\tborder-top-color: rgb(77 124 15);\n\t\n\nborder-t-lime-800\tborder-top-color: rgb(63 98 18);\n\t\n\nborder-t-lime-900\tborder-top-color: rgb(54 83 20);\n\t\n\nborder-t-lime-950\tborder-top-color: rgb(26 46 5);\n\t\n\nborder-t-green-50\tborder-top-color: rgb(240 253 244);\n\t\n\nborder-t-green-100\tborder-top-color: rgb(220 252 231);\n\t\n\nborder-t-green-200\tborder-top-color: rgb(187 247 208);\n\t\n\nborder-t-green-300\tborder-top-color: rgb(134 239 172);\n\t\n\nborder-t-green-400\tborder-top-color: rgb(74 222 128);\n\t\n\nborder-t-green-500\tborder-top-color: rgb(34 197 94);\n\t\n\nborder-t-green-600\tborder-top-color: rgb(22 163 74);\n\t\n\nborder-t-green-700\tborder-top-color: rgb(21 128 61);\n\t\n\nborder-t-green-800\tborder-top-color: rgb(22 101 52);\n\t\n\nborder-t-green-900\tborder-top-color: rgb(20 83 45);\n\t\n\nborder-t-green-950\tborder-top-color: rgb(5 46 22);\n\t\n\nborder-t-emerald-50\tborder-top-color: rgb(236 253 245);\n\t\n\nborder-t-emerald-100\tborder-top-color: rgb(209 250 229);\n\t\n\nborder-t-emerald-200\tborder-top-color: rgb(167 243 208);\n\t\n\nborder-t-emerald-300\tborder-top-color: rgb(110 231 183);\n\t\n\nborder-t-emerald-400\tborder-top-color: rgb(52 211 153);\n\t\n\nborder-t-emerald-500\tborder-top-color: rgb(16 185 129);\n\t\n\nborder-t-emerald-600\tborder-top-color: rgb(5 150 105);\n\t\n\nborder-t-emerald-700\tborder-top-color: rgb(4 120 87);\n\t\n\nborder-t-emerald-800\tborder-top-color: rgb(6 95 70);\n\t\n\nborder-t-emerald-900\tborder-top-color: rgb(6 78 59);\n\t\n\nborder-t-emerald-950\tborder-top-color: rgb(2 44 34);\n\t\n\nborder-t-teal-50\tborder-top-color: rgb(240 253 250);\n\t\n\nborder-t-teal-100\tborder-top-color: rgb(204 251 241);\n\t\n\nborder-t-teal-200\tborder-top-color: rgb(153 246 228);\n\t\n\nborder-t-teal-300\tborder-top-color: rgb(94 234 212);\n\t\n\nborder-t-teal-400\tborder-top-color: rgb(45 212 191);\n\t\n\nborder-t-teal-500\tborder-top-color: rgb(20 184 166);\n\t\n\nborder-t-teal-600\tborder-top-color: rgb(13 148 136);\n\t\n\nborder-t-teal-700\tborder-top-color: rgb(15 118 110);\n\t\n\nborder-t-teal-800\tborder-top-color: rgb(17 94 89);\n\t\n\nborder-t-teal-900\tborder-top-color: rgb(19 78 74);\n\t\n\nborder-t-teal-950\tborder-top-color: rgb(4 47 46);\n\t\n\nborder-t-cyan-50\tborder-top-color: rgb(236 254 255);\n\t\n\nborder-t-cyan-100\tborder-top-color: rgb(207 250 254);\n\t\n\nborder-t-cyan-200\tborder-top-color: rgb(165 243 252);\n\t\n\nborder-t-cyan-300\tborder-top-color: rgb(103 232 249);\n\t\n\nborder-t-cyan-400\tborder-top-color: rgb(34 211 238);\n\t\n\nborder-t-cyan-500\tborder-top-color: rgb(6 182 212);\n\t\n\nborder-t-cyan-600\tborder-top-color: rgb(8 145 178);\n\t\n\nborder-t-cyan-700\tborder-top-color: rgb(14 116 144);\n\t\n\nborder-t-cyan-800\tborder-top-color: rgb(21 94 117);\n\t\n\nborder-t-cyan-900\tborder-top-color: rgb(22 78 99);\n\t\n\nborder-t-cyan-950\tborder-top-color: rgb(8 51 68);\n\t\n\nborder-t-sky-50\tborder-top-color: rgb(240 249 255);\n\t\n\nborder-t-sky-100\tborder-top-color: rgb(224 242 254);\n\t\n\nborder-t-sky-200\tborder-top-color: rgb(186 230 253);\n\t\n\nborder-t-sky-300\tborder-top-color: rgb(125 211 252);\n\t\n\nborder-t-sky-400\tborder-top-color: rgb(56 189 248);\n\t\n\nborder-t-sky-500\tborder-top-color: rgb(14 165 233);\n\t\n\nborder-t-sky-600\tborder-top-color: rgb(2 132 199);\n\t\n\nborder-t-sky-700\tborder-top-color: rgb(3 105 161);\n\t\n\nborder-t-sky-800\tborder-top-color: rgb(7 89 133);\n\t\n\nborder-t-sky-900\tborder-top-color: rgb(12 74 110);\n\t\n\nborder-t-sky-950\tborder-top-color: rgb(8 47 73);\n\t\n\nborder-t-blue-50\tborder-top-color: rgb(239 246 255);\n\t\n\nborder-t-blue-100\tborder-top-color: rgb(219 234 254);\n\t\n\nborder-t-blue-200\tborder-top-color: rgb(191 219 254);\n\t\n\nborder-t-blue-300\tborder-top-color: rgb(147 197 253);\n\t\n\nborder-t-blue-400\tborder-top-color: rgb(96 165 250);\n\t\n\nborder-t-blue-500\tborder-top-color: rgb(59 130 246);\n\t\n\nborder-t-blue-600\tborder-top-color: rgb(37 99 235);\n\t\n\nborder-t-blue-700\tborder-top-color: rgb(29 78 216);\n\t\n\nborder-t-blue-800\tborder-top-color: rgb(30 64 175);\n\t\n\nborder-t-blue-900\tborder-top-color: rgb(30 58 138);\n\t\n\nborder-t-blue-950\tborder-top-color: rgb(23 37 84);\n\t\n\nborder-t-indigo-50\tborder-top-color: rgb(238 242 255);\n\t\n\nborder-t-indigo-100\tborder-top-color: rgb(224 231 255);\n\t\n\nborder-t-indigo-200\tborder-top-color: rgb(199 210 254);\n\t\n\nborder-t-indigo-300\tborder-top-color: rgb(165 180 252);\n\t\n\nborder-t-indigo-400\tborder-top-color: rgb(129 140 248);\n\t\n\nborder-t-indigo-500\tborder-top-color: rgb(99 102 241);\n\t\n\nborder-t-indigo-600\tborder-top-color: rgb(79 70 229);\n\t\n\nborder-t-indigo-700\tborder-top-color: rgb(67 56 202);\n\t\n\nborder-t-indigo-800\tborder-top-color: rgb(55 48 163);\n\t\n\nborder-t-indigo-900\tborder-top-color: rgb(49 46 129);\n\t\n\nborder-t-indigo-950\tborder-top-color: rgb(30 27 75);\n\t\n\nborder-t-violet-50\tborder-top-color: rgb(245 243 255);\n\t\n\nborder-t-violet-100\tborder-top-color: rgb(237 233 254);\n\t\n\nborder-t-violet-200\tborder-top-color: rgb(221 214 254);\n\t\n\nborder-t-violet-300\tborder-top-color: rgb(196 181 253);\n\t\n\nborder-t-violet-400\tborder-top-color: rgb(167 139 250);\n\t\n\nborder-t-violet-500\tborder-top-color: rgb(139 92 246);\n\t\n\nborder-t-violet-600\tborder-top-color: rgb(124 58 237);\n\t\n\nborder-t-violet-700\tborder-top-color: rgb(109 40 217);\n\t\n\nborder-t-violet-800\tborder-top-color: rgb(91 33 182);\n\t\n\nborder-t-violet-900\tborder-top-color: rgb(76 29 149);\n\t\n\nborder-t-violet-950\tborder-top-color: rgb(46 16 101);\n\t\n\nborder-t-purple-50\tborder-top-color: rgb(250 245 255);\n\t\n\nborder-t-purple-100\tborder-top-color: rgb(243 232 255);\n\t\n\nborder-t-purple-200\tborder-top-color: rgb(233 213 255);\n\t\n\nborder-t-purple-300\tborder-top-color: rgb(216 180 254);\n\t\n\nborder-t-purple-400\tborder-top-color: rgb(192 132 252);\n\t\n\nborder-t-purple-500\tborder-top-color: rgb(168 85 247);\n\t\n\nborder-t-purple-600\tborder-top-color: rgb(147 51 234);\n\t\n\nborder-t-purple-700\tborder-top-color: rgb(126 34 206);\n\t\n\nborder-t-purple-800\tborder-top-color: rgb(107 33 168);\n\t\n\nborder-t-purple-900\tborder-top-color: rgb(88 28 135);\n\t\n\nborder-t-purple-950\tborder-top-color: rgb(59 7 100);\n\t\n\nborder-t-fuchsia-50\tborder-top-color: rgb(253 244 255);\n\t\n\nborder-t-fuchsia-100\tborder-top-color: rgb(250 232 255);\n\t\n\nborder-t-fuchsia-200\tborder-top-color: rgb(245 208 254);\n\t\n\nborder-t-fuchsia-300\tborder-top-color: rgb(240 171 252);\n\t\n\nborder-t-fuchsia-400\tborder-top-color: rgb(232 121 249);\n\t\n\nborder-t-fuchsia-500\tborder-top-color: rgb(217 70 239);\n\t\n\nborder-t-fuchsia-600\tborder-top-color: rgb(192 38 211);\n\t\n\nborder-t-fuchsia-700\tborder-top-color: rgb(162 28 175);\n\t\n\nborder-t-fuchsia-800\tborder-top-color: rgb(134 25 143);\n\t\n\nborder-t-fuchsia-900\tborder-top-color: rgb(112 26 117);\n\t\n\nborder-t-fuchsia-950\tborder-top-color: rgb(74 4 78);\n\t\n\nborder-t-pink-50\tborder-top-color: rgb(253 242 248);\n\t\n\nborder-t-pink-100\tborder-top-color: rgb(252 231 243);\n\t\n\nborder-t-pink-200\tborder-top-color: rgb(251 207 232);\n\t\n\nborder-t-pink-300\tborder-top-color: rgb(249 168 212);\n\t\n\nborder-t-pink-400\tborder-top-color: rgb(244 114 182);\n\t\n\nborder-t-pink-500\tborder-top-color: rgb(236 72 153);\n\t\n\nborder-t-pink-600\tborder-top-color: rgb(219 39 119);\n\t\n\nborder-t-pink-700\tborder-top-color: rgb(190 24 93);\n\t\n\nborder-t-pink-800\tborder-top-color: rgb(157 23 77);\n\t\n\nborder-t-pink-900\tborder-top-color: rgb(131 24 67);\n\t\n\nborder-t-pink-950\tborder-top-color: rgb(80 7 36);\n\t\n\nborder-t-rose-50\tborder-top-color: rgb(255 241 242);\n\t\n\nborder-t-rose-100\tborder-top-color: rgb(255 228 230);\n\t\n\nborder-t-rose-200\tborder-top-color: rgb(254 205 211);\n\t\n\nborder-t-rose-300\tborder-top-color: rgb(253 164 175);\n\t\n\nborder-t-rose-400\tborder-top-color: rgb(251 113 133);\n\t\n\nborder-t-rose-500\tborder-top-color: rgb(244 63 94);\n\t\n\nborder-t-rose-600\tborder-top-color: rgb(225 29 72);\n\t\n\nborder-t-rose-700\tborder-top-color: rgb(190 18 60);\n\t\n\nborder-t-rose-800\tborder-top-color: rgb(159 18 57);\n\t\n\nborder-t-rose-900\tborder-top-color: rgb(136 19 55);\n\t\n\nborder-t-rose-950\tborder-top-color: rgb(76 5 25);\n\t\n\nborder-r-inherit\tborder-right-color: inherit;\n\t\n\nborder-r-current\tborder-right-color: currentColor;\n\t\n\nborder-r-transparent\tborder-right-color: transparent;\n\t\n\nborder-r-black\tborder-right-color: rgb(0 0 0);\n\t\n\nborder-r-white\tborder-right-color: rgb(255 255 255);\n\t\n\nborder-r-slate-50\tborder-right-color: rgb(248 250 252);\n\t\n\nborder-r-slate-100\tborder-right-color: rgb(241 245 249);\n\t\n\nborder-r-slate-200\tborder-right-color: rgb(226 232 240);\n\t\n\nborder-r-slate-300\tborder-right-color: rgb(203 213 225);\n\t\n\nborder-r-slate-400\tborder-right-color: rgb(148 163 184);\n\t\n\nborder-r-slate-500\tborder-right-color: rgb(100 116 139);\n\t\n\nborder-r-slate-600\tborder-right-color: rgb(71 85 105);\n\t\n\nborder-r-slate-700\tborder-right-color: rgb(51 65 85);\n\t\n\nborder-r-slate-800\tborder-right-color: rgb(30 41 59);\n\t\n\nborder-r-slate-900\tborder-right-color: rgb(15 23 42);\n\t\n\nborder-r-slate-950\tborder-right-color: rgb(2 6 23);\n\t\n\nborder-r-gray-50\tborder-right-color: rgb(249 250 251);\n\t\n\nborder-r-gray-100\tborder-right-color: rgb(243 244 246);\n\t\n\nborder-r-gray-200\tborder-right-color: rgb(229 231 235);\n\t\n\nborder-r-gray-300\tborder-right-color: rgb(209 213 219);\n\t\n\nborder-r-gray-400\tborder-right-color: rgb(156 163 175);\n\t\n\nborder-r-gray-500\tborder-right-color: rgb(107 114 128);\n\t\n\nborder-r-gray-600\tborder-right-color: rgb(75 85 99);\n\t\n\nborder-r-gray-700\tborder-right-color: rgb(55 65 81);\n\t\n\nborder-r-gray-800\tborder-right-color: rgb(31 41 55);\n\t\n\nborder-r-gray-900\tborder-right-color: rgb(17 24 39);\n\t\n\nborder-r-gray-950\tborder-right-color: rgb(3 7 18);\n\t\n\nborder-r-zinc-50\tborder-right-color: rgb(250 250 250);\n\t\n\nborder-r-zinc-100\tborder-right-color: rgb(244 244 245);\n\t\n\nborder-r-zinc-200\tborder-right-color: rgb(228 228 231);\n\t\n\nborder-r-zinc-300\tborder-right-color: rgb(212 212 216);\n\t\n\nborder-r-zinc-400\tborder-right-color: rgb(161 161 170);\n\t\n\nborder-r-zinc-500\tborder-right-color: rgb(113 113 122);\n\t\n\nborder-r-zinc-600\tborder-right-color: rgb(82 82 91);\n\t\n\nborder-r-zinc-700\tborder-right-color: rgb(63 63 70);\n\t\n\nborder-r-zinc-800\tborder-right-color: rgb(39 39 42);\n\t\n\nborder-r-zinc-900\tborder-right-color: rgb(24 24 27);\n\t\n\nborder-r-zinc-950\tborder-right-color: rgb(9 9 11);\n\t\n\nborder-r-neutral-50\tborder-right-color: rgb(250 250 250);\n\t\n\nborder-r-neutral-100\tborder-right-color: rgb(245 245 245);\n\t\n\nborder-r-neutral-200\tborder-right-color: rgb(229 229 229);\n\t\n\nborder-r-neutral-300\tborder-right-color: rgb(212 212 212);\n\t\n\nborder-r-neutral-400\tborder-right-color: rgb(163 163 163);\n\t\n\nborder-r-neutral-500\tborder-right-color: rgb(115 115 115);\n\t\n\nborder-r-neutral-600\tborder-right-color: rgb(82 82 82);\n\t\n\nborder-r-neutral-700\tborder-right-color: rgb(64 64 64);\n\t\n\nborder-r-neutral-800\tborder-right-color: rgb(38 38 38);\n\t\n\nborder-r-neutral-900\tborder-right-color: rgb(23 23 23);\n\t\n\nborder-r-neutral-950\tborder-right-color: rgb(10 10 10);\n\t\n\nborder-r-stone-50\tborder-right-color: rgb(250 250 249);\n\t\n\nborder-r-stone-100\tborder-right-color: rgb(245 245 244);\n\t\n\nborder-r-stone-200\tborder-right-color: rgb(231 229 228);\n\t\n\nborder-r-stone-300\tborder-right-color: rgb(214 211 209);\n\t\n\nborder-r-stone-400\tborder-right-color: rgb(168 162 158);\n\t\n\nborder-r-stone-500\tborder-right-color: rgb(120 113 108);\n\t\n\nborder-r-stone-600\tborder-right-color: rgb(87 83 78);\n\t\n\nborder-r-stone-700\tborder-right-color: rgb(68 64 60);\n\t\n\nborder-r-stone-800\tborder-right-color: rgb(41 37 36);\n\t\n\nborder-r-stone-900\tborder-right-color: rgb(28 25 23);\n\t\n\nborder-r-stone-950\tborder-right-color: rgb(12 10 9);\n\t\n\nborder-r-red-50\tborder-right-color: rgb(254 242 242);\n\t\n\nborder-r-red-100\tborder-right-color: rgb(254 226 226);\n\t\n\nborder-r-red-200\tborder-right-color: rgb(254 202 202);\n\t\n\nborder-r-red-300\tborder-right-color: rgb(252 165 165);\n\t\n\nborder-r-red-400\tborder-right-color: rgb(248 113 113);\n\t\n\nborder-r-red-500\tborder-right-color: rgb(239 68 68);\n\t\n\nborder-r-red-600\tborder-right-color: rgb(220 38 38);\n\t\n\nborder-r-red-700\tborder-right-color: rgb(185 28 28);\n\t\n\nborder-r-red-800\tborder-right-color: rgb(153 27 27);\n\t\n\nborder-r-red-900\tborder-right-color: rgb(127 29 29);\n\t\n\nborder-r-red-950\tborder-right-color: rgb(69 10 10);\n\t\n\nborder-r-orange-50\tborder-right-color: rgb(255 247 237);\n\t\n\nborder-r-orange-100\tborder-right-color: rgb(255 237 213);\n\t\n\nborder-r-orange-200\tborder-right-color: rgb(254 215 170);\n\t\n\nborder-r-orange-300\tborder-right-color: rgb(253 186 116);\n\t\n\nborder-r-orange-400\tborder-right-color: rgb(251 146 60);\n\t\n\nborder-r-orange-500\tborder-right-color: rgb(249 115 22);\n\t\n\nborder-r-orange-600\tborder-right-color: rgb(234 88 12);\n\t\n\nborder-r-orange-700\tborder-right-color: rgb(194 65 12);\n\t\n\nborder-r-orange-800\tborder-right-color: rgb(154 52 18);\n\t\n\nborder-r-orange-900\tborder-right-color: rgb(124 45 18);\n\t\n\nborder-r-orange-950\tborder-right-color: rgb(67 20 7);\n\t\n\nborder-r-amber-50\tborder-right-color: rgb(255 251 235);\n\t\n\nborder-r-amber-100\tborder-right-color: rgb(254 243 199);\n\t\n\nborder-r-amber-200\tborder-right-color: rgb(253 230 138);\n\t\n\nborder-r-amber-300\tborder-right-color: rgb(252 211 77);\n\t\n\nborder-r-amber-400\tborder-right-color: rgb(251 191 36);\n\t\n\nborder-r-amber-500\tborder-right-color: rgb(245 158 11);\n\t\n\nborder-r-amber-600\tborder-right-color: rgb(217 119 6);\n\t\n\nborder-r-amber-700\tborder-right-color: rgb(180 83 9);\n\t\n\nborder-r-amber-800\tborder-right-color: rgb(146 64 14);\n\t\n\nborder-r-amber-900\tborder-right-color: rgb(120 53 15);\n\t\n\nborder-r-amber-950\tborder-right-color: rgb(69 26 3);\n\t\n\nborder-r-yellow-50\tborder-right-color: rgb(254 252 232);\n\t\n\nborder-r-yellow-100\tborder-right-color: rgb(254 249 195);\n\t\n\nborder-r-yellow-200\tborder-right-color: rgb(254 240 138);\n\t\n\nborder-r-yellow-300\tborder-right-color: rgb(253 224 71);\n\t\n\nborder-r-yellow-400\tborder-right-color: rgb(250 204 21);\n\t\n\nborder-r-yellow-500\tborder-right-color: rgb(234 179 8);\n\t\n\nborder-r-yellow-600\tborder-right-color: rgb(202 138 4);\n\t\n\nborder-r-yellow-700\tborder-right-color: rgb(161 98 7);\n\t\n\nborder-r-yellow-800\tborder-right-color: rgb(133 77 14);\n\t\n\nborder-r-yellow-900\tborder-right-color: rgb(113 63 18);\n\t\n\nborder-r-yellow-950\tborder-right-color: rgb(66 32 6);\n\t\n\nborder-r-lime-50\tborder-right-color: rgb(247 254 231);\n\t\n\nborder-r-lime-100\tborder-right-color: rgb(236 252 203);\n\t\n\nborder-r-lime-200\tborder-right-color: rgb(217 249 157);\n\t\n\nborder-r-lime-300\tborder-right-color: rgb(190 242 100);\n\t\n\nborder-r-lime-400\tborder-right-color: rgb(163 230 53);\n\t\n\nborder-r-lime-500\tborder-right-color: rgb(132 204 22);\n\t\n\nborder-r-lime-600\tborder-right-color: rgb(101 163 13);\n\t\n\nborder-r-lime-700\tborder-right-color: rgb(77 124 15);\n\t\n\nborder-r-lime-800\tborder-right-color: rgb(63 98 18);\n\t\n\nborder-r-lime-900\tborder-right-color: rgb(54 83 20);\n\t\n\nborder-r-lime-950\tborder-right-color: rgb(26 46 5);\n\t\n\nborder-r-green-50\tborder-right-color: rgb(240 253 244);\n\t\n\nborder-r-green-100\tborder-right-color: rgb(220 252 231);\n\t\n\nborder-r-green-200\tborder-right-color: rgb(187 247 208);\n\t\n\nborder-r-green-300\tborder-right-color: rgb(134 239 172);\n\t\n\nborder-r-green-400\tborder-right-color: rgb(74 222 128);\n\t\n\nborder-r-green-500\tborder-right-color: rgb(34 197 94);\n\t\n\nborder-r-green-600\tborder-right-color: rgb(22 163 74);\n\t\n\nborder-r-green-700\tborder-right-color: rgb(21 128 61);\n\t\n\nborder-r-green-800\tborder-right-color: rgb(22 101 52);\n\t\n\nborder-r-green-900\tborder-right-color: rgb(20 83 45);\n\t\n\nborder-r-green-950\tborder-right-color: rgb(5 46 22);\n\t\n\nborder-r-emerald-50\tborder-right-color: rgb(236 253 245);\n\t\n\nborder-r-emerald-100\tborder-right-color: rgb(209 250 229);\n\t\n\nborder-r-emerald-200\tborder-right-color: rgb(167 243 208);\n\t\n\nborder-r-emerald-300\tborder-right-color: rgb(110 231 183);\n\t\n\nborder-r-emerald-400\tborder-right-color: rgb(52 211 153);\n\t\n\nborder-r-emerald-500\tborder-right-color: rgb(16 185 129);\n\t\n\nborder-r-emerald-600\tborder-right-color: rgb(5 150 105);\n\t\n\nborder-r-emerald-700\tborder-right-color: rgb(4 120 87);\n\t\n\nborder-r-emerald-800\tborder-right-color: rgb(6 95 70);\n\t\n\nborder-r-emerald-900\tborder-right-color: rgb(6 78 59);\n\t\n\nborder-r-emerald-950\tborder-right-color: rgb(2 44 34);\n\t\n\nborder-r-teal-50\tborder-right-color: rgb(240 253 250);\n\t\n\nborder-r-teal-100\tborder-right-color: rgb(204 251 241);\n\t\n\nborder-r-teal-200\tborder-right-color: rgb(153 246 228);\n\t\n\nborder-r-teal-300\tborder-right-color: rgb(94 234 212);\n\t\n\nborder-r-teal-400\tborder-right-color: rgb(45 212 191);\n\t\n\nborder-r-teal-500\tborder-right-color: rgb(20 184 166);\n\t\n\nborder-r-teal-600\tborder-right-color: rgb(13 148 136);\n\t\n\nborder-r-teal-700\tborder-right-color: rgb(15 118 110);\n\t\n\nborder-r-teal-800\tborder-right-color: rgb(17 94 89);\n\t\n\nborder-r-teal-900\tborder-right-color: rgb(19 78 74);\n\t\n\nborder-r-teal-950\tborder-right-color: rgb(4 47 46);\n\t\n\nborder-r-cyan-50\tborder-right-color: rgb(236 254 255);\n\t\n\nborder-r-cyan-100\tborder-right-color: rgb(207 250 254);\n\t\n\nborder-r-cyan-200\tborder-right-color: rgb(165 243 252);\n\t\n\nborder-r-cyan-300\tborder-right-color: rgb(103 232 249);\n\t\n\nborder-r-cyan-400\tborder-right-color: rgb(34 211 238);\n\t\n\nborder-r-cyan-500\tborder-right-color: rgb(6 182 212);\n\t\n\nborder-r-cyan-600\tborder-right-color: rgb(8 145 178);\n\t\n\nborder-r-cyan-700\tborder-right-color: rgb(14 116 144);\n\t\n\nborder-r-cyan-800\tborder-right-color: rgb(21 94 117);\n\t\n\nborder-r-cyan-900\tborder-right-color: rgb(22 78 99);\n\t\n\nborder-r-cyan-950\tborder-right-color: rgb(8 51 68);\n\t\n\nborder-r-sky-50\tborder-right-color: rgb(240 249 255);\n\t\n\nborder-r-sky-100\tborder-right-color: rgb(224 242 254);\n\t\n\nborder-r-sky-200\tborder-right-color: rgb(186 230 253);\n\t\n\nborder-r-sky-300\tborder-right-color: rgb(125 211 252);\n\t\n\nborder-r-sky-400\tborder-right-color: rgb(56 189 248);\n\t\n\nborder-r-sky-500\tborder-right-color: rgb(14 165 233);\n\t\n\nborder-r-sky-600\tborder-right-color: rgb(2 132 199);\n\t\n\nborder-r-sky-700\tborder-right-color: rgb(3 105 161);\n\t\n\nborder-r-sky-800\tborder-right-color: rgb(7 89 133);\n\t\n\nborder-r-sky-900\tborder-right-color: rgb(12 74 110);\n\t\n\nborder-r-sky-950\tborder-right-color: rgb(8 47 73);\n\t\n\nborder-r-blue-50\tborder-right-color: rgb(239 246 255);\n\t\n\nborder-r-blue-100\tborder-right-color: rgb(219 234 254);\n\t\n\nborder-r-blue-200\tborder-right-color: rgb(191 219 254);\n\t\n\nborder-r-blue-300\tborder-right-color: rgb(147 197 253);\n\t\n\nborder-r-blue-400\tborder-right-color: rgb(96 165 250);\n\t\n\nborder-r-blue-500\tborder-right-color: rgb(59 130 246);\n\t\n\nborder-r-blue-600\tborder-right-color: rgb(37 99 235);\n\t\n\nborder-r-blue-700\tborder-right-color: rgb(29 78 216);\n\t\n\nborder-r-blue-800\tborder-right-color: rgb(30 64 175);\n\t\n\nborder-r-blue-900\tborder-right-color: rgb(30 58 138);\n\t\n\nborder-r-blue-950\tborder-right-color: rgb(23 37 84);\n\t\n\nborder-r-indigo-50\tborder-right-color: rgb(238 242 255);\n\t\n\nborder-r-indigo-100\tborder-right-color: rgb(224 231 255);\n\t\n\nborder-r-indigo-200\tborder-right-color: rgb(199 210 254);\n\t\n\nborder-r-indigo-300\tborder-right-color: rgb(165 180 252);\n\t\n\nborder-r-indigo-400\tborder-right-color: rgb(129 140 248);\n\t\n\nborder-r-indigo-500\tborder-right-color: rgb(99 102 241);\n\t\n\nborder-r-indigo-600\tborder-right-color: rgb(79 70 229);\n\t\n\nborder-r-indigo-700\tborder-right-color: rgb(67 56 202);\n\t\n\nborder-r-indigo-800\tborder-right-color: rgb(55 48 163);\n\t\n\nborder-r-indigo-900\tborder-right-color: rgb(49 46 129);\n\t\n\nborder-r-indigo-950\tborder-right-color: rgb(30 27 75);\n\t\n\nborder-r-violet-50\tborder-right-color: rgb(245 243 255);\n\t\n\nborder-r-violet-100\tborder-right-color: rgb(237 233 254);\n\t\n\nborder-r-violet-200\tborder-right-color: rgb(221 214 254);\n\t\n\nborder-r-violet-300\tborder-right-color: rgb(196 181 253);\n\t\n\nborder-r-violet-400\tborder-right-color: rgb(167 139 250);\n\t\n\nborder-r-violet-500\tborder-right-color: rgb(139 92 246);\n\t\n\nborder-r-violet-600\tborder-right-color: rgb(124 58 237);\n\t\n\nborder-r-violet-700\tborder-right-color: rgb(109 40 217);\n\t\n\nborder-r-violet-800\tborder-right-color: rgb(91 33 182);\n\t\n\nborder-r-violet-900\tborder-right-color: rgb(76 29 149);\n\t\n\nborder-r-violet-950\tborder-right-color: rgb(46 16 101);\n\t\n\nborder-r-purple-50\tborder-right-color: rgb(250 245 255);\n\t\n\nborder-r-purple-100\tborder-right-color: rgb(243 232 255);\n\t\n\nborder-r-purple-200\tborder-right-color: rgb(233 213 255);\n\t\n\nborder-r-purple-300\tborder-right-color: rgb(216 180 254);\n\t\n\nborder-r-purple-400\tborder-right-color: rgb(192 132 252);\n\t\n\nborder-r-purple-500\tborder-right-color: rgb(168 85 247);\n\t\n\nborder-r-purple-600\tborder-right-color: rgb(147 51 234);\n\t\n\nborder-r-purple-700\tborder-right-color: rgb(126 34 206);\n\t\n\nborder-r-purple-800\tborder-right-color: rgb(107 33 168);\n\t\n\nborder-r-purple-900\tborder-right-color: rgb(88 28 135);\n\t\n\nborder-r-purple-950\tborder-right-color: rgb(59 7 100);\n\t\n\nborder-r-fuchsia-50\tborder-right-color: rgb(253 244 255);\n\t\n\nborder-r-fuchsia-100\tborder-right-color: rgb(250 232 255);\n\t\n\nborder-r-fuchsia-200\tborder-right-color: rgb(245 208 254);\n\t\n\nborder-r-fuchsia-300\tborder-right-color: rgb(240 171 252);\n\t\n\nborder-r-fuchsia-400\tborder-right-color: rgb(232 121 249);\n\t\n\nborder-r-fuchsia-500\tborder-right-color: rgb(217 70 239);\n\t\n\nborder-r-fuchsia-600\tborder-right-color: rgb(192 38 211);\n\t\n\nborder-r-fuchsia-700\tborder-right-color: rgb(162 28 175);\n\t\n\nborder-r-fuchsia-800\tborder-right-color: rgb(134 25 143);\n\t\n\nborder-r-fuchsia-900\tborder-right-color: rgb(112 26 117);\n\t\n\nborder-r-fuchsia-950\tborder-right-color: rgb(74 4 78);\n\t\n\nborder-r-pink-50\tborder-right-color: rgb(253 242 248);\n\t\n\nborder-r-pink-100\tborder-right-color: rgb(252 231 243);\n\t\n\nborder-r-pink-200\tborder-right-color: rgb(251 207 232);\n\t\n\nborder-r-pink-300\tborder-right-color: rgb(249 168 212);\n\t\n\nborder-r-pink-400\tborder-right-color: rgb(244 114 182);\n\t\n\nborder-r-pink-500\tborder-right-color: rgb(236 72 153);\n\t\n\nborder-r-pink-600\tborder-right-color: rgb(219 39 119);\n\t\n\nborder-r-pink-700\tborder-right-color: rgb(190 24 93);\n\t\n\nborder-r-pink-800\tborder-right-color: rgb(157 23 77);\n\t\n\nborder-r-pink-900\tborder-right-color: rgb(131 24 67);\n\t\n\nborder-r-pink-950\tborder-right-color: rgb(80 7 36);\n\t\n\nborder-r-rose-50\tborder-right-color: rgb(255 241 242);\n\t\n\nborder-r-rose-100\tborder-right-color: rgb(255 228 230);\n\t\n\nborder-r-rose-200\tborder-right-color: rgb(254 205 211);\n\t\n\nborder-r-rose-300\tborder-right-color: rgb(253 164 175);\n\t\n\nborder-r-rose-400\tborder-right-color: rgb(251 113 133);\n\t\n\nborder-r-rose-500\tborder-right-color: rgb(244 63 94);\n\t\n\nborder-r-rose-600\tborder-right-color: rgb(225 29 72);\n\t\n\nborder-r-rose-700\tborder-right-color: rgb(190 18 60);\n\t\n\nborder-r-rose-800\tborder-right-color: rgb(159 18 57);\n\t\n\nborder-r-rose-900\tborder-right-color: rgb(136 19 55);\n\t\n\nborder-r-rose-950\tborder-right-color: rgb(76 5 25);\n\t\n\nborder-b-inherit\tborder-bottom-color: inherit;\n\t\n\nborder-b-current\tborder-bottom-color: currentColor;\n\t\n\nborder-b-transparent\tborder-bottom-color: transparent;\n\t\n\nborder-b-black\tborder-bottom-color: rgb(0 0 0);\n\t\n\nborder-b-white\tborder-bottom-color: rgb(255 255 255);\n\t\n\nborder-b-slate-50\tborder-bottom-color: rgb(248 250 252);\n\t\n\nborder-b-slate-100\tborder-bottom-color: rgb(241 245 249);\n\t\n\nborder-b-slate-200\tborder-bottom-color: rgb(226 232 240);\n\t\n\nborder-b-slate-300\tborder-bottom-color: rgb(203 213 225);\n\t\n\nborder-b-slate-400\tborder-bottom-color: rgb(148 163 184);\n\t\n\nborder-b-slate-500\tborder-bottom-color: rgb(100 116 139);\n\t\n\nborder-b-slate-600\tborder-bottom-color: rgb(71 85 105);\n\t\n\nborder-b-slate-700\tborder-bottom-color: rgb(51 65 85);\n\t\n\nborder-b-slate-800\tborder-bottom-color: rgb(30 41 59);\n\t\n\nborder-b-slate-900\tborder-bottom-color: rgb(15 23 42);\n\t\n\nborder-b-slate-950\tborder-bottom-color: rgb(2 6 23);\n\t\n\nborder-b-gray-50\tborder-bottom-color: rgb(249 250 251);\n\t\n\nborder-b-gray-100\tborder-bottom-color: rgb(243 244 246);\n\t\n\nborder-b-gray-200\tborder-bottom-color: rgb(229 231 235);\n\t\n\nborder-b-gray-300\tborder-bottom-color: rgb(209 213 219);\n\t\n\nborder-b-gray-400\tborder-bottom-color: rgb(156 163 175);\n\t\n\nborder-b-gray-500\tborder-bottom-color: rgb(107 114 128);\n\t\n\nborder-b-gray-600\tborder-bottom-color: rgb(75 85 99);\n\t\n\nborder-b-gray-700\tborder-bottom-color: rgb(55 65 81);\n\t\n\nborder-b-gray-800\tborder-bottom-color: rgb(31 41 55);\n\t\n\nborder-b-gray-900\tborder-bottom-color: rgb(17 24 39);\n\t\n\nborder-b-gray-950\tborder-bottom-color: rgb(3 7 18);\n\t\n\nborder-b-zinc-50\tborder-bottom-color: rgb(250 250 250);\n\t\n\nborder-b-zinc-100\tborder-bottom-color: rgb(244 244 245);\n\t\n\nborder-b-zinc-200\tborder-bottom-color: rgb(228 228 231);\n\t\n\nborder-b-zinc-300\tborder-bottom-color: rgb(212 212 216);\n\t\n\nborder-b-zinc-400\tborder-bottom-color: rgb(161 161 170);\n\t\n\nborder-b-zinc-500\tborder-bottom-color: rgb(113 113 122);\n\t\n\nborder-b-zinc-600\tborder-bottom-color: rgb(82 82 91);\n\t\n\nborder-b-zinc-700\tborder-bottom-color: rgb(63 63 70);\n\t\n\nborder-b-zinc-800\tborder-bottom-color: rgb(39 39 42);\n\t\n\nborder-b-zinc-900\tborder-bottom-color: rgb(24 24 27);\n\t\n\nborder-b-zinc-950\tborder-bottom-color: rgb(9 9 11);\n\t\n\nborder-b-neutral-50\tborder-bottom-color: rgb(250 250 250);\n\t\n\nborder-b-neutral-100\tborder-bottom-color: rgb(245 245 245);\n\t\n\nborder-b-neutral-200\tborder-bottom-color: rgb(229 229 229);\n\t\n\nborder-b-neutral-300\tborder-bottom-color: rgb(212 212 212);\n\t\n\nborder-b-neutral-400\tborder-bottom-color: rgb(163 163 163);\n\t\n\nborder-b-neutral-500\tborder-bottom-color: rgb(115 115 115);\n\t\n\nborder-b-neutral-600\tborder-bottom-color: rgb(82 82 82);\n\t\n\nborder-b-neutral-700\tborder-bottom-color: rgb(64 64 64);\n\t\n\nborder-b-neutral-800\tborder-bottom-color: rgb(38 38 38);\n\t\n\nborder-b-neutral-900\tborder-bottom-color: rgb(23 23 23);\n\t\n\nborder-b-neutral-950\tborder-bottom-color: rgb(10 10 10);\n\t\n\nborder-b-stone-50\tborder-bottom-color: rgb(250 250 249);\n\t\n\nborder-b-stone-100\tborder-bottom-color: rgb(245 245 244);\n\t\n\nborder-b-stone-200\tborder-bottom-color: rgb(231 229 228);\n\t\n\nborder-b-stone-300\tborder-bottom-color: rgb(214 211 209);\n\t\n\nborder-b-stone-400\tborder-bottom-color: rgb(168 162 158);\n\t\n\nborder-b-stone-500\tborder-bottom-color: rgb(120 113 108);\n\t\n\nborder-b-stone-600\tborder-bottom-color: rgb(87 83 78);\n\t\n\nborder-b-stone-700\tborder-bottom-color: rgb(68 64 60);\n\t\n\nborder-b-stone-800\tborder-bottom-color: rgb(41 37 36);\n\t\n\nborder-b-stone-900\tborder-bottom-color: rgb(28 25 23);\n\t\n\nborder-b-stone-950\tborder-bottom-color: rgb(12 10 9);\n\t\n\nborder-b-red-50\tborder-bottom-color: rgb(254 242 242);\n\t\n\nborder-b-red-100\tborder-bottom-color: rgb(254 226 226);\n\t\n\nborder-b-red-200\tborder-bottom-color: rgb(254 202 202);\n\t\n\nborder-b-red-300\tborder-bottom-color: rgb(252 165 165);\n\t\n\nborder-b-red-400\tborder-bottom-color: rgb(248 113 113);\n\t\n\nborder-b-red-500\tborder-bottom-color: rgb(239 68 68);\n\t\n\nborder-b-red-600\tborder-bottom-color: rgb(220 38 38);\n\t\n\nborder-b-red-700\tborder-bottom-color: rgb(185 28 28);\n\t\n\nborder-b-red-800\tborder-bottom-color: rgb(153 27 27);\n\t\n\nborder-b-red-900\tborder-bottom-color: rgb(127 29 29);\n\t\n\nborder-b-red-950\tborder-bottom-color: rgb(69 10 10);\n\t\n\nborder-b-orange-50\tborder-bottom-color: rgb(255 247 237);\n\t\n\nborder-b-orange-100\tborder-bottom-color: rgb(255 237 213);\n\t\n\nborder-b-orange-200\tborder-bottom-color: rgb(254 215 170);\n\t\n\nborder-b-orange-300\tborder-bottom-color: rgb(253 186 116);\n\t\n\nborder-b-orange-400\tborder-bottom-color: rgb(251 146 60);\n\t\n\nborder-b-orange-500\tborder-bottom-color: rgb(249 115 22);\n\t\n\nborder-b-orange-600\tborder-bottom-color: rgb(234 88 12);\n\t\n\nborder-b-orange-700\tborder-bottom-color: rgb(194 65 12);\n\t\n\nborder-b-orange-800\tborder-bottom-color: rgb(154 52 18);\n\t\n\nborder-b-orange-900\tborder-bottom-color: rgb(124 45 18);\n\t\n\nborder-b-orange-950\tborder-bottom-color: rgb(67 20 7);\n\t\n\nborder-b-amber-50\tborder-bottom-color: rgb(255 251 235);\n\t\n\nborder-b-amber-100\tborder-bottom-color: rgb(254 243 199);\n\t\n\nborder-b-amber-200\tborder-bottom-color: rgb(253 230 138);\n\t\n\nborder-b-amber-300\tborder-bottom-color: rgb(252 211 77);\n\t\n\nborder-b-amber-400\tborder-bottom-color: rgb(251 191 36);\n\t\n\nborder-b-amber-500\tborder-bottom-color: rgb(245 158 11);\n\t\n\nborder-b-amber-600\tborder-bottom-color: rgb(217 119 6);\n\t\n\nborder-b-amber-700\tborder-bottom-color: rgb(180 83 9);\n\t\n\nborder-b-amber-800\tborder-bottom-color: rgb(146 64 14);\n\t\n\nborder-b-amber-900\tborder-bottom-color: rgb(120 53 15);\n\t\n\nborder-b-amber-950\tborder-bottom-color: rgb(69 26 3);\n\t\n\nborder-b-yellow-50\tborder-bottom-color: rgb(254 252 232);\n\t\n\nborder-b-yellow-100\tborder-bottom-color: rgb(254 249 195);\n\t\n\nborder-b-yellow-200\tborder-bottom-color: rgb(254 240 138);\n\t\n\nborder-b-yellow-300\tborder-bottom-color: rgb(253 224 71);\n\t\n\nborder-b-yellow-400\tborder-bottom-color: rgb(250 204 21);\n\t\n\nborder-b-yellow-500\tborder-bottom-color: rgb(234 179 8);\n\t\n\nborder-b-yellow-600\tborder-bottom-color: rgb(202 138 4);\n\t\n\nborder-b-yellow-700\tborder-bottom-color: rgb(161 98 7);\n\t\n\nborder-b-yellow-800\tborder-bottom-color: rgb(133 77 14);\n\t\n\nborder-b-yellow-900\tborder-bottom-color: rgb(113 63 18);\n\t\n\nborder-b-yellow-950\tborder-bottom-color: rgb(66 32 6);\n\t\n\nborder-b-lime-50\tborder-bottom-color: rgb(247 254 231);\n\t\n\nborder-b-lime-100\tborder-bottom-color: rgb(236 252 203);\n\t\n\nborder-b-lime-200\tborder-bottom-color: rgb(217 249 157);\n\t\n\nborder-b-lime-300\tborder-bottom-color: rgb(190 242 100);\n\t\n\nborder-b-lime-400\tborder-bottom-color: rgb(163 230 53);\n\t\n\nborder-b-lime-500\tborder-bottom-color: rgb(132 204 22);\n\t\n\nborder-b-lime-600\tborder-bottom-color: rgb(101 163 13);\n\t\n\nborder-b-lime-700\tborder-bottom-color: rgb(77 124 15);\n\t\n\nborder-b-lime-800\tborder-bottom-color: rgb(63 98 18);\n\t\n\nborder-b-lime-900\tborder-bottom-color: rgb(54 83 20);\n\t\n\nborder-b-lime-950\tborder-bottom-color: rgb(26 46 5);\n\t\n\nborder-b-green-50\tborder-bottom-color: rgb(240 253 244);\n\t\n\nborder-b-green-100\tborder-bottom-color: rgb(220 252 231);\n\t\n\nborder-b-green-200\tborder-bottom-color: rgb(187 247 208);\n\t\n\nborder-b-green-300\tborder-bottom-color: rgb(134 239 172);\n\t\n\nborder-b-green-400\tborder-bottom-color: rgb(74 222 128);\n\t\n\nborder-b-green-500\tborder-bottom-color: rgb(34 197 94);\n\t\n\nborder-b-green-600\tborder-bottom-color: rgb(22 163 74);\n\t\n\nborder-b-green-700\tborder-bottom-color: rgb(21 128 61);\n\t\n\nborder-b-green-800\tborder-bottom-color: rgb(22 101 52);\n\t\n\nborder-b-green-900\tborder-bottom-color: rgb(20 83 45);\n\t\n\nborder-b-green-950\tborder-bottom-color: rgb(5 46 22);\n\t\n\nborder-b-emerald-50\tborder-bottom-color: rgb(236 253 245);\n\t\n\nborder-b-emerald-100\tborder-bottom-color: rgb(209 250 229);\n\t\n\nborder-b-emerald-200\tborder-bottom-color: rgb(167 243 208);\n\t\n\nborder-b-emerald-300\tborder-bottom-color: rgb(110 231 183);\n\t\n\nborder-b-emerald-400\tborder-bottom-color: rgb(52 211 153);\n\t\n\nborder-b-emerald-500\tborder-bottom-color: rgb(16 185 129);\n\t\n\nborder-b-emerald-600\tborder-bottom-color: rgb(5 150 105);\n\t\n\nborder-b-emerald-700\tborder-bottom-color: rgb(4 120 87);\n\t\n\nborder-b-emerald-800\tborder-bottom-color: rgb(6 95 70);\n\t\n\nborder-b-emerald-900\tborder-bottom-color: rgb(6 78 59);\n\t\n\nborder-b-emerald-950\tborder-bottom-color: rgb(2 44 34);\n\t\n\nborder-b-teal-50\tborder-bottom-color: rgb(240 253 250);\n\t\n\nborder-b-teal-100\tborder-bottom-color: rgb(204 251 241);\n\t\n\nborder-b-teal-200\tborder-bottom-color: rgb(153 246 228);\n\t\n\nborder-b-teal-300\tborder-bottom-color: rgb(94 234 212);\n\t\n\nborder-b-teal-400\tborder-bottom-color: rgb(45 212 191);\n\t\n\nborder-b-teal-500\tborder-bottom-color: rgb(20 184 166);\n\t\n\nborder-b-teal-600\tborder-bottom-color: rgb(13 148 136);\n\t\n\nborder-b-teal-700\tborder-bottom-color: rgb(15 118 110);\n\t\n\nborder-b-teal-800\tborder-bottom-color: rgb(17 94 89);\n\t\n\nborder-b-teal-900\tborder-bottom-color: rgb(19 78 74);\n\t\n\nborder-b-teal-950\tborder-bottom-color: rgb(4 47 46);\n\t\n\nborder-b-cyan-50\tborder-bottom-color: rgb(236 254 255);\n\t\n\nborder-b-cyan-100\tborder-bottom-color: rgb(207 250 254);\n\t\n\nborder-b-cyan-200\tborder-bottom-color: rgb(165 243 252);\n\t\n\nborder-b-cyan-300\tborder-bottom-color: rgb(103 232 249);\n\t\n\nborder-b-cyan-400\tborder-bottom-color: rgb(34 211 238);\n\t\n\nborder-b-cyan-500\tborder-bottom-color: rgb(6 182 212);\n\t\n\nborder-b-cyan-600\tborder-bottom-color: rgb(8 145 178);\n\t\n\nborder-b-cyan-700\tborder-bottom-color: rgb(14 116 144);\n\t\n\nborder-b-cyan-800\tborder-bottom-color: rgb(21 94 117);\n\t\n\nborder-b-cyan-900\tborder-bottom-color: rgb(22 78 99);\n\t\n\nborder-b-cyan-950\tborder-bottom-color: rgb(8 51 68);\n\t\n\nborder-b-sky-50\tborder-bottom-color: rgb(240 249 255);\n\t\n\nborder-b-sky-100\tborder-bottom-color: rgb(224 242 254);\n\t\n\nborder-b-sky-200\tborder-bottom-color: rgb(186 230 253);\n\t\n\nborder-b-sky-300\tborder-bottom-color: rgb(125 211 252);\n\t\n\nborder-b-sky-400\tborder-bottom-color: rgb(56 189 248);\n\t\n\nborder-b-sky-500\tborder-bottom-color: rgb(14 165 233);\n\t\n\nborder-b-sky-600\tborder-bottom-color: rgb(2 132 199);\n\t\n\nborder-b-sky-700\tborder-bottom-color: rgb(3 105 161);\n\t\n\nborder-b-sky-800\tborder-bottom-color: rgb(7 89 133);\n\t\n\nborder-b-sky-900\tborder-bottom-color: rgb(12 74 110);\n\t\n\nborder-b-sky-950\tborder-bottom-color: rgb(8 47 73);\n\t\n\nborder-b-blue-50\tborder-bottom-color: rgb(239 246 255);\n\t\n\nborder-b-blue-100\tborder-bottom-color: rgb(219 234 254);\n\t\n\nborder-b-blue-200\tborder-bottom-color: rgb(191 219 254);\n\t\n\nborder-b-blue-300\tborder-bottom-color: rgb(147 197 253);\n\t\n\nborder-b-blue-400\tborder-bottom-color: rgb(96 165 250);\n\t\n\nborder-b-blue-500\tborder-bottom-color: rgb(59 130 246);\n\t\n\nborder-b-blue-600\tborder-bottom-color: rgb(37 99 235);\n\t\n\nborder-b-blue-700\tborder-bottom-color: rgb(29 78 216);\n\t\n\nborder-b-blue-800\tborder-bottom-color: rgb(30 64 175);\n\t\n\nborder-b-blue-900\tborder-bottom-color: rgb(30 58 138);\n\t\n\nborder-b-blue-950\tborder-bottom-color: rgb(23 37 84);\n\t\n\nborder-b-indigo-50\tborder-bottom-color: rgb(238 242 255);\n\t\n\nborder-b-indigo-100\tborder-bottom-color: rgb(224 231 255);\n\t\n\nborder-b-indigo-200\tborder-bottom-color: rgb(199 210 254);\n\t\n\nborder-b-indigo-300\tborder-bottom-color: rgb(165 180 252);\n\t\n\nborder-b-indigo-400\tborder-bottom-color: rgb(129 140 248);\n\t\n\nborder-b-indigo-500\tborder-bottom-color: rgb(99 102 241);\n\t\n\nborder-b-indigo-600\tborder-bottom-color: rgb(79 70 229);\n\t\n\nborder-b-indigo-700\tborder-bottom-color: rgb(67 56 202);\n\t\n\nborder-b-indigo-800\tborder-bottom-color: rgb(55 48 163);\n\t\n\nborder-b-indigo-900\tborder-bottom-color: rgb(49 46 129);\n\t\n\nborder-b-indigo-950\tborder-bottom-color: rgb(30 27 75);\n\t\n\nborder-b-violet-50\tborder-bottom-color: rgb(245 243 255);\n\t\n\nborder-b-violet-100\tborder-bottom-color: rgb(237 233 254);\n\t\n\nborder-b-violet-200\tborder-bottom-color: rgb(221 214 254);\n\t\n\nborder-b-violet-300\tborder-bottom-color: rgb(196 181 253);\n\t\n\nborder-b-violet-400\tborder-bottom-color: rgb(167 139 250);\n\t\n\nborder-b-violet-500\tborder-bottom-color: rgb(139 92 246);\n\t\n\nborder-b-violet-600\tborder-bottom-color: rgb(124 58 237);\n\t\n\nborder-b-violet-700\tborder-bottom-color: rgb(109 40 217);\n\t\n\nborder-b-violet-800\tborder-bottom-color: rgb(91 33 182);\n\t\n\nborder-b-violet-900\tborder-bottom-color: rgb(76 29 149);\n\t\n\nborder-b-violet-950\tborder-bottom-color: rgb(46 16 101);\n\t\n\nborder-b-purple-50\tborder-bottom-color: rgb(250 245 255);\n\t\n\nborder-b-purple-100\tborder-bottom-color: rgb(243 232 255);\n\t\n\nborder-b-purple-200\tborder-bottom-color: rgb(233 213 255);\n\t\n\nborder-b-purple-300\tborder-bottom-color: rgb(216 180 254);\n\t\n\nborder-b-purple-400\tborder-bottom-color: rgb(192 132 252);\n\t\n\nborder-b-purple-500\tborder-bottom-color: rgb(168 85 247);\n\t\n\nborder-b-purple-600\tborder-bottom-color: rgb(147 51 234);\n\t\n\nborder-b-purple-700\tborder-bottom-color: rgb(126 34 206);\n\t\n\nborder-b-purple-800\tborder-bottom-color: rgb(107 33 168);\n\t\n\nborder-b-purple-900\tborder-bottom-color: rgb(88 28 135);\n\t\n\nborder-b-purple-950\tborder-bottom-color: rgb(59 7 100);\n\t\n\nborder-b-fuchsia-50\tborder-bottom-color: rgb(253 244 255);\n\t\n\nborder-b-fuchsia-100\tborder-bottom-color: rgb(250 232 255);\n\t\n\nborder-b-fuchsia-200\tborder-bottom-color: rgb(245 208 254);\n\t\n\nborder-b-fuchsia-300\tborder-bottom-color: rgb(240 171 252);\n\t\n\nborder-b-fuchsia-400\tborder-bottom-color: rgb(232 121 249);\n\t\n\nborder-b-fuchsia-500\tborder-bottom-color: rgb(217 70 239);\n\t\n\nborder-b-fuchsia-600\tborder-bottom-color: rgb(192 38 211);\n\t\n\nborder-b-fuchsia-700\tborder-bottom-color: rgb(162 28 175);\n\t\n\nborder-b-fuchsia-800\tborder-bottom-color: rgb(134 25 143);\n\t\n\nborder-b-fuchsia-900\tborder-bottom-color: rgb(112 26 117);\n\t\n\nborder-b-fuchsia-950\tborder-bottom-color: rgb(74 4 78);\n\t\n\nborder-b-pink-50\tborder-bottom-color: rgb(253 242 248);\n\t\n\nborder-b-pink-100\tborder-bottom-color: rgb(252 231 243);\n\t\n\nborder-b-pink-200\tborder-bottom-color: rgb(251 207 232);\n\t\n\nborder-b-pink-300\tborder-bottom-color: rgb(249 168 212);\n\t\n\nborder-b-pink-400\tborder-bottom-color: rgb(244 114 182);\n\t\n\nborder-b-pink-500\tborder-bottom-color: rgb(236 72 153);\n\t\n\nborder-b-pink-600\tborder-bottom-color: rgb(219 39 119);\n\t\n\nborder-b-pink-700\tborder-bottom-color: rgb(190 24 93);\n\t\n\nborder-b-pink-800\tborder-bottom-color: rgb(157 23 77);\n\t\n\nborder-b-pink-900\tborder-bottom-color: rgb(131 24 67);\n\t\n\nborder-b-pink-950\tborder-bottom-color: rgb(80 7 36);\n\t\n\nborder-b-rose-50\tborder-bottom-color: rgb(255 241 242);\n\t\n\nborder-b-rose-100\tborder-bottom-color: rgb(255 228 230);\n\t\n\nborder-b-rose-200\tborder-bottom-color: rgb(254 205 211);\n\t\n\nborder-b-rose-300\tborder-bottom-color: rgb(253 164 175);\n\t\n\nborder-b-rose-400\tborder-bottom-color: rgb(251 113 133);\n\t\n\nborder-b-rose-500\tborder-bottom-color: rgb(244 63 94);\n\t\n\nborder-b-rose-600\tborder-bottom-color: rgb(225 29 72);\n\t\n\nborder-b-rose-700\tborder-bottom-color: rgb(190 18 60);\n\t\n\nborder-b-rose-800\tborder-bottom-color: rgb(159 18 57);\n\t\n\nborder-b-rose-900\tborder-bottom-color: rgb(136 19 55);\n\t\n\nborder-b-rose-950\tborder-bottom-color: rgb(76 5 25);\n\t\n\nborder-l-inherit\tborder-left-color: inherit;\n\t\n\nborder-l-current\tborder-left-color: currentColor;\n\t\n\nborder-l-transparent\tborder-left-color: transparent;\n\t\n\nborder-l-black\tborder-left-color: rgb(0 0 0);\n\t\n\nborder-l-white\tborder-left-color: rgb(255 255 255);\n\t\n\nborder-l-slate-50\tborder-left-color: rgb(248 250 252);\n\t\n\nborder-l-slate-100\tborder-left-color: rgb(241 245 249);\n\t\n\nborder-l-slate-200\tborder-left-color: rgb(226 232 240);\n\t\n\nborder-l-slate-300\tborder-left-color: rgb(203 213 225);\n\t\n\nborder-l-slate-400\tborder-left-color: rgb(148 163 184);\n\t\n\nborder-l-slate-500\tborder-left-color: rgb(100 116 139);\n\t\n\nborder-l-slate-600\tborder-left-color: rgb(71 85 105);\n\t\n\nborder-l-slate-700\tborder-left-color: rgb(51 65 85);\n\t\n\nborder-l-slate-800\tborder-left-color: rgb(30 41 59);\n\t\n\nborder-l-slate-900\tborder-left-color: rgb(15 23 42);\n\t\n\nborder-l-slate-950\tborder-left-color: rgb(2 6 23);\n\t\n\nborder-l-gray-50\tborder-left-color: rgb(249 250 251);\n\t\n\nborder-l-gray-100\tborder-left-color: rgb(243 244 246);\n\t\n\nborder-l-gray-200\tborder-left-color: rgb(229 231 235);\n\t\n\nborder-l-gray-300\tborder-left-color: rgb(209 213 219);\n\t\n\nborder-l-gray-400\tborder-left-color: rgb(156 163 175);\n\t\n\nborder-l-gray-500\tborder-left-color: rgb(107 114 128);\n\t\n\nborder-l-gray-600\tborder-left-color: rgb(75 85 99);\n\t\n\nborder-l-gray-700\tborder-left-color: rgb(55 65 81);\n\t\n\nborder-l-gray-800\tborder-left-color: rgb(31 41 55);\n\t\n\nborder-l-gray-900\tborder-left-color: rgb(17 24 39);\n\t\n\nborder-l-gray-950\tborder-left-color: rgb(3 7 18);\n\t\n\nborder-l-zinc-50\tborder-left-color: rgb(250 250 250);\n\t\n\nborder-l-zinc-100\tborder-left-color: rgb(244 244 245);\n\t\n\nborder-l-zinc-200\tborder-left-color: rgb(228 228 231);\n\t\n\nborder-l-zinc-300\tborder-left-color: rgb(212 212 216);\n\t\n\nborder-l-zinc-400\tborder-left-color: rgb(161 161 170);\n\t\n\nborder-l-zinc-500\tborder-left-color: rgb(113 113 122);\n\t\n\nborder-l-zinc-600\tborder-left-color: rgb(82 82 91);\n\t\n\nborder-l-zinc-700\tborder-left-color: rgb(63 63 70);\n\t\n\nborder-l-zinc-800\tborder-left-color: rgb(39 39 42);\n\t\n\nborder-l-zinc-900\tborder-left-color: rgb(24 24 27);\n\t\n\nborder-l-zinc-950\tborder-left-color: rgb(9 9 11);\n\t\n\nborder-l-neutral-50\tborder-left-color: rgb(250 250 250);\n\t\n\nborder-l-neutral-100\tborder-left-color: rgb(245 245 245);\n\t\n\nborder-l-neutral-200\tborder-left-color: rgb(229 229 229);\n\t\n\nborder-l-neutral-300\tborder-left-color: rgb(212 212 212);\n\t\n\nborder-l-neutral-400\tborder-left-color: rgb(163 163 163);\n\t\n\nborder-l-neutral-500\tborder-left-color: rgb(115 115 115);\n\t\n\nborder-l-neutral-600\tborder-left-color: rgb(82 82 82);\n\t\n\nborder-l-neutral-700\tborder-left-color: rgb(64 64 64);\n\t\n\nborder-l-neutral-800\tborder-left-color: rgb(38 38 38);\n\t\n\nborder-l-neutral-900\tborder-left-color: rgb(23 23 23);\n\t\n\nborder-l-neutral-950\tborder-left-color: rgb(10 10 10);\n\t\n\nborder-l-stone-50\tborder-left-color: rgb(250 250 249);\n\t\n\nborder-l-stone-100\tborder-left-color: rgb(245 245 244);\n\t\n\nborder-l-stone-200\tborder-left-color: rgb(231 229 228);\n\t\n\nborder-l-stone-300\tborder-left-color: rgb(214 211 209);\n\t\n\nborder-l-stone-400\tborder-left-color: rgb(168 162 158);\n\t\n\nborder-l-stone-500\tborder-left-color: rgb(120 113 108);\n\t\n\nborder-l-stone-600\tborder-left-color: rgb(87 83 78);\n\t\n\nborder-l-stone-700\tborder-left-color: rgb(68 64 60);\n\t\n\nborder-l-stone-800\tborder-left-color: rgb(41 37 36);\n\t\n\nborder-l-stone-900\tborder-left-color: rgb(28 25 23);\n\t\n\nborder-l-stone-950\tborder-left-color: rgb(12 10 9);\n\t\n\nborder-l-red-50\tborder-left-color: rgb(254 242 242);\n\t\n\nborder-l-red-100\tborder-left-color: rgb(254 226 226);\n\t\n\nborder-l-red-200\tborder-left-color: rgb(254 202 202);\n\t\n\nborder-l-red-300\tborder-left-color: rgb(252 165 165);\n\t\n\nborder-l-red-400\tborder-left-color: rgb(248 113 113);\n\t\n\nborder-l-red-500\tborder-left-color: rgb(239 68 68);\n\t\n\nborder-l-red-600\tborder-left-color: rgb(220 38 38);\n\t\n\nborder-l-red-700\tborder-left-color: rgb(185 28 28);\n\t\n\nborder-l-red-800\tborder-left-color: rgb(153 27 27);\n\t\n\nborder-l-red-900\tborder-left-color: rgb(127 29 29);\n\t\n\nborder-l-red-950\tborder-left-color: rgb(69 10 10);\n\t\n\nborder-l-orange-50\tborder-left-color: rgb(255 247 237);\n\t\n\nborder-l-orange-100\tborder-left-color: rgb(255 237 213);\n\t\n\nborder-l-orange-200\tborder-left-color: rgb(254 215 170);\n\t\n\nborder-l-orange-300\tborder-left-color: rgb(253 186 116);\n\t\n\nborder-l-orange-400\tborder-left-color: rgb(251 146 60);\n\t\n\nborder-l-orange-500\tborder-left-color: rgb(249 115 22);\n\t\n\nborder-l-orange-600\tborder-left-color: rgb(234 88 12);\n\t\n\nborder-l-orange-700\tborder-left-color: rgb(194 65 12);\n\t\n\nborder-l-orange-800\tborder-left-color: rgb(154 52 18);\n\t\n\nborder-l-orange-900\tborder-left-color: rgb(124 45 18);\n\t\n\nborder-l-orange-950\tborder-left-color: rgb(67 20 7);\n\t\n\nborder-l-amber-50\tborder-left-color: rgb(255 251 235);\n\t\n\nborder-l-amber-100\tborder-left-color: rgb(254 243 199);\n\t\n\nborder-l-amber-200\tborder-left-color: rgb(253 230 138);\n\t\n\nborder-l-amber-300\tborder-left-color: rgb(252 211 77);\n\t\n\nborder-l-amber-400\tborder-left-color: rgb(251 191 36);\n\t\n\nborder-l-amber-500\tborder-left-color: rgb(245 158 11);\n\t\n\nborder-l-amber-600\tborder-left-color: rgb(217 119 6);\n\t\n\nborder-l-amber-700\tborder-left-color: rgb(180 83 9);\n\t\n\nborder-l-amber-800\tborder-left-color: rgb(146 64 14);\n\t\n\nborder-l-amber-900\tborder-left-color: rgb(120 53 15);\n\t\n\nborder-l-amber-950\tborder-left-color: rgb(69 26 3);\n\t\n\nborder-l-yellow-50\tborder-left-color: rgb(254 252 232);\n\t\n\nborder-l-yellow-100\tborder-left-color: rgb(254 249 195);\n\t\n\nborder-l-yellow-200\tborder-left-color: rgb(254 240 138);\n\t\n\nborder-l-yellow-300\tborder-left-color: rgb(253 224 71);\n\t\n\nborder-l-yellow-400\tborder-left-color: rgb(250 204 21);\n\t\n\nborder-l-yellow-500\tborder-left-color: rgb(234 179 8);\n\t\n\nborder-l-yellow-600\tborder-left-color: rgb(202 138 4);\n\t\n\nborder-l-yellow-700\tborder-left-color: rgb(161 98 7);\n\t\n\nborder-l-yellow-800\tborder-left-color: rgb(133 77 14);\n\t\n\nborder-l-yellow-900\tborder-left-color: rgb(113 63 18);\n\t\n\nborder-l-yellow-950\tborder-left-color: rgb(66 32 6);\n\t\n\nborder-l-lime-50\tborder-left-color: rgb(247 254 231);\n\t\n\nborder-l-lime-100\tborder-left-color: rgb(236 252 203);\n\t\n\nborder-l-lime-200\tborder-left-color: rgb(217 249 157);\n\t\n\nborder-l-lime-300\tborder-left-color: rgb(190 242 100);\n\t\n\nborder-l-lime-400\tborder-left-color: rgb(163 230 53);\n\t\n\nborder-l-lime-500\tborder-left-color: rgb(132 204 22);\n\t\n\nborder-l-lime-600\tborder-left-color: rgb(101 163 13);\n\t\n\nborder-l-lime-700\tborder-left-color: rgb(77 124 15);\n\t\n\nborder-l-lime-800\tborder-left-color: rgb(63 98 18);\n\t\n\nborder-l-lime-900\tborder-left-color: rgb(54 83 20);\n\t\n\nborder-l-lime-950\tborder-left-color: rgb(26 46 5);\n\t\n\nborder-l-green-50\tborder-left-color: rgb(240 253 244);\n\t\n\nborder-l-green-100\tborder-left-color: rgb(220 252 231);\n\t\n\nborder-l-green-200\tborder-left-color: rgb(187 247 208);\n\t\n\nborder-l-green-300\tborder-left-color: rgb(134 239 172);\n\t\n\nborder-l-green-400\tborder-left-color: rgb(74 222 128);\n\t\n\nborder-l-green-500\tborder-left-color: rgb(34 197 94);\n\t\n\nborder-l-green-600\tborder-left-color: rgb(22 163 74);\n\t\n\nborder-l-green-700\tborder-left-color: rgb(21 128 61);\n\t\n\nborder-l-green-800\tborder-left-color: rgb(22 101 52);\n\t\n\nborder-l-green-900\tborder-left-color: rgb(20 83 45);\n\t\n\nborder-l-green-950\tborder-left-color: rgb(5 46 22);\n\t\n\nborder-l-emerald-50\tborder-left-color: rgb(236 253 245);\n\t\n\nborder-l-emerald-100\tborder-left-color: rgb(209 250 229);\n\t\n\nborder-l-emerald-200\tborder-left-color: rgb(167 243 208);\n\t\n\nborder-l-emerald-300\tborder-left-color: rgb(110 231 183);\n\t\n\nborder-l-emerald-400\tborder-left-color: rgb(52 211 153);\n\t\n\nborder-l-emerald-500\tborder-left-color: rgb(16 185 129);\n\t\n\nborder-l-emerald-600\tborder-left-color: rgb(5 150 105);\n\t\n\nborder-l-emerald-700\tborder-left-color: rgb(4 120 87);\n\t\n\nborder-l-emerald-800\tborder-left-color: rgb(6 95 70);\n\t\n\nborder-l-emerald-900\tborder-left-color: rgb(6 78 59);\n\t\n\nborder-l-emerald-950\tborder-left-color: rgb(2 44 34);\n\t\n\nborder-l-teal-50\tborder-left-color: rgb(240 253 250);\n\t\n\nborder-l-teal-100\tborder-left-color: rgb(204 251 241);\n\t\n\nborder-l-teal-200\tborder-left-color: rgb(153 246 228);\n\t\n\nborder-l-teal-300\tborder-left-color: rgb(94 234 212);\n\t\n\nborder-l-teal-400\tborder-left-color: rgb(45 212 191);\n\t\n\nborder-l-teal-500\tborder-left-color: rgb(20 184 166);\n\t\n\nborder-l-teal-600\tborder-left-color: rgb(13 148 136);\n\t\n\nborder-l-teal-700\tborder-left-color: rgb(15 118 110);\n\t\n\nborder-l-teal-800\tborder-left-color: rgb(17 94 89);\n\t\n\nborder-l-teal-900\tborder-left-color: rgb(19 78 74);\n\t\n\nborder-l-teal-950\tborder-left-color: rgb(4 47 46);\n\t\n\nborder-l-cyan-50\tborder-left-color: rgb(236 254 255);\n\t\n\nborder-l-cyan-100\tborder-left-color: rgb(207 250 254);\n\t\n\nborder-l-cyan-200\tborder-left-color: rgb(165 243 252);\n\t\n\nborder-l-cyan-300\tborder-left-color: rgb(103 232 249);\n\t\n\nborder-l-cyan-400\tborder-left-color: rgb(34 211 238);\n\t\n\nborder-l-cyan-500\tborder-left-color: rgb(6 182 212);\n\t\n\nborder-l-cyan-600\tborder-left-color: rgb(8 145 178);\n\t\n\nborder-l-cyan-700\tborder-left-color: rgb(14 116 144);\n\t\n\nborder-l-cyan-800\tborder-left-color: rgb(21 94 117);\n\t\n\nborder-l-cyan-900\tborder-left-color: rgb(22 78 99);\n\t\n\nborder-l-cyan-950\tborder-left-color: rgb(8 51 68);\n\t\n\nborder-l-sky-50\tborder-left-color: rgb(240 249 255);\n\t\n\nborder-l-sky-100\tborder-left-color: rgb(224 242 254);\n\t\n\nborder-l-sky-200\tborder-left-color: rgb(186 230 253);\n\t\n\nborder-l-sky-300\tborder-left-color: rgb(125 211 252);\n\t\n\nborder-l-sky-400\tborder-left-color: rgb(56 189 248);\n\t\n\nborder-l-sky-500\tborder-left-color: rgb(14 165 233);\n\t\n\nborder-l-sky-600\tborder-left-color: rgb(2 132 199);\n\t\n\nborder-l-sky-700\tborder-left-color: rgb(3 105 161);\n\t\n\nborder-l-sky-800\tborder-left-color: rgb(7 89 133);\n\t\n\nborder-l-sky-900\tborder-left-color: rgb(12 74 110);\n\t\n\nborder-l-sky-950\tborder-left-color: rgb(8 47 73);\n\t\n\nborder-l-blue-50\tborder-left-color: rgb(239 246 255);\n\t\n\nborder-l-blue-100\tborder-left-color: rgb(219 234 254);\n\t\n\nborder-l-blue-200\tborder-left-color: rgb(191 219 254);\n\t\n\nborder-l-blue-300\tborder-left-color: rgb(147 197 253);\n\t\n\nborder-l-blue-400\tborder-left-color: rgb(96 165 250);\n\t\n\nborder-l-blue-500\tborder-left-color: rgb(59 130 246);\n\t\n\nborder-l-blue-600\tborder-left-color: rgb(37 99 235);\n\t\n\nborder-l-blue-700\tborder-left-color: rgb(29 78 216);\n\t\n\nborder-l-blue-800\tborder-left-color: rgb(30 64 175);\n\t\n\nborder-l-blue-900\tborder-left-color: rgb(30 58 138);\n\t\n\nborder-l-blue-950\tborder-left-color: rgb(23 37 84);\n\t\n\nborder-l-indigo-50\tborder-left-color: rgb(238 242 255);\n\t\n\nborder-l-indigo-100\tborder-left-color: rgb(224 231 255);\n\t\n\nborder-l-indigo-200\tborder-left-color: rgb(199 210 254);\n\t\n\nborder-l-indigo-300\tborder-left-color: rgb(165 180 252);\n\t\n\nborder-l-indigo-400\tborder-left-color: rgb(129 140 248);\n\t\n\nborder-l-indigo-500\tborder-left-color: rgb(99 102 241);\n\t\n\nborder-l-indigo-600\tborder-left-color: rgb(79 70 229);\n\t\n\nborder-l-indigo-700\tborder-left-color: rgb(67 56 202);\n\t\n\nborder-l-indigo-800\tborder-left-color: rgb(55 48 163);\n\t\n\nborder-l-indigo-900\tborder-left-color: rgb(49 46 129);\n\t\n\nborder-l-indigo-950\tborder-left-color: rgb(30 27 75);\n\t\n\nborder-l-violet-50\tborder-left-color: rgb(245 243 255);\n\t\n\nborder-l-violet-100\tborder-left-color: rgb(237 233 254);\n\t\n\nborder-l-violet-200\tborder-left-color: rgb(221 214 254);\n\t\n\nborder-l-violet-300\tborder-left-color: rgb(196 181 253);\n\t\n\nborder-l-violet-400\tborder-left-color: rgb(167 139 250);\n\t\n\nborder-l-violet-500\tborder-left-color: rgb(139 92 246);\n\t\n\nborder-l-violet-600\tborder-left-color: rgb(124 58 237);\n\t\n\nborder-l-violet-700\tborder-left-color: rgb(109 40 217);\n\t\n\nborder-l-violet-800\tborder-left-color: rgb(91 33 182);\n\t\n\nborder-l-violet-900\tborder-left-color: rgb(76 29 149);\n\t\n\nborder-l-violet-950\tborder-left-color: rgb(46 16 101);\n\t\n\nborder-l-purple-50\tborder-left-color: rgb(250 245 255);\n\t\n\nborder-l-purple-100\tborder-left-color: rgb(243 232 255);\n\t\n\nborder-l-purple-200\tborder-left-color: rgb(233 213 255);\n\t\n\nborder-l-purple-300\tborder-left-color: rgb(216 180 254);\n\t\n\nborder-l-purple-400\tborder-left-color: rgb(192 132 252);\n\t\n\nborder-l-purple-500\tborder-left-color: rgb(168 85 247);\n\t\n\nborder-l-purple-600\tborder-left-color: rgb(147 51 234);\n\t\n\nborder-l-purple-700\tborder-left-color: rgb(126 34 206);\n\t\n\nborder-l-purple-800\tborder-left-color: rgb(107 33 168);\n\t\n\nborder-l-purple-900\tborder-left-color: rgb(88 28 135);\n\t\n\nborder-l-purple-950\tborder-left-color: rgb(59 7 100);\n\t\n\nborder-l-fuchsia-50\tborder-left-color: rgb(253 244 255);\n\t\n\nborder-l-fuchsia-100\tborder-left-color: rgb(250 232 255);\n\t\n\nborder-l-fuchsia-200\tborder-left-color: rgb(245 208 254);\n\t\n\nborder-l-fuchsia-300\tborder-left-color: rgb(240 171 252);\n\t\n\nborder-l-fuchsia-400\tborder-left-color: rgb(232 121 249);\n\t\n\nborder-l-fuchsia-500\tborder-left-color: rgb(217 70 239);\n\t\n\nborder-l-fuchsia-600\tborder-left-color: rgb(192 38 211);\n\t\n\nborder-l-fuchsia-700\tborder-left-color: rgb(162 28 175);\n\t\n\nborder-l-fuchsia-800\tborder-left-color: rgb(134 25 143);\n\t\n\nborder-l-fuchsia-900\tborder-left-color: rgb(112 26 117);\n\t\n\nborder-l-fuchsia-950\tborder-left-color: rgb(74 4 78);\n\t\n\nborder-l-pink-50\tborder-left-color: rgb(253 242 248);\n\t\n\nborder-l-pink-100\tborder-left-color: rgb(252 231 243);\n\t\n\nborder-l-pink-200\tborder-left-color: rgb(251 207 232);\n\t\n\nborder-l-pink-300\tborder-left-color: rgb(249 168 212);\n\t\n\nborder-l-pink-400\tborder-left-color: rgb(244 114 182);\n\t\n\nborder-l-pink-500\tborder-left-color: rgb(236 72 153);\n\t\n\nborder-l-pink-600\tborder-left-color: rgb(219 39 119);\n\t\n\nborder-l-pink-700\tborder-left-color: rgb(190 24 93);\n\t\n\nborder-l-pink-800\tborder-left-color: rgb(157 23 77);\n\t\n\nborder-l-pink-900\tborder-left-color: rgb(131 24 67);\n\t\n\nborder-l-pink-950\tborder-left-color: rgb(80 7 36);\n\t\n\nborder-l-rose-50\tborder-left-color: rgb(255 241 242);\n\t\n\nborder-l-rose-100\tborder-left-color: rgb(255 228 230);\n\t\n\nborder-l-rose-200\tborder-left-color: rgb(254 205 211);\n\t\n\nborder-l-rose-300\tborder-left-color: rgb(253 164 175);\n\t\n\nborder-l-rose-400\tborder-left-color: rgb(251 113 133);\n\t\n\nborder-l-rose-500\tborder-left-color: rgb(244 63 94);\n\t\n\nborder-l-rose-600\tborder-left-color: rgb(225 29 72);\n\t\n\nborder-l-rose-700\tborder-left-color: rgb(190 18 60);\n\t\n\nborder-l-rose-800\tborder-left-color: rgb(159 18 57);\n\t\n\nborder-l-rose-900\tborder-left-color: rgb(136 19 55);\n\t\n\nborder-l-rose-950\tborder-left-color: rgb(76 5 25);\n\t\n​\nBasic usage\n​\nSetting the border color\n\nControl the border color of an element using the border-{color} utilities.\n\nEmail address\nThis field is required.\n<input class=\"border-2 border-rose-500 ...\">\n​\nChanging the opacity\n\nControl the opacity of an element’s border color using the color opacity modifier.\n\nborder-indigo-500/100\n\nborder-indigo-500/75\n\nborder-indigo-500/50\n\n<div class=\"border-4 border-indigo-500/100 ...\"></div>\n<div class=\"border-4 border-indigo-500/75 ...\"></div>\n<div class=\"border-4 border-indigo-500/50 ...\"></div>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<div class=\"border-4 border-indigo-600/[.55] ...\"></div>\n​\nIndividual sides\n\nUse the border-{side}-{color} utilities to set the border color for one side of an element.\n\nborder-t-indigo-500\n\nborder-r-indigo-500\n\nborder-b-indigo-500\n\nborder-l-indigo-500\n\n<div class=\"border-4 border-indigo-200 border-t-indigo-500 ...\"></div>\n<div class=\"border-4 border-indigo-200 border-r-indigo-500 ...\"></div>\n<div class=\"border-4 border-indigo-200 border-b-indigo-500 ...\"></div>\n<div class=\"border-4 border-indigo-200 border-l-indigo-500 ...\"></div>\n​\nHorizontal and vertical sides\n\nUse the border-{x|y}-{color} utilities to set the border color on two sides of an element at the same time.\n\nborder-x-indigo-500\n\nborder-y-indigo-500\n\n<div class=\"border-4 border-indigo-200 border-x-indigo-500 ...\"></div>\n<div class=\"border-4 border-indigo-200 border-y-indigo-500 ...\"></div>\n​\nUsing logical properties\n\nUse the border-s-* and border-e-* utilities to set the border-inline-start-color and border-inline-end-color logical properties, which map to either the left or right border based on the text direction.\n\nLeft-to-right\n\nRight-to-left\n\n<div dir=\"ltr\">\n  <div class=\"border-s-indigo-500 ...\"></div>\n<div>\n\n<div dir=\"rtl\">\n  <div class=\"border-s-indigo-500 ...\"></div>\n<div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:border-gray-500 to only apply the border-gray-500 utility on hover.\n\nTry hovering over the text to see the expected behaviour\n\nSend email\n<button class=\"border border-slate-300 hover:border-slate-400 ...\">\n  Send email\n</button>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:border-green-500 to apply the border-green-500 utility at only medium screen sizes and above.\n\n<button class=\"border-blue-500 md:border-green-500\">\n  <!-- ... -->\n</button>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as border colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your border colors by editing theme.borderColor or theme.extend.borderColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off border-color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<button class=\"border-[#243c5a]\">\n  <!-- ... -->\n</button>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBorder Width\nBorder Style\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the border color\nChanging the opacity\nIndividual sides\nHorizontal and vertical sides\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Divide Style - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/divide-style",
    "html": "Borders\n\nDivide Style\n\nUtilities for controlling the border style between elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndivide-solid > * + *\tborder-style: solid;\n\ndivide-dashed > * + *\tborder-style: dashed;\n\ndivide-dotted > * + *\tborder-style: dotted;\n\ndivide-double > * + *\tborder-style: double;\n\ndivide-none > * + *\tborder-style: none;\n\n​\nBasic usage\n​\nSet the divide style\n\nControl the border style between elements using the divide-{style} utilities.\n\n01\n02\n03\n<div class=\"divide-y divide-dashed\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:divide-solid to only apply the divide-solid utility on hover.\n\n<div class=\"divide-y divide-dashed hover:divide-solid\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:divide-solid to apply the divide-solid utility at only medium screen sizes and above.\n\n<div class=\"divide-y divide-dashed md:divide-solid\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nDivide Color\nOutline Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSet the divide style\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Divide Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/divide-width",
    "html": "Borders\n\nDivide Width\n\nUtilities for controlling the border width between elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndivide-x-0 > * + *\tborder-right-width: 0px;\nborder-left-width: 0px;\n\ndivide-x-2 > * + *\tborder-right-width: 0px;\nborder-left-width: 2px;\n\ndivide-x-4 > * + *\tborder-right-width: 0px;\nborder-left-width: 4px;\n\ndivide-x-8 > * + *\tborder-right-width: 0px;\nborder-left-width: 8px;\n\ndivide-x > * + *\tborder-right-width: 0px;\nborder-left-width: 1px;\n\ndivide-y-0 > * + *\tborder-top-width: 0px;\nborder-bottom-width: 0px;\n\ndivide-y-2 > * + *\tborder-top-width: 2px;\nborder-bottom-width: 0px;\n\ndivide-y-4 > * + *\tborder-top-width: 4px;\nborder-bottom-width: 0px;\n\ndivide-y-8 > * + *\tborder-top-width: 8px;\nborder-bottom-width: 0px;\n\ndivide-y > * + *\tborder-top-width: 1px;\nborder-bottom-width: 0px;\n\ndivide-y-reverse > * + *\t--tw-divide-y-reverse: 1;\n\ndivide-x-reverse > * + *\t--tw-divide-x-reverse: 1;\n\n​\nBasic usage\n​\nAdd borders between horizontal children\n\nAdd borders between horizontal elements using the divide-x-{width} utilities.\n\n01\n02\n03\n<div class=\"grid grid-cols-3 divide-x\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nAdd borders between stacked children\n\nAdd borders between stacked elements using the divide-y-{width} utilities.\n\n01\n02\n03\n<div class=\"grid grid-cols-1 divide-y\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nReversing children order\n\nIf your elements are in reverse order (using say flex-row-reverse or flex-col-reverse), use the divide-x-reverse or divide-y-reverse utilities to ensure the border is added to the correct side of each element.\n\n01\n02\n03\n<div class=\"flex flex-col-reverse divide-y divide-y-reverse\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:divide-y-8 to only apply the divide-y-8 utility on hover.\n\n<div class=\"divide-y divide-gray-400 hover:divide-y-8\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:divide-y-8 to apply the divide-y-8 utility at only medium screen sizes and above.\n\n<div class=\"divide-y divide-gray-400 md:divide-y-8\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nThe divide width scale inherits its values from the borderWidth scale by default, so if you’d like to customize your values for both border width and divide width together, use the theme.borderWidth section of your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    borderWidth: {\n\n      DEFAULT: '1px',\n\n      '0': '0',\n\n      '2': '2px',\n\n      '3': '3px',\n\n      '4': '4px',\n\n      '6': '6px',\n\n      '8': '8px',\n\n    }\n\n  }\n\n}\n\n\nTo customize only the divide width values, use the theme.divideWidth section of your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    divideWidth: {\n\n      DEFAULT: '1px',\n\n      '0': '0',\n\n      '2': '2px',\n\n      '3': '3px',\n\n      '4': '4px',\n\n      '6': '6px',\n\n      '8': '8px',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off divide-{x|y}-{width} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"divide-x-[3px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBorder Style\nDivide Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdd borders between horizontal children\nAdd borders between stacked children\nReversing children order\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Border Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/border-width",
    "html": "Borders\n\nBorder Width\n\nUtilities for controlling the width of an element's borders.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nborder-0\tborder-width: 0px;\n\nborder-2\tborder-width: 2px;\n\nborder-4\tborder-width: 4px;\n\nborder-8\tborder-width: 8px;\n\nborder\tborder-width: 1px;\n\nborder-x-0\tborder-left-width: 0px;\nborder-right-width: 0px;\n\nborder-x-2\tborder-left-width: 2px;\nborder-right-width: 2px;\n\nborder-x-4\tborder-left-width: 4px;\nborder-right-width: 4px;\n\nborder-x-8\tborder-left-width: 8px;\nborder-right-width: 8px;\n\nborder-x\tborder-left-width: 1px;\nborder-right-width: 1px;\n\nborder-y-0\tborder-top-width: 0px;\nborder-bottom-width: 0px;\n\nborder-y-2\tborder-top-width: 2px;\nborder-bottom-width: 2px;\n\nborder-y-4\tborder-top-width: 4px;\nborder-bottom-width: 4px;\n\nborder-y-8\tborder-top-width: 8px;\nborder-bottom-width: 8px;\n\nborder-y\tborder-top-width: 1px;\nborder-bottom-width: 1px;\n\nborder-s-0\tborder-inline-start-width: 0px;\n\nborder-s-2\tborder-inline-start-width: 2px;\n\nborder-s-4\tborder-inline-start-width: 4px;\n\nborder-s-8\tborder-inline-start-width: 8px;\n\nborder-s\tborder-inline-start-width: 1px;\n\nborder-e-0\tborder-inline-end-width: 0px;\n\nborder-e-2\tborder-inline-end-width: 2px;\n\nborder-e-4\tborder-inline-end-width: 4px;\n\nborder-e-8\tborder-inline-end-width: 8px;\n\nborder-e\tborder-inline-end-width: 1px;\n\nborder-t-0\tborder-top-width: 0px;\n\nborder-t-2\tborder-top-width: 2px;\n\nborder-t-4\tborder-top-width: 4px;\n\nborder-t-8\tborder-top-width: 8px;\n\nborder-t\tborder-top-width: 1px;\n\nborder-r-0\tborder-right-width: 0px;\n\nborder-r-2\tborder-right-width: 2px;\n\nborder-r-4\tborder-right-width: 4px;\n\nborder-r-8\tborder-right-width: 8px;\n\nborder-r\tborder-right-width: 1px;\n\nborder-b-0\tborder-bottom-width: 0px;\n\nborder-b-2\tborder-bottom-width: 2px;\n\nborder-b-4\tborder-bottom-width: 4px;\n\nborder-b-8\tborder-bottom-width: 8px;\n\nborder-b\tborder-bottom-width: 1px;\n\nborder-l-0\tborder-left-width: 0px;\n\nborder-l-2\tborder-left-width: 2px;\n\nborder-l-4\tborder-left-width: 4px;\n\nborder-l-8\tborder-left-width: 8px;\n\nborder-l\tborder-left-width: 1px;\n\n​\nBasic usage\n​\nAll sides\n\nUse the border, border-0, border-2, border-4, or border-8 utilities to set the border width for all sides of an element.\n\nborder\n\nborder-2\n\nborder-4\n\nborder-8\n\n<div class=\"border border-sky-500\"></div>\n<div class=\"border-2 border-sky-500\"></div>\n<div class=\"border-4 border-sky-500\"></div>\n<div class=\"border-8 border-sky-500\"></div>\n​\nIndividual sides\n\nUse the border-{side}, border-{side}-0, border-{side}-2, border-{side}-4, or border-{side}-8 utilities to set the border width for one side of an element.\n\nborder-t-4\n\nborder-r-4\n\nborder-b-4\n\nborder-l-4\n\n<div class=\"border-t-4 border-indigo-500 ...\"></div>\n<div class=\"border-r-4 border-indigo-500 ...\"></div>\n<div class=\"border-b-4 border-indigo-500 ...\"></div>\n<div class=\"border-l-4 border-indigo-500 ...\"></div>\n​\nHorizontal and vertical sides\n\nUse the border-{x|y}-{width} utilities to set the border width on two sides of an element at the same time.\n\nborder-x-4\n\nborder-y-4\n\n<div class=\"border-x-4 border-indigo-500 ...\"></div>\n<div class=\"border-y-4 border-indigo-500 ...\"></div>\n​\nBetween elements\n\nYou can also add borders between child elements using the divide-{x/y}-{width} and divide-{color} utilities.\n\n01\n02\n03\n<div class=\"divide-y divide-slate-700 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n\nLearn more in the Divide Width and Divide Color documentation.\n\n​\nUsing logical properties\n\nUse the border-s-* and border-e-* utilities to set the border-inline-start-width and border-inline-end-width logical properties, which map to either the left or right border based on the text direction.\n\nLeft-to-right\n\nRight-to-left\n\n<div dir=\"ltr\">\n  <div class=\"border-s-4 ...\"></div>\n<div>\n\n<div dir=\"rtl\">\n  <div class=\"border-s-4 ...\"></div>\n<div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nUsing without Preflight\n\nIf you’ve disabled Preflight in your project, you’ll need to include a border style utility any time you use one of the border-width utilities for the border to actually take effect:\n\n<div class=\"border-4 border-indigo-500 ...\">\n\n<div class=\"border-4 border-solid border-indigo-500 ...\">\n\n  <!-- ... -->\n\n</div>\n\n\nThis is because browsers set the border-style of most elements to none by default, so adding a border-width on its own isn’t enough to render a border.\n\nPreflight applies a global border reset that sets border-style to solid and border-width to 0, which is what makes it possible to add a border to an element using just a border-width utility in projects using Preflight.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:border-t-4 to only apply the border-t-4 utility on hover.\n\n<div class=\"border-2 hover:border-t-4\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:border-t-4 to apply the border-t-4 utility at only medium screen sizes and above.\n\n<div class=\"border-2 md:border-t-4\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides five border-width utilities, and the same number of utilities per side (horizontal, vertical, top, right, bottom, and left). You change, add, or remove these by editing the theme.borderWidth section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    borderWidth: {\n\n      DEFAULT: '1px',\n\n      '0': '0',\n\n      '2': '2px',\n\n      '3': '3px',\n\n      '4': '4px',\n\n      '6': '6px',\n\n      '8': '8px',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off border-{side}-{width} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"border-t-[3px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBorder Radius\nBorder Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAll sides\nIndividual sides\nHorizontal and vertical sides\nBetween elements\nUsing logical properties\nUsing without Preflight\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Border Radius - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/border-radius",
    "html": "Borders\n\nBorder Radius\n\nUtilities for controlling the border radius of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nrounded-none\tborder-radius: 0px;\n\nrounded-sm\tborder-radius: 0.125rem; /* 2px */\n\nrounded\tborder-radius: 0.25rem; /* 4px */\n\nrounded-md\tborder-radius: 0.375rem; /* 6px */\n\nrounded-lg\tborder-radius: 0.5rem; /* 8px */\n\nrounded-xl\tborder-radius: 0.75rem; /* 12px */\n\nrounded-2xl\tborder-radius: 1rem; /* 16px */\n\nrounded-3xl\tborder-radius: 1.5rem; /* 24px */\n\nrounded-full\tborder-radius: 9999px;\n\nrounded-s-none\tborder-start-start-radius: 0px;\nborder-end-start-radius: 0px;\n\nrounded-s-sm\tborder-start-start-radius: 0.125rem; /* 2px */\nborder-end-start-radius: 0.125rem; /* 2px */\n\nrounded-s\tborder-start-start-radius: 0.25rem; /* 4px */\nborder-end-start-radius: 0.25rem; /* 4px */\n\nrounded-s-md\tborder-start-start-radius: 0.375rem; /* 6px */\nborder-end-start-radius: 0.375rem; /* 6px */\n\nrounded-s-lg\tborder-start-start-radius: 0.5rem; /* 8px */\nborder-end-start-radius: 0.5rem; /* 8px */\n\nrounded-s-xl\tborder-start-start-radius: 0.75rem; /* 12px */\nborder-end-start-radius: 0.75rem; /* 12px */\n\nrounded-s-2xl\tborder-start-start-radius: 1rem; /* 16px */\nborder-end-start-radius: 1rem; /* 16px */\n\nrounded-s-3xl\tborder-start-start-radius: 1.5rem; /* 24px */\nborder-end-start-radius: 1.5rem; /* 24px */\n\nrounded-s-full\tborder-start-start-radius: 9999px;\nborder-end-start-radius: 9999px;\n\nrounded-e-none\tborder-start-end-radius: 0px;\nborder-end-end-radius: 0px;\n\nrounded-e-sm\tborder-start-end-radius: 0.125rem; /* 2px */\nborder-end-end-radius: 0.125rem; /* 2px */\n\nrounded-e\tborder-start-end-radius: 0.25rem; /* 4px */\nborder-end-end-radius: 0.25rem; /* 4px */\n\nrounded-e-md\tborder-start-end-radius: 0.375rem; /* 6px */\nborder-end-end-radius: 0.375rem; /* 6px */\n\nrounded-e-lg\tborder-start-end-radius: 0.5rem; /* 8px */\nborder-end-end-radius: 0.5rem; /* 8px */\n\nrounded-e-xl\tborder-start-end-radius: 0.75rem; /* 12px */\nborder-end-end-radius: 0.75rem; /* 12px */\n\nrounded-e-2xl\tborder-start-end-radius: 1rem; /* 16px */\nborder-end-end-radius: 1rem; /* 16px */\n\nrounded-e-3xl\tborder-start-end-radius: 1.5rem; /* 24px */\nborder-end-end-radius: 1.5rem; /* 24px */\n\nrounded-e-full\tborder-start-end-radius: 9999px;\nborder-end-end-radius: 9999px;\n\nrounded-t-none\tborder-top-left-radius: 0px;\nborder-top-right-radius: 0px;\n\nrounded-t-sm\tborder-top-left-radius: 0.125rem; /* 2px */\nborder-top-right-radius: 0.125rem; /* 2px */\n\nrounded-t\tborder-top-left-radius: 0.25rem; /* 4px */\nborder-top-right-radius: 0.25rem; /* 4px */\n\nrounded-t-md\tborder-top-left-radius: 0.375rem; /* 6px */\nborder-top-right-radius: 0.375rem; /* 6px */\n\nrounded-t-lg\tborder-top-left-radius: 0.5rem; /* 8px */\nborder-top-right-radius: 0.5rem; /* 8px */\n\nrounded-t-xl\tborder-top-left-radius: 0.75rem; /* 12px */\nborder-top-right-radius: 0.75rem; /* 12px */\n\nrounded-t-2xl\tborder-top-left-radius: 1rem; /* 16px */\nborder-top-right-radius: 1rem; /* 16px */\n\nrounded-t-3xl\tborder-top-left-radius: 1.5rem; /* 24px */\nborder-top-right-radius: 1.5rem; /* 24px */\n\nrounded-t-full\tborder-top-left-radius: 9999px;\nborder-top-right-radius: 9999px;\n\nrounded-r-none\tborder-top-right-radius: 0px;\nborder-bottom-right-radius: 0px;\n\nrounded-r-sm\tborder-top-right-radius: 0.125rem; /* 2px */\nborder-bottom-right-radius: 0.125rem; /* 2px */\n\nrounded-r\tborder-top-right-radius: 0.25rem; /* 4px */\nborder-bottom-right-radius: 0.25rem; /* 4px */\n\nrounded-r-md\tborder-top-right-radius: 0.375rem; /* 6px */\nborder-bottom-right-radius: 0.375rem; /* 6px */\n\nrounded-r-lg\tborder-top-right-radius: 0.5rem; /* 8px */\nborder-bottom-right-radius: 0.5rem; /* 8px */\n\nrounded-r-xl\tborder-top-right-radius: 0.75rem; /* 12px */\nborder-bottom-right-radius: 0.75rem; /* 12px */\n\nrounded-r-2xl\tborder-top-right-radius: 1rem; /* 16px */\nborder-bottom-right-radius: 1rem; /* 16px */\n\nrounded-r-3xl\tborder-top-right-radius: 1.5rem; /* 24px */\nborder-bottom-right-radius: 1.5rem; /* 24px */\n\nrounded-r-full\tborder-top-right-radius: 9999px;\nborder-bottom-right-radius: 9999px;\n\nrounded-b-none\tborder-bottom-right-radius: 0px;\nborder-bottom-left-radius: 0px;\n\nrounded-b-sm\tborder-bottom-right-radius: 0.125rem; /* 2px */\nborder-bottom-left-radius: 0.125rem; /* 2px */\n\nrounded-b\tborder-bottom-right-radius: 0.25rem; /* 4px */\nborder-bottom-left-radius: 0.25rem; /* 4px */\n\nrounded-b-md\tborder-bottom-right-radius: 0.375rem; /* 6px */\nborder-bottom-left-radius: 0.375rem; /* 6px */\n\nrounded-b-lg\tborder-bottom-right-radius: 0.5rem; /* 8px */\nborder-bottom-left-radius: 0.5rem; /* 8px */\n\nrounded-b-xl\tborder-bottom-right-radius: 0.75rem; /* 12px */\nborder-bottom-left-radius: 0.75rem; /* 12px */\n\nrounded-b-2xl\tborder-bottom-right-radius: 1rem; /* 16px */\nborder-bottom-left-radius: 1rem; /* 16px */\n\nrounded-b-3xl\tborder-bottom-right-radius: 1.5rem; /* 24px */\nborder-bottom-left-radius: 1.5rem; /* 24px */\n\nrounded-b-full\tborder-bottom-right-radius: 9999px;\nborder-bottom-left-radius: 9999px;\n\nrounded-l-none\tborder-top-left-radius: 0px;\nborder-bottom-left-radius: 0px;\n\nrounded-l-sm\tborder-top-left-radius: 0.125rem; /* 2px */\nborder-bottom-left-radius: 0.125rem; /* 2px */\n\nrounded-l\tborder-top-left-radius: 0.25rem; /* 4px */\nborder-bottom-left-radius: 0.25rem; /* 4px */\n\nrounded-l-md\tborder-top-left-radius: 0.375rem; /* 6px */\nborder-bottom-left-radius: 0.375rem; /* 6px */\n\nrounded-l-lg\tborder-top-left-radius: 0.5rem; /* 8px */\nborder-bottom-left-radius: 0.5rem; /* 8px */\n\nrounded-l-xl\tborder-top-left-radius: 0.75rem; /* 12px */\nborder-bottom-left-radius: 0.75rem; /* 12px */\n\nrounded-l-2xl\tborder-top-left-radius: 1rem; /* 16px */\nborder-bottom-left-radius: 1rem; /* 16px */\n\nrounded-l-3xl\tborder-top-left-radius: 1.5rem; /* 24px */\nborder-bottom-left-radius: 1.5rem; /* 24px */\n\nrounded-l-full\tborder-top-left-radius: 9999px;\nborder-bottom-left-radius: 9999px;\n\nrounded-ss-none\tborder-start-start-radius: 0px;\n\nrounded-ss-sm\tborder-start-start-radius: 0.125rem; /* 2px */\n\nrounded-ss\tborder-start-start-radius: 0.25rem; /* 4px */\n\nrounded-ss-md\tborder-start-start-radius: 0.375rem; /* 6px */\n\nrounded-ss-lg\tborder-start-start-radius: 0.5rem; /* 8px */\n\nrounded-ss-xl\tborder-start-start-radius: 0.75rem; /* 12px */\n\nrounded-ss-2xl\tborder-start-start-radius: 1rem; /* 16px */\n\nrounded-ss-3xl\tborder-start-start-radius: 1.5rem; /* 24px */\n\nrounded-ss-full\tborder-start-start-radius: 9999px;\n\nrounded-se-none\tborder-start-end-radius: 0px;\n\nrounded-se-sm\tborder-start-end-radius: 0.125rem; /* 2px */\n\nrounded-se\tborder-start-end-radius: 0.25rem; /* 4px */\n\nrounded-se-md\tborder-start-end-radius: 0.375rem; /* 6px */\n\nrounded-se-lg\tborder-start-end-radius: 0.5rem; /* 8px */\n\nrounded-se-xl\tborder-start-end-radius: 0.75rem; /* 12px */\n\nrounded-se-2xl\tborder-start-end-radius: 1rem; /* 16px */\n\nrounded-se-3xl\tborder-start-end-radius: 1.5rem; /* 24px */\n\nrounded-se-full\tborder-start-end-radius: 9999px;\n\nrounded-ee-none\tborder-end-end-radius: 0px;\n\nrounded-ee-sm\tborder-end-end-radius: 0.125rem; /* 2px */\n\nrounded-ee\tborder-end-end-radius: 0.25rem; /* 4px */\n\nrounded-ee-md\tborder-end-end-radius: 0.375rem; /* 6px */\n\nrounded-ee-lg\tborder-end-end-radius: 0.5rem; /* 8px */\n\nrounded-ee-xl\tborder-end-end-radius: 0.75rem; /* 12px */\n\nrounded-ee-2xl\tborder-end-end-radius: 1rem; /* 16px */\n\nrounded-ee-3xl\tborder-end-end-radius: 1.5rem; /* 24px */\n\nrounded-ee-full\tborder-end-end-radius: 9999px;\n\nrounded-es-none\tborder-end-start-radius: 0px;\n\nrounded-es-sm\tborder-end-start-radius: 0.125rem; /* 2px */\n\nrounded-es\tborder-end-start-radius: 0.25rem; /* 4px */\n\nrounded-es-md\tborder-end-start-radius: 0.375rem; /* 6px */\n\nrounded-es-lg\tborder-end-start-radius: 0.5rem; /* 8px */\n\nrounded-es-xl\tborder-end-start-radius: 0.75rem; /* 12px */\n\nrounded-es-2xl\tborder-end-start-radius: 1rem; /* 16px */\n\nrounded-es-3xl\tborder-end-start-radius: 1.5rem; /* 24px */\n\nrounded-es-full\tborder-end-start-radius: 9999px;\n\nrounded-tl-none\tborder-top-left-radius: 0px;\n\nrounded-tl-sm\tborder-top-left-radius: 0.125rem; /* 2px */\n\nrounded-tl\tborder-top-left-radius: 0.25rem; /* 4px */\n\nrounded-tl-md\tborder-top-left-radius: 0.375rem; /* 6px */\n\nrounded-tl-lg\tborder-top-left-radius: 0.5rem; /* 8px */\n\nrounded-tl-xl\tborder-top-left-radius: 0.75rem; /* 12px */\n\nrounded-tl-2xl\tborder-top-left-radius: 1rem; /* 16px */\n\nrounded-tl-3xl\tborder-top-left-radius: 1.5rem; /* 24px */\n\nrounded-tl-full\tborder-top-left-radius: 9999px;\n\nrounded-tr-none\tborder-top-right-radius: 0px;\n\nrounded-tr-sm\tborder-top-right-radius: 0.125rem; /* 2px */\n\nrounded-tr\tborder-top-right-radius: 0.25rem; /* 4px */\n\nrounded-tr-md\tborder-top-right-radius: 0.375rem; /* 6px */\n\nrounded-tr-lg\tborder-top-right-radius: 0.5rem; /* 8px */\n\nrounded-tr-xl\tborder-top-right-radius: 0.75rem; /* 12px */\n\nrounded-tr-2xl\tborder-top-right-radius: 1rem; /* 16px */\n\nrounded-tr-3xl\tborder-top-right-radius: 1.5rem; /* 24px */\n\nrounded-tr-full\tborder-top-right-radius: 9999px;\n\nrounded-br-none\tborder-bottom-right-radius: 0px;\n\nrounded-br-sm\tborder-bottom-right-radius: 0.125rem; /* 2px */\n\nrounded-br\tborder-bottom-right-radius: 0.25rem; /* 4px */\n\nrounded-br-md\tborder-bottom-right-radius: 0.375rem; /* 6px */\n\nrounded-br-lg\tborder-bottom-right-radius: 0.5rem; /* 8px */\n\nrounded-br-xl\tborder-bottom-right-radius: 0.75rem; /* 12px */\n\nrounded-br-2xl\tborder-bottom-right-radius: 1rem; /* 16px */\n\nrounded-br-3xl\tborder-bottom-right-radius: 1.5rem; /* 24px */\n\nrounded-br-full\tborder-bottom-right-radius: 9999px;\n\nrounded-bl-none\tborder-bottom-left-radius: 0px;\n\nrounded-bl-sm\tborder-bottom-left-radius: 0.125rem; /* 2px */\n\nrounded-bl\tborder-bottom-left-radius: 0.25rem; /* 4px */\n\nrounded-bl-md\tborder-bottom-left-radius: 0.375rem; /* 6px */\n\nrounded-bl-lg\tborder-bottom-left-radius: 0.5rem; /* 8px */\n\nrounded-bl-xl\tborder-bottom-left-radius: 0.75rem; /* 12px */\n\nrounded-bl-2xl\tborder-bottom-left-radius: 1rem; /* 16px */\n\nrounded-bl-3xl\tborder-bottom-left-radius: 1.5rem; /* 24px */\n\nrounded-bl-full\tborder-bottom-left-radius: 9999px;\n\n​\nBasic usage\n​\nRounded corners\n\nUse utilities like rounded-sm, rounded, or rounded-lg to apply different border radius sizes to an element.\n\nrounded\n\nrounded-md\n\nrounded-lg\n\nrounded-full\n\n<div class=\"rounded ...\"></div>\n<div class=\"rounded-md ...\"></div>\n<div class=\"rounded-lg ...\"></div>\n<div class=\"rounded-full ...\"></div>\n​\nPill buttons\n\nUse the rounded-full utility to create pill buttons.\n\nrounded-full\n\nSave Changes\n<button class=\"rounded-full ...\">Save Changes</button>\n​\nNo rounding\n\nUse rounded-none to remove an existing border radius from an element.\n\nrounded-none\n\nSave Changes\n<button class=\"rounded-none ...\">Save Changes</button>\n\nThis is most commonly used to remove a border radius that was applied at a smaller breakpoint.\n\n​\nRounding sides separately\n\nUse rounded-{t|r|b|l}{-size?} to only round one side of an element.\n\nrounded-t-lg\n\nrounded-r-lg\n\nrounded-b-lg\n\nrounded-l-lg\n\n<div class=\"rounded-t-lg ...\"></div>\n<div class=\"rounded-r-lg ...\"></div>\n<div class=\"rounded-b-lg ...\"></div>\n<div class=\"rounded-l-lg ...\"></div>\n​\nRounding corners separately\n\nUse rounded-{tl|tr|br|bl}{-size?} to only round one corner an element.\n\nrounded-tl-lg\n\nrounded-tr-lg\n\nrounded-br-lg\n\nrounded-bl-lg\n\n<div class=\"rounded-tl-lg ...\"></div>\n<div class=\"rounded-tr-lg ...\"></div>\n<div class=\"rounded-br-lg ...\"></div>\n<div class=\"rounded-bl-lg ...\"></div>\n​\nUsing logical properties\n\nUse the rounded-{s|e|ss|se|es|ee}{-size?} utilities to set the border radius using logical properties, which map to the appropriate corners based on the text direction.\n\nLeft-to-right\n\nRight-to-left\n\n<div dir=\"ltr\">\n  <div class=\"rounded-s-lg ...\"></div>\n<div>\n\n<div dir=\"rtl\">\n  <div class=\"rounded-s-lg ...\"></div>\n<div>\n\nHere are all the available border color logical property utilities and their physical property equivalents in both LTR and RTL modes.\n\nClass\tLeft-to-right\tRight-to-left\nrounded-s-*\trounded-l-*\trounded-r-*\nrounded-e-*\trounded-r-*\trounded-l-*\nrounded-ss-*\trounded-tl-*\trounded-tr-*\nrounded-se-*\trounded-tr-*\trounded-tl-*\nrounded-es-*\trounded-bl-*\trounded-br-*\nrounded-ee-*\trounded-br-*\trounded-bl-*\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:rounded-lg to only apply the rounded-lg utility on hover.\n\n<div class=\"rounded hover:rounded-lg\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:rounded-lg to apply the rounded-lg utility at only medium screen sizes and above.\n\n<div class=\"rounded md:rounded-lg\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides five border radius size utilities. You can change, add, or remove these by editing the theme.borderRadius section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    borderRadius: {\n\n      'none': '0',\n\n      'sm': '0.125rem',\n\n      DEFAULT: '0.25rem',\n\n      DEFAULT: '4px',\n\n      'md': '0.375rem',\n\n      'lg': '0.5rem',\n\n      'full': '9999px',\n\n      'large': '12px',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off border-radius value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"rounded-[12px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGradient Color Stops\nBorder Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRounded corners\nPill buttons\nNo rounding\nRounding sides separately\nRounding corners separately\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Border Style - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/border-style",
    "html": "Borders\n\nBorder Style\n\nUtilities for controlling the style of an element's borders.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nborder-solid\tborder-style: solid;\n\nborder-dashed\tborder-style: dashed;\n\nborder-dotted\tborder-style: dotted;\n\nborder-double\tborder-style: double;\n\nborder-hidden\tborder-style: hidden;\n\nborder-none\tborder-style: none;\n\n​\nBasic usage\n​\nSetting the border style\n\nUse border-{style} to control an element’s border style.\n\nborder-solid\n\nButton A\n\nborder-dashed\n\nButton A\n\nborder-dotted\n\nButton A\n\nborder-double\n\nButton A\n<div class=\"border-solid border-2 border-sky-500 ...\"></div>\n<div class=\"border-dashed border-2 border-sky-500 ...\"></div>\n<div class=\"border-dotted border-2 border-sky-500 ...\"></div>\n<div class=\"border-double border-4 border-sky-500 ...\"></div>\n​\nNo style\n\nUse border-none to remove an existing border style from an element.\n\nThis is most commonly used to remove a border style that was applied at a smaller breakpoint.\n\nSave Changes\n<button class=\"border-none ...\">Save Changes</button>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:border-dotted to only apply the border-dotted utility on hover.\n\n<div class=\"border-solid hover:border-dotted\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:border-dotted to apply the border-dotted utility at only medium screen sizes and above.\n\n<div class=\"border-solid md:border-dotted\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBorder Color\nDivide Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the border style\nNo style\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Gradient Color Stops - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/gradient-color-stops",
    "html": "Backgrounds\n\nGradient Color Stops\n\nUtilities for controlling the color stops in background gradients.\n\n​\nQuick reference\nClass\n\t\nProperties\n\t\nPreview\n \n\nfrom-inherit\t--tw-gradient-from: inherit var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-current\t--tw-gradient-from: currentColor var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-transparent\t--tw-gradient-from: transparent var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-black\t--tw-gradient-from: #000 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-white\t--tw-gradient-from: #fff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-50\t--tw-gradient-from: #f8fafc var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(248 250 252 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-100\t--tw-gradient-from: #f1f5f9 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(241 245 249 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-200\t--tw-gradient-from: #e2e8f0 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(226 232 240 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-300\t--tw-gradient-from: #cbd5e1 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(203 213 225 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-400\t--tw-gradient-from: #94a3b8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(148 163 184 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-500\t--tw-gradient-from: #64748b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(100 116 139 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-600\t--tw-gradient-from: #475569 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(71 85 105 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-700\t--tw-gradient-from: #334155 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(51 65 85 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-800\t--tw-gradient-from: #1e293b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(30 41 59 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-900\t--tw-gradient-from: #0f172a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(15 23 42 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-slate-950\t--tw-gradient-from: #020617 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(2 6 23 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-50\t--tw-gradient-from: #f9fafb var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(249 250 251 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-100\t--tw-gradient-from: #f3f4f6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(243 244 246 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-200\t--tw-gradient-from: #e5e7eb var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(229 231 235 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-300\t--tw-gradient-from: #d1d5db var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(209 213 219 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-400\t--tw-gradient-from: #9ca3af var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(156 163 175 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-500\t--tw-gradient-from: #6b7280 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(107 114 128 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-600\t--tw-gradient-from: #4b5563 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(75 85 99 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-700\t--tw-gradient-from: #374151 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(55 65 81 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-800\t--tw-gradient-from: #1f2937 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(31 41 55 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-900\t--tw-gradient-from: #111827 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-gray-950\t--tw-gradient-from: #030712 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(3 7 18 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-50\t--tw-gradient-from: #fafafa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(250 250 250 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-100\t--tw-gradient-from: #f4f4f5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(244 244 245 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-200\t--tw-gradient-from: #e4e4e7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(228 228 231 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-300\t--tw-gradient-from: #d4d4d8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(212 212 216 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-400\t--tw-gradient-from: #a1a1aa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(161 161 170 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-500\t--tw-gradient-from: #71717a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(113 113 122 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-600\t--tw-gradient-from: #52525b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(82 82 91 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-700\t--tw-gradient-from: #3f3f46 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(63 63 70 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-800\t--tw-gradient-from: #27272a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(39 39 42 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-900\t--tw-gradient-from: #18181b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(24 24 27 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-zinc-950\t--tw-gradient-from: #09090b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(9 9 11 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-50\t--tw-gradient-from: #fafafa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(250 250 250 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-100\t--tw-gradient-from: #f5f5f5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(245 245 245 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-200\t--tw-gradient-from: #e5e5e5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(229 229 229 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-300\t--tw-gradient-from: #d4d4d4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(212 212 212 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-400\t--tw-gradient-from: #a3a3a3 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(163 163 163 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-500\t--tw-gradient-from: #737373 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(115 115 115 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-600\t--tw-gradient-from: #525252 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(82 82 82 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-700\t--tw-gradient-from: #404040 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(64 64 64 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-800\t--tw-gradient-from: #262626 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(38 38 38 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-900\t--tw-gradient-from: #171717 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(23 23 23 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-neutral-950\t--tw-gradient-from: #0a0a0a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(10 10 10 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-50\t--tw-gradient-from: #fafaf9 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(250 250 249 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-100\t--tw-gradient-from: #f5f5f4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(245 245 244 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-200\t--tw-gradient-from: #e7e5e4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(231 229 228 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-300\t--tw-gradient-from: #d6d3d1 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(214 211 209 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-400\t--tw-gradient-from: #a8a29e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(168 162 158 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-500\t--tw-gradient-from: #78716c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(120 113 108 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-600\t--tw-gradient-from: #57534e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(87 83 78 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-700\t--tw-gradient-from: #44403c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(68 64 60 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-800\t--tw-gradient-from: #292524 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(41 37 36 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-900\t--tw-gradient-from: #1c1917 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(28 25 23 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-stone-950\t--tw-gradient-from: #0c0a09 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(12 10 9 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-50\t--tw-gradient-from: #fef2f2 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 242 242 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-100\t--tw-gradient-from: #fee2e2 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 226 226 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-200\t--tw-gradient-from: #fecaca var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 202 202 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-300\t--tw-gradient-from: #fca5a5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(252 165 165 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-400\t--tw-gradient-from: #f87171 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(248 113 113 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-500\t--tw-gradient-from: #ef4444 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-600\t--tw-gradient-from: #dc2626 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(220 38 38 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-700\t--tw-gradient-from: #b91c1c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(185 28 28 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-800\t--tw-gradient-from: #991b1b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(153 27 27 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-900\t--tw-gradient-from: #7f1d1d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(127 29 29 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-red-950\t--tw-gradient-from: #450a0a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(69 10 10 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-50\t--tw-gradient-from: #fff7ed var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 247 237 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-100\t--tw-gradient-from: #ffedd5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 237 213 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-200\t--tw-gradient-from: #fed7aa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 215 170 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-300\t--tw-gradient-from: #fdba74 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(253 186 116 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-400\t--tw-gradient-from: #fb923c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(251 146 60 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-500\t--tw-gradient-from: #f97316 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(249 115 22 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-600\t--tw-gradient-from: #ea580c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(234 88 12 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-700\t--tw-gradient-from: #c2410c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(194 65 12 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-800\t--tw-gradient-from: #9a3412 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(154 52 18 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-900\t--tw-gradient-from: #7c2d12 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(124 45 18 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-orange-950\t--tw-gradient-from: #431407 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(67 20 7 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-50\t--tw-gradient-from: #fffbeb var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 251 235 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-100\t--tw-gradient-from: #fef3c7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 243 199 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-200\t--tw-gradient-from: #fde68a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(253 230 138 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-300\t--tw-gradient-from: #fcd34d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(252 211 77 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-400\t--tw-gradient-from: #fbbf24 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(251 191 36 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-500\t--tw-gradient-from: #f59e0b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(245 158 11 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-600\t--tw-gradient-from: #d97706 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(217 119 6 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-700\t--tw-gradient-from: #b45309 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(180 83 9 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-800\t--tw-gradient-from: #92400e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(146 64 14 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-900\t--tw-gradient-from: #78350f var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(120 53 15 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-amber-950\t--tw-gradient-from: #451a03 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(69 26 3 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-50\t--tw-gradient-from: #fefce8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 252 232 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-100\t--tw-gradient-from: #fef9c3 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 249 195 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-200\t--tw-gradient-from: #fef08a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 240 138 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-300\t--tw-gradient-from: #fde047 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(253 224 71 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-400\t--tw-gradient-from: #facc15 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(250 204 21 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-500\t--tw-gradient-from: #eab308 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(234 179 8 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-600\t--tw-gradient-from: #ca8a04 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(202 138 4 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-700\t--tw-gradient-from: #a16207 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(161 98 7 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-800\t--tw-gradient-from: #854d0e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(133 77 14 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-900\t--tw-gradient-from: #713f12 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(113 63 18 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-yellow-950\t--tw-gradient-from: #422006 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(66 32 6 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-50\t--tw-gradient-from: #f7fee7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(247 254 231 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-100\t--tw-gradient-from: #ecfccb var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(236 252 203 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-200\t--tw-gradient-from: #d9f99d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(217 249 157 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-300\t--tw-gradient-from: #bef264 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(190 242 100 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-400\t--tw-gradient-from: #a3e635 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(163 230 53 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-500\t--tw-gradient-from: #84cc16 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(132 204 22 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-600\t--tw-gradient-from: #65a30d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(101 163 13 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-700\t--tw-gradient-from: #4d7c0f var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(77 124 15 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-800\t--tw-gradient-from: #3f6212 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(63 98 18 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-900\t--tw-gradient-from: #365314 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(54 83 20 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-lime-950\t--tw-gradient-from: #1a2e05 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(26 46 5 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-50\t--tw-gradient-from: #f0fdf4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(240 253 244 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-100\t--tw-gradient-from: #dcfce7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(220 252 231 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-200\t--tw-gradient-from: #bbf7d0 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(187 247 208 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-300\t--tw-gradient-from: #86efac var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(134 239 172 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-400\t--tw-gradient-from: #4ade80 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(74 222 128 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-500\t--tw-gradient-from: #22c55e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(34 197 94 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-600\t--tw-gradient-from: #16a34a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(22 163 74 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-700\t--tw-gradient-from: #15803d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(21 128 61 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-800\t--tw-gradient-from: #166534 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(22 101 52 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-900\t--tw-gradient-from: #14532d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(20 83 45 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-green-950\t--tw-gradient-from: #052e16 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(5 46 22 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-50\t--tw-gradient-from: #ecfdf5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(236 253 245 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-100\t--tw-gradient-from: #d1fae5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(209 250 229 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-200\t--tw-gradient-from: #a7f3d0 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(167 243 208 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-300\t--tw-gradient-from: #6ee7b7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(110 231 183 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-400\t--tw-gradient-from: #34d399 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(52 211 153 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-500\t--tw-gradient-from: #10b981 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(16 185 129 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-600\t--tw-gradient-from: #059669 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(5 150 105 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-700\t--tw-gradient-from: #047857 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(4 120 87 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-800\t--tw-gradient-from: #065f46 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(6 95 70 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-900\t--tw-gradient-from: #064e3b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(6 78 59 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-emerald-950\t--tw-gradient-from: #022c22 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(2 44 34 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-50\t--tw-gradient-from: #f0fdfa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(240 253 250 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-100\t--tw-gradient-from: #ccfbf1 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(204 251 241 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-200\t--tw-gradient-from: #99f6e4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(153 246 228 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-300\t--tw-gradient-from: #5eead4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(94 234 212 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-400\t--tw-gradient-from: #2dd4bf var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(45 212 191 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-500\t--tw-gradient-from: #14b8a6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(20 184 166 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-600\t--tw-gradient-from: #0d9488 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(13 148 136 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-700\t--tw-gradient-from: #0f766e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(15 118 110 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-800\t--tw-gradient-from: #115e59 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(17 94 89 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-900\t--tw-gradient-from: #134e4a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(19 78 74 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-teal-950\t--tw-gradient-from: #042f2e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(4 47 46 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-50\t--tw-gradient-from: #ecfeff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(236 254 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-100\t--tw-gradient-from: #cffafe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(207 250 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-200\t--tw-gradient-from: #a5f3fc var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(165 243 252 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-300\t--tw-gradient-from: #67e8f9 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(103 232 249 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-400\t--tw-gradient-from: #22d3ee var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(34 211 238 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-500\t--tw-gradient-from: #06b6d4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(6 182 212 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-600\t--tw-gradient-from: #0891b2 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(8 145 178 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-700\t--tw-gradient-from: #0e7490 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(14 116 144 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-800\t--tw-gradient-from: #155e75 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(21 94 117 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-900\t--tw-gradient-from: #164e63 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(22 78 99 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-cyan-950\t--tw-gradient-from: #083344 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(8 51 68 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-50\t--tw-gradient-from: #f0f9ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(240 249 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-100\t--tw-gradient-from: #e0f2fe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(224 242 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-200\t--tw-gradient-from: #bae6fd var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(186 230 253 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-300\t--tw-gradient-from: #7dd3fc var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(125 211 252 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-400\t--tw-gradient-from: #38bdf8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(56 189 248 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-500\t--tw-gradient-from: #0ea5e9 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(14 165 233 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-600\t--tw-gradient-from: #0284c7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(2 132 199 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-700\t--tw-gradient-from: #0369a1 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(3 105 161 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-800\t--tw-gradient-from: #075985 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(7 89 133 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-900\t--tw-gradient-from: #0c4a6e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(12 74 110 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-sky-950\t--tw-gradient-from: #082f49 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(8 47 73 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-50\t--tw-gradient-from: #eff6ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(239 246 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-100\t--tw-gradient-from: #dbeafe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(219 234 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-200\t--tw-gradient-from: #bfdbfe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(191 219 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-300\t--tw-gradient-from: #93c5fd var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(147 197 253 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-400\t--tw-gradient-from: #60a5fa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(96 165 250 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-500\t--tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-600\t--tw-gradient-from: #2563eb var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(37 99 235 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-700\t--tw-gradient-from: #1d4ed8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(29 78 216 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-800\t--tw-gradient-from: #1e40af var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(30 64 175 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-900\t--tw-gradient-from: #1e3a8a var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(30 58 138 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-blue-950\t--tw-gradient-from: #172554 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(23 37 84 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-50\t--tw-gradient-from: #eef2ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(238 242 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-100\t--tw-gradient-from: #e0e7ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(224 231 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-200\t--tw-gradient-from: #c7d2fe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(199 210 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-300\t--tw-gradient-from: #a5b4fc var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(165 180 252 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-400\t--tw-gradient-from: #818cf8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(129 140 248 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-500\t--tw-gradient-from: #6366f1 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(99 102 241 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-600\t--tw-gradient-from: #4f46e5 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(79 70 229 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-700\t--tw-gradient-from: #4338ca var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(67 56 202 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-800\t--tw-gradient-from: #3730a3 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(55 48 163 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-900\t--tw-gradient-from: #312e81 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(49 46 129 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-indigo-950\t--tw-gradient-from: #1e1b4b var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(30 27 75 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-50\t--tw-gradient-from: #f5f3ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(245 243 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-100\t--tw-gradient-from: #ede9fe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(237 233 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-200\t--tw-gradient-from: #ddd6fe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(221 214 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-300\t--tw-gradient-from: #c4b5fd var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(196 181 253 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-400\t--tw-gradient-from: #a78bfa var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(167 139 250 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-500\t--tw-gradient-from: #8b5cf6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(139 92 246 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-600\t--tw-gradient-from: #7c3aed var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(124 58 237 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-700\t--tw-gradient-from: #6d28d9 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(109 40 217 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-800\t--tw-gradient-from: #5b21b6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(91 33 182 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-900\t--tw-gradient-from: #4c1d95 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(76 29 149 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-violet-950\t--tw-gradient-from: #2e1065 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(46 16 101 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-50\t--tw-gradient-from: #faf5ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(250 245 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-100\t--tw-gradient-from: #f3e8ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(243 232 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-200\t--tw-gradient-from: #e9d5ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(233 213 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-300\t--tw-gradient-from: #d8b4fe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(216 180 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-400\t--tw-gradient-from: #c084fc var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(192 132 252 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-500\t--tw-gradient-from: #a855f7 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(168 85 247 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-600\t--tw-gradient-from: #9333ea var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(147 51 234 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-700\t--tw-gradient-from: #7e22ce var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(126 34 206 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-800\t--tw-gradient-from: #6b21a8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(107 33 168 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-900\t--tw-gradient-from: #581c87 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(88 28 135 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-purple-950\t--tw-gradient-from: #3b0764 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(59 7 100 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-50\t--tw-gradient-from: #fdf4ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(253 244 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-100\t--tw-gradient-from: #fae8ff var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(250 232 255 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-200\t--tw-gradient-from: #f5d0fe var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(245 208 254 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-300\t--tw-gradient-from: #f0abfc var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(240 171 252 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-400\t--tw-gradient-from: #e879f9 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(232 121 249 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-500\t--tw-gradient-from: #d946ef var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(217 70 239 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-600\t--tw-gradient-from: #c026d3 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(192 38 211 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-700\t--tw-gradient-from: #a21caf var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(162 28 175 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-800\t--tw-gradient-from: #86198f var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(134 25 143 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-900\t--tw-gradient-from: #701a75 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(112 26 117 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-fuchsia-950\t--tw-gradient-from: #4a044e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(74 4 78 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-50\t--tw-gradient-from: #fdf2f8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(253 242 248 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-100\t--tw-gradient-from: #fce7f3 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(252 231 243 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-200\t--tw-gradient-from: #fbcfe8 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(251 207 232 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-300\t--tw-gradient-from: #f9a8d4 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(249 168 212 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-400\t--tw-gradient-from: #f472b6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(244 114 182 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-500\t--tw-gradient-from: #ec4899 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(236 72 153 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-600\t--tw-gradient-from: #db2777 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(219 39 119 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-700\t--tw-gradient-from: #be185d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(190 24 93 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-800\t--tw-gradient-from: #9d174d var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(157 23 77 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-900\t--tw-gradient-from: #831843 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(131 24 67 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-pink-950\t--tw-gradient-from: #500724 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(80 7 36 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-50\t--tw-gradient-from: #fff1f2 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 241 242 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-100\t--tw-gradient-from: #ffe4e6 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(255 228 230 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-200\t--tw-gradient-from: #fecdd3 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(254 205 211 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-300\t--tw-gradient-from: #fda4af var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(253 164 175 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-400\t--tw-gradient-from: #fb7185 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(251 113 133 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-500\t--tw-gradient-from: #f43f5e var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(244 63 94 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-600\t--tw-gradient-from: #e11d48 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(225 29 72 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-700\t--tw-gradient-from: #be123c var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(190 18 60 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-800\t--tw-gradient-from: #9f1239 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(159 18 57 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-900\t--tw-gradient-from: #881337 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(136 19 55 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-rose-950\t--tw-gradient-from: #4c0519 var(--tw-gradient-from-position);\n--tw-gradient-to: rgb(76 5 25 / 0) var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n\t\n\nfrom-0%\t--tw-gradient-from-position: 0%;\n\t\n\nfrom-5%\t--tw-gradient-from-position: 5%;\n\t\n\nfrom-10%\t--tw-gradient-from-position: 10%;\n\t\n\nfrom-15%\t--tw-gradient-from-position: 15%;\n\t\n\nfrom-20%\t--tw-gradient-from-position: 20%;\n\t\n\nfrom-25%\t--tw-gradient-from-position: 25%;\n\t\n\nfrom-30%\t--tw-gradient-from-position: 30%;\n\t\n\nfrom-35%\t--tw-gradient-from-position: 35%;\n\t\n\nfrom-40%\t--tw-gradient-from-position: 40%;\n\t\n\nfrom-45%\t--tw-gradient-from-position: 45%;\n\t\n\nfrom-50%\t--tw-gradient-from-position: 50%;\n\t\n\nfrom-55%\t--tw-gradient-from-position: 55%;\n\t\n\nfrom-60%\t--tw-gradient-from-position: 60%;\n\t\n\nfrom-65%\t--tw-gradient-from-position: 65%;\n\t\n\nfrom-70%\t--tw-gradient-from-position: 70%;\n\t\n\nfrom-75%\t--tw-gradient-from-position: 75%;\n\t\n\nfrom-80%\t--tw-gradient-from-position: 80%;\n\t\n\nfrom-85%\t--tw-gradient-from-position: 85%;\n\t\n\nfrom-90%\t--tw-gradient-from-position: 90%;\n\t\n\nfrom-95%\t--tw-gradient-from-position: 95%;\n\t\n\nfrom-100%\t--tw-gradient-from-position: 100%;\n\t\n\nvia-inherit\t--tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), inherit var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-current\t--tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), currentColor var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-transparent\t--tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), transparent var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-black\t--tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #000 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-white\t--tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-50\t--tw-gradient-to: rgb(248 250 252 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f8fafc var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-100\t--tw-gradient-to: rgb(241 245 249 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f1f5f9 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-200\t--tw-gradient-to: rgb(226 232 240 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e2e8f0 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-300\t--tw-gradient-to: rgb(203 213 225 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #cbd5e1 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-400\t--tw-gradient-to: rgb(148 163 184 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #94a3b8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-500\t--tw-gradient-to: rgb(100 116 139 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #64748b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-600\t--tw-gradient-to: rgb(71 85 105 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #475569 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-700\t--tw-gradient-to: rgb(51 65 85 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #334155 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-800\t--tw-gradient-to: rgb(30 41 59 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1e293b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-900\t--tw-gradient-to: rgb(15 23 42 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0f172a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-slate-950\t--tw-gradient-to: rgb(2 6 23 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #020617 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-50\t--tw-gradient-to: rgb(249 250 251 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f9fafb var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-100\t--tw-gradient-to: rgb(243 244 246 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f3f4f6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-200\t--tw-gradient-to: rgb(229 231 235 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e5e7eb var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-300\t--tw-gradient-to: rgb(209 213 219 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d1d5db var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-400\t--tw-gradient-to: rgb(156 163 175 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #9ca3af var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-500\t--tw-gradient-to: rgb(107 114 128 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #6b7280 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-600\t--tw-gradient-to: rgb(75 85 99 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4b5563 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-700\t--tw-gradient-to: rgb(55 65 81 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #374151 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-800\t--tw-gradient-to: rgb(31 41 55 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1f2937 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-900\t--tw-gradient-to: rgb(17 24 39 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #111827 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-gray-950\t--tw-gradient-to: rgb(3 7 18 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #030712 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-50\t--tw-gradient-to: rgb(250 250 250 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fafafa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-100\t--tw-gradient-to: rgb(244 244 245 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f4f4f5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-200\t--tw-gradient-to: rgb(228 228 231 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e4e4e7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-300\t--tw-gradient-to: rgb(212 212 216 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d4d4d8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-400\t--tw-gradient-to: rgb(161 161 170 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a1a1aa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-500\t--tw-gradient-to: rgb(113 113 122 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #71717a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-600\t--tw-gradient-to: rgb(82 82 91 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #52525b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-700\t--tw-gradient-to: rgb(63 63 70 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #3f3f46 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-800\t--tw-gradient-to: rgb(39 39 42 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #27272a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-900\t--tw-gradient-to: rgb(24 24 27 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #18181b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-zinc-950\t--tw-gradient-to: rgb(9 9 11 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #09090b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-50\t--tw-gradient-to: rgb(250 250 250 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fafafa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-100\t--tw-gradient-to: rgb(245 245 245 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f5f5f5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-200\t--tw-gradient-to: rgb(229 229 229 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e5e5e5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-300\t--tw-gradient-to: rgb(212 212 212 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d4d4d4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-400\t--tw-gradient-to: rgb(163 163 163 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a3a3a3 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-500\t--tw-gradient-to: rgb(115 115 115 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #737373 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-600\t--tw-gradient-to: rgb(82 82 82 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #525252 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-700\t--tw-gradient-to: rgb(64 64 64 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #404040 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-800\t--tw-gradient-to: rgb(38 38 38 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #262626 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-900\t--tw-gradient-to: rgb(23 23 23 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #171717 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-neutral-950\t--tw-gradient-to: rgb(10 10 10 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0a0a0a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-50\t--tw-gradient-to: rgb(250 250 249 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fafaf9 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-100\t--tw-gradient-to: rgb(245 245 244 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f5f5f4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-200\t--tw-gradient-to: rgb(231 229 228 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e7e5e4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-300\t--tw-gradient-to: rgb(214 211 209 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d6d3d1 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-400\t--tw-gradient-to: rgb(168 162 158 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a8a29e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-500\t--tw-gradient-to: rgb(120 113 108 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #78716c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-600\t--tw-gradient-to: rgb(87 83 78 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #57534e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-700\t--tw-gradient-to: rgb(68 64 60 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #44403c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-800\t--tw-gradient-to: rgb(41 37 36 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #292524 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-900\t--tw-gradient-to: rgb(28 25 23 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1c1917 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-stone-950\t--tw-gradient-to: rgb(12 10 9 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0c0a09 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-50\t--tw-gradient-to: rgb(254 242 242 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fef2f2 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-100\t--tw-gradient-to: rgb(254 226 226 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fee2e2 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-200\t--tw-gradient-to: rgb(254 202 202 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fecaca var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-300\t--tw-gradient-to: rgb(252 165 165 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fca5a5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-400\t--tw-gradient-to: rgb(248 113 113 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f87171 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-500\t--tw-gradient-to: rgb(239 68 68 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ef4444 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-600\t--tw-gradient-to: rgb(220 38 38 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #dc2626 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-700\t--tw-gradient-to: rgb(185 28 28 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #b91c1c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-800\t--tw-gradient-to: rgb(153 27 27 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #991b1b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-900\t--tw-gradient-to: rgb(127 29 29 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #7f1d1d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-red-950\t--tw-gradient-to: rgb(69 10 10 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #450a0a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-50\t--tw-gradient-to: rgb(255 247 237 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fff7ed var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-100\t--tw-gradient-to: rgb(255 237 213 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ffedd5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-200\t--tw-gradient-to: rgb(254 215 170 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fed7aa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-300\t--tw-gradient-to: rgb(253 186 116 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fdba74 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-400\t--tw-gradient-to: rgb(251 146 60 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fb923c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-500\t--tw-gradient-to: rgb(249 115 22 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f97316 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-600\t--tw-gradient-to: rgb(234 88 12 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ea580c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-700\t--tw-gradient-to: rgb(194 65 12 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #c2410c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-800\t--tw-gradient-to: rgb(154 52 18 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #9a3412 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-900\t--tw-gradient-to: rgb(124 45 18 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #7c2d12 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-orange-950\t--tw-gradient-to: rgb(67 20 7 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #431407 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-50\t--tw-gradient-to: rgb(255 251 235 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fffbeb var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-100\t--tw-gradient-to: rgb(254 243 199 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fef3c7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-200\t--tw-gradient-to: rgb(253 230 138 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fde68a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-300\t--tw-gradient-to: rgb(252 211 77 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fcd34d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-400\t--tw-gradient-to: rgb(251 191 36 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fbbf24 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-500\t--tw-gradient-to: rgb(245 158 11 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f59e0b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-600\t--tw-gradient-to: rgb(217 119 6 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d97706 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-700\t--tw-gradient-to: rgb(180 83 9 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #b45309 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-800\t--tw-gradient-to: rgb(146 64 14 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #92400e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-900\t--tw-gradient-to: rgb(120 53 15 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #78350f var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-amber-950\t--tw-gradient-to: rgb(69 26 3 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #451a03 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-50\t--tw-gradient-to: rgb(254 252 232 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fefce8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-100\t--tw-gradient-to: rgb(254 249 195 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fef9c3 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-200\t--tw-gradient-to: rgb(254 240 138 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fef08a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-300\t--tw-gradient-to: rgb(253 224 71 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fde047 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-400\t--tw-gradient-to: rgb(250 204 21 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #facc15 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-500\t--tw-gradient-to: rgb(234 179 8 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #eab308 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-600\t--tw-gradient-to: rgb(202 138 4 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ca8a04 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-700\t--tw-gradient-to: rgb(161 98 7 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a16207 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-800\t--tw-gradient-to: rgb(133 77 14 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #854d0e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-900\t--tw-gradient-to: rgb(113 63 18 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #713f12 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-yellow-950\t--tw-gradient-to: rgb(66 32 6 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #422006 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-50\t--tw-gradient-to: rgb(247 254 231 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f7fee7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-100\t--tw-gradient-to: rgb(236 252 203 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ecfccb var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-200\t--tw-gradient-to: rgb(217 249 157 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d9f99d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-300\t--tw-gradient-to: rgb(190 242 100 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #bef264 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-400\t--tw-gradient-to: rgb(163 230 53 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a3e635 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-500\t--tw-gradient-to: rgb(132 204 22 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #84cc16 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-600\t--tw-gradient-to: rgb(101 163 13 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #65a30d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-700\t--tw-gradient-to: rgb(77 124 15 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4d7c0f var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-800\t--tw-gradient-to: rgb(63 98 18 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #3f6212 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-900\t--tw-gradient-to: rgb(54 83 20 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #365314 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-lime-950\t--tw-gradient-to: rgb(26 46 5 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1a2e05 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-50\t--tw-gradient-to: rgb(240 253 244 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f0fdf4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-100\t--tw-gradient-to: rgb(220 252 231 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #dcfce7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-200\t--tw-gradient-to: rgb(187 247 208 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #bbf7d0 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-300\t--tw-gradient-to: rgb(134 239 172 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #86efac var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-400\t--tw-gradient-to: rgb(74 222 128 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4ade80 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-500\t--tw-gradient-to: rgb(34 197 94 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #22c55e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-600\t--tw-gradient-to: rgb(22 163 74 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #16a34a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-700\t--tw-gradient-to: rgb(21 128 61 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #15803d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-800\t--tw-gradient-to: rgb(22 101 52 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #166534 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-900\t--tw-gradient-to: rgb(20 83 45 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #14532d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-green-950\t--tw-gradient-to: rgb(5 46 22 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #052e16 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-50\t--tw-gradient-to: rgb(236 253 245 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ecfdf5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-100\t--tw-gradient-to: rgb(209 250 229 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d1fae5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-200\t--tw-gradient-to: rgb(167 243 208 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a7f3d0 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-300\t--tw-gradient-to: rgb(110 231 183 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #6ee7b7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-400\t--tw-gradient-to: rgb(52 211 153 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #34d399 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-500\t--tw-gradient-to: rgb(16 185 129 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #10b981 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-600\t--tw-gradient-to: rgb(5 150 105 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #059669 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-700\t--tw-gradient-to: rgb(4 120 87 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #047857 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-800\t--tw-gradient-to: rgb(6 95 70 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #065f46 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-900\t--tw-gradient-to: rgb(6 78 59 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #064e3b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-emerald-950\t--tw-gradient-to: rgb(2 44 34 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #022c22 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-50\t--tw-gradient-to: rgb(240 253 250 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f0fdfa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-100\t--tw-gradient-to: rgb(204 251 241 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ccfbf1 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-200\t--tw-gradient-to: rgb(153 246 228 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #99f6e4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-300\t--tw-gradient-to: rgb(94 234 212 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #5eead4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-400\t--tw-gradient-to: rgb(45 212 191 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #2dd4bf var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-500\t--tw-gradient-to: rgb(20 184 166 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #14b8a6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-600\t--tw-gradient-to: rgb(13 148 136 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0d9488 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-700\t--tw-gradient-to: rgb(15 118 110 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0f766e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-800\t--tw-gradient-to: rgb(17 94 89 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #115e59 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-900\t--tw-gradient-to: rgb(19 78 74 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #134e4a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-teal-950\t--tw-gradient-to: rgb(4 47 46 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #042f2e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-50\t--tw-gradient-to: rgb(236 254 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ecfeff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-100\t--tw-gradient-to: rgb(207 250 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #cffafe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-200\t--tw-gradient-to: rgb(165 243 252 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a5f3fc var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-300\t--tw-gradient-to: rgb(103 232 249 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #67e8f9 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-400\t--tw-gradient-to: rgb(34 211 238 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #22d3ee var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-500\t--tw-gradient-to: rgb(6 182 212 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #06b6d4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-600\t--tw-gradient-to: rgb(8 145 178 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0891b2 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-700\t--tw-gradient-to: rgb(14 116 144 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0e7490 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-800\t--tw-gradient-to: rgb(21 94 117 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #155e75 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-900\t--tw-gradient-to: rgb(22 78 99 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #164e63 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-cyan-950\t--tw-gradient-to: rgb(8 51 68 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #083344 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-50\t--tw-gradient-to: rgb(240 249 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f0f9ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-100\t--tw-gradient-to: rgb(224 242 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e0f2fe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-200\t--tw-gradient-to: rgb(186 230 253 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #bae6fd var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-300\t--tw-gradient-to: rgb(125 211 252 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #7dd3fc var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-400\t--tw-gradient-to: rgb(56 189 248 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #38bdf8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-500\t--tw-gradient-to: rgb(14 165 233 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0ea5e9 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-600\t--tw-gradient-to: rgb(2 132 199 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0284c7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-700\t--tw-gradient-to: rgb(3 105 161 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0369a1 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-800\t--tw-gradient-to: rgb(7 89 133 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #075985 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-900\t--tw-gradient-to: rgb(12 74 110 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #0c4a6e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-sky-950\t--tw-gradient-to: rgb(8 47 73 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #082f49 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-50\t--tw-gradient-to: rgb(239 246 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #eff6ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-100\t--tw-gradient-to: rgb(219 234 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #dbeafe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-200\t--tw-gradient-to: rgb(191 219 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #bfdbfe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-300\t--tw-gradient-to: rgb(147 197 253 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #93c5fd var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-400\t--tw-gradient-to: rgb(96 165 250 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #60a5fa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-500\t--tw-gradient-to: rgb(59 130 246 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #3b82f6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-600\t--tw-gradient-to: rgb(37 99 235 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #2563eb var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-700\t--tw-gradient-to: rgb(29 78 216 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1d4ed8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-800\t--tw-gradient-to: rgb(30 64 175 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1e40af var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-900\t--tw-gradient-to: rgb(30 58 138 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1e3a8a var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-blue-950\t--tw-gradient-to: rgb(23 37 84 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #172554 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-50\t--tw-gradient-to: rgb(238 242 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #eef2ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-100\t--tw-gradient-to: rgb(224 231 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e0e7ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-200\t--tw-gradient-to: rgb(199 210 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #c7d2fe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-300\t--tw-gradient-to: rgb(165 180 252 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a5b4fc var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-400\t--tw-gradient-to: rgb(129 140 248 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #818cf8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-500\t--tw-gradient-to: rgb(99 102 241 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #6366f1 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-600\t--tw-gradient-to: rgb(79 70 229 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4f46e5 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-700\t--tw-gradient-to: rgb(67 56 202 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4338ca var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-800\t--tw-gradient-to: rgb(55 48 163 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #3730a3 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-900\t--tw-gradient-to: rgb(49 46 129 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #312e81 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-indigo-950\t--tw-gradient-to: rgb(30 27 75 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #1e1b4b var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-50\t--tw-gradient-to: rgb(245 243 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f5f3ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-100\t--tw-gradient-to: rgb(237 233 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ede9fe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-200\t--tw-gradient-to: rgb(221 214 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ddd6fe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-300\t--tw-gradient-to: rgb(196 181 253 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #c4b5fd var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-400\t--tw-gradient-to: rgb(167 139 250 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a78bfa var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-500\t--tw-gradient-to: rgb(139 92 246 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #8b5cf6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-600\t--tw-gradient-to: rgb(124 58 237 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #7c3aed var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-700\t--tw-gradient-to: rgb(109 40 217 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #6d28d9 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-800\t--tw-gradient-to: rgb(91 33 182 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #5b21b6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-900\t--tw-gradient-to: rgb(76 29 149 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4c1d95 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-violet-950\t--tw-gradient-to: rgb(46 16 101 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #2e1065 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-50\t--tw-gradient-to: rgb(250 245 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #faf5ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-100\t--tw-gradient-to: rgb(243 232 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f3e8ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-200\t--tw-gradient-to: rgb(233 213 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e9d5ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-300\t--tw-gradient-to: rgb(216 180 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d8b4fe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-400\t--tw-gradient-to: rgb(192 132 252 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #c084fc var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-500\t--tw-gradient-to: rgb(168 85 247 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a855f7 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-600\t--tw-gradient-to: rgb(147 51 234 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #9333ea var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-700\t--tw-gradient-to: rgb(126 34 206 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #7e22ce var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-800\t--tw-gradient-to: rgb(107 33 168 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #6b21a8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-900\t--tw-gradient-to: rgb(88 28 135 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #581c87 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-purple-950\t--tw-gradient-to: rgb(59 7 100 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #3b0764 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-50\t--tw-gradient-to: rgb(253 244 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fdf4ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-100\t--tw-gradient-to: rgb(250 232 255 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fae8ff var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-200\t--tw-gradient-to: rgb(245 208 254 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f5d0fe var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-300\t--tw-gradient-to: rgb(240 171 252 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f0abfc var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-400\t--tw-gradient-to: rgb(232 121 249 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e879f9 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-500\t--tw-gradient-to: rgb(217 70 239 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #d946ef var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-600\t--tw-gradient-to: rgb(192 38 211 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #c026d3 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-700\t--tw-gradient-to: rgb(162 28 175 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #a21caf var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-800\t--tw-gradient-to: rgb(134 25 143 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #86198f var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-900\t--tw-gradient-to: rgb(112 26 117 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #701a75 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-fuchsia-950\t--tw-gradient-to: rgb(74 4 78 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4a044e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-50\t--tw-gradient-to: rgb(253 242 248 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fdf2f8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-100\t--tw-gradient-to: rgb(252 231 243 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fce7f3 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-200\t--tw-gradient-to: rgb(251 207 232 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fbcfe8 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-300\t--tw-gradient-to: rgb(249 168 212 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f9a8d4 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-400\t--tw-gradient-to: rgb(244 114 182 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f472b6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-500\t--tw-gradient-to: rgb(236 72 153 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ec4899 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-600\t--tw-gradient-to: rgb(219 39 119 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #db2777 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-700\t--tw-gradient-to: rgb(190 24 93 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #be185d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-800\t--tw-gradient-to: rgb(157 23 77 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #9d174d var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-900\t--tw-gradient-to: rgb(131 24 67 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #831843 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-pink-950\t--tw-gradient-to: rgb(80 7 36 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #500724 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-50\t--tw-gradient-to: rgb(255 241 242 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fff1f2 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-100\t--tw-gradient-to: rgb(255 228 230 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #ffe4e6 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-200\t--tw-gradient-to: rgb(254 205 211 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fecdd3 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-300\t--tw-gradient-to: rgb(253 164 175 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fda4af var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-400\t--tw-gradient-to: rgb(251 113 133 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #fb7185 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-500\t--tw-gradient-to: rgb(244 63 94 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #f43f5e var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-600\t--tw-gradient-to: rgb(225 29 72 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #e11d48 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-700\t--tw-gradient-to: rgb(190 18 60 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #be123c var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-800\t--tw-gradient-to: rgb(159 18 57 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #9f1239 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-900\t--tw-gradient-to: rgb(136 19 55 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #881337 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-rose-950\t--tw-gradient-to: rgb(76 5 25 / 0)  var(--tw-gradient-to-position);\n--tw-gradient-stops: var(--tw-gradient-from), #4c0519 var(--tw-gradient-via-position), var(--tw-gradient-to);\n\t\n\nvia-0%\t--tw-gradient-via-position: 0%;\n\t\n\nvia-5%\t--tw-gradient-via-position: 5%;\n\t\n\nvia-10%\t--tw-gradient-via-position: 10%;\n\t\n\nvia-15%\t--tw-gradient-via-position: 15%;\n\t\n\nvia-20%\t--tw-gradient-via-position: 20%;\n\t\n\nvia-25%\t--tw-gradient-via-position: 25%;\n\t\n\nvia-30%\t--tw-gradient-via-position: 30%;\n\t\n\nvia-35%\t--tw-gradient-via-position: 35%;\n\t\n\nvia-40%\t--tw-gradient-via-position: 40%;\n\t\n\nvia-45%\t--tw-gradient-via-position: 45%;\n\t\n\nvia-50%\t--tw-gradient-via-position: 50%;\n\t\n\nvia-55%\t--tw-gradient-via-position: 55%;\n\t\n\nvia-60%\t--tw-gradient-via-position: 60%;\n\t\n\nvia-65%\t--tw-gradient-via-position: 65%;\n\t\n\nvia-70%\t--tw-gradient-via-position: 70%;\n\t\n\nvia-75%\t--tw-gradient-via-position: 75%;\n\t\n\nvia-80%\t--tw-gradient-via-position: 80%;\n\t\n\nvia-85%\t--tw-gradient-via-position: 85%;\n\t\n\nvia-90%\t--tw-gradient-via-position: 90%;\n\t\n\nvia-95%\t--tw-gradient-via-position: 95%;\n\t\n\nvia-100%\t--tw-gradient-via-position: 100%;\n\t\n\nto-inherit\t--tw-gradient-to: inherit var(--tw-gradient-to-position);\n\t\n\nto-current\t--tw-gradient-to: currentColor var(--tw-gradient-to-position);\n\t\n\nto-transparent\t--tw-gradient-to: transparent var(--tw-gradient-to-position);\n\t\n\nto-black\t--tw-gradient-to: #000 var(--tw-gradient-to-position);\n\t\n\nto-white\t--tw-gradient-to: #fff var(--tw-gradient-to-position);\n\t\n\nto-slate-50\t--tw-gradient-to: #f8fafc var(--tw-gradient-to-position);\n\t\n\nto-slate-100\t--tw-gradient-to: #f1f5f9 var(--tw-gradient-to-position);\n\t\n\nto-slate-200\t--tw-gradient-to: #e2e8f0 var(--tw-gradient-to-position);\n\t\n\nto-slate-300\t--tw-gradient-to: #cbd5e1 var(--tw-gradient-to-position);\n\t\n\nto-slate-400\t--tw-gradient-to: #94a3b8 var(--tw-gradient-to-position);\n\t\n\nto-slate-500\t--tw-gradient-to: #64748b var(--tw-gradient-to-position);\n\t\n\nto-slate-600\t--tw-gradient-to: #475569 var(--tw-gradient-to-position);\n\t\n\nto-slate-700\t--tw-gradient-to: #334155 var(--tw-gradient-to-position);\n\t\n\nto-slate-800\t--tw-gradient-to: #1e293b var(--tw-gradient-to-position);\n\t\n\nto-slate-900\t--tw-gradient-to: #0f172a var(--tw-gradient-to-position);\n\t\n\nto-slate-950\t--tw-gradient-to: #020617 var(--tw-gradient-to-position);\n\t\n\nto-gray-50\t--tw-gradient-to: #f9fafb var(--tw-gradient-to-position);\n\t\n\nto-gray-100\t--tw-gradient-to: #f3f4f6 var(--tw-gradient-to-position);\n\t\n\nto-gray-200\t--tw-gradient-to: #e5e7eb var(--tw-gradient-to-position);\n\t\n\nto-gray-300\t--tw-gradient-to: #d1d5db var(--tw-gradient-to-position);\n\t\n\nto-gray-400\t--tw-gradient-to: #9ca3af var(--tw-gradient-to-position);\n\t\n\nto-gray-500\t--tw-gradient-to: #6b7280 var(--tw-gradient-to-position);\n\t\n\nto-gray-600\t--tw-gradient-to: #4b5563 var(--tw-gradient-to-position);\n\t\n\nto-gray-700\t--tw-gradient-to: #374151 var(--tw-gradient-to-position);\n\t\n\nto-gray-800\t--tw-gradient-to: #1f2937 var(--tw-gradient-to-position);\n\t\n\nto-gray-900\t--tw-gradient-to: #111827 var(--tw-gradient-to-position);\n\t\n\nto-gray-950\t--tw-gradient-to: #030712 var(--tw-gradient-to-position);\n\t\n\nto-zinc-50\t--tw-gradient-to: #fafafa var(--tw-gradient-to-position);\n\t\n\nto-zinc-100\t--tw-gradient-to: #f4f4f5 var(--tw-gradient-to-position);\n\t\n\nto-zinc-200\t--tw-gradient-to: #e4e4e7 var(--tw-gradient-to-position);\n\t\n\nto-zinc-300\t--tw-gradient-to: #d4d4d8 var(--tw-gradient-to-position);\n\t\n\nto-zinc-400\t--tw-gradient-to: #a1a1aa var(--tw-gradient-to-position);\n\t\n\nto-zinc-500\t--tw-gradient-to: #71717a var(--tw-gradient-to-position);\n\t\n\nto-zinc-600\t--tw-gradient-to: #52525b var(--tw-gradient-to-position);\n\t\n\nto-zinc-700\t--tw-gradient-to: #3f3f46 var(--tw-gradient-to-position);\n\t\n\nto-zinc-800\t--tw-gradient-to: #27272a var(--tw-gradient-to-position);\n\t\n\nto-zinc-900\t--tw-gradient-to: #18181b var(--tw-gradient-to-position);\n\t\n\nto-zinc-950\t--tw-gradient-to: #09090b var(--tw-gradient-to-position);\n\t\n\nto-neutral-50\t--tw-gradient-to: #fafafa var(--tw-gradient-to-position);\n\t\n\nto-neutral-100\t--tw-gradient-to: #f5f5f5 var(--tw-gradient-to-position);\n\t\n\nto-neutral-200\t--tw-gradient-to: #e5e5e5 var(--tw-gradient-to-position);\n\t\n\nto-neutral-300\t--tw-gradient-to: #d4d4d4 var(--tw-gradient-to-position);\n\t\n\nto-neutral-400\t--tw-gradient-to: #a3a3a3 var(--tw-gradient-to-position);\n\t\n\nto-neutral-500\t--tw-gradient-to: #737373 var(--tw-gradient-to-position);\n\t\n\nto-neutral-600\t--tw-gradient-to: #525252 var(--tw-gradient-to-position);\n\t\n\nto-neutral-700\t--tw-gradient-to: #404040 var(--tw-gradient-to-position);\n\t\n\nto-neutral-800\t--tw-gradient-to: #262626 var(--tw-gradient-to-position);\n\t\n\nto-neutral-900\t--tw-gradient-to: #171717 var(--tw-gradient-to-position);\n\t\n\nto-neutral-950\t--tw-gradient-to: #0a0a0a var(--tw-gradient-to-position);\n\t\n\nto-stone-50\t--tw-gradient-to: #fafaf9 var(--tw-gradient-to-position);\n\t\n\nto-stone-100\t--tw-gradient-to: #f5f5f4 var(--tw-gradient-to-position);\n\t\n\nto-stone-200\t--tw-gradient-to: #e7e5e4 var(--tw-gradient-to-position);\n\t\n\nto-stone-300\t--tw-gradient-to: #d6d3d1 var(--tw-gradient-to-position);\n\t\n\nto-stone-400\t--tw-gradient-to: #a8a29e var(--tw-gradient-to-position);\n\t\n\nto-stone-500\t--tw-gradient-to: #78716c var(--tw-gradient-to-position);\n\t\n\nto-stone-600\t--tw-gradient-to: #57534e var(--tw-gradient-to-position);\n\t\n\nto-stone-700\t--tw-gradient-to: #44403c var(--tw-gradient-to-position);\n\t\n\nto-stone-800\t--tw-gradient-to: #292524 var(--tw-gradient-to-position);\n\t\n\nto-stone-900\t--tw-gradient-to: #1c1917 var(--tw-gradient-to-position);\n\t\n\nto-stone-950\t--tw-gradient-to: #0c0a09 var(--tw-gradient-to-position);\n\t\n\nto-red-50\t--tw-gradient-to: #fef2f2 var(--tw-gradient-to-position);\n\t\n\nto-red-100\t--tw-gradient-to: #fee2e2 var(--tw-gradient-to-position);\n\t\n\nto-red-200\t--tw-gradient-to: #fecaca var(--tw-gradient-to-position);\n\t\n\nto-red-300\t--tw-gradient-to: #fca5a5 var(--tw-gradient-to-position);\n\t\n\nto-red-400\t--tw-gradient-to: #f87171 var(--tw-gradient-to-position);\n\t\n\nto-red-500\t--tw-gradient-to: #ef4444 var(--tw-gradient-to-position);\n\t\n\nto-red-600\t--tw-gradient-to: #dc2626 var(--tw-gradient-to-position);\n\t\n\nto-red-700\t--tw-gradient-to: #b91c1c var(--tw-gradient-to-position);\n\t\n\nto-red-800\t--tw-gradient-to: #991b1b var(--tw-gradient-to-position);\n\t\n\nto-red-900\t--tw-gradient-to: #7f1d1d var(--tw-gradient-to-position);\n\t\n\nto-red-950\t--tw-gradient-to: #450a0a var(--tw-gradient-to-position);\n\t\n\nto-orange-50\t--tw-gradient-to: #fff7ed var(--tw-gradient-to-position);\n\t\n\nto-orange-100\t--tw-gradient-to: #ffedd5 var(--tw-gradient-to-position);\n\t\n\nto-orange-200\t--tw-gradient-to: #fed7aa var(--tw-gradient-to-position);\n\t\n\nto-orange-300\t--tw-gradient-to: #fdba74 var(--tw-gradient-to-position);\n\t\n\nto-orange-400\t--tw-gradient-to: #fb923c var(--tw-gradient-to-position);\n\t\n\nto-orange-500\t--tw-gradient-to: #f97316 var(--tw-gradient-to-position);\n\t\n\nto-orange-600\t--tw-gradient-to: #ea580c var(--tw-gradient-to-position);\n\t\n\nto-orange-700\t--tw-gradient-to: #c2410c var(--tw-gradient-to-position);\n\t\n\nto-orange-800\t--tw-gradient-to: #9a3412 var(--tw-gradient-to-position);\n\t\n\nto-orange-900\t--tw-gradient-to: #7c2d12 var(--tw-gradient-to-position);\n\t\n\nto-orange-950\t--tw-gradient-to: #431407 var(--tw-gradient-to-position);\n\t\n\nto-amber-50\t--tw-gradient-to: #fffbeb var(--tw-gradient-to-position);\n\t\n\nto-amber-100\t--tw-gradient-to: #fef3c7 var(--tw-gradient-to-position);\n\t\n\nto-amber-200\t--tw-gradient-to: #fde68a var(--tw-gradient-to-position);\n\t\n\nto-amber-300\t--tw-gradient-to: #fcd34d var(--tw-gradient-to-position);\n\t\n\nto-amber-400\t--tw-gradient-to: #fbbf24 var(--tw-gradient-to-position);\n\t\n\nto-amber-500\t--tw-gradient-to: #f59e0b var(--tw-gradient-to-position);\n\t\n\nto-amber-600\t--tw-gradient-to: #d97706 var(--tw-gradient-to-position);\n\t\n\nto-amber-700\t--tw-gradient-to: #b45309 var(--tw-gradient-to-position);\n\t\n\nto-amber-800\t--tw-gradient-to: #92400e var(--tw-gradient-to-position);\n\t\n\nto-amber-900\t--tw-gradient-to: #78350f var(--tw-gradient-to-position);\n\t\n\nto-amber-950\t--tw-gradient-to: #451a03 var(--tw-gradient-to-position);\n\t\n\nto-yellow-50\t--tw-gradient-to: #fefce8 var(--tw-gradient-to-position);\n\t\n\nto-yellow-100\t--tw-gradient-to: #fef9c3 var(--tw-gradient-to-position);\n\t\n\nto-yellow-200\t--tw-gradient-to: #fef08a var(--tw-gradient-to-position);\n\t\n\nto-yellow-300\t--tw-gradient-to: #fde047 var(--tw-gradient-to-position);\n\t\n\nto-yellow-400\t--tw-gradient-to: #facc15 var(--tw-gradient-to-position);\n\t\n\nto-yellow-500\t--tw-gradient-to: #eab308 var(--tw-gradient-to-position);\n\t\n\nto-yellow-600\t--tw-gradient-to: #ca8a04 var(--tw-gradient-to-position);\n\t\n\nto-yellow-700\t--tw-gradient-to: #a16207 var(--tw-gradient-to-position);\n\t\n\nto-yellow-800\t--tw-gradient-to: #854d0e var(--tw-gradient-to-position);\n\t\n\nto-yellow-900\t--tw-gradient-to: #713f12 var(--tw-gradient-to-position);\n\t\n\nto-yellow-950\t--tw-gradient-to: #422006 var(--tw-gradient-to-position);\n\t\n\nto-lime-50\t--tw-gradient-to: #f7fee7 var(--tw-gradient-to-position);\n\t\n\nto-lime-100\t--tw-gradient-to: #ecfccb var(--tw-gradient-to-position);\n\t\n\nto-lime-200\t--tw-gradient-to: #d9f99d var(--tw-gradient-to-position);\n\t\n\nto-lime-300\t--tw-gradient-to: #bef264 var(--tw-gradient-to-position);\n\t\n\nto-lime-400\t--tw-gradient-to: #a3e635 var(--tw-gradient-to-position);\n\t\n\nto-lime-500\t--tw-gradient-to: #84cc16 var(--tw-gradient-to-position);\n\t\n\nto-lime-600\t--tw-gradient-to: #65a30d var(--tw-gradient-to-position);\n\t\n\nto-lime-700\t--tw-gradient-to: #4d7c0f var(--tw-gradient-to-position);\n\t\n\nto-lime-800\t--tw-gradient-to: #3f6212 var(--tw-gradient-to-position);\n\t\n\nto-lime-900\t--tw-gradient-to: #365314 var(--tw-gradient-to-position);\n\t\n\nto-lime-950\t--tw-gradient-to: #1a2e05 var(--tw-gradient-to-position);\n\t\n\nto-green-50\t--tw-gradient-to: #f0fdf4 var(--tw-gradient-to-position);\n\t\n\nto-green-100\t--tw-gradient-to: #dcfce7 var(--tw-gradient-to-position);\n\t\n\nto-green-200\t--tw-gradient-to: #bbf7d0 var(--tw-gradient-to-position);\n\t\n\nto-green-300\t--tw-gradient-to: #86efac var(--tw-gradient-to-position);\n\t\n\nto-green-400\t--tw-gradient-to: #4ade80 var(--tw-gradient-to-position);\n\t\n\nto-green-500\t--tw-gradient-to: #22c55e var(--tw-gradient-to-position);\n\t\n\nto-green-600\t--tw-gradient-to: #16a34a var(--tw-gradient-to-position);\n\t\n\nto-green-700\t--tw-gradient-to: #15803d var(--tw-gradient-to-position);\n\t\n\nto-green-800\t--tw-gradient-to: #166534 var(--tw-gradient-to-position);\n\t\n\nto-green-900\t--tw-gradient-to: #14532d var(--tw-gradient-to-position);\n\t\n\nto-green-950\t--tw-gradient-to: #052e16 var(--tw-gradient-to-position);\n\t\n\nto-emerald-50\t--tw-gradient-to: #ecfdf5 var(--tw-gradient-to-position);\n\t\n\nto-emerald-100\t--tw-gradient-to: #d1fae5 var(--tw-gradient-to-position);\n\t\n\nto-emerald-200\t--tw-gradient-to: #a7f3d0 var(--tw-gradient-to-position);\n\t\n\nto-emerald-300\t--tw-gradient-to: #6ee7b7 var(--tw-gradient-to-position);\n\t\n\nto-emerald-400\t--tw-gradient-to: #34d399 var(--tw-gradient-to-position);\n\t\n\nto-emerald-500\t--tw-gradient-to: #10b981 var(--tw-gradient-to-position);\n\t\n\nto-emerald-600\t--tw-gradient-to: #059669 var(--tw-gradient-to-position);\n\t\n\nto-emerald-700\t--tw-gradient-to: #047857 var(--tw-gradient-to-position);\n\t\n\nto-emerald-800\t--tw-gradient-to: #065f46 var(--tw-gradient-to-position);\n\t\n\nto-emerald-900\t--tw-gradient-to: #064e3b var(--tw-gradient-to-position);\n\t\n\nto-emerald-950\t--tw-gradient-to: #022c22 var(--tw-gradient-to-position);\n\t\n\nto-teal-50\t--tw-gradient-to: #f0fdfa var(--tw-gradient-to-position);\n\t\n\nto-teal-100\t--tw-gradient-to: #ccfbf1 var(--tw-gradient-to-position);\n\t\n\nto-teal-200\t--tw-gradient-to: #99f6e4 var(--tw-gradient-to-position);\n\t\n\nto-teal-300\t--tw-gradient-to: #5eead4 var(--tw-gradient-to-position);\n\t\n\nto-teal-400\t--tw-gradient-to: #2dd4bf var(--tw-gradient-to-position);\n\t\n\nto-teal-500\t--tw-gradient-to: #14b8a6 var(--tw-gradient-to-position);\n\t\n\nto-teal-600\t--tw-gradient-to: #0d9488 var(--tw-gradient-to-position);\n\t\n\nto-teal-700\t--tw-gradient-to: #0f766e var(--tw-gradient-to-position);\n\t\n\nto-teal-800\t--tw-gradient-to: #115e59 var(--tw-gradient-to-position);\n\t\n\nto-teal-900\t--tw-gradient-to: #134e4a var(--tw-gradient-to-position);\n\t\n\nto-teal-950\t--tw-gradient-to: #042f2e var(--tw-gradient-to-position);\n\t\n\nto-cyan-50\t--tw-gradient-to: #ecfeff var(--tw-gradient-to-position);\n\t\n\nto-cyan-100\t--tw-gradient-to: #cffafe var(--tw-gradient-to-position);\n\t\n\nto-cyan-200\t--tw-gradient-to: #a5f3fc var(--tw-gradient-to-position);\n\t\n\nto-cyan-300\t--tw-gradient-to: #67e8f9 var(--tw-gradient-to-position);\n\t\n\nto-cyan-400\t--tw-gradient-to: #22d3ee var(--tw-gradient-to-position);\n\t\n\nto-cyan-500\t--tw-gradient-to: #06b6d4 var(--tw-gradient-to-position);\n\t\n\nto-cyan-600\t--tw-gradient-to: #0891b2 var(--tw-gradient-to-position);\n\t\n\nto-cyan-700\t--tw-gradient-to: #0e7490 var(--tw-gradient-to-position);\n\t\n\nto-cyan-800\t--tw-gradient-to: #155e75 var(--tw-gradient-to-position);\n\t\n\nto-cyan-900\t--tw-gradient-to: #164e63 var(--tw-gradient-to-position);\n\t\n\nto-cyan-950\t--tw-gradient-to: #083344 var(--tw-gradient-to-position);\n\t\n\nto-sky-50\t--tw-gradient-to: #f0f9ff var(--tw-gradient-to-position);\n\t\n\nto-sky-100\t--tw-gradient-to: #e0f2fe var(--tw-gradient-to-position);\n\t\n\nto-sky-200\t--tw-gradient-to: #bae6fd var(--tw-gradient-to-position);\n\t\n\nto-sky-300\t--tw-gradient-to: #7dd3fc var(--tw-gradient-to-position);\n\t\n\nto-sky-400\t--tw-gradient-to: #38bdf8 var(--tw-gradient-to-position);\n\t\n\nto-sky-500\t--tw-gradient-to: #0ea5e9 var(--tw-gradient-to-position);\n\t\n\nto-sky-600\t--tw-gradient-to: #0284c7 var(--tw-gradient-to-position);\n\t\n\nto-sky-700\t--tw-gradient-to: #0369a1 var(--tw-gradient-to-position);\n\t\n\nto-sky-800\t--tw-gradient-to: #075985 var(--tw-gradient-to-position);\n\t\n\nto-sky-900\t--tw-gradient-to: #0c4a6e var(--tw-gradient-to-position);\n\t\n\nto-sky-950\t--tw-gradient-to: #082f49 var(--tw-gradient-to-position);\n\t\n\nto-blue-50\t--tw-gradient-to: #eff6ff var(--tw-gradient-to-position);\n\t\n\nto-blue-100\t--tw-gradient-to: #dbeafe var(--tw-gradient-to-position);\n\t\n\nto-blue-200\t--tw-gradient-to: #bfdbfe var(--tw-gradient-to-position);\n\t\n\nto-blue-300\t--tw-gradient-to: #93c5fd var(--tw-gradient-to-position);\n\t\n\nto-blue-400\t--tw-gradient-to: #60a5fa var(--tw-gradient-to-position);\n\t\n\nto-blue-500\t--tw-gradient-to: #3b82f6 var(--tw-gradient-to-position);\n\t\n\nto-blue-600\t--tw-gradient-to: #2563eb var(--tw-gradient-to-position);\n\t\n\nto-blue-700\t--tw-gradient-to: #1d4ed8 var(--tw-gradient-to-position);\n\t\n\nto-blue-800\t--tw-gradient-to: #1e40af var(--tw-gradient-to-position);\n\t\n\nto-blue-900\t--tw-gradient-to: #1e3a8a var(--tw-gradient-to-position);\n\t\n\nto-blue-950\t--tw-gradient-to: #172554 var(--tw-gradient-to-position);\n\t\n\nto-indigo-50\t--tw-gradient-to: #eef2ff var(--tw-gradient-to-position);\n\t\n\nto-indigo-100\t--tw-gradient-to: #e0e7ff var(--tw-gradient-to-position);\n\t\n\nto-indigo-200\t--tw-gradient-to: #c7d2fe var(--tw-gradient-to-position);\n\t\n\nto-indigo-300\t--tw-gradient-to: #a5b4fc var(--tw-gradient-to-position);\n\t\n\nto-indigo-400\t--tw-gradient-to: #818cf8 var(--tw-gradient-to-position);\n\t\n\nto-indigo-500\t--tw-gradient-to: #6366f1 var(--tw-gradient-to-position);\n\t\n\nto-indigo-600\t--tw-gradient-to: #4f46e5 var(--tw-gradient-to-position);\n\t\n\nto-indigo-700\t--tw-gradient-to: #4338ca var(--tw-gradient-to-position);\n\t\n\nto-indigo-800\t--tw-gradient-to: #3730a3 var(--tw-gradient-to-position);\n\t\n\nto-indigo-900\t--tw-gradient-to: #312e81 var(--tw-gradient-to-position);\n\t\n\nto-indigo-950\t--tw-gradient-to: #1e1b4b var(--tw-gradient-to-position);\n\t\n\nto-violet-50\t--tw-gradient-to: #f5f3ff var(--tw-gradient-to-position);\n\t\n\nto-violet-100\t--tw-gradient-to: #ede9fe var(--tw-gradient-to-position);\n\t\n\nto-violet-200\t--tw-gradient-to: #ddd6fe var(--tw-gradient-to-position);\n\t\n\nto-violet-300\t--tw-gradient-to: #c4b5fd var(--tw-gradient-to-position);\n\t\n\nto-violet-400\t--tw-gradient-to: #a78bfa var(--tw-gradient-to-position);\n\t\n\nto-violet-500\t--tw-gradient-to: #8b5cf6 var(--tw-gradient-to-position);\n\t\n\nto-violet-600\t--tw-gradient-to: #7c3aed var(--tw-gradient-to-position);\n\t\n\nto-violet-700\t--tw-gradient-to: #6d28d9 var(--tw-gradient-to-position);\n\t\n\nto-violet-800\t--tw-gradient-to: #5b21b6 var(--tw-gradient-to-position);\n\t\n\nto-violet-900\t--tw-gradient-to: #4c1d95 var(--tw-gradient-to-position);\n\t\n\nto-violet-950\t--tw-gradient-to: #2e1065 var(--tw-gradient-to-position);\n\t\n\nto-purple-50\t--tw-gradient-to: #faf5ff var(--tw-gradient-to-position);\n\t\n\nto-purple-100\t--tw-gradient-to: #f3e8ff var(--tw-gradient-to-position);\n\t\n\nto-purple-200\t--tw-gradient-to: #e9d5ff var(--tw-gradient-to-position);\n\t\n\nto-purple-300\t--tw-gradient-to: #d8b4fe var(--tw-gradient-to-position);\n\t\n\nto-purple-400\t--tw-gradient-to: #c084fc var(--tw-gradient-to-position);\n\t\n\nto-purple-500\t--tw-gradient-to: #a855f7 var(--tw-gradient-to-position);\n\t\n\nto-purple-600\t--tw-gradient-to: #9333ea var(--tw-gradient-to-position);\n\t\n\nto-purple-700\t--tw-gradient-to: #7e22ce var(--tw-gradient-to-position);\n\t\n\nto-purple-800\t--tw-gradient-to: #6b21a8 var(--tw-gradient-to-position);\n\t\n\nto-purple-900\t--tw-gradient-to: #581c87 var(--tw-gradient-to-position);\n\t\n\nto-purple-950\t--tw-gradient-to: #3b0764 var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-50\t--tw-gradient-to: #fdf4ff var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-100\t--tw-gradient-to: #fae8ff var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-200\t--tw-gradient-to: #f5d0fe var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-300\t--tw-gradient-to: #f0abfc var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-400\t--tw-gradient-to: #e879f9 var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-500\t--tw-gradient-to: #d946ef var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-600\t--tw-gradient-to: #c026d3 var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-700\t--tw-gradient-to: #a21caf var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-800\t--tw-gradient-to: #86198f var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-900\t--tw-gradient-to: #701a75 var(--tw-gradient-to-position);\n\t\n\nto-fuchsia-950\t--tw-gradient-to: #4a044e var(--tw-gradient-to-position);\n\t\n\nto-pink-50\t--tw-gradient-to: #fdf2f8 var(--tw-gradient-to-position);\n\t\n\nto-pink-100\t--tw-gradient-to: #fce7f3 var(--tw-gradient-to-position);\n\t\n\nto-pink-200\t--tw-gradient-to: #fbcfe8 var(--tw-gradient-to-position);\n\t\n\nto-pink-300\t--tw-gradient-to: #f9a8d4 var(--tw-gradient-to-position);\n\t\n\nto-pink-400\t--tw-gradient-to: #f472b6 var(--tw-gradient-to-position);\n\t\n\nto-pink-500\t--tw-gradient-to: #ec4899 var(--tw-gradient-to-position);\n\t\n\nto-pink-600\t--tw-gradient-to: #db2777 var(--tw-gradient-to-position);\n\t\n\nto-pink-700\t--tw-gradient-to: #be185d var(--tw-gradient-to-position);\n\t\n\nto-pink-800\t--tw-gradient-to: #9d174d var(--tw-gradient-to-position);\n\t\n\nto-pink-900\t--tw-gradient-to: #831843 var(--tw-gradient-to-position);\n\t\n\nto-pink-950\t--tw-gradient-to: #500724 var(--tw-gradient-to-position);\n\t\n\nto-rose-50\t--tw-gradient-to: #fff1f2 var(--tw-gradient-to-position);\n\t\n\nto-rose-100\t--tw-gradient-to: #ffe4e6 var(--tw-gradient-to-position);\n\t\n\nto-rose-200\t--tw-gradient-to: #fecdd3 var(--tw-gradient-to-position);\n\t\n\nto-rose-300\t--tw-gradient-to: #fda4af var(--tw-gradient-to-position);\n\t\n\nto-rose-400\t--tw-gradient-to: #fb7185 var(--tw-gradient-to-position);\n\t\n\nto-rose-500\t--tw-gradient-to: #f43f5e var(--tw-gradient-to-position);\n\t\n\nto-rose-600\t--tw-gradient-to: #e11d48 var(--tw-gradient-to-position);\n\t\n\nto-rose-700\t--tw-gradient-to: #be123c var(--tw-gradient-to-position);\n\t\n\nto-rose-800\t--tw-gradient-to: #9f1239 var(--tw-gradient-to-position);\n\t\n\nto-rose-900\t--tw-gradient-to: #881337 var(--tw-gradient-to-position);\n\t\n\nto-rose-950\t--tw-gradient-to: #4c0519 var(--tw-gradient-to-position);\n\t\n\nto-0%\t--tw-gradient-to-position: 0%;\n\t\n\nto-5%\t--tw-gradient-to-position: 5%;\n\t\n\nto-10%\t--tw-gradient-to-position: 10%;\n\t\n\nto-15%\t--tw-gradient-to-position: 15%;\n\t\n\nto-20%\t--tw-gradient-to-position: 20%;\n\t\n\nto-25%\t--tw-gradient-to-position: 25%;\n\t\n\nto-30%\t--tw-gradient-to-position: 30%;\n\t\n\nto-35%\t--tw-gradient-to-position: 35%;\n\t\n\nto-40%\t--tw-gradient-to-position: 40%;\n\t\n\nto-45%\t--tw-gradient-to-position: 45%;\n\t\n\nto-50%\t--tw-gradient-to-position: 50%;\n\t\n\nto-55%\t--tw-gradient-to-position: 55%;\n\t\n\nto-60%\t--tw-gradient-to-position: 60%;\n\t\n\nto-65%\t--tw-gradient-to-position: 65%;\n\t\n\nto-70%\t--tw-gradient-to-position: 70%;\n\t\n\nto-75%\t--tw-gradient-to-position: 75%;\n\t\n\nto-80%\t--tw-gradient-to-position: 80%;\n\t\n\nto-85%\t--tw-gradient-to-position: 85%;\n\t\n\nto-90%\t--tw-gradient-to-position: 90%;\n\t\n\nto-95%\t--tw-gradient-to-position: 95%;\n\t\n\nto-100%\t--tw-gradient-to-position: 100%;\n\t\n​\nBasic usage\n​\nStarting color\n\nSet the starting color of a gradient using the from-{color} utilities.\n\n<div class=\"bg-gradient-to-r from-indigo-500 ...\"></div>\n​\nEnding color\n\nSet the ending color of a gradient using the to-{color} utilities.\n\n<div class=\"bg-gradient-to-r from-cyan-500 to-blue-500 ...\"></div>\n\nGradients to do not fade in from transparent by default. To fade in from transparent, reverse the gradient direction and use a from-{color} utility.\n\n​\nMiddle color\n\nAdd a middle color to a gradient using the via-{color} utilities.\n\n<div class=\"bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 ...\"></div>\n\nGradients with a from-{color} and via-{color} will fade out to transparent by default if no to-{color} is present.\n\n​\nSpecifying stop positions\n\nFor more control over the gradient color stop positions, combine the from-{position}, via-{position} and to-{position} utilities with the gradient color utilities.\n\n10%\n30%\n90%\n<div class=\"bg-gradient-to-r from-indigo-500 from-10% via-sky-500 via-30% to-emerald-500 to-90% ...\"></div>\n​\nFading to transparent\n\nGradients fade out to transparent by default, without requiring you to add to-transparent explicitly. Tailwind intelligently calculates the right “transparent” value to use based on the starting color to avoid a bug in Safari < 15.4 that causes fading to simply the transparent keyword to fade through gray, which just looks awful.\n\nDon’t add to-transparent explicitly\n\n<div class=\"bg-gradient-to-r from-blue-500 to-transparent\">\n  <!-- ... -->\n</div>\n\nOnly specify a from color and fade to transparent automatically\n\n<div class=\"bg-gradient-to-r from-blue-500\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:from-pink-500 to only apply the from-pink-500 utility on hover.\n\nHover me\n<button type=\"button\" class=\"bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500 ...\">\n  Hover me\n</button>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:from-yellow-500 to apply the from-yellow-500 utility at only medium screen sizes and above.\n\n<div class=\"bg-gradient-to-r from-purple-400 md:from-yellow-500\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as gradient colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your gradient colors by editing theme.gradientColorStops or theme.extend.gradientColorStops in your tailwind.config.js file.\n\nIn addition to the colors, you can also customize the gradient color stop positions by editing theme.gradientColorStopPositions or theme.extend.gradientColorStopPositions.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gradientColorStopPositions: {\n\n        33: '33%',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off from|via|to-{color|position} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"from-[#243c5a]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackground Image\nBorder Radius\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStarting color\nEnding color\nMiddle color\nSpecifying stop positions\nFading to transparent\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Image - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-image",
    "html": "Backgrounds\n\nBackground Image\n\nUtilities for controlling an element's background image.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-none\tbackground-image: none;\n\nbg-gradient-to-t\tbackground-image: linear-gradient(to top, var(--tw-gradient-stops));\n\nbg-gradient-to-tr\tbackground-image: linear-gradient(to top right, var(--tw-gradient-stops));\n\nbg-gradient-to-r\tbackground-image: linear-gradient(to right, var(--tw-gradient-stops));\n\nbg-gradient-to-br\tbackground-image: linear-gradient(to bottom right, var(--tw-gradient-stops));\n\nbg-gradient-to-b\tbackground-image: linear-gradient(to bottom, var(--tw-gradient-stops));\n\nbg-gradient-to-bl\tbackground-image: linear-gradient(to bottom left, var(--tw-gradient-stops));\n\nbg-gradient-to-l\tbackground-image: linear-gradient(to left, var(--tw-gradient-stops));\n\nbg-gradient-to-tl\tbackground-image: linear-gradient(to top left, var(--tw-gradient-stops));\n\n​\nBasic usage\n​\nLinear gradients\n\nTo give an element a linear gradient background, use one of the bg-gradient-{direction} utilities, in combination with the gradient color stop utilities.\n\n<div class=\"h-14 bg-gradient-to-r from-cyan-500 to-blue-500\"></div>\n<div class=\"h-14 bg-gradient-to-r from-sky-500 to-indigo-500\"></div>\n<div class=\"h-14 bg-gradient-to-r from-violet-500 to-fuchsia-500\"></div>\n<div class=\"h-14 bg-gradient-to-r from-purple-500 to-pink-500\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-gradient-to-r to only apply the bg-gradient-to-r utility on hover.\n\n<div class=\"bg-gradient-to-l hover:bg-gradient-to-r\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-gradient-to-r to apply the bg-gradient-to-r utility at only medium screen sizes and above.\n\n<div class=\"bg-gradient-to-l md:bg-gradient-to-r\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes background image utilities for creating linear gradient backgrounds in eight directions.\n\nYou can add your own background images by editing the theme.backgroundImage section of your tailwind.config.js file:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      backgroundImage: {\n\n        'hero-pattern': \"url('/img/hero-pattern.svg')\",\n\n        'footer-texture': \"url('/img/footer-texture.png')\",\n\n      }\n\n    }\n\n  }\n\n}\n\n\nThese don’t just have to be gradients — they can be any background images you need.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off background-image value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"bg-[url('/img/hero-pattern.svg')]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackground Size\nGradient Color Stops\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nLinear gradients\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Repeat - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-repeat",
    "html": "Backgrounds\n\nBackground Repeat\n\nUtilities for controlling the repetition of an element's background image.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-repeat\tbackground-repeat: repeat;\n\nbg-no-repeat\tbackground-repeat: no-repeat;\n\nbg-repeat-x\tbackground-repeat: repeat-x;\n\nbg-repeat-y\tbackground-repeat: repeat-y;\n\nbg-repeat-round\tbackground-repeat: round;\n\nbg-repeat-space\tbackground-repeat: space;\n\n​\nBasic usage\n​\nRepeat\n\nUse bg-repeat to repeat the background image both vertically and horizontally.\n\n<div class=\"bg-repeat ...\" style=\"background-image: url(...)\"></div>\n​\nNo Repeat\n\nUse bg-no-repeat when you don’t want to repeat the background image.\n\n<div class=\"bg-no-repeat bg-center ...\" style=\"background-image: url(...)\"></div>\n​\nRepeat Horizontally\n\nUse bg-repeat-x to repeat the background image only horizontally.\n\n<div class=\"bg-repeat-x bg-center ...\" style=\"background-image: url(...)\"></div>\n​\nRepeat Vertically\n\nUse bg-repeat-y to repeat the background image only vertically.\n\n<div class=\"bg-repeat-y bg-center ...\" style=\"background-image: url(...)\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-repeat-x to only apply the bg-repeat-x utility on hover.\n\n<div class=\"bg-repeat hover:bg-repeat-x\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-repeat-x to apply the bg-repeat-x utility at only medium screen sizes and above.\n\n<div class=\"bg-repeat md:bg-repeat-x\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBackground Position\nBackground Size\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRepeat\nNo Repeat\nRepeat Horizontally\nRepeat Vertically\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-color",
    "html": "Backgrounds\n\nBackground Color\n\nUtilities for controlling an element's background color.\n\n​\nQuick reference\nClass\n\t\nProperties\n\t\nPreview\n \n\nbg-inherit\tbackground-color: inherit;\n\t\n\nbg-current\tbackground-color: currentColor;\n\t\n\nbg-transparent\tbackground-color: transparent;\n\t\n\nbg-black\tbackground-color: rgb(0 0 0);\n\t\n\nbg-white\tbackground-color: rgb(255 255 255);\n\t\n\nbg-slate-50\tbackground-color: rgb(248 250 252);\n\t\n\nbg-slate-100\tbackground-color: rgb(241 245 249);\n\t\n\nbg-slate-200\tbackground-color: rgb(226 232 240);\n\t\n\nbg-slate-300\tbackground-color: rgb(203 213 225);\n\t\n\nbg-slate-400\tbackground-color: rgb(148 163 184);\n\t\n\nbg-slate-500\tbackground-color: rgb(100 116 139);\n\t\n\nbg-slate-600\tbackground-color: rgb(71 85 105);\n\t\n\nbg-slate-700\tbackground-color: rgb(51 65 85);\n\t\n\nbg-slate-800\tbackground-color: rgb(30 41 59);\n\t\n\nbg-slate-900\tbackground-color: rgb(15 23 42);\n\t\n\nbg-slate-950\tbackground-color: rgb(2 6 23);\n\t\n\nbg-gray-50\tbackground-color: rgb(249 250 251);\n\t\n\nbg-gray-100\tbackground-color: rgb(243 244 246);\n\t\n\nbg-gray-200\tbackground-color: rgb(229 231 235);\n\t\n\nbg-gray-300\tbackground-color: rgb(209 213 219);\n\t\n\nbg-gray-400\tbackground-color: rgb(156 163 175);\n\t\n\nbg-gray-500\tbackground-color: rgb(107 114 128);\n\t\n\nbg-gray-600\tbackground-color: rgb(75 85 99);\n\t\n\nbg-gray-700\tbackground-color: rgb(55 65 81);\n\t\n\nbg-gray-800\tbackground-color: rgb(31 41 55);\n\t\n\nbg-gray-900\tbackground-color: rgb(17 24 39);\n\t\n\nbg-gray-950\tbackground-color: rgb(3 7 18);\n\t\n\nbg-zinc-50\tbackground-color: rgb(250 250 250);\n\t\n\nbg-zinc-100\tbackground-color: rgb(244 244 245);\n\t\n\nbg-zinc-200\tbackground-color: rgb(228 228 231);\n\t\n\nbg-zinc-300\tbackground-color: rgb(212 212 216);\n\t\n\nbg-zinc-400\tbackground-color: rgb(161 161 170);\n\t\n\nbg-zinc-500\tbackground-color: rgb(113 113 122);\n\t\n\nbg-zinc-600\tbackground-color: rgb(82 82 91);\n\t\n\nbg-zinc-700\tbackground-color: rgb(63 63 70);\n\t\n\nbg-zinc-800\tbackground-color: rgb(39 39 42);\n\t\n\nbg-zinc-900\tbackground-color: rgb(24 24 27);\n\t\n\nbg-zinc-950\tbackground-color: rgb(9 9 11);\n\t\n\nbg-neutral-50\tbackground-color: rgb(250 250 250);\n\t\n\nbg-neutral-100\tbackground-color: rgb(245 245 245);\n\t\n\nbg-neutral-200\tbackground-color: rgb(229 229 229);\n\t\n\nbg-neutral-300\tbackground-color: rgb(212 212 212);\n\t\n\nbg-neutral-400\tbackground-color: rgb(163 163 163);\n\t\n\nbg-neutral-500\tbackground-color: rgb(115 115 115);\n\t\n\nbg-neutral-600\tbackground-color: rgb(82 82 82);\n\t\n\nbg-neutral-700\tbackground-color: rgb(64 64 64);\n\t\n\nbg-neutral-800\tbackground-color: rgb(38 38 38);\n\t\n\nbg-neutral-900\tbackground-color: rgb(23 23 23);\n\t\n\nbg-neutral-950\tbackground-color: rgb(10 10 10);\n\t\n\nbg-stone-50\tbackground-color: rgb(250 250 249);\n\t\n\nbg-stone-100\tbackground-color: rgb(245 245 244);\n\t\n\nbg-stone-200\tbackground-color: rgb(231 229 228);\n\t\n\nbg-stone-300\tbackground-color: rgb(214 211 209);\n\t\n\nbg-stone-400\tbackground-color: rgb(168 162 158);\n\t\n\nbg-stone-500\tbackground-color: rgb(120 113 108);\n\t\n\nbg-stone-600\tbackground-color: rgb(87 83 78);\n\t\n\nbg-stone-700\tbackground-color: rgb(68 64 60);\n\t\n\nbg-stone-800\tbackground-color: rgb(41 37 36);\n\t\n\nbg-stone-900\tbackground-color: rgb(28 25 23);\n\t\n\nbg-stone-950\tbackground-color: rgb(12 10 9);\n\t\n\nbg-red-50\tbackground-color: rgb(254 242 242);\n\t\n\nbg-red-100\tbackground-color: rgb(254 226 226);\n\t\n\nbg-red-200\tbackground-color: rgb(254 202 202);\n\t\n\nbg-red-300\tbackground-color: rgb(252 165 165);\n\t\n\nbg-red-400\tbackground-color: rgb(248 113 113);\n\t\n\nbg-red-500\tbackground-color: rgb(239 68 68);\n\t\n\nbg-red-600\tbackground-color: rgb(220 38 38);\n\t\n\nbg-red-700\tbackground-color: rgb(185 28 28);\n\t\n\nbg-red-800\tbackground-color: rgb(153 27 27);\n\t\n\nbg-red-900\tbackground-color: rgb(127 29 29);\n\t\n\nbg-red-950\tbackground-color: rgb(69 10 10);\n\t\n\nbg-orange-50\tbackground-color: rgb(255 247 237);\n\t\n\nbg-orange-100\tbackground-color: rgb(255 237 213);\n\t\n\nbg-orange-200\tbackground-color: rgb(254 215 170);\n\t\n\nbg-orange-300\tbackground-color: rgb(253 186 116);\n\t\n\nbg-orange-400\tbackground-color: rgb(251 146 60);\n\t\n\nbg-orange-500\tbackground-color: rgb(249 115 22);\n\t\n\nbg-orange-600\tbackground-color: rgb(234 88 12);\n\t\n\nbg-orange-700\tbackground-color: rgb(194 65 12);\n\t\n\nbg-orange-800\tbackground-color: rgb(154 52 18);\n\t\n\nbg-orange-900\tbackground-color: rgb(124 45 18);\n\t\n\nbg-orange-950\tbackground-color: rgb(67 20 7);\n\t\n\nbg-amber-50\tbackground-color: rgb(255 251 235);\n\t\n\nbg-amber-100\tbackground-color: rgb(254 243 199);\n\t\n\nbg-amber-200\tbackground-color: rgb(253 230 138);\n\t\n\nbg-amber-300\tbackground-color: rgb(252 211 77);\n\t\n\nbg-amber-400\tbackground-color: rgb(251 191 36);\n\t\n\nbg-amber-500\tbackground-color: rgb(245 158 11);\n\t\n\nbg-amber-600\tbackground-color: rgb(217 119 6);\n\t\n\nbg-amber-700\tbackground-color: rgb(180 83 9);\n\t\n\nbg-amber-800\tbackground-color: rgb(146 64 14);\n\t\n\nbg-amber-900\tbackground-color: rgb(120 53 15);\n\t\n\nbg-amber-950\tbackground-color: rgb(69 26 3);\n\t\n\nbg-yellow-50\tbackground-color: rgb(254 252 232);\n\t\n\nbg-yellow-100\tbackground-color: rgb(254 249 195);\n\t\n\nbg-yellow-200\tbackground-color: rgb(254 240 138);\n\t\n\nbg-yellow-300\tbackground-color: rgb(253 224 71);\n\t\n\nbg-yellow-400\tbackground-color: rgb(250 204 21);\n\t\n\nbg-yellow-500\tbackground-color: rgb(234 179 8);\n\t\n\nbg-yellow-600\tbackground-color: rgb(202 138 4);\n\t\n\nbg-yellow-700\tbackground-color: rgb(161 98 7);\n\t\n\nbg-yellow-800\tbackground-color: rgb(133 77 14);\n\t\n\nbg-yellow-900\tbackground-color: rgb(113 63 18);\n\t\n\nbg-yellow-950\tbackground-color: rgb(66 32 6);\n\t\n\nbg-lime-50\tbackground-color: rgb(247 254 231);\n\t\n\nbg-lime-100\tbackground-color: rgb(236 252 203);\n\t\n\nbg-lime-200\tbackground-color: rgb(217 249 157);\n\t\n\nbg-lime-300\tbackground-color: rgb(190 242 100);\n\t\n\nbg-lime-400\tbackground-color: rgb(163 230 53);\n\t\n\nbg-lime-500\tbackground-color: rgb(132 204 22);\n\t\n\nbg-lime-600\tbackground-color: rgb(101 163 13);\n\t\n\nbg-lime-700\tbackground-color: rgb(77 124 15);\n\t\n\nbg-lime-800\tbackground-color: rgb(63 98 18);\n\t\n\nbg-lime-900\tbackground-color: rgb(54 83 20);\n\t\n\nbg-lime-950\tbackground-color: rgb(26 46 5);\n\t\n\nbg-green-50\tbackground-color: rgb(240 253 244);\n\t\n\nbg-green-100\tbackground-color: rgb(220 252 231);\n\t\n\nbg-green-200\tbackground-color: rgb(187 247 208);\n\t\n\nbg-green-300\tbackground-color: rgb(134 239 172);\n\t\n\nbg-green-400\tbackground-color: rgb(74 222 128);\n\t\n\nbg-green-500\tbackground-color: rgb(34 197 94);\n\t\n\nbg-green-600\tbackground-color: rgb(22 163 74);\n\t\n\nbg-green-700\tbackground-color: rgb(21 128 61);\n\t\n\nbg-green-800\tbackground-color: rgb(22 101 52);\n\t\n\nbg-green-900\tbackground-color: rgb(20 83 45);\n\t\n\nbg-green-950\tbackground-color: rgb(5 46 22);\n\t\n\nbg-emerald-50\tbackground-color: rgb(236 253 245);\n\t\n\nbg-emerald-100\tbackground-color: rgb(209 250 229);\n\t\n\nbg-emerald-200\tbackground-color: rgb(167 243 208);\n\t\n\nbg-emerald-300\tbackground-color: rgb(110 231 183);\n\t\n\nbg-emerald-400\tbackground-color: rgb(52 211 153);\n\t\n\nbg-emerald-500\tbackground-color: rgb(16 185 129);\n\t\n\nbg-emerald-600\tbackground-color: rgb(5 150 105);\n\t\n\nbg-emerald-700\tbackground-color: rgb(4 120 87);\n\t\n\nbg-emerald-800\tbackground-color: rgb(6 95 70);\n\t\n\nbg-emerald-900\tbackground-color: rgb(6 78 59);\n\t\n\nbg-emerald-950\tbackground-color: rgb(2 44 34);\n\t\n\nbg-teal-50\tbackground-color: rgb(240 253 250);\n\t\n\nbg-teal-100\tbackground-color: rgb(204 251 241);\n\t\n\nbg-teal-200\tbackground-color: rgb(153 246 228);\n\t\n\nbg-teal-300\tbackground-color: rgb(94 234 212);\n\t\n\nbg-teal-400\tbackground-color: rgb(45 212 191);\n\t\n\nbg-teal-500\tbackground-color: rgb(20 184 166);\n\t\n\nbg-teal-600\tbackground-color: rgb(13 148 136);\n\t\n\nbg-teal-700\tbackground-color: rgb(15 118 110);\n\t\n\nbg-teal-800\tbackground-color: rgb(17 94 89);\n\t\n\nbg-teal-900\tbackground-color: rgb(19 78 74);\n\t\n\nbg-teal-950\tbackground-color: rgb(4 47 46);\n\t\n\nbg-cyan-50\tbackground-color: rgb(236 254 255);\n\t\n\nbg-cyan-100\tbackground-color: rgb(207 250 254);\n\t\n\nbg-cyan-200\tbackground-color: rgb(165 243 252);\n\t\n\nbg-cyan-300\tbackground-color: rgb(103 232 249);\n\t\n\nbg-cyan-400\tbackground-color: rgb(34 211 238);\n\t\n\nbg-cyan-500\tbackground-color: rgb(6 182 212);\n\t\n\nbg-cyan-600\tbackground-color: rgb(8 145 178);\n\t\n\nbg-cyan-700\tbackground-color: rgb(14 116 144);\n\t\n\nbg-cyan-800\tbackground-color: rgb(21 94 117);\n\t\n\nbg-cyan-900\tbackground-color: rgb(22 78 99);\n\t\n\nbg-cyan-950\tbackground-color: rgb(8 51 68);\n\t\n\nbg-sky-50\tbackground-color: rgb(240 249 255);\n\t\n\nbg-sky-100\tbackground-color: rgb(224 242 254);\n\t\n\nbg-sky-200\tbackground-color: rgb(186 230 253);\n\t\n\nbg-sky-300\tbackground-color: rgb(125 211 252);\n\t\n\nbg-sky-400\tbackground-color: rgb(56 189 248);\n\t\n\nbg-sky-500\tbackground-color: rgb(14 165 233);\n\t\n\nbg-sky-600\tbackground-color: rgb(2 132 199);\n\t\n\nbg-sky-700\tbackground-color: rgb(3 105 161);\n\t\n\nbg-sky-800\tbackground-color: rgb(7 89 133);\n\t\n\nbg-sky-900\tbackground-color: rgb(12 74 110);\n\t\n\nbg-sky-950\tbackground-color: rgb(8 47 73);\n\t\n\nbg-blue-50\tbackground-color: rgb(239 246 255);\n\t\n\nbg-blue-100\tbackground-color: rgb(219 234 254);\n\t\n\nbg-blue-200\tbackground-color: rgb(191 219 254);\n\t\n\nbg-blue-300\tbackground-color: rgb(147 197 253);\n\t\n\nbg-blue-400\tbackground-color: rgb(96 165 250);\n\t\n\nbg-blue-500\tbackground-color: rgb(59 130 246);\n\t\n\nbg-blue-600\tbackground-color: rgb(37 99 235);\n\t\n\nbg-blue-700\tbackground-color: rgb(29 78 216);\n\t\n\nbg-blue-800\tbackground-color: rgb(30 64 175);\n\t\n\nbg-blue-900\tbackground-color: rgb(30 58 138);\n\t\n\nbg-blue-950\tbackground-color: rgb(23 37 84);\n\t\n\nbg-indigo-50\tbackground-color: rgb(238 242 255);\n\t\n\nbg-indigo-100\tbackground-color: rgb(224 231 255);\n\t\n\nbg-indigo-200\tbackground-color: rgb(199 210 254);\n\t\n\nbg-indigo-300\tbackground-color: rgb(165 180 252);\n\t\n\nbg-indigo-400\tbackground-color: rgb(129 140 248);\n\t\n\nbg-indigo-500\tbackground-color: rgb(99 102 241);\n\t\n\nbg-indigo-600\tbackground-color: rgb(79 70 229);\n\t\n\nbg-indigo-700\tbackground-color: rgb(67 56 202);\n\t\n\nbg-indigo-800\tbackground-color: rgb(55 48 163);\n\t\n\nbg-indigo-900\tbackground-color: rgb(49 46 129);\n\t\n\nbg-indigo-950\tbackground-color: rgb(30 27 75);\n\t\n\nbg-violet-50\tbackground-color: rgb(245 243 255);\n\t\n\nbg-violet-100\tbackground-color: rgb(237 233 254);\n\t\n\nbg-violet-200\tbackground-color: rgb(221 214 254);\n\t\n\nbg-violet-300\tbackground-color: rgb(196 181 253);\n\t\n\nbg-violet-400\tbackground-color: rgb(167 139 250);\n\t\n\nbg-violet-500\tbackground-color: rgb(139 92 246);\n\t\n\nbg-violet-600\tbackground-color: rgb(124 58 237);\n\t\n\nbg-violet-700\tbackground-color: rgb(109 40 217);\n\t\n\nbg-violet-800\tbackground-color: rgb(91 33 182);\n\t\n\nbg-violet-900\tbackground-color: rgb(76 29 149);\n\t\n\nbg-violet-950\tbackground-color: rgb(46 16 101);\n\t\n\nbg-purple-50\tbackground-color: rgb(250 245 255);\n\t\n\nbg-purple-100\tbackground-color: rgb(243 232 255);\n\t\n\nbg-purple-200\tbackground-color: rgb(233 213 255);\n\t\n\nbg-purple-300\tbackground-color: rgb(216 180 254);\n\t\n\nbg-purple-400\tbackground-color: rgb(192 132 252);\n\t\n\nbg-purple-500\tbackground-color: rgb(168 85 247);\n\t\n\nbg-purple-600\tbackground-color: rgb(147 51 234);\n\t\n\nbg-purple-700\tbackground-color: rgb(126 34 206);\n\t\n\nbg-purple-800\tbackground-color: rgb(107 33 168);\n\t\n\nbg-purple-900\tbackground-color: rgb(88 28 135);\n\t\n\nbg-purple-950\tbackground-color: rgb(59 7 100);\n\t\n\nbg-fuchsia-50\tbackground-color: rgb(253 244 255);\n\t\n\nbg-fuchsia-100\tbackground-color: rgb(250 232 255);\n\t\n\nbg-fuchsia-200\tbackground-color: rgb(245 208 254);\n\t\n\nbg-fuchsia-300\tbackground-color: rgb(240 171 252);\n\t\n\nbg-fuchsia-400\tbackground-color: rgb(232 121 249);\n\t\n\nbg-fuchsia-500\tbackground-color: rgb(217 70 239);\n\t\n\nbg-fuchsia-600\tbackground-color: rgb(192 38 211);\n\t\n\nbg-fuchsia-700\tbackground-color: rgb(162 28 175);\n\t\n\nbg-fuchsia-800\tbackground-color: rgb(134 25 143);\n\t\n\nbg-fuchsia-900\tbackground-color: rgb(112 26 117);\n\t\n\nbg-fuchsia-950\tbackground-color: rgb(74 4 78);\n\t\n\nbg-pink-50\tbackground-color: rgb(253 242 248);\n\t\n\nbg-pink-100\tbackground-color: rgb(252 231 243);\n\t\n\nbg-pink-200\tbackground-color: rgb(251 207 232);\n\t\n\nbg-pink-300\tbackground-color: rgb(249 168 212);\n\t\n\nbg-pink-400\tbackground-color: rgb(244 114 182);\n\t\n\nbg-pink-500\tbackground-color: rgb(236 72 153);\n\t\n\nbg-pink-600\tbackground-color: rgb(219 39 119);\n\t\n\nbg-pink-700\tbackground-color: rgb(190 24 93);\n\t\n\nbg-pink-800\tbackground-color: rgb(157 23 77);\n\t\n\nbg-pink-900\tbackground-color: rgb(131 24 67);\n\t\n\nbg-pink-950\tbackground-color: rgb(80 7 36);\n\t\n\nbg-rose-50\tbackground-color: rgb(255 241 242);\n\t\n\nbg-rose-100\tbackground-color: rgb(255 228 230);\n\t\n\nbg-rose-200\tbackground-color: rgb(254 205 211);\n\t\n\nbg-rose-300\tbackground-color: rgb(253 164 175);\n\t\n\nbg-rose-400\tbackground-color: rgb(251 113 133);\n\t\n\nbg-rose-500\tbackground-color: rgb(244 63 94);\n\t\n\nbg-rose-600\tbackground-color: rgb(225 29 72);\n\t\n\nbg-rose-700\tbackground-color: rgb(190 18 60);\n\t\n\nbg-rose-800\tbackground-color: rgb(159 18 57);\n\t\n\nbg-rose-900\tbackground-color: rgb(136 19 55);\n\t\n\nbg-rose-950\tbackground-color: rgb(76 5 25);\n\t\n​\nBasic usage\n​\nSetting the background color\n\nControl the background color of an element using the bg-{color} utilities.\n\nSave changes\n<button class=\"bg-indigo-500 ...\">\n  Save changes\n</button>\n​\nChanging the opacity\n\nControl the opacity of an element’s background color using the color opacity modifier.\n\nbg-sky-500\n\nButton A\n\nbg-sky-500/75\n\nButton B\n\nbg-sky-500/50\n\nButton C\n<button class=\"bg-sky-500/100 ...\"></button>\n<button class=\"bg-sky-500/75 ...\"></button>\n<button class=\"bg-sky-500/50 ...\"></button>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<div class=\"bg-sky-500/[.06] ...\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-cyan-600 to only apply the bg-cyan-600 utility on hover.\n\nTry hovering over the button to see the background color change\n\nSubscribe\n<button class=\"bg-cyan-500 hover:bg-cyan-600 ...\">Subscribe</button>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-green-500 to apply the bg-green-500 utility at only medium screen sizes and above.\n\n<button class=\"bg-blue-500 md:bg-green-500 ...\">Subscribe</button>\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as background colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your background colors by editing theme.backgroundColor or theme.extend.backgroundColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"bg-[#50d71e]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackground Clip\nBackground Origin\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the background color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Position - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-position",
    "html": "Backgrounds\n\nBackground Position\n\nUtilities for controlling the position of an element's background image.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-bottom\tbackground-position: bottom;\n\nbg-center\tbackground-position: center;\n\nbg-left\tbackground-position: left;\n\nbg-left-bottom\tbackground-position: left bottom;\n\nbg-left-top\tbackground-position: left top;\n\nbg-right\tbackground-position: right;\n\nbg-right-bottom\tbackground-position: right bottom;\n\nbg-right-top\tbackground-position: right top;\n\nbg-top\tbackground-position: top;\n\n​\nBasic usage\n​\nSetting the background position\n\nUse the bg-{side} utilities to control the position of an element’s background image.\n\nbg-left-top\n\nbg-top\n\nbg-right-top\n\nbg-left\n\nbg-center\n\nbg-right\n\nbg-left-bottom\n\nbg-bottom\n\nbg-right-bottom\n\n<div class=\"bg-no-repeat bg-left-top ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-top ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-right-top ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-left ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-center ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-right ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-left-bottom ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-bottom ...\" style=\"background-image: url(...);\"></div>\n<div class=\"bg-no-repeat bg-right-bottom ...\" style=\"background-image: url(...);\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-top to only apply the bg-top utility on hover.\n\n<div class=\"bg-center hover:bg-top ...\" style=\"background-image: url(...)\"></div>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-top to apply the bg-top utility at only medium screen sizes and above.\n\n<div class=\"bg-center md:bg-top ...\" style=\"background-image: url(...)\"></div>\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides nine background-position utilities. You change, add, or remove these by editing the theme.backgroundPosition section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    backgroundPosition: {\n\n      bottom: 'bottom',\n\n      'bottom-4': 'center bottom 1rem',\n\n      center: 'center',\n\n      left: 'left',\n\n      'left-bottom': 'left bottom',\n\n      'left-top': 'left top',\n\n      right: 'right',\n\n      'right-bottom': 'right bottom',\n\n      'right-top': 'right top',\n\n      top: 'top',\n\n      'top-4': 'center top 1rem',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off background-position value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"bg-[center_top_1rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackground Origin\nBackground Repeat\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the background position\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Size - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-size",
    "html": "Backgrounds\n\nBackground Size\n\nUtilities for controlling the background size of an element's background image.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-auto\tbackground-size: auto;\n\nbg-cover\tbackground-size: cover;\n\nbg-contain\tbackground-size: contain;\n\n​\nBasic usage\n​\nAuto\n\nUse bg-auto to display the background image at its default size.\n\n<div class=\"bg-auto bg-no-repeat bg-center ...\" style=\"background-image: url(...)\"></div>\n​\nCover\n\nUse bg-cover to scale the background image until it fills the background layer.\n\n<div class=\"bg-cover bg-center ...\" style=\"background-image: url(...)\"></div>\n​\nContain\n\nUse bg-contain to scale the background image to the outer edges without cropping or stretching.\n\n<div class=\"bg-contain bg-center ...\" style=\"background-image: url(...)\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-contain to only apply the bg-contain utility on hover.\n\n<div class=\"bg-auto hover:bg-contain\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-contain to apply the bg-contain utility at only medium screen sizes and above.\n\n<div class=\"bg-auto md:bg-contain\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides utilities for auto, cover, and contain background sizes. You can change, add, or remove these by editing the theme.backgroundSize section of your config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    backgroundSize: {\n\n      'auto': 'auto',\n\n      'cover': 'cover',\n\n      'contain': 'contain',\n\n      '50%': '50%',\n\n      '16': '4rem',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off background-size value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"bg-[length:200px_100px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nBackground Repeat\nBackground Image\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAuto\nCover\nContain\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Attachment - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-attachment",
    "html": "Backgrounds\n\nBackground Attachment\n\nUtilities for controlling how a background image behaves when scrolling.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-fixed\tbackground-attachment: fixed;\n\nbg-local\tbackground-attachment: local;\n\nbg-scroll\tbackground-attachment: scroll;\n\n​\nBasic usage\n​\nFixed\n\nUse bg-fixed to fix the background image relative to the viewport.\n\nMy trip to the summit\nNovember 16, 2021 · 4 min read\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better?\n\nLook. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<div class=\"bg-fixed ...\" style=\"background-image: url(...)\"></div>\n​\nLocal\n\nUse bg-local to scroll the background image with the container and the viewport.\n\n\"Because the mail never stops. It just keeps coming and coming and coming, there's never a let-up. It's relentless. Every day it piles up more and more and more. And you gotta get it out but the more you get it out the more it keeps coming in. And then the barcode reader breaks and it's Publisher's Clearing House day.\"\n\n— Newman\n<div class=\"bg-local ...\" style=\"background-image: url(...)\"></div>\n​\nScroll\n\nUse bg-scroll to scroll the background image with the viewport, but not with the container.\n\n\"Because the mail never stops. It just keeps coming and coming and coming, there's never a let-up. It's relentless. Every day it piles up more and more and more. And you gotta get it out but the more you get it out the more it keeps coming in. And then the barcode reader breaks and it's Publisher's Clearing House day.\"\n\n— Newman\n<div class=\"bg-scroll ...\" style=\"background-image: url(...)\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-fixed to only apply the bg-fixed utility on hover.\n\n<div class=\"bg-local hover:bg-fixed\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-fixed to apply the bg-fixed utility at only medium screen sizes and above.\n\n<div class=\"bg-local md:bg-fixed\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nContent\nBackground Clip\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nFixed\nLocal\nScroll\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Background Clip - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/background-clip",
    "html": "Backgrounds\n\nBackground Clip\n\nUtilities for controlling the bounding box of an element's background.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbg-clip-border\tbackground-clip: border-box;\n\nbg-clip-padding\tbackground-clip: padding-box;\n\nbg-clip-content\tbackground-clip: content-box;\n\nbg-clip-text\tbackground-clip: text;\n\n​\nBasic usage\n​\nSetting the background clip\n\nUse the bg-clip-{keyword} utilities to control the bounding box of an element’s background.\n\nbg-clip-border\n\nbg-clip-padding\n\nbg-clip-content\n\n<div class=\"bg-clip-border p-6 bg-violet-600 border-4 border-violet-300 border-dashed\"></div>\n<div class=\"bg-clip-padding p-6 bg-violet-600 border-4 border-violet-300 border-dashed\"></div>\n<div class=\"bg-clip-content p-6 bg-violet-600 border-4 border-violet-300 border-dashed\"></div>\n​\nCropping to text\n\nUse bg-clip-text to crop an element’s background to match the shape of the text. Useful for effects where you want a background image to be visible through the text.\n\nHello world\n<div class=\"text-5xl font-extrabold ...\">\n  <span class=\"bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500\">\n    Hello world\n  </span>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:bg-clip-padding to only apply the bg-clip-padding utility on hover.\n\n<div class=\"bg-clip-border hover:bg-clip-padding\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:bg-clip-padding to apply the bg-clip-padding utility at only medium screen sizes and above.\n\n<div class=\"bg-clip-border md:bg-clip-padding\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBackground Attachment\nBackground Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the background clip\nCropping to text\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Content - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/content",
    "html": "Typography\n\nContent\n\nUtilities for controlling the content of the before and after pseudo-elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncontent-none\tcontent: none;\n\n​\nBasic usage\n​\nSetting a pseudo-element’s content\n\nUse the content-{value} utilities along with the before and after variant modifiers to set the contents of the ::before and ::after pseudo-elements.\n\nOut of the box, content-none is the only available preconfigured content utility. And while you can add additional utilities by customizing your theme, it generally makes more sense to just use an arbitrary value.\n\nUse the square bracket notation to define any arbitrary content value on the fly.\n\nHigher resolution means more than just a better-quality image. With a Retina 6K display, Pro Display XDR gives you nearly 40 percent more screen real estate than a 5K display.\nHigher resolution means more than just a better-quality image. With a Retina\n6K display, <a class=\"text-sky-400 after:content-['_↗'] ...\" href=\"https://www.\napple.com/pro-display-xdr/\" target=\"_blank\">Pro Display XDR</a> gives you\nnearly 40 percent more screen real estate than a 5K display.\n​\nReferencing an attribute value\n\nThese content utilities even support CSS features like the attr() function, which you can use to reference a value stored in an attribute:\n\n<div before=\"Hello World\" class=\"before:content-[attr(before)]\">\n  <!-- ... -->\n</div>\n​\nUsing spaces and underscores\n\nSince whitespace denotes the end of a class in HTML, replace any spaces in an arbitrary value with an underscore:\n\n<div class=\"before:content-['Hello_World']\">\n  <!-- ... -->\n</div>\n\nIf you need to include an actual underscore, you can do this by escaping it with a backslash:\n\n<div class=\"before:content-['Hello\\_World']\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:before:content-['Hovering'] to only apply the before:content-['Hovering'] utility on hover.\n\n<div class=\"before:content-['Not_Hovering'] hover:before:content-['Hovering']\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:before:content-['Desktop'] to apply the before:content-['Desktop'] utility at only medium screen sizes and above.\n\n<div class=\"before:content-['Mobile'] md:before:content-['Desktop']\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind only provides the content-none utility. You can customize these values by editing theme.content or theme.extend.content in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      content: {\n\n        'link': 'url(\"/icons/link.svg\")',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off content value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"before:content-['Hello_World']\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nHyphens\nBackground Attachment\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting a pseudo-element's content\nReferencing an attribute value\nUsing spaces and underscores\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Hyphens - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/hyphens",
    "html": "Typography\n\nHyphens\n\nUtilities for controlling how words should be hyphenated.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nhyphens-none\thyphens: none;\n\nhyphens-manual\thyphens: manual;\n\nhyphens-auto\thyphens: auto;\n\n​\nBasic usage\n​\nNone\n\nUse hyphens-none to prevent words from being hyphenated even if the line break suggestion &shy; is used:\n\nOfficially recognized by the Duden dictionary as the longest word in German, Kraftfahrzeug­haftpflichtversicherung is a 36 letter word for motor vehicle liability insurance.\n\n<p class=\"hyphens-none ...\">\n  ... Kraftfahrzeug&shy;haftpflichtversicherung is a ...\n</p>\n​\nManual\n\nUse hyphens-manual to only set hyphenation points where the line break suggestion &shy; is used:\n\nOfficially recognized by the Duden dictionary as the longest word in German, Kraftfahrzeug­haftpflichtversicherung is a 36 letter word for motor vehicle liability insurance.\n\n<p class=\"hyphens-manual ...\">\n  ... Kraftfahrzeug&shy;haftpflichtversicherung is a ...\n</p>\n​\nAuto\n\nUse hyphens-auto to allow the browser to automatically choose hyphenation points based on the language. The line break suggestion &shy; will be preferred over automatic hyphenation points.\n\nOfficially recognized by the Duden dictionary as the longest word in German, Kraftfahrzeughaftpflichtversicherung is a 36 letter word for motor vehicle liability insurance.\n\n<p class=\"hyphens-auto ...\" lang=\"de\">\n  ... Kraftfahrzeughaftpflichtversicherung is a ...\n</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:hyphens-auto to only apply the hyphens-auto utility on hover.\n\n<p class=\"hyphens-none hover:hyphens-auto\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:hyphens-auto to apply the hyphens-auto utility at only medium screen sizes and above.\n\n<p class=\"hyphens-none md:hyphens-auto\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nWord Break\nContent\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nNone\nManual\nAuto\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Word Break - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/word-break",
    "html": "Typography\n\nWord Break\n\nUtilities for controlling word breaks in an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbreak-normal\toverflow-wrap: normal;\nword-break: normal;\n\nbreak-words\toverflow-wrap: break-word;\n\nbreak-all\tword-break: break-all;\n\nbreak-keep\tword-break: keep-all;\n\n​\nBasic usage\n​\nNormal\n\nUse break-normal to only add line breaks at normal word break points.\n\nThe longest word in any of the major English language dictionaries is pneumonoultramicroscopicsilicovolcanoconiosis, a word that refers to a lung disease contracted from the inhalation of very fine silica particles, specifically from a volcano; medically, it is the same as silicosis.\n\n<p class=\"break-normal ...\">...</p>\n​\nBreak Words\n\nUse break-words to add line breaks mid-word if needed.\n\nThe longest word in any of the major English language dictionaries is pneumonoultramicroscopicsilicovolcanoconiosis, a word that refers to a lung disease contracted from the inhalation of very fine silica particles, specifically from a volcano; medically, it is the same as silicosis.\n\n<p class=\"break-words ...\">...</p>\n​\nBreak All\n\nUse break-all to add line breaks whenever necessary, without trying to preserve whole words.\n\nThe longest word in any of the major English language dictionaries is pneumonoultramicroscopicsilicovolcanoconiosis, a word that refers to a lung disease contracted from the inhalation of very fine silica particles, specifically from a volcano; medically, it is the same as silicosis.\n\n<p class=\"break-all ...\">...</p>\n​\nBreak Keep\n\nUse break-keep to prevent line breaks from being applied to Chinese/Japanese/Korean (CJK) text. For non-CJK text break-keep has the same behavior as break-normal.\n\n抗衡不屈不挠 (kànghéng bùqū bùnáo) 这是一个长词，意思是不畏强暴，奋勇抗争，坚定不移，永不放弃。这个词通常用来描述那些在面对困难和挑战时坚持自己信念的人， 他们克服一切困难，不屈不挠地追求自己的目标。无论遇到多大的挑战，他们都能够坚持到底，不放弃，最终获得胜利。\n\n<p class=\"break-keep ...\">...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:break-all to only apply the break-all utility on hover.\n\n<p class=\"break-normal hover:break-all\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:break-all to apply the break-all utility at only medium screen sizes and above.\n\n<p class=\"break-normal md:break-all\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nWhitespace\nHyphens\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nNormal\nBreak Words\nBreak All\nBreak Keep\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Whitespace - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/whitespace",
    "html": "Typography\n\nWhitespace\n\nUtilities for controlling an element's white-space property.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nwhitespace-normal\twhite-space: normal;\n\nwhitespace-nowrap\twhite-space: nowrap;\n\nwhitespace-pre\twhite-space: pre;\n\nwhitespace-pre-line\twhite-space: pre-line;\n\nwhitespace-pre-wrap\twhite-space: pre-wrap;\n\nwhitespace-break-spaces\twhite-space: break-spaces;\n\n​\nBasic usage\n​\nNormal\n\nUse whitespace-normal to cause text to wrap normally within an element. Newlines and spaces will be collapsed.\n\nHey everyone! It's almost 2022 and we still don't know if there is aliens living among us, or do we? Maybe the person writing this is an alien. You will never know.\n<div class=\"w-3/4 ...\">\n  <div class=\"whitespace-normal ...\">Hey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.</div>\n</div>\n​\nNo Wrap\n\nUse whitespace-nowrap to prevent text from wrapping within an element. Newlines and spaces will be collapsed.\n\nHey everyone! It's almost 2022 and we still don't know if there is aliens living among us, or do we? Maybe the person writing this is an alien. You will never know.\n<div class=\"w-3/4 overflow-x-auto ...\">\n  <div class=\"whitespace-nowrap ...\">Hey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.</div>\n</div>\n​\nPre\n\nUse whitespace-pre to preserve newlines and spaces within an element. Text will not be wrapped.\n\nHey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.\n<div class=\"w-3/4 overflow-x-auto ...\">\n  <div class=\"whitespace-pre ...\">Hey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.</div>\n</div>\n​\nPre Line\n\nUse whitespace-pre-line to preserve newlines but not spaces within an element. Text will be wrapped normally.\n\nHey everyone!\n\nIt's almost 2022 and we still don't know if there is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.\n<div class=\"w-3/4 ...\">\n  <div class=\"whitespace-pre-line ...\">Hey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.</div>\n</div>\n​\nPre Wrap\n\nUse whitespace-pre-wrap to preserve newlines and spaces within an element. Text will be wrapped normally.\n\nHey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.\n<div class=\"w-3/4 ...\">\n  <div class=\"whitespace-pre-wrap ...\">Hey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.</div>\n</div>\n​\nBreak Spaces\n\nUse whitespace-break-spaces to preserve newlines and spaces within an element. White space at the end of lines will not hang, but will wrap to the next line.\n\nHey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.\n<div class=\"w-3/4 ...\">\n  <div class=\"whitespace-break-spaces ...\">Hey everyone!\n\nIt's almost 2022       and we still don't know if there       is aliens living among us, or do we? Maybe the person writing this is an alien.\n\nYou will never know.</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:whitespace-pre to only apply the whitespace-pre utility on hover.\n\n<div class=\"whitespace-normal hover:whitespace-pre\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:whitespace-pre to apply the whitespace-pre utility at only medium screen sizes and above.\n\n<div class=\"whitespace-normal md:whitespace-pre\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nVertical Align\nWord Break\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nNormal\nNo Wrap\nPre\nPre Line\nPre Wrap\nBreak Spaces\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Vertical Align - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/vertical-align",
    "html": "Typography\n\nVertical Align\n\nUtilities for controlling the vertical alignment of an inline or table-cell box.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nalign-baseline\tvertical-align: baseline;\n\nalign-top\tvertical-align: top;\n\nalign-middle\tvertical-align: middle;\n\nalign-bottom\tvertical-align: bottom;\n\nalign-text-top\tvertical-align: text-top;\n\nalign-text-bottom\tvertical-align: text-bottom;\n\nalign-sub\tvertical-align: sub;\n\nalign-super\tvertical-align: super;\n\n​\nBasic usage\n​\nBaseline\n\nUse align-baseline to align the baseline of an element with the baseline of its parent.\n\n The quick brown fox jumps over the lazy dog.\n<span class=\"inline-block align-baseline ...\">...</span>\n​\nTop\n\nUse align-top to align the top of an element and its descendants with the top of the entire line.\n\n The quick brown fox jumps over the lazy dog.\n<span class=\"inline-block align-top ...\">...</span>\n​\nMiddle\n\nUse align-middle to align the middle of an element with the baseline plus half the x-height of the parent.\n\n The quick brown fox jumps over the lazy dog.\n<span class=\"inline-block align-middle ...\">...</span>\n​\nBottom\n\nUse align-bottom to align the bottom of an element and its descendants with the bottom of the entire line.\n\n The quick brown fox jumps over the lazy dog.\n<span class=\"inline-block align-bottom ...\">...</span>\n​\nText Top\n\nUse align-text-top to align the top of an element with the top of the parent element’s font.\n\n The quick brown fox jumps over the lazy dog.\n<span class=\"inline-block align-text-top ...\">...</span>\n​\nText Bottom\n\nUse align-text-bottom to align the bottom of an element with the bottom of the parent element’s font.\n\n The quick brown fox jumps over the lazy dog.\n<span class=\"inline-block align-text-bottom ...\">...</span>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:align-top to only apply the align-top utility on hover.\n\n<p class=\"align-middle hover:align-top\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:align-top to apply the align-top utility at only medium screen sizes and above.\n\n<p class=\"align-middle md:align-top\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nArbitrary values\n\nIf you need to use a one-off vertical-align value that isn't included in Tailwind by default, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"align-[4px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nText Indent\nWhitespace\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nBaseline\nTop\nMiddle\nBottom\nText Top\nText Bottom\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Indent - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-indent",
    "html": "Typography\n\nText Indent\n\nUtilities for controlling the amount of empty space shown before text in a block.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nindent-0\ttext-indent: 0px;\n\nindent-px\ttext-indent: 1px;\n\nindent-0.5\ttext-indent: 0.125rem; /* 2px */\n\nindent-1\ttext-indent: 0.25rem; /* 4px */\n\nindent-1.5\ttext-indent: 0.375rem; /* 6px */\n\nindent-2\ttext-indent: 0.5rem; /* 8px */\n\nindent-2.5\ttext-indent: 0.625rem; /* 10px */\n\nindent-3\ttext-indent: 0.75rem; /* 12px */\n\nindent-3.5\ttext-indent: 0.875rem; /* 14px */\n\nindent-4\ttext-indent: 1rem; /* 16px */\n\nindent-5\ttext-indent: 1.25rem; /* 20px */\n\nindent-6\ttext-indent: 1.5rem; /* 24px */\n\nindent-7\ttext-indent: 1.75rem; /* 28px */\n\nindent-8\ttext-indent: 2rem; /* 32px */\n\nindent-9\ttext-indent: 2.25rem; /* 36px */\n\nindent-10\ttext-indent: 2.5rem; /* 40px */\n\nindent-11\ttext-indent: 2.75rem; /* 44px */\n\nindent-12\ttext-indent: 3rem; /* 48px */\n\nindent-14\ttext-indent: 3.5rem; /* 56px */\n\nindent-16\ttext-indent: 4rem; /* 64px */\n\nindent-20\ttext-indent: 5rem; /* 80px */\n\nindent-24\ttext-indent: 6rem; /* 96px */\n\nindent-28\ttext-indent: 7rem; /* 112px */\n\nindent-32\ttext-indent: 8rem; /* 128px */\n\nindent-36\ttext-indent: 9rem; /* 144px */\n\nindent-40\ttext-indent: 10rem; /* 160px */\n\nindent-44\ttext-indent: 11rem; /* 176px */\n\nindent-48\ttext-indent: 12rem; /* 192px */\n\nindent-52\ttext-indent: 13rem; /* 208px */\n\nindent-56\ttext-indent: 14rem; /* 224px */\n\nindent-60\ttext-indent: 15rem; /* 240px */\n\nindent-64\ttext-indent: 16rem; /* 256px */\n\nindent-72\ttext-indent: 18rem; /* 288px */\n\nindent-80\ttext-indent: 20rem; /* 320px */\n\nindent-96\ttext-indent: 24rem; /* 384px */\n\n​\nBasic usage\n​\nAdding a text indent\n\nUse the indent-{width} utilities to set the amount of empty space (indentation) that’s shown before text in a block.\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"indent-8\">\n  So I started to walk into the water. I won't lie to you boys, I was\n  terrified. But I pressed on, and as I made my way past the breakers\n  a strange calm came over me. I don't know if it was divine intervention\n  or the kinship of all living things but I tell you Jerry at that moment,\n  I <em>was</em> a marine biologist.\n</p>\n​\nUsing negative values\n\nTo use a negative text indent value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"-indent-8\">\n  So I started to walk into the water. I won't lie to...\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:indent-8 to only apply the indent-8 utility on hover.\n\n<div class=\"indent-4 hover:indent-8\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:indent-8 to apply the indent-8 utility at only medium screen sizes and above.\n\n<div class=\"indent-4 md:indent-8\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nThe default text indent scale is based on the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the text indent scale by editing theme.textIndent or theme.extend.textIndent in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      textIndent: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off text-indent value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"indent-[50%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nText Overflow\nVertical Align\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding a text indent\nUsing negative values\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Overflow - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-overflow",
    "html": "Typography\n\nText Overflow\n\nUtilities for controlling text overflow in an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntruncate\toverflow: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n\ntext-ellipsis\ttext-overflow: ellipsis;\n\ntext-clip\ttext-overflow: clip;\n\n​\nBasic usage\n​\nTruncate\n\nUse truncate to truncate overflowing text with an ellipsis (…) if needed.\n\nThe longest word in any of the major English language dictionaries is pneumonoultramicroscopicsilicovolcanoconiosis, a word that refers to a lung disease contracted from the inhalation of very fine silica particles, specifically from a volcano; medically, it is the same as silicosis.\n\n<p class=\"truncate ...\">...</p>\n​\nEllipsis\n\nUse text-ellipsis to truncate overflowing text with an ellipsis (…) if needed.\n\nThe longest word in any of the major English language dictionaries is pneumonoultramicroscopicsilicovolcanoconiosis, a word that refers to a lung disease contracted from the inhalation of very fine silica particles, specifically from a volcano; medically, it is the same as silicosis.\n\n<p class=\"text-ellipsis overflow-hidden ...\">...</p>\n​\nClip\n\nUse text-clip to truncate the text at the limit of the content area.\n\nThe longest word in any of the major English language dictionaries is pneumonoultramicroscopicsilicovolcanoconiosis, a word that refers to a lung disease contracted from the inhalation of very fine silica particles, specifically from a volcano; medically, it is the same as silicosis.\n\n<p class=\"text-clip overflow-hidden ...\">...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:text-clip to only apply the text-clip utility on hover.\n\n<p class=\"truncate hover:text-clip\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:text-clip to apply the text-clip utility at only medium screen sizes and above.\n\n<p class=\"truncate md:text-clip\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nText Transform\nText Indent\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nTruncate\nEllipsis\nClip\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Underline Offset - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-underline-offset",
    "html": "Typography\n\nText Underline Offset\n\nUtilities for controlling the offset of a text underline.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nunderline-offset-auto\ttext-underline-offset: auto;\n\nunderline-offset-0\ttext-underline-offset: 0px;\n\nunderline-offset-1\ttext-underline-offset: 1px;\n\nunderline-offset-2\ttext-underline-offset: 2px;\n\nunderline-offset-4\ttext-underline-offset: 4px;\n\nunderline-offset-8\ttext-underline-offset: 8px;\n\n​\nBasic usage\n​\nSetting the underline offset\n\nUse the underline-offset-{width} utilities to change the offset of a text underline.\n\nunderline-offset-1\n\nThe quick brown fox jumps over the lazy dog.\n\nunderline-offset-2\n\nThe quick brown fox jumps over the lazy dog.\n\nunderline-offset-4\n\nThe quick brown fox jumps over the lazy dog.\n\nunderline-offset-8\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"underline underline-offset-1 ...\">The quick brown fox...</p>\n<p class=\"underline underline-offset-2 ...\">The quick brown fox...</p>\n<p class=\"underline underline-offset-4 ...\">The quick brown fox...</p>\n<p class=\"underline underline-offset-8 ...\">The quick brown fox...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:underline-offset-4 to only apply the underline-offset-4 utility on hover.\n\n<p class=\"underline hover:underline-offset-4\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:underline-offset-4 to apply the underline-offset-4 utility at only medium screen sizes and above.\n\n<p class=\"underline md:underline-offset-4\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize the underline-offset-{width} utilities by editing theme.textUnderlineOffset or theme.extend.textUnderlineOffset in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      textUnderlineOffset: {\n\n        3: '3px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off text-underline-offset value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"underline-offset-[3px]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nText Decoration Thickness\nText Transform\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the underline offset\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Transform - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-transform",
    "html": "Typography\n\nText Transform\n\nUtilities for controlling the transformation of text.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nuppercase\ttext-transform: uppercase;\n\nlowercase\ttext-transform: lowercase;\n\ncapitalize\ttext-transform: capitalize;\n\nnormal-case\ttext-transform: none;\n\n​\nBasic usage\n​\nTransforming text\n\nThe uppercase and lowercase will uppercase and lowercase text respectively, whereas capitalize utility will convert text to title-case. The normal-case utility can be used to preserve the original casing — typically to reset capitalization at different breakpoints.\n\nnormal-case\n\nThe quick brown fox jumps over the lazy dog.\n\nuppercase\n\nTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.\n\nlowercase\n\nthe quick brown fox jumps over the lazy dog.\n\ncapitalize\n\nThe Quick Brown Fox Jumps Over The Lazy Dog.\n\n<p class=\"normal-case ...\">The quick brown fox ...</p>\n<p class=\"uppercase ...\">The quick brown fox ...</p>\n<p class=\"lowercase ...\">The quick brown fox ...</p>\n<p class=\"capitalize ...\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:uppercase to only apply the uppercase utility on hover.\n\n<p class=\"capitalize hover:uppercase\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:uppercase to apply the uppercase utility at only medium screen sizes and above.\n\n<p class=\"capitalize md:uppercase\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nText Underline Offset\nText Overflow\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nTransforming text\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Decoration Thickness - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-decoration-thickness",
    "html": "Typography\n\nText Decoration Thickness\n\nUtilities for controlling the thickness of text decorations.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndecoration-auto\ttext-decoration-thickness: auto;\n\ndecoration-from-font\ttext-decoration-thickness: from-font;\n\ndecoration-0\ttext-decoration-thickness: 0px;\n\ndecoration-1\ttext-decoration-thickness: 1px;\n\ndecoration-2\ttext-decoration-thickness: 2px;\n\ndecoration-4\ttext-decoration-thickness: 4px;\n\ndecoration-8\ttext-decoration-thickness: 8px;\n\n​\nBasic usage\n​\nSetting the text decoration thickness\n\nUse the decoration-{width} utilities to change the thickness of an element’s text decoration.\n\ndecoration-1\n\nThe quick brown fox jumps over the lazy dog.\n\ndecoration-2\n\nThe quick brown fox jumps over the lazy dog.\n\ndecoration-4\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"underline decoration-1 ...\">The quick brown fox...</p>\n<p class=\"underline decoration-2 ...\">The quick brown fox...</p>\n<p class=\"underline decoration-4 ...\">The quick brown fox...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:decoration-4 to only apply the decoration-4 utility on hover.\n\n<p class=\"underline hover:decoration-4\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:decoration-4 to apply the decoration-4 utility at only medium screen sizes and above.\n\n<p class=\"underline md:decoration-4\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize the decoration-{width} utilities by editing theme.textDecorationThickness or theme.extend.textDecorationThickness in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      textDecorationThickness: {\n\n        3: '3px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off text-decoration-thickness value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"decoration-[3px]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nText Decoration Style\nText Underline Offset\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the text decoration thickness\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Decoration Style - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-decoration-style",
    "html": "Typography\n\nText Decoration Style\n\nUtilities for controlling the style of text decorations.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndecoration-solid\ttext-decoration-style: solid;\n\ndecoration-double\ttext-decoration-style: double;\n\ndecoration-dotted\ttext-decoration-style: dotted;\n\ndecoration-dashed\ttext-decoration-style: dashed;\n\ndecoration-wavy\ttext-decoration-style: wavy;\n\n​\nBasic usage\n​\nSetting the text decoration style\n\nUse the decoration-{style} utilities to change the style of an element’s text decoration.\n\ndecoration-solid\n\nThe quick brown fox jumps over the lazy dog.\n\ndecoration-double\n\nThe quick brown fox jumps over the lazy dog.\n\ndecoration-dotted\n\nThe quick brown fox jumps over the lazy dog.\n\ndecoration-dashed\n\nThe quick brown fox jumps over the lazy dog.\n\ndecoration-wavy\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"underline decoration-solid ...\">The quick brown fox...</p>\n<p class=\"underline decoration-double ...\">The quick brown fox...</p>\n<p class=\"underline decoration-dotted ...\">The quick brown fox...</p>\n<p class=\"underline decoration-dashed ...\">The quick brown fox...</p>\n<p class=\"underline decoration-wavy ...\">The quick brown fox...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:decoration-dashed to only apply the decoration-dashed utility on hover.\n\n<p class=\"underline hover:decoration-dashed\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:decoration-dashed to apply the decoration-dashed utility at only medium screen sizes and above.\n\n<p class=\"underline md:decoration-dashed\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nText Decoration Color\nText Decoration Thickness\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the text decoration style\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Decoration Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-decoration-color",
    "html": "Typography\n\nText Decoration Color\n\nUtilities for controlling the color of text decorations.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ndecoration-inherit\ttext-decoration-color: inherit;\n\ndecoration-current\ttext-decoration-color: currentColor;\n\ndecoration-transparent\ttext-decoration-color: transparent;\n\ndecoration-black\ttext-decoration-color: #000;\n\ndecoration-white\ttext-decoration-color: #fff;\n\ndecoration-slate-50\ttext-decoration-color: #f8fafc;\n\ndecoration-slate-100\ttext-decoration-color: #f1f5f9;\n\ndecoration-slate-200\ttext-decoration-color: #e2e8f0;\n\ndecoration-slate-300\ttext-decoration-color: #cbd5e1;\n\ndecoration-slate-400\ttext-decoration-color: #94a3b8;\n\ndecoration-slate-500\ttext-decoration-color: #64748b;\n\ndecoration-slate-600\ttext-decoration-color: #475569;\n\ndecoration-slate-700\ttext-decoration-color: #334155;\n\ndecoration-slate-800\ttext-decoration-color: #1e293b;\n\ndecoration-slate-900\ttext-decoration-color: #0f172a;\n\ndecoration-slate-950\ttext-decoration-color: #020617;\n\ndecoration-gray-50\ttext-decoration-color: #f9fafb;\n\ndecoration-gray-100\ttext-decoration-color: #f3f4f6;\n\ndecoration-gray-200\ttext-decoration-color: #e5e7eb;\n\ndecoration-gray-300\ttext-decoration-color: #d1d5db;\n\ndecoration-gray-400\ttext-decoration-color: #9ca3af;\n\ndecoration-gray-500\ttext-decoration-color: #6b7280;\n\ndecoration-gray-600\ttext-decoration-color: #4b5563;\n\ndecoration-gray-700\ttext-decoration-color: #374151;\n\ndecoration-gray-800\ttext-decoration-color: #1f2937;\n\ndecoration-gray-900\ttext-decoration-color: #111827;\n\ndecoration-gray-950\ttext-decoration-color: #030712;\n\ndecoration-zinc-50\ttext-decoration-color: #fafafa;\n\ndecoration-zinc-100\ttext-decoration-color: #f4f4f5;\n\ndecoration-zinc-200\ttext-decoration-color: #e4e4e7;\n\ndecoration-zinc-300\ttext-decoration-color: #d4d4d8;\n\ndecoration-zinc-400\ttext-decoration-color: #a1a1aa;\n\ndecoration-zinc-500\ttext-decoration-color: #71717a;\n\ndecoration-zinc-600\ttext-decoration-color: #52525b;\n\ndecoration-zinc-700\ttext-decoration-color: #3f3f46;\n\ndecoration-zinc-800\ttext-decoration-color: #27272a;\n\ndecoration-zinc-900\ttext-decoration-color: #18181b;\n\ndecoration-zinc-950\ttext-decoration-color: #09090b;\n\ndecoration-neutral-50\ttext-decoration-color: #fafafa;\n\ndecoration-neutral-100\ttext-decoration-color: #f5f5f5;\n\ndecoration-neutral-200\ttext-decoration-color: #e5e5e5;\n\ndecoration-neutral-300\ttext-decoration-color: #d4d4d4;\n\ndecoration-neutral-400\ttext-decoration-color: #a3a3a3;\n\ndecoration-neutral-500\ttext-decoration-color: #737373;\n\ndecoration-neutral-600\ttext-decoration-color: #525252;\n\ndecoration-neutral-700\ttext-decoration-color: #404040;\n\ndecoration-neutral-800\ttext-decoration-color: #262626;\n\ndecoration-neutral-900\ttext-decoration-color: #171717;\n\ndecoration-neutral-950\ttext-decoration-color: #0a0a0a;\n\ndecoration-stone-50\ttext-decoration-color: #fafaf9;\n\ndecoration-stone-100\ttext-decoration-color: #f5f5f4;\n\ndecoration-stone-200\ttext-decoration-color: #e7e5e4;\n\ndecoration-stone-300\ttext-decoration-color: #d6d3d1;\n\ndecoration-stone-400\ttext-decoration-color: #a8a29e;\n\ndecoration-stone-500\ttext-decoration-color: #78716c;\n\ndecoration-stone-600\ttext-decoration-color: #57534e;\n\ndecoration-stone-700\ttext-decoration-color: #44403c;\n\ndecoration-stone-800\ttext-decoration-color: #292524;\n\ndecoration-stone-900\ttext-decoration-color: #1c1917;\n\ndecoration-stone-950\ttext-decoration-color: #0c0a09;\n\ndecoration-red-50\ttext-decoration-color: #fef2f2;\n\ndecoration-red-100\ttext-decoration-color: #fee2e2;\n\ndecoration-red-200\ttext-decoration-color: #fecaca;\n\ndecoration-red-300\ttext-decoration-color: #fca5a5;\n\ndecoration-red-400\ttext-decoration-color: #f87171;\n\ndecoration-red-500\ttext-decoration-color: #ef4444;\n\ndecoration-red-600\ttext-decoration-color: #dc2626;\n\ndecoration-red-700\ttext-decoration-color: #b91c1c;\n\ndecoration-red-800\ttext-decoration-color: #991b1b;\n\ndecoration-red-900\ttext-decoration-color: #7f1d1d;\n\ndecoration-red-950\ttext-decoration-color: #450a0a;\n\ndecoration-orange-50\ttext-decoration-color: #fff7ed;\n\ndecoration-orange-100\ttext-decoration-color: #ffedd5;\n\ndecoration-orange-200\ttext-decoration-color: #fed7aa;\n\ndecoration-orange-300\ttext-decoration-color: #fdba74;\n\ndecoration-orange-400\ttext-decoration-color: #fb923c;\n\ndecoration-orange-500\ttext-decoration-color: #f97316;\n\ndecoration-orange-600\ttext-decoration-color: #ea580c;\n\ndecoration-orange-700\ttext-decoration-color: #c2410c;\n\ndecoration-orange-800\ttext-decoration-color: #9a3412;\n\ndecoration-orange-900\ttext-decoration-color: #7c2d12;\n\ndecoration-orange-950\ttext-decoration-color: #431407;\n\ndecoration-amber-50\ttext-decoration-color: #fffbeb;\n\ndecoration-amber-100\ttext-decoration-color: #fef3c7;\n\ndecoration-amber-200\ttext-decoration-color: #fde68a;\n\ndecoration-amber-300\ttext-decoration-color: #fcd34d;\n\ndecoration-amber-400\ttext-decoration-color: #fbbf24;\n\ndecoration-amber-500\ttext-decoration-color: #f59e0b;\n\ndecoration-amber-600\ttext-decoration-color: #d97706;\n\ndecoration-amber-700\ttext-decoration-color: #b45309;\n\ndecoration-amber-800\ttext-decoration-color: #92400e;\n\ndecoration-amber-900\ttext-decoration-color: #78350f;\n\ndecoration-amber-950\ttext-decoration-color: #451a03;\n\ndecoration-yellow-50\ttext-decoration-color: #fefce8;\n\ndecoration-yellow-100\ttext-decoration-color: #fef9c3;\n\ndecoration-yellow-200\ttext-decoration-color: #fef08a;\n\ndecoration-yellow-300\ttext-decoration-color: #fde047;\n\ndecoration-yellow-400\ttext-decoration-color: #facc15;\n\ndecoration-yellow-500\ttext-decoration-color: #eab308;\n\ndecoration-yellow-600\ttext-decoration-color: #ca8a04;\n\ndecoration-yellow-700\ttext-decoration-color: #a16207;\n\ndecoration-yellow-800\ttext-decoration-color: #854d0e;\n\ndecoration-yellow-900\ttext-decoration-color: #713f12;\n\ndecoration-yellow-950\ttext-decoration-color: #422006;\n\ndecoration-lime-50\ttext-decoration-color: #f7fee7;\n\ndecoration-lime-100\ttext-decoration-color: #ecfccb;\n\ndecoration-lime-200\ttext-decoration-color: #d9f99d;\n\ndecoration-lime-300\ttext-decoration-color: #bef264;\n\ndecoration-lime-400\ttext-decoration-color: #a3e635;\n\ndecoration-lime-500\ttext-decoration-color: #84cc16;\n\ndecoration-lime-600\ttext-decoration-color: #65a30d;\n\ndecoration-lime-700\ttext-decoration-color: #4d7c0f;\n\ndecoration-lime-800\ttext-decoration-color: #3f6212;\n\ndecoration-lime-900\ttext-decoration-color: #365314;\n\ndecoration-lime-950\ttext-decoration-color: #1a2e05;\n\ndecoration-green-50\ttext-decoration-color: #f0fdf4;\n\ndecoration-green-100\ttext-decoration-color: #dcfce7;\n\ndecoration-green-200\ttext-decoration-color: #bbf7d0;\n\ndecoration-green-300\ttext-decoration-color: #86efac;\n\ndecoration-green-400\ttext-decoration-color: #4ade80;\n\ndecoration-green-500\ttext-decoration-color: #22c55e;\n\ndecoration-green-600\ttext-decoration-color: #16a34a;\n\ndecoration-green-700\ttext-decoration-color: #15803d;\n\ndecoration-green-800\ttext-decoration-color: #166534;\n\ndecoration-green-900\ttext-decoration-color: #14532d;\n\ndecoration-green-950\ttext-decoration-color: #052e16;\n\ndecoration-emerald-50\ttext-decoration-color: #ecfdf5;\n\ndecoration-emerald-100\ttext-decoration-color: #d1fae5;\n\ndecoration-emerald-200\ttext-decoration-color: #a7f3d0;\n\ndecoration-emerald-300\ttext-decoration-color: #6ee7b7;\n\ndecoration-emerald-400\ttext-decoration-color: #34d399;\n\ndecoration-emerald-500\ttext-decoration-color: #10b981;\n\ndecoration-emerald-600\ttext-decoration-color: #059669;\n\ndecoration-emerald-700\ttext-decoration-color: #047857;\n\ndecoration-emerald-800\ttext-decoration-color: #065f46;\n\ndecoration-emerald-900\ttext-decoration-color: #064e3b;\n\ndecoration-emerald-950\ttext-decoration-color: #022c22;\n\ndecoration-teal-50\ttext-decoration-color: #f0fdfa;\n\ndecoration-teal-100\ttext-decoration-color: #ccfbf1;\n\ndecoration-teal-200\ttext-decoration-color: #99f6e4;\n\ndecoration-teal-300\ttext-decoration-color: #5eead4;\n\ndecoration-teal-400\ttext-decoration-color: #2dd4bf;\n\ndecoration-teal-500\ttext-decoration-color: #14b8a6;\n\ndecoration-teal-600\ttext-decoration-color: #0d9488;\n\ndecoration-teal-700\ttext-decoration-color: #0f766e;\n\ndecoration-teal-800\ttext-decoration-color: #115e59;\n\ndecoration-teal-900\ttext-decoration-color: #134e4a;\n\ndecoration-teal-950\ttext-decoration-color: #042f2e;\n\ndecoration-cyan-50\ttext-decoration-color: #ecfeff;\n\ndecoration-cyan-100\ttext-decoration-color: #cffafe;\n\ndecoration-cyan-200\ttext-decoration-color: #a5f3fc;\n\ndecoration-cyan-300\ttext-decoration-color: #67e8f9;\n\ndecoration-cyan-400\ttext-decoration-color: #22d3ee;\n\ndecoration-cyan-500\ttext-decoration-color: #06b6d4;\n\ndecoration-cyan-600\ttext-decoration-color: #0891b2;\n\ndecoration-cyan-700\ttext-decoration-color: #0e7490;\n\ndecoration-cyan-800\ttext-decoration-color: #155e75;\n\ndecoration-cyan-900\ttext-decoration-color: #164e63;\n\ndecoration-cyan-950\ttext-decoration-color: #083344;\n\ndecoration-sky-50\ttext-decoration-color: #f0f9ff;\n\ndecoration-sky-100\ttext-decoration-color: #e0f2fe;\n\ndecoration-sky-200\ttext-decoration-color: #bae6fd;\n\ndecoration-sky-300\ttext-decoration-color: #7dd3fc;\n\ndecoration-sky-400\ttext-decoration-color: #38bdf8;\n\ndecoration-sky-500\ttext-decoration-color: #0ea5e9;\n\ndecoration-sky-600\ttext-decoration-color: #0284c7;\n\ndecoration-sky-700\ttext-decoration-color: #0369a1;\n\ndecoration-sky-800\ttext-decoration-color: #075985;\n\ndecoration-sky-900\ttext-decoration-color: #0c4a6e;\n\ndecoration-sky-950\ttext-decoration-color: #082f49;\n\ndecoration-blue-50\ttext-decoration-color: #eff6ff;\n\ndecoration-blue-100\ttext-decoration-color: #dbeafe;\n\ndecoration-blue-200\ttext-decoration-color: #bfdbfe;\n\ndecoration-blue-300\ttext-decoration-color: #93c5fd;\n\ndecoration-blue-400\ttext-decoration-color: #60a5fa;\n\ndecoration-blue-500\ttext-decoration-color: #3b82f6;\n\ndecoration-blue-600\ttext-decoration-color: #2563eb;\n\ndecoration-blue-700\ttext-decoration-color: #1d4ed8;\n\ndecoration-blue-800\ttext-decoration-color: #1e40af;\n\ndecoration-blue-900\ttext-decoration-color: #1e3a8a;\n\ndecoration-blue-950\ttext-decoration-color: #172554;\n\ndecoration-indigo-50\ttext-decoration-color: #eef2ff;\n\ndecoration-indigo-100\ttext-decoration-color: #e0e7ff;\n\ndecoration-indigo-200\ttext-decoration-color: #c7d2fe;\n\ndecoration-indigo-300\ttext-decoration-color: #a5b4fc;\n\ndecoration-indigo-400\ttext-decoration-color: #818cf8;\n\ndecoration-indigo-500\ttext-decoration-color: #6366f1;\n\ndecoration-indigo-600\ttext-decoration-color: #4f46e5;\n\ndecoration-indigo-700\ttext-decoration-color: #4338ca;\n\ndecoration-indigo-800\ttext-decoration-color: #3730a3;\n\ndecoration-indigo-900\ttext-decoration-color: #312e81;\n\ndecoration-indigo-950\ttext-decoration-color: #1e1b4b;\n\ndecoration-violet-50\ttext-decoration-color: #f5f3ff;\n\ndecoration-violet-100\ttext-decoration-color: #ede9fe;\n\ndecoration-violet-200\ttext-decoration-color: #ddd6fe;\n\ndecoration-violet-300\ttext-decoration-color: #c4b5fd;\n\ndecoration-violet-400\ttext-decoration-color: #a78bfa;\n\ndecoration-violet-500\ttext-decoration-color: #8b5cf6;\n\ndecoration-violet-600\ttext-decoration-color: #7c3aed;\n\ndecoration-violet-700\ttext-decoration-color: #6d28d9;\n\ndecoration-violet-800\ttext-decoration-color: #5b21b6;\n\ndecoration-violet-900\ttext-decoration-color: #4c1d95;\n\ndecoration-violet-950\ttext-decoration-color: #2e1065;\n\ndecoration-purple-50\ttext-decoration-color: #faf5ff;\n\ndecoration-purple-100\ttext-decoration-color: #f3e8ff;\n\ndecoration-purple-200\ttext-decoration-color: #e9d5ff;\n\ndecoration-purple-300\ttext-decoration-color: #d8b4fe;\n\ndecoration-purple-400\ttext-decoration-color: #c084fc;\n\ndecoration-purple-500\ttext-decoration-color: #a855f7;\n\ndecoration-purple-600\ttext-decoration-color: #9333ea;\n\ndecoration-purple-700\ttext-decoration-color: #7e22ce;\n\ndecoration-purple-800\ttext-decoration-color: #6b21a8;\n\ndecoration-purple-900\ttext-decoration-color: #581c87;\n\ndecoration-purple-950\ttext-decoration-color: #3b0764;\n\ndecoration-fuchsia-50\ttext-decoration-color: #fdf4ff;\n\ndecoration-fuchsia-100\ttext-decoration-color: #fae8ff;\n\ndecoration-fuchsia-200\ttext-decoration-color: #f5d0fe;\n\ndecoration-fuchsia-300\ttext-decoration-color: #f0abfc;\n\ndecoration-fuchsia-400\ttext-decoration-color: #e879f9;\n\ndecoration-fuchsia-500\ttext-decoration-color: #d946ef;\n\ndecoration-fuchsia-600\ttext-decoration-color: #c026d3;\n\ndecoration-fuchsia-700\ttext-decoration-color: #a21caf;\n\ndecoration-fuchsia-800\ttext-decoration-color: #86198f;\n\ndecoration-fuchsia-900\ttext-decoration-color: #701a75;\n\ndecoration-fuchsia-950\ttext-decoration-color: #4a044e;\n\ndecoration-pink-50\ttext-decoration-color: #fdf2f8;\n\ndecoration-pink-100\ttext-decoration-color: #fce7f3;\n\ndecoration-pink-200\ttext-decoration-color: #fbcfe8;\n\ndecoration-pink-300\ttext-decoration-color: #f9a8d4;\n\ndecoration-pink-400\ttext-decoration-color: #f472b6;\n\ndecoration-pink-500\ttext-decoration-color: #ec4899;\n\ndecoration-pink-600\ttext-decoration-color: #db2777;\n\ndecoration-pink-700\ttext-decoration-color: #be185d;\n\ndecoration-pink-800\ttext-decoration-color: #9d174d;\n\ndecoration-pink-900\ttext-decoration-color: #831843;\n\ndecoration-pink-950\ttext-decoration-color: #500724;\n\ndecoration-rose-50\ttext-decoration-color: #fff1f2;\n\ndecoration-rose-100\ttext-decoration-color: #ffe4e6;\n\ndecoration-rose-200\ttext-decoration-color: #fecdd3;\n\ndecoration-rose-300\ttext-decoration-color: #fda4af;\n\ndecoration-rose-400\ttext-decoration-color: #fb7185;\n\ndecoration-rose-500\ttext-decoration-color: #f43f5e;\n\ndecoration-rose-600\ttext-decoration-color: #e11d48;\n\ndecoration-rose-700\ttext-decoration-color: #be123c;\n\ndecoration-rose-800\ttext-decoration-color: #9f1239;\n\ndecoration-rose-900\ttext-decoration-color: #881337;\n\ndecoration-rose-950\ttext-decoration-color: #4c0519;\n\n​\nBasic usage\n​\nSetting the text decoration color\n\nUse the decoration-{color} utilities to change the color of an element’s text decoration.\n\nI’m Derek, an astro-engineer based in Tattooine. I like to build X-Wings at My Company, Inc. Outside of work, I like to watch pod-racing and have light-saber fights.\n\n<div>\n  <p>\n    I’m Derek, an astro-engineer based in Tattooine. I like to build X-Wings at\n    <a class=\"underline decoration-sky-500\">My Company, Inc</a>.\n    Outside of work, I like to <a class=\"underline decoration-pink-500\">watch\n    pod-racing</a> and have <a class=\"underline decoration-indigo-500\">light-saber</a> fights.\n  </p>\n</div>\n​\nChanging the opacity\n\nControl the opacity of an element’s text decoration color using the color opacity modifier.\n\nI’m Derek, an astro-engineer based in Tattooine. I like to build X-Wings at My Company, Inc. Outside of work, I like to watch pod-racing and have light-saber fights.\n\n<div>\n  <p>\n    I’m Derek, an astro-engineer based in Tattooine. I like to build X-Wings at\n    <a class=\"underline decoration-sky-500/30\">My Company, Inc</a>.\n    Outside of work, I like to <a class=\"underline decoration-pink-500/30\">watch\n    pod-racing</a> and have <a class=\"underline decoration-indigo-500/30\">light-saber</a> fights.\n  </p>\n</div>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<strong class=\"underline decoration-sky-500/[.33]\"></strong>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:decoration-blue-400 to only apply the decoration-blue-400 utility on hover.\n\n<p class=\"underline decoration-sky-600 hover:decoration-blue-400\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:decoration-blue-400 to apply the decoration-blue-400 utility at only medium screen sizes and above.\n\n<p class=\"underline decoration-sky-600 md:decoration-blue-400\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as text decoration colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your text decoration colors by editing theme.textDecorationColor or theme.extend.textDecorationColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off text-decoration-color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"decoration-[#50d71e]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nText Decoration\nText Decoration Style\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the text decoration color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Color - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-color",
    "html": "Typography\n\nText Color\n\nUtilities for controlling the text color of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\t\nPreview\n \n\ntext-inherit\tcolor: inherit;\n\t\nAa\n\ntext-current\tcolor: currentColor;\n\t\nAa\n\ntext-transparent\tcolor: transparent;\n\t\nAa\n\ntext-black\tcolor: rgb(0 0 0);\n\t\nAa\n\ntext-white\tcolor: rgb(255 255 255);\n\t\nAa\n\ntext-slate-50\tcolor: rgb(248 250 252);\n\t\nAa\n\ntext-slate-100\tcolor: rgb(241 245 249);\n\t\nAa\n\ntext-slate-200\tcolor: rgb(226 232 240);\n\t\nAa\n\ntext-slate-300\tcolor: rgb(203 213 225);\n\t\nAa\n\ntext-slate-400\tcolor: rgb(148 163 184);\n\t\nAa\n\ntext-slate-500\tcolor: rgb(100 116 139);\n\t\nAa\n\ntext-slate-600\tcolor: rgb(71 85 105);\n\t\nAa\n\ntext-slate-700\tcolor: rgb(51 65 85);\n\t\nAa\n\ntext-slate-800\tcolor: rgb(30 41 59);\n\t\nAa\n\ntext-slate-900\tcolor: rgb(15 23 42);\n\t\nAa\n\ntext-slate-950\tcolor: rgb(2 6 23);\n\t\nAa\n\ntext-gray-50\tcolor: rgb(249 250 251);\n\t\nAa\n\ntext-gray-100\tcolor: rgb(243 244 246);\n\t\nAa\n\ntext-gray-200\tcolor: rgb(229 231 235);\n\t\nAa\n\ntext-gray-300\tcolor: rgb(209 213 219);\n\t\nAa\n\ntext-gray-400\tcolor: rgb(156 163 175);\n\t\nAa\n\ntext-gray-500\tcolor: rgb(107 114 128);\n\t\nAa\n\ntext-gray-600\tcolor: rgb(75 85 99);\n\t\nAa\n\ntext-gray-700\tcolor: rgb(55 65 81);\n\t\nAa\n\ntext-gray-800\tcolor: rgb(31 41 55);\n\t\nAa\n\ntext-gray-900\tcolor: rgb(17 24 39);\n\t\nAa\n\ntext-gray-950\tcolor: rgb(3 7 18);\n\t\nAa\n\ntext-zinc-50\tcolor: rgb(250 250 250);\n\t\nAa\n\ntext-zinc-100\tcolor: rgb(244 244 245);\n\t\nAa\n\ntext-zinc-200\tcolor: rgb(228 228 231);\n\t\nAa\n\ntext-zinc-300\tcolor: rgb(212 212 216);\n\t\nAa\n\ntext-zinc-400\tcolor: rgb(161 161 170);\n\t\nAa\n\ntext-zinc-500\tcolor: rgb(113 113 122);\n\t\nAa\n\ntext-zinc-600\tcolor: rgb(82 82 91);\n\t\nAa\n\ntext-zinc-700\tcolor: rgb(63 63 70);\n\t\nAa\n\ntext-zinc-800\tcolor: rgb(39 39 42);\n\t\nAa\n\ntext-zinc-900\tcolor: rgb(24 24 27);\n\t\nAa\n\ntext-zinc-950\tcolor: rgb(9 9 11);\n\t\nAa\n\ntext-neutral-50\tcolor: rgb(250 250 250);\n\t\nAa\n\ntext-neutral-100\tcolor: rgb(245 245 245);\n\t\nAa\n\ntext-neutral-200\tcolor: rgb(229 229 229);\n\t\nAa\n\ntext-neutral-300\tcolor: rgb(212 212 212);\n\t\nAa\n\ntext-neutral-400\tcolor: rgb(163 163 163);\n\t\nAa\n\ntext-neutral-500\tcolor: rgb(115 115 115);\n\t\nAa\n\ntext-neutral-600\tcolor: rgb(82 82 82);\n\t\nAa\n\ntext-neutral-700\tcolor: rgb(64 64 64);\n\t\nAa\n\ntext-neutral-800\tcolor: rgb(38 38 38);\n\t\nAa\n\ntext-neutral-900\tcolor: rgb(23 23 23);\n\t\nAa\n\ntext-neutral-950\tcolor: rgb(10 10 10);\n\t\nAa\n\ntext-stone-50\tcolor: rgb(250 250 249);\n\t\nAa\n\ntext-stone-100\tcolor: rgb(245 245 244);\n\t\nAa\n\ntext-stone-200\tcolor: rgb(231 229 228);\n\t\nAa\n\ntext-stone-300\tcolor: rgb(214 211 209);\n\t\nAa\n\ntext-stone-400\tcolor: rgb(168 162 158);\n\t\nAa\n\ntext-stone-500\tcolor: rgb(120 113 108);\n\t\nAa\n\ntext-stone-600\tcolor: rgb(87 83 78);\n\t\nAa\n\ntext-stone-700\tcolor: rgb(68 64 60);\n\t\nAa\n\ntext-stone-800\tcolor: rgb(41 37 36);\n\t\nAa\n\ntext-stone-900\tcolor: rgb(28 25 23);\n\t\nAa\n\ntext-stone-950\tcolor: rgb(12 10 9);\n\t\nAa\n\ntext-red-50\tcolor: rgb(254 242 242);\n\t\nAa\n\ntext-red-100\tcolor: rgb(254 226 226);\n\t\nAa\n\ntext-red-200\tcolor: rgb(254 202 202);\n\t\nAa\n\ntext-red-300\tcolor: rgb(252 165 165);\n\t\nAa\n\ntext-red-400\tcolor: rgb(248 113 113);\n\t\nAa\n\ntext-red-500\tcolor: rgb(239 68 68);\n\t\nAa\n\ntext-red-600\tcolor: rgb(220 38 38);\n\t\nAa\n\ntext-red-700\tcolor: rgb(185 28 28);\n\t\nAa\n\ntext-red-800\tcolor: rgb(153 27 27);\n\t\nAa\n\ntext-red-900\tcolor: rgb(127 29 29);\n\t\nAa\n\ntext-red-950\tcolor: rgb(69 10 10);\n\t\nAa\n\ntext-orange-50\tcolor: rgb(255 247 237);\n\t\nAa\n\ntext-orange-100\tcolor: rgb(255 237 213);\n\t\nAa\n\ntext-orange-200\tcolor: rgb(254 215 170);\n\t\nAa\n\ntext-orange-300\tcolor: rgb(253 186 116);\n\t\nAa\n\ntext-orange-400\tcolor: rgb(251 146 60);\n\t\nAa\n\ntext-orange-500\tcolor: rgb(249 115 22);\n\t\nAa\n\ntext-orange-600\tcolor: rgb(234 88 12);\n\t\nAa\n\ntext-orange-700\tcolor: rgb(194 65 12);\n\t\nAa\n\ntext-orange-800\tcolor: rgb(154 52 18);\n\t\nAa\n\ntext-orange-900\tcolor: rgb(124 45 18);\n\t\nAa\n\ntext-orange-950\tcolor: rgb(67 20 7);\n\t\nAa\n\ntext-amber-50\tcolor: rgb(255 251 235);\n\t\nAa\n\ntext-amber-100\tcolor: rgb(254 243 199);\n\t\nAa\n\ntext-amber-200\tcolor: rgb(253 230 138);\n\t\nAa\n\ntext-amber-300\tcolor: rgb(252 211 77);\n\t\nAa\n\ntext-amber-400\tcolor: rgb(251 191 36);\n\t\nAa\n\ntext-amber-500\tcolor: rgb(245 158 11);\n\t\nAa\n\ntext-amber-600\tcolor: rgb(217 119 6);\n\t\nAa\n\ntext-amber-700\tcolor: rgb(180 83 9);\n\t\nAa\n\ntext-amber-800\tcolor: rgb(146 64 14);\n\t\nAa\n\ntext-amber-900\tcolor: rgb(120 53 15);\n\t\nAa\n\ntext-amber-950\tcolor: rgb(69 26 3);\n\t\nAa\n\ntext-yellow-50\tcolor: rgb(254 252 232);\n\t\nAa\n\ntext-yellow-100\tcolor: rgb(254 249 195);\n\t\nAa\n\ntext-yellow-200\tcolor: rgb(254 240 138);\n\t\nAa\n\ntext-yellow-300\tcolor: rgb(253 224 71);\n\t\nAa\n\ntext-yellow-400\tcolor: rgb(250 204 21);\n\t\nAa\n\ntext-yellow-500\tcolor: rgb(234 179 8);\n\t\nAa\n\ntext-yellow-600\tcolor: rgb(202 138 4);\n\t\nAa\n\ntext-yellow-700\tcolor: rgb(161 98 7);\n\t\nAa\n\ntext-yellow-800\tcolor: rgb(133 77 14);\n\t\nAa\n\ntext-yellow-900\tcolor: rgb(113 63 18);\n\t\nAa\n\ntext-yellow-950\tcolor: rgb(66 32 6);\n\t\nAa\n\ntext-lime-50\tcolor: rgb(247 254 231);\n\t\nAa\n\ntext-lime-100\tcolor: rgb(236 252 203);\n\t\nAa\n\ntext-lime-200\tcolor: rgb(217 249 157);\n\t\nAa\n\ntext-lime-300\tcolor: rgb(190 242 100);\n\t\nAa\n\ntext-lime-400\tcolor: rgb(163 230 53);\n\t\nAa\n\ntext-lime-500\tcolor: rgb(132 204 22);\n\t\nAa\n\ntext-lime-600\tcolor: rgb(101 163 13);\n\t\nAa\n\ntext-lime-700\tcolor: rgb(77 124 15);\n\t\nAa\n\ntext-lime-800\tcolor: rgb(63 98 18);\n\t\nAa\n\ntext-lime-900\tcolor: rgb(54 83 20);\n\t\nAa\n\ntext-lime-950\tcolor: rgb(26 46 5);\n\t\nAa\n\ntext-green-50\tcolor: rgb(240 253 244);\n\t\nAa\n\ntext-green-100\tcolor: rgb(220 252 231);\n\t\nAa\n\ntext-green-200\tcolor: rgb(187 247 208);\n\t\nAa\n\ntext-green-300\tcolor: rgb(134 239 172);\n\t\nAa\n\ntext-green-400\tcolor: rgb(74 222 128);\n\t\nAa\n\ntext-green-500\tcolor: rgb(34 197 94);\n\t\nAa\n\ntext-green-600\tcolor: rgb(22 163 74);\n\t\nAa\n\ntext-green-700\tcolor: rgb(21 128 61);\n\t\nAa\n\ntext-green-800\tcolor: rgb(22 101 52);\n\t\nAa\n\ntext-green-900\tcolor: rgb(20 83 45);\n\t\nAa\n\ntext-green-950\tcolor: rgb(5 46 22);\n\t\nAa\n\ntext-emerald-50\tcolor: rgb(236 253 245);\n\t\nAa\n\ntext-emerald-100\tcolor: rgb(209 250 229);\n\t\nAa\n\ntext-emerald-200\tcolor: rgb(167 243 208);\n\t\nAa\n\ntext-emerald-300\tcolor: rgb(110 231 183);\n\t\nAa\n\ntext-emerald-400\tcolor: rgb(52 211 153);\n\t\nAa\n\ntext-emerald-500\tcolor: rgb(16 185 129);\n\t\nAa\n\ntext-emerald-600\tcolor: rgb(5 150 105);\n\t\nAa\n\ntext-emerald-700\tcolor: rgb(4 120 87);\n\t\nAa\n\ntext-emerald-800\tcolor: rgb(6 95 70);\n\t\nAa\n\ntext-emerald-900\tcolor: rgb(6 78 59);\n\t\nAa\n\ntext-emerald-950\tcolor: rgb(2 44 34);\n\t\nAa\n\ntext-teal-50\tcolor: rgb(240 253 250);\n\t\nAa\n\ntext-teal-100\tcolor: rgb(204 251 241);\n\t\nAa\n\ntext-teal-200\tcolor: rgb(153 246 228);\n\t\nAa\n\ntext-teal-300\tcolor: rgb(94 234 212);\n\t\nAa\n\ntext-teal-400\tcolor: rgb(45 212 191);\n\t\nAa\n\ntext-teal-500\tcolor: rgb(20 184 166);\n\t\nAa\n\ntext-teal-600\tcolor: rgb(13 148 136);\n\t\nAa\n\ntext-teal-700\tcolor: rgb(15 118 110);\n\t\nAa\n\ntext-teal-800\tcolor: rgb(17 94 89);\n\t\nAa\n\ntext-teal-900\tcolor: rgb(19 78 74);\n\t\nAa\n\ntext-teal-950\tcolor: rgb(4 47 46);\n\t\nAa\n\ntext-cyan-50\tcolor: rgb(236 254 255);\n\t\nAa\n\ntext-cyan-100\tcolor: rgb(207 250 254);\n\t\nAa\n\ntext-cyan-200\tcolor: rgb(165 243 252);\n\t\nAa\n\ntext-cyan-300\tcolor: rgb(103 232 249);\n\t\nAa\n\ntext-cyan-400\tcolor: rgb(34 211 238);\n\t\nAa\n\ntext-cyan-500\tcolor: rgb(6 182 212);\n\t\nAa\n\ntext-cyan-600\tcolor: rgb(8 145 178);\n\t\nAa\n\ntext-cyan-700\tcolor: rgb(14 116 144);\n\t\nAa\n\ntext-cyan-800\tcolor: rgb(21 94 117);\n\t\nAa\n\ntext-cyan-900\tcolor: rgb(22 78 99);\n\t\nAa\n\ntext-cyan-950\tcolor: rgb(8 51 68);\n\t\nAa\n\ntext-sky-50\tcolor: rgb(240 249 255);\n\t\nAa\n\ntext-sky-100\tcolor: rgb(224 242 254);\n\t\nAa\n\ntext-sky-200\tcolor: rgb(186 230 253);\n\t\nAa\n\ntext-sky-300\tcolor: rgb(125 211 252);\n\t\nAa\n\ntext-sky-400\tcolor: rgb(56 189 248);\n\t\nAa\n\ntext-sky-500\tcolor: rgb(14 165 233);\n\t\nAa\n\ntext-sky-600\tcolor: rgb(2 132 199);\n\t\nAa\n\ntext-sky-700\tcolor: rgb(3 105 161);\n\t\nAa\n\ntext-sky-800\tcolor: rgb(7 89 133);\n\t\nAa\n\ntext-sky-900\tcolor: rgb(12 74 110);\n\t\nAa\n\ntext-sky-950\tcolor: rgb(8 47 73);\n\t\nAa\n\ntext-blue-50\tcolor: rgb(239 246 255);\n\t\nAa\n\ntext-blue-100\tcolor: rgb(219 234 254);\n\t\nAa\n\ntext-blue-200\tcolor: rgb(191 219 254);\n\t\nAa\n\ntext-blue-300\tcolor: rgb(147 197 253);\n\t\nAa\n\ntext-blue-400\tcolor: rgb(96 165 250);\n\t\nAa\n\ntext-blue-500\tcolor: rgb(59 130 246);\n\t\nAa\n\ntext-blue-600\tcolor: rgb(37 99 235);\n\t\nAa\n\ntext-blue-700\tcolor: rgb(29 78 216);\n\t\nAa\n\ntext-blue-800\tcolor: rgb(30 64 175);\n\t\nAa\n\ntext-blue-900\tcolor: rgb(30 58 138);\n\t\nAa\n\ntext-blue-950\tcolor: rgb(23 37 84);\n\t\nAa\n\ntext-indigo-50\tcolor: rgb(238 242 255);\n\t\nAa\n\ntext-indigo-100\tcolor: rgb(224 231 255);\n\t\nAa\n\ntext-indigo-200\tcolor: rgb(199 210 254);\n\t\nAa\n\ntext-indigo-300\tcolor: rgb(165 180 252);\n\t\nAa\n\ntext-indigo-400\tcolor: rgb(129 140 248);\n\t\nAa\n\ntext-indigo-500\tcolor: rgb(99 102 241);\n\t\nAa\n\ntext-indigo-600\tcolor: rgb(79 70 229);\n\t\nAa\n\ntext-indigo-700\tcolor: rgb(67 56 202);\n\t\nAa\n\ntext-indigo-800\tcolor: rgb(55 48 163);\n\t\nAa\n\ntext-indigo-900\tcolor: rgb(49 46 129);\n\t\nAa\n\ntext-indigo-950\tcolor: rgb(30 27 75);\n\t\nAa\n\ntext-violet-50\tcolor: rgb(245 243 255);\n\t\nAa\n\ntext-violet-100\tcolor: rgb(237 233 254);\n\t\nAa\n\ntext-violet-200\tcolor: rgb(221 214 254);\n\t\nAa\n\ntext-violet-300\tcolor: rgb(196 181 253);\n\t\nAa\n\ntext-violet-400\tcolor: rgb(167 139 250);\n\t\nAa\n\ntext-violet-500\tcolor: rgb(139 92 246);\n\t\nAa\n\ntext-violet-600\tcolor: rgb(124 58 237);\n\t\nAa\n\ntext-violet-700\tcolor: rgb(109 40 217);\n\t\nAa\n\ntext-violet-800\tcolor: rgb(91 33 182);\n\t\nAa\n\ntext-violet-900\tcolor: rgb(76 29 149);\n\t\nAa\n\ntext-violet-950\tcolor: rgb(46 16 101);\n\t\nAa\n\ntext-purple-50\tcolor: rgb(250 245 255);\n\t\nAa\n\ntext-purple-100\tcolor: rgb(243 232 255);\n\t\nAa\n\ntext-purple-200\tcolor: rgb(233 213 255);\n\t\nAa\n\ntext-purple-300\tcolor: rgb(216 180 254);\n\t\nAa\n\ntext-purple-400\tcolor: rgb(192 132 252);\n\t\nAa\n\ntext-purple-500\tcolor: rgb(168 85 247);\n\t\nAa\n\ntext-purple-600\tcolor: rgb(147 51 234);\n\t\nAa\n\ntext-purple-700\tcolor: rgb(126 34 206);\n\t\nAa\n\ntext-purple-800\tcolor: rgb(107 33 168);\n\t\nAa\n\ntext-purple-900\tcolor: rgb(88 28 135);\n\t\nAa\n\ntext-purple-950\tcolor: rgb(59 7 100);\n\t\nAa\n\ntext-fuchsia-50\tcolor: rgb(253 244 255);\n\t\nAa\n\ntext-fuchsia-100\tcolor: rgb(250 232 255);\n\t\nAa\n\ntext-fuchsia-200\tcolor: rgb(245 208 254);\n\t\nAa\n\ntext-fuchsia-300\tcolor: rgb(240 171 252);\n\t\nAa\n\ntext-fuchsia-400\tcolor: rgb(232 121 249);\n\t\nAa\n\ntext-fuchsia-500\tcolor: rgb(217 70 239);\n\t\nAa\n\ntext-fuchsia-600\tcolor: rgb(192 38 211);\n\t\nAa\n\ntext-fuchsia-700\tcolor: rgb(162 28 175);\n\t\nAa\n\ntext-fuchsia-800\tcolor: rgb(134 25 143);\n\t\nAa\n\ntext-fuchsia-900\tcolor: rgb(112 26 117);\n\t\nAa\n\ntext-fuchsia-950\tcolor: rgb(74 4 78);\n\t\nAa\n\ntext-pink-50\tcolor: rgb(253 242 248);\n\t\nAa\n\ntext-pink-100\tcolor: rgb(252 231 243);\n\t\nAa\n\ntext-pink-200\tcolor: rgb(251 207 232);\n\t\nAa\n\ntext-pink-300\tcolor: rgb(249 168 212);\n\t\nAa\n\ntext-pink-400\tcolor: rgb(244 114 182);\n\t\nAa\n\ntext-pink-500\tcolor: rgb(236 72 153);\n\t\nAa\n\ntext-pink-600\tcolor: rgb(219 39 119);\n\t\nAa\n\ntext-pink-700\tcolor: rgb(190 24 93);\n\t\nAa\n\ntext-pink-800\tcolor: rgb(157 23 77);\n\t\nAa\n\ntext-pink-900\tcolor: rgb(131 24 67);\n\t\nAa\n\ntext-pink-950\tcolor: rgb(80 7 36);\n\t\nAa\n\ntext-rose-50\tcolor: rgb(255 241 242);\n\t\nAa\n\ntext-rose-100\tcolor: rgb(255 228 230);\n\t\nAa\n\ntext-rose-200\tcolor: rgb(254 205 211);\n\t\nAa\n\ntext-rose-300\tcolor: rgb(253 164 175);\n\t\nAa\n\ntext-rose-400\tcolor: rgb(251 113 133);\n\t\nAa\n\ntext-rose-500\tcolor: rgb(244 63 94);\n\t\nAa\n\ntext-rose-600\tcolor: rgb(225 29 72);\n\t\nAa\n\ntext-rose-700\tcolor: rgb(190 18 60);\n\t\nAa\n\ntext-rose-800\tcolor: rgb(159 18 57);\n\t\nAa\n\ntext-rose-900\tcolor: rgb(136 19 55);\n\t\nAa\n\ntext-rose-950\tcolor: rgb(76 5 25);\n\t\nAa\n​\nBasic usage\n​\nSetting the text color\n\nControl the text color of an element using the text-{color} utilities.\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"text-sky-400\">The quick brown fox...</p>\n​\nChanging the opacity\n\nControl the opacity of an element’s text color using the color opacity modifier.\n\nThe quick brown fox jumps over the lazy dog.\n\nThe quick brown fox jumps over the lazy dog.\n\nThe quick brown fox jumps over the lazy dog.\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"text-sky-400/100\">The quick brown fox...</p>\n<p class=\"text-sky-400/75\">The quick brown fox...</p>\n<p class=\"text-sky-400/50\">The quick brown fox...</p>\n<p class=\"text-sky-400/25\">The quick brown fox...</p>\n<p class=\"text-sky-400/0\">The quick brown fox...</p>\n\nYou can use any value defined in your opacity scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<p class=\"text-blue-600/[.06]\">The quick brown fox...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:text-blue-600 to only apply the text-blue-600 utility on hover.\n\nTry hovering over the text to see the expected behaviour\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"text-slate-400 hover:text-sky-400\">The quick brown fox...</p>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:text-green-600 to apply the text-green-600 utility at only medium screen sizes and above.\n\n<p class=\"text-blue-600 md:text-green-600\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind makes the entire default color palette available as text colors. You can customize your color palette by editing theme.colors or theme.extend.colors in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        'regal-blue': '#243c5a',\n\n      },\n\n    }\n\n  }\n\n}\n\n\n\n\nAlternatively, you can customize just your text colors by editing theme.textColor or theme.extend.textColor in your tailwind.config.js file.\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off color value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"text-[#50d71e]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nText Align\nText Decoration\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the text color\nChanging the opacity\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Decoration - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-decoration",
    "html": "Typography\n\nText Decoration\n\nUtilities for controlling the decoration of text.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nunderline\ttext-decoration-line: underline;\n\noverline\ttext-decoration-line: overline;\n\nline-through\ttext-decoration-line: line-through;\n\nno-underline\ttext-decoration-line: none;\n\n​\nBasic usage\n​\nSetting the text decoration\n\nControl how text is decorated with the underline, no-underline, and line-through utilities.\n\nunderline\n\nThe quick brown fox jumps over the lazy dog.\n\noverline\n\nThe quick brown fox jumps over the lazy dog.\n\nline-through\n\nThe quick brown fox jumps over the lazy dog.\n\nno-underline\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"underline ...\">The quick brown fox ...</p>\n<p class=\"overline ...\">The quick brown fox ...</p>\n<p class=\"line-through ...\">The quick brown fox ...</p>\n<p class=\"no-underline ...\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:text-center to only apply the text-center utility on hover.\n\nTry hovering over the text to see the expected behaviour\n\nLink with no underline\n<a href=\"#\" class=\"no-underline hover:underline ...\">Link</a>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:underline to apply the underline utility at only medium screen sizes and above.\n\n<p class=\"no-underline md:underline\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nText Color\nText Decoration Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the text decoration\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Text Align - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/text-align",
    "html": "Typography\n\nText Align\n\nUtilities for controlling the alignment of text.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntext-left\ttext-align: left;\n\ntext-center\ttext-align: center;\n\ntext-right\ttext-align: right;\n\ntext-justify\ttext-align: justify;\n\ntext-start\ttext-align: start;\n\ntext-end\ttext-align: end;\n\n​\nBasic usage\n​\nSetting the text alignment\n\nControl the text alignment of an element using the text-left, text-center, text-right, and text-justify utilities.\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"text-left ...\">So I started to walk into the water...</p>\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"text-center ...\">So I started to walk into the water...</p>\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"text-right ...\">So I started to walk into the water...</p>\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"text-justify ...\">So I started to walk into the water...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:text-center to only apply the text-center utility on hover.\n\n<p class=\"text-left hover:text-center\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:text-center to apply the text-center utility at only medium screen sizes and above.\n\n<p class=\"text-left md:text-center\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nList Style Type\nText Color\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the text alignment\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "List Style Type - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/list-style-type",
    "html": "Typography\n\nList Style Type\n\nUtilities for controlling the bullet/number style of a list.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nlist-none\tlist-style-type: none;\n\nlist-disc\tlist-style-type: disc;\n\nlist-decimal\tlist-style-type: decimal;\n\n​\nBasic usage\n​\nSetting the list style type\n\nTo create bulleted or numeric lists, use the list-disc and list-decimal utilities.\n\nlist-disc\nNow this is a story all about how, my life got flipped-turned upside down\nAnd I'd like to take a minute just sit right there\nI'll tell you how I became the prince of a town called Bel-Air\nlist-decimal\nNow this is a story all about how, my life got flipped-turned upside down\nAnd I'd like to take a minute just sit right there\nI'll tell you how I became the prince of a town called Bel-Air\nlist-none\nNow this is a story all about how, my life got flipped-turned upside down\nAnd I'd like to take a minute just sit right there\nI'll tell you how I became the prince of a town called Bel-Air\n<ul class=\"list-disc\">\n  <li>Now this is a story all about how, my life got flipped-turned upside down</li>\n  <!-- ... -->\n</ul>\n\n<ol class=\"list-decimal\">\n  <li>Now this is a story all about how, my life got flipped-turned upside down</li>\n  <!-- ... -->\n</ol>\n\n<ul class=\"list-none\">\n  <li>Now this is a story all about how, my life got flipped-turned upside down</li>\n  <!-- ... -->\n</ul>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:list-disc to only apply the list-disc utility on hover.\n\n<ul class=\"list-none hover:list-disc\">\n  <!-- ... -->\n</ul>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:list-disc to apply the list-disc utility at only medium screen sizes and above.\n\n<ul class=\"list-none md:list-disc\">\n  <!-- ... -->\n</ul>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides three utilities for the most common list style types. You change, add, or remove these by editing the theme.listStyleType section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    listStyleType: {\n\n      none: 'none',\n\n      disc: 'disc',\n\n      decimal: 'decimal',\n\n      square: 'square',\n\n      roman: 'upper-roman',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off list-style-type value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<ul class=\"list-[upper-roman]\">\n  <!-- ... -->\n</ul>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nList Style Position\nText Align\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the list style type\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Line Height - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/line-height",
    "html": "Typography\n\nLine Height\n\nUtilities for controlling the leading (line height) of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nleading-3\tline-height: .75rem; /* 12px */\n\nleading-4\tline-height: 1rem; /* 16px */\n\nleading-5\tline-height: 1.25rem; /* 20px */\n\nleading-6\tline-height: 1.5rem; /* 24px */\n\nleading-7\tline-height: 1.75rem; /* 28px */\n\nleading-8\tline-height: 2rem; /* 32px */\n\nleading-9\tline-height: 2.25rem; /* 36px */\n\nleading-10\tline-height: 2.5rem; /* 40px */\n\nleading-none\tline-height: 1;\n\nleading-tight\tline-height: 1.25;\n\nleading-snug\tline-height: 1.375;\n\nleading-normal\tline-height: 1.5;\n\nleading-relaxed\tline-height: 1.625;\n\nleading-loose\tline-height: 2;\n\n​\nBasic usage\n​\nRelative line-heights\n\nUse the leading-none, leading-tight, leading-snug, leading-normal, leading-relaxed, and leading-loose utilities to give an element a relative line-height based on its current font-size.\n\nleading-normal\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\nleading-relaxed\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\nleading-loose\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"leading-normal ...\">So I started to walk into the water...</p>\n<p class=\"leading-relaxed ...\">So I started to walk into the water...</p>\n<p class=\"leading-loose ...\">So I started to walk into the water...</p>\n​\nFixed line-heights\n\nUse the leading-{size} utilities to give an element a fixed line-height, irrespective of the current font-size. These are useful when you need very precise control over an element’s final size.\n\nleading-6\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\nleading-7\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\nleading-8\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"leading-6 ...\">So I started to walk into the water...</p>\n<p class=\"leading-7 ...\">So I started to walk into the water...</p>\n<p class=\"leading-8 ...\">So I started to walk into the water...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:leading-loose to only apply the leading-loose utility on hover.\n\n<p class=\"leading-none hover:leading-loose\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:leading-loose to apply the leading-loose utility at only medium screen sizes and above.\n\n<p class=\"leading-none md:leading-loose\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nOverriding default line-heights\n\nIt’s important to note that by default, Tailwind’s font-size utilities each set their own default line-height. This means that any time you use a responsive font-size utility like sm:text-xl, any explicit line-height you have set for a smaller breakpoint will be overridden.\n\n<!-- The `leading-loose` class will be overridden at the `md` breakpoint -->\n<p class=\"text-lg leading-loose md:text-xl\">\n  Maybe we can live without libraries...\n</p>\n\nIf you want to override the default line-height after setting a breakpoint-specific font-size, make sure to set a breakpoint-specific line-height as well:\n\n<!-- The `leading-loose` class will be overridden at the `md` breakpoint -->\n<p class=\"text-lg leading-loose md:text-xl md:leading-loose\">\n  Maybe we can live without libraries...\n</p>\n\nUsing the same line-height across different font sizes is generally not going to give you good typographic results. Line-height should typically get smaller as font-size increases, so the default behavior here usually saves you a ton of work. If you find yourself fighting it, you can always customize your font-size scale to not include default line-heights.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides six relative and eight fixed line-height utilities. You change, add, or remove these by customizing the lineHeight section of your Tailwind theme config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      lineHeight: {\n\n        'extra-loose': '2.5',\n\n        '12': '3rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off line-height value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"leading-[3rem]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nLine Clamp\nList Style Image\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRelative line-heights\nFixed line-heights\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nOverriding default line-heights\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "List Style Image - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/list-style-image",
    "html": "Typography\n\nList Style Image\n\nUtilities for controlling the marker images for list items.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nlist-image-none\tlist-style-image: none;\n\n​\nBasic usage\n​\nSetting the list style image\n\nControl the marker image for list items using the list-image-{value} utilities.\n\nOut of the box, list-image-none is the only available preconfigured list style image utility. And while you can add additional utilities by customizing your theme, you can also use the square bracket notation to generate an arbitrary value on the fly.\n\n5 cups chopped Porcini mushrooms\n1/2 cup of olive oil\n3lb of celery\n<ul class=\"list-image-[url(checkmark.png)] ...\">\n  <li>5 cups chopped Porcini mushrooms</li>\n  <!-- ... -->\n</ul>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:list-image-[url(checkmark.png)] to only apply the list-image-[url(checkmark.png)] utility on hover.\n\n<ul class=\"list-image-none hover:list-image-[url(checkmark.png)]\">\n  <!-- ... -->\n</ul>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:list-image-[url(checkmark.png)] to apply the list-image-[url(checkmark.png)] utility at only medium screen sizes and above.\n\n<ul class=\"list-image-none md:list-image-[url(checkmark.png)]\">\n  <!-- ... -->\n</ul>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind only provides the list-image-none utility. You can customize these values by editing theme.listStyleImage or theme.extend.listStyleImage in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      listStyleImage: {\n\n        checkmark: 'url(\"/img/checkmark.png\")',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off list-image value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<ul class=\"list-image-[url(checkmark.png)]\">\n  <!-- ... -->\n</ul>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nLine Height\nList Style Position\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the list style image\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "List Style Position - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/list-style-position",
    "html": "Typography\n\nList Style Position\n\nUtilities for controlling the position of bullets/numbers in lists.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nlist-inside\tlist-style-position: inside;\n\nlist-outside\tlist-style-position: outside;\n\n​\nBasic usage\n​\nSetting the list style position\n\nControl the position of the markers and text indentation in a list using the list-inside and list-outside utilities.\n\nlist-inside\n\n5 cups chopped Porcini mushrooms\n1/2 cup of olive oil\n3lb of celery\n\nlist-outside\n\n5 cups chopped Porcini mushrooms\n1/2 cup of olive oil\n3lb of celery\n<ul class=\"list-inside ...\">\n  <li>5 cups chopped Porcini mushrooms</li>\n  <!-- ... -->\n</ul>\n\n<ul class=\"list-outside ...\">\n  <li>5 cups chopped Porcini mushrooms</li>\n  <!-- ... -->\n</ul>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:list-inside to only apply the list-inside utility on hover.\n\n<ul class=\"list-outside hover:list-inside\">\n  <!-- ... -->\n</ul>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:list-inside to apply the list-inside utility at only medium screen sizes and above.\n\n<ul class=\"list-outside md:list-inside\">\n  <!-- ... -->\n</ul>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nList Style Image\nList Style Type\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the list style position\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Line Clamp - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/line-clamp",
    "html": "Typography\n\nLine Clamp\n\nUtilities for clamping text to a specific number of lines.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nline-clamp-1\toverflow: hidden;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 1;\n\nline-clamp-2\toverflow: hidden;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 2;\n\nline-clamp-3\toverflow: hidden;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;\n\nline-clamp-4\toverflow: hidden;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 4;\n\nline-clamp-5\toverflow: hidden;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 5;\n\nline-clamp-6\toverflow: hidden;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 6;\n\nline-clamp-none\toverflow: visible;\ndisplay: block;\n-webkit-box-orient: horizontal;\n-webkit-line-clamp: none;\n\n​\nBasic usage\n​\nTruncating multi-line text\n\nUse the line-clamp-* utilities to truncate a block of text after a specific number of lines.\n\nMar 10, 2020\nBoost your conversion rate\n\nNulla dolor velit adipisicing duis excepteur esse in duis nostrud occaecat mollit incididunt deserunt sunt. Ut ut sunt laborum ex occaecat eu tempor labore enim adipisicing minim ad. Est in quis eu dolore occaecat excepteur fugiat dolore nisi aliqua fugiat enim ut cillum. Labore enim duis nostrud eu. Est ut eiusmod consequat irure quis deserunt ex. Enim laboris dolor magna pariatur. Dolor et ad sint voluptate sunt elit mollit officia ad enim sit consectetur enim.\n\nLindsay Walton\n<article>\n  <time>Mar 10, 2020</time>\n  <h2>Boost your conversion rate</h2>\n  <p class=\"line-clamp-3\">Nulla dolor velit adipisicing duis excepteur esse in duis nostrud occaecat mollit incididunt deserunt sunt. Ut ut sunt laborum ex occaecat eu tempor labore enim adipisicing minim ad. Est in quis eu dolore occaecat excepteur fugiat dolore nisi aliqua fugiat enim ut cillum. Labore enim duis nostrud eu. Est ut eiusmod consequat irure quis deserunt ex. Enim laboris dolor magna pariatur. Dolor et ad sint voluptate sunt elit mollit officia ad enim sit consectetur enim.</p>\n  <div>\n    <img src=\"...\" />\n    Lindsay Walton\n  </div>\n</article>\n​\nUndoing line clamping\n\nUse line-clamp-none to undo a previously applied line clamp utility.\n\n<p class=\"line-clamp-3 lg:line-clamp-none\">\n  <!-- ... -->\n</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:line-clamp-4 to only apply the line-clamp-4 utility on hover.\n\n<p class=\"line-clamp-3 hover:line-clamp-4\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:line-clamp-4 to apply the line-clamp-4 utility at only medium screen sizes and above.\n\n<p class=\"line-clamp-3 md:line-clamp-4\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides the six line-clamp utilities. You can customize these values by editing theme.lineClamp or theme.extend.lineClamp in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      lineClamp: {\n\n        7: '7',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off line-clamp value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"line-clamp-[7]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nLetter Spacing\nLine Height\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nTruncating multi-line text\nUndoing line clamping\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Font Variant Numeric - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/font-variant-numeric",
    "html": "Typography\n\nFont Variant Numeric\n\nUtilities for controlling the variant of numbers.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nnormal-nums\tfont-variant-numeric: normal;\n\nordinal\tfont-variant-numeric: ordinal;\n\nslashed-zero\tfont-variant-numeric: slashed-zero;\n\nlining-nums\tfont-variant-numeric: lining-nums;\n\noldstyle-nums\tfont-variant-numeric: oldstyle-nums;\n\nproportional-nums\tfont-variant-numeric: proportional-nums;\n\ntabular-nums\tfont-variant-numeric: tabular-nums;\n\ndiagonal-fractions\tfont-variant-numeric: diagonal-fractions;\n\nstacked-fractions\tfont-variant-numeric: stacked-fractions;\n\n​\nBasic usage\n​\nApplying numeric variants\n\nUse the font-variant-numeric utilities to enable additional glyphs for numbers, fractions, and ordinal markers (in fonts that support them).\n\nThese utilities are composable so you can enable multiple font-variant-numeric features by combining multiple classes in your HTML:\n\n<p class=\"ordinal slashed-zero tabular-nums ...\">\n  1234567890\n</p>\n\nNote that many fonts don’t support these features (stacked fractions support for example is especially rare), so some of these utilities may have no effect depending on the font family you are using.\n\n​\nOrdinal\n\nUse the ordinal utility to enable special glyphs for the ordinal markers.\n\n1st\n\n<p class=\"ordinal ...\">1st</p>\n​\nSlashed Zero\n\nUse the slashed-zero utility to force a 0 with a slash; this is useful when a clear distinction between O and 0 is needed.\n\n0\n\n<p class=\"slashed-zero ...\">0</p>\n​\nLining figures\n\nUse the lining-nums utility to use the numeric glyphs that are all aligned by their baseline. This corresponds to the lnum OpenType feature. This is the default for most fonts.\n\n1234567890\n\n<p class=\"lining-nums ...\">\n  1234567890\n</p>\n​\nOldstyle figures\n\nUse the oldstyle-nums utility to use numeric glyphs where some numbers have descenders. This corresponds to the onum OpenType feature.\n\n1234567890\n\n<p class=\"oldstyle-nums ...\">\n  1234567890\n</p>\n​\nProportional figures\n\nUse the proportional-nums utility to use numeric glyphs that have proportional widths (rather than uniform/tabular). This corresponds to the pnum OpenType feature.\n\n12121\n\n90909\n\n<p class=\"proportional-nums ...\">\n  12121\n</p>\n<p class=\"proportional-nums ...\">\n  90909\n</p>\n​\nTabular figures\n\nUse the tabular-nums utility to use numeric glyphs that have uniform/tabular widths (rather than proportional). This corresponds to the tnum OpenType feature.\n\n12121\n\n90909\n\n<p class=\"tabular-nums ...\">\n  12121\n</p>\n<p class=\"tabular-nums ...\">\n  90909\n</p>\n​\nDiagonal fractions\n\nUse the diagonal-fractions utility to replace numbers separated by a slash with common diagonal fractions. This corresponds to the frac OpenType feature.\n\n1/2 3/4 5/6\n\n<p class=\"diagonal-fractions ...\">\n  1/2 3/4 5/6\n</p>\n​\nStacked fractions\n\nUse the stacked-fractions utility to replace numbers separated by a slash with common stacked fractions. This corresponds to the afrc OpenType feature. Very few fonts seem to support this feature — we’ve used Ubuntu Mono here.\n\n1/2 3/4 5/6\n\n<p class=\"stacked-fractions ...\">\n  1/2 3/4 5/6\n</p>\n​\nResetting numeric font variants\n\nUse the normal-nums property to reset numeric font variants. This is usually useful for resetting a font feature at a particular breakpoint:\n\n<p class=\"slashed-zero tabular-nums md:normal-nums ...\">\n  12345\n</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:tabular-nums to only apply the tabular-nums utility on hover.\n\n<p class=\"proportional-nums hover:tabular-nums\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:tabular-nums to apply the tabular-nums utility at only medium screen sizes and above.\n\n<p class=\"proportional-nums md:tabular-nums\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nFont Weight\nLetter Spacing\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nApplying numeric variants\nOrdinal\nSlashed Zero\nLining figures\nOldstyle figures\nProportional figures\nTabular figures\nDiagonal fractions\nStacked fractions\nResetting numeric font variants\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Letter Spacing - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/letter-spacing",
    "html": "Typography\n\nLetter Spacing\n\nUtilities for controlling the tracking (letter spacing) of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntracking-tighter\tletter-spacing: -0.05em;\n\ntracking-tight\tletter-spacing: -0.025em;\n\ntracking-normal\tletter-spacing: 0em;\n\ntracking-wide\tletter-spacing: 0.025em;\n\ntracking-wider\tletter-spacing: 0.05em;\n\ntracking-widest\tletter-spacing: 0.1em;\n\n​\nBasic usage\n​\nSetting the letter spacing\n\nControl the letter spacing of an element using the tracking-{size} utilities.\n\ntracking-tight\n\nThe quick brown fox jumps over the lazy dog.\n\ntracking-normal\n\nThe quick brown fox jumps over the lazy dog.\n\ntracking-wide\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"tracking-tight ...\">The quick brown fox ...</p>\n<p class=\"tracking-normal ...\">The quick brown fox ...</p>\n<p class=\"tracking-wide ...\">The quick brown fox ...</p>\n​\nUsing negative values\n\nTo use a negative letter-spacing value, prefix the class name with a dash to convert it to a negative value.\n\nUsing negative values doesn’t make a ton of sense with the letter-spacing scale Tailwind includes out of the box, but if you’ve opted to customize your letter-spacing scale to use numbers instead of descriptive words like “wide” the negative value modifier can be useful.\n\nHTML\ntailwind.config.js\n<p class=\"-tracking-2\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:tracking-wide to only apply the tracking-wide utility on hover.\n\n<p class=\"tracking-tight hover:tracking-wide\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:tracking-wide to apply the tracking-wide utility at only medium screen sizes and above.\n\n<p class=\"tracking-tight md:tracking-wide\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides six tracking utilities. You can change, add, or remove these by editing the theme.letterSpacing section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    letterSpacing: {\n\n      tightest: '-.075em',\n\n      tighter: '-.05em',\n\n      tight: '-.025em',\n\n      normal: '0',\n\n      wide: '.025em',\n\n      wider: '.05em',\n\n      widest: '.1em',\n\n      widest: '.25em',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off letter-spacing value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"tracking-[.25em]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFont Variant Numeric\nLine Clamp\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the letter spacing\nUsing negative values\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Font Weight - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/font-weight",
    "html": "Typography\n\nFont Weight\n\nUtilities for controlling the font weight of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nfont-thin\tfont-weight: 100;\n\nfont-extralight\tfont-weight: 200;\n\nfont-light\tfont-weight: 300;\n\nfont-normal\tfont-weight: 400;\n\nfont-medium\tfont-weight: 500;\n\nfont-semibold\tfont-weight: 600;\n\nfont-bold\tfont-weight: 700;\n\nfont-extrabold\tfont-weight: 800;\n\nfont-black\tfont-weight: 900;\n\n​\nBasic usage\n​\nSetting the font weight\n\nControl the font weight of an element using the font-{weight} utilities.\n\nfont-light\n\nThe quick brown fox jumps over the lazy dog.\n\nfont-normal\n\nThe quick brown fox jumps over the lazy dog.\n\nfont-medium\n\nThe quick brown fox jumps over the lazy dog.\n\nfont-semibold\n\nThe quick brown fox jumps over the lazy dog.\n\nfont-bold\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"font-light ...\">The quick brown fox ...</p>\n<p class=\"font-normal ...\">The quick brown fox ...</p>\n<p class=\"font-medium ...\">The quick brown fox ...</p>\n<p class=\"font-semibold ...\">The quick brown fox ...</p>\n<p class=\"font-bold ...\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:font-bold to only apply the font-bold utility on hover.\n\n<p class=\"font-normal hover:font-bold\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:font-bold to apply the font-bold utility at only medium screen sizes and above.\n\n<p class=\"font-normal md:font-bold\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides nine font-weight utilities. You change, add, or remove these by editing the theme.fontWeight section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    fontWeight: {\n\n      thin: '100',\n\n      hairline: '100',\n\n      extralight: '200',\n\n      light: '300',\n\n      normal: '400',\n\n      medium: '500',\n\n      semibold: '600',\n\n      bold: '700',\n\n      extrabold: '800',\n\n      'extra-bold': '800',\n\n      black: '900',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off font-weight value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"font-[1100]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFont Style\nFont Variant Numeric\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the font weight\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Font Size - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/font-size",
    "html": "Typography\n\nFont Size\n\nUtilities for controlling the font size of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ntext-xs\tfont-size: 0.75rem; /* 12px */\nline-height: 1rem; /* 16px */\n\ntext-sm\tfont-size: 0.875rem; /* 14px */\nline-height: 1.25rem; /* 20px */\n\ntext-base\tfont-size: 1rem; /* 16px */\nline-height: 1.5rem; /* 24px */\n\ntext-lg\tfont-size: 1.125rem; /* 18px */\nline-height: 1.75rem; /* 28px */\n\ntext-xl\tfont-size: 1.25rem; /* 20px */\nline-height: 1.75rem; /* 28px */\n\ntext-2xl\tfont-size: 1.5rem; /* 24px */\nline-height: 2rem; /* 32px */\n\ntext-3xl\tfont-size: 1.875rem; /* 30px */\nline-height: 2.25rem; /* 36px */\n\ntext-4xl\tfont-size: 2.25rem; /* 36px */\nline-height: 2.5rem; /* 40px */\n\ntext-5xl\tfont-size: 3rem; /* 48px */\nline-height: 1;\n\ntext-6xl\tfont-size: 3.75rem; /* 60px */\nline-height: 1;\n\ntext-7xl\tfont-size: 4.5rem; /* 72px */\nline-height: 1;\n\ntext-8xl\tfont-size: 6rem; /* 96px */\nline-height: 1;\n\ntext-9xl\tfont-size: 8rem; /* 128px */\nline-height: 1;\n\n​\nBasic usage\n​\nSetting the font size\n\nControl the font size of an element using the text-{size} utilities.\n\ntext-sm\n\nThe quick brown fox jumps over the lazy dog.\n\ntext-base\n\nThe quick brown fox jumps over the lazy dog.\n\ntext-lg\n\nThe quick brown fox jumps over the lazy dog.\n\ntext-xl\n\nThe quick brown fox jumps over the lazy dog.\n\ntext-2xl\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"text-sm ...\">The quick brown fox ...</p>\n<p class=\"text-base ...\">The quick brown fox ...</p>\n<p class=\"text-lg ...\">The quick brown fox ...</p>\n<p class=\"text-xl ...\">The quick brown fox ...</p>\n<p class=\"text-2xl ...\">The quick brown fox ...</p>\n​\nSetting the line-height\n\nSet an element’s line-height at the same time you set the font size by adding a line-height modifier to any font size utility. For example, use text-xl/8 to set a font size of 1.25rem with a line-height of 2rem.\n\ntext-base/6\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\ntext-base/7\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\ntext-base/loose\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<p class=\"text-base/6 ...\">So I started to walk into the water...</p>\n<p class=\"text-base/7 ...\">So I started to walk into the water...</p>\n<p class=\"text-base/loose ...\">So I started to walk into the water...</p>\n\nYou can use any value defined in your line-height scale, or use arbitrary values if you need to deviate from your design tokens.\n\n<p class=\"text-sm/[17px] ...\"></p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:text-base to only apply the text-base utility on hover.\n\n<p class=\"text-sm hover:text-base\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:text-base to apply the text-base utility at only medium screen sizes and above.\n\n<p class=\"text-sm md:text-base\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can configure your own custom set of font size utilities using the theme.fontSize section of your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    fontSize: {\n\n      sm: '0.8rem',\n\n      base: '1rem',\n\n      xl: '1.25rem',\n\n      '2xl': '1.563rem',\n\n      '3xl': '1.953rem',\n\n      '4xl': '2.441rem',\n\n      '5xl': '3.052rem',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nProviding a default line-height\n\nTailwind’s default theme configures a sensible default line-height for each text-{size} utility. You can configure your own default line heights when using custom font sizes by defining each size using a tuple of the form [fontSize, lineHeight] in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    fontSize: {\n      sm: ['14px', '20px'],\n      base: ['16px', '24px'],\n      lg: ['20px', '28px'],\n      xl: ['24px', '32px'],\n    }\n  }\n}\n\nYou can also specify a default line height using the object syntax, which allows you to also provide default letter-spacing and font-weight values. You can do this using a tuple of the form [fontSize, { lineHeight?, letterSpacing?, fontWeight? }].\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    fontSize: {\n      '2xl': ['1.5rem', {\n        lineHeight: '2rem',\n        letterSpacing: '-0.01em',\n        fontWeight: '500',\n      }],\n      '3xl': ['1.875rem', {\n        lineHeight: '2.25rem',\n        letterSpacing: '-0.02em',\n        fontWeight: '700',\n      }],\n    }\n  }\n}\n​\nArbitrary values\n\nIf you need to use a one-off font-size value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"text-[14px]\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFont Family\nFont Smoothing\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the font size\nSetting the line-height\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Font Style - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/font-style",
    "html": "Typography\n\nFont Style\n\nUtilities for controlling the style of text.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nitalic\tfont-style: italic;\n\nnot-italic\tfont-style: normal;\n\n​\nBasic usage\n​\nItalicizing text\n\nThe italic utility can be used to make text italic. Likewise, the not-italic utility can be used to display text normally — typically to reset italic text at different breakpoints.\n\nitalic\n\nThe quick brown fox jumps over the lazy dog.\n\nnot-italic\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"italic ...\">The quick brown fox ...</p>\n<p class=\"not-italic ...\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:not-italic to only apply the not-italic utility on hover.\n\n<p class=\"italic hover:not-italic\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:not-italic to apply the not-italic utility at only medium screen sizes and above.\n\n<p class=\"italic md:not-italic\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nFont Smoothing\nFont Weight\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nItalicizing text\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Font Family - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/font-family",
    "html": "Typography\n\nFont Family\n\nUtilities for controlling the font family of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nfont-sans\tfont-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n\nfont-serif\tfont-family: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n\nfont-mono\tfont-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n\n​\nBasic usage\n​\nSetting the font family\n\nYou can control the typeface of text using the font family utilities.\n\nfont-sans\n\nThe quick brown fox jumps over the lazy dog.\n\nfont-serif\n\nThe quick brown fox jumps over the lazy dog.\n\nfont-mono\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"font-sans ...\">The quick brown fox ...</p>\n<p class=\"font-serif ...\">The quick brown fox ...</p>\n<p class=\"font-mono ...\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:font-serif to only apply the font-serif utility on hover.\n\n<p class=\"font-sans hover:font-serif\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:font-serif to apply the font-serif utility at only medium screen sizes and above.\n\n<p class=\"font-sans md:font-serif\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides three font family utilities: a cross-browser sans-serif stack, a cross-browser serif stack, and a cross-browser monospaced stack. You can change, add, or remove these by editing the theme.fontFamily section of your Tailwind config.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    fontFamily: {\n\n      'sans': ['ui-sans-serif', 'system-ui', ...],\n\n      'serif': ['ui-serif', 'Georgia', ...],\n\n      'mono': ['ui-monospace', 'SFMono-Regular', ...],\n\n      'display': ['Oswald', ...],\n\n      'body': ['\"Open Sans\"', ...],\n\n    }\n\n  }\n\n}\n\n\nFont families can be specified as an array or as a simple comma-delimited string:\n\n{\n  // Array format:\n  'sans': ['Helvetica', 'Arial', 'sans-serif'],\n\n  // Comma-delimited format:\n  'sans': 'Helvetica, Arial, sans-serif',\n}\n\nNote that Tailwind does not automatically escape font names for you. If you’re using a font that contains an invalid identifier, wrap it in quotes or escape the invalid characters.\n\n{\n  // Won't work:\n  'sans': ['Exo 2', ...],\n\n  // Add quotes:\n  'sans': ['\"Exo 2\"', ...],\n\n  // ...or escape the space:\n  'sans': ['Exo\\\\ 2', ...],\n}\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nProviding default font settings\n\nYou can optionally provide default font-feature-settings and font-variation-settings for each font in your project using a tuple of the form [fontFamilies, { fontFeatureSettings, fontVariationSettings }] when configuring custom fonts.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    fontFamily: {\n\n      sans: [\n\n        '\"Inter var\", sans-serif',\n\n        {\n\n          fontFeatureSettings: '\"cv11\", \"ss01\"',\n\n          fontVariationSettings: '\"opsz\" 32'\n\n        },\n\n      ],\n\n    },\n\n  },\n\n}\n\n​\nArbitrary values\n\nIf you need to use a one-off font-family value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<p class=\"font-['Open_Sans']\">\n  <!-- ... -->\n</p>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\n​\nCustomizing the default font\n\nFor convenience, Preflight sets the font family on the html element to match your configured sans font, so one way to change the default font for your project is to customize the sans key in your fontFamily configuration:\n\ntailwind.config.js\nconst defaultTheme = require('tailwindcss/defaultTheme')\n\n\n\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      fontFamily: {\n\n        'sans': ['\"Proxima Nova\"', ...defaultTheme.fontFamily.sans],\n\n      },\n\n    }\n\n  }\n\n}\n\n\nYou can also customize the default font used in your project by adding a custom base style that sets the font-family property explicitly:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  html {\n    font-family: \"Proxima Nova\", system-ui, sans-serif;\n  }\n}\n\nThis is the best approach if you have customized your font family utilities to have different names and don’t want there to be font-sans utility available in your project.\n\nMax-Height\nFont Size\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the font family\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\nCustomizing the default font\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Font Smoothing - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/font-smoothing",
    "html": "Typography\n\nFont Smoothing\n\nUtilities for controlling the font smoothing of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nantialiased\t-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n\nsubpixel-antialiased\t-webkit-font-smoothing: auto;\n-moz-osx-font-smoothing: auto;\n\n​\nBasic usage\n​\nApplying font smoothing\n\nUse the subpixel-antialiased utility to render text using subpixel antialiasing and the antialiased utility to render text using grayscale antialiasing.\n\nsubpixel-antialiased\n\nThe quick brown fox jumps over the lazy dog.\n\nantialiased\n\nThe quick brown fox jumps over the lazy dog.\n\n<p class=\"subpixel-antialiased ...\">The quick brown fox ...</p>\n<p class=\"antialiased ...\">The quick brown fox ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:subpixel-antialiased to only apply the subpixel-antialiased utility on hover.\n\n<p class=\"antialiased hover:subpixel-antialiased\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:subpixel-antialiased to apply the subpixel-antialiased utility at only medium screen sizes and above.\n\n<p class=\"antialiased md:subpixel-antialiased\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nFont Size\nFont Style\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nApplying font smoothing\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Min-Height - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/min-height",
    "html": "Sizing\n\nMin-Height\n\nUtilities for setting the minimum height of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nmin-h-0\tmin-height: 0px;\n\nmin-h-full\tmin-height: 100%;\n\nmin-h-screen\tmin-height: 100vh;\n\nmin-h-min\tmin-height: min-content;\n\nmin-h-max\tmin-height: max-content;\n\nmin-h-fit\tmin-height: fit-content;\n\n​\nBasic usage\n​\nSetting the minimum height\n\nSet the minimum height of an element using the min-h-0, min-h-full, or min-h-screen utilities.\n\n<div class=\"h-48\">\n  <div class=\"h-24 min-h-full\">\n    <!-- ... -->\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:min-h-full to only apply the min-h-full utility on hover.\n\n<div class=\"h-24 min-h-0 hover:min-h-full\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:min-h-full to apply the min-h-full utility at only medium screen sizes and above.\n\n<div class=\"h-24 min-h-0 md:min-h-full\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize your min-height scale by editing theme.minHeight or theme.extend.minHeight in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    minHeight: {\n\n      '1/2': '50%',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off min-height value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"min-h-[50%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nHeight\nMax-Height\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the minimum height\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Max-Height - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/max-height",
    "html": "Sizing\n\nMax-Height\n\nUtilities for setting the maximum height of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nmax-h-0\tmax-height: 0px;\n\nmax-h-px\tmax-height: 1px;\n\nmax-h-0.5\tmax-height: 0.125rem; /* 2px */\n\nmax-h-1\tmax-height: 0.25rem; /* 4px */\n\nmax-h-1.5\tmax-height: 0.375rem; /* 6px */\n\nmax-h-2\tmax-height: 0.5rem; /* 8px */\n\nmax-h-2.5\tmax-height: 0.625rem; /* 10px */\n\nmax-h-3\tmax-height: 0.75rem; /* 12px */\n\nmax-h-3.5\tmax-height: 0.875rem; /* 14px */\n\nmax-h-4\tmax-height: 1rem; /* 16px */\n\nmax-h-5\tmax-height: 1.25rem; /* 20px */\n\nmax-h-6\tmax-height: 1.5rem; /* 24px */\n\nmax-h-7\tmax-height: 1.75rem; /* 28px */\n\nmax-h-8\tmax-height: 2rem; /* 32px */\n\nmax-h-9\tmax-height: 2.25rem; /* 36px */\n\nmax-h-10\tmax-height: 2.5rem; /* 40px */\n\nmax-h-11\tmax-height: 2.75rem; /* 44px */\n\nmax-h-12\tmax-height: 3rem; /* 48px */\n\nmax-h-14\tmax-height: 3.5rem; /* 56px */\n\nmax-h-16\tmax-height: 4rem; /* 64px */\n\nmax-h-20\tmax-height: 5rem; /* 80px */\n\nmax-h-24\tmax-height: 6rem; /* 96px */\n\nmax-h-28\tmax-height: 7rem; /* 112px */\n\nmax-h-32\tmax-height: 8rem; /* 128px */\n\nmax-h-36\tmax-height: 9rem; /* 144px */\n\nmax-h-40\tmax-height: 10rem; /* 160px */\n\nmax-h-44\tmax-height: 11rem; /* 176px */\n\nmax-h-48\tmax-height: 12rem; /* 192px */\n\nmax-h-52\tmax-height: 13rem; /* 208px */\n\nmax-h-56\tmax-height: 14rem; /* 224px */\n\nmax-h-60\tmax-height: 15rem; /* 240px */\n\nmax-h-64\tmax-height: 16rem; /* 256px */\n\nmax-h-72\tmax-height: 18rem; /* 288px */\n\nmax-h-80\tmax-height: 20rem; /* 320px */\n\nmax-h-96\tmax-height: 24rem; /* 384px */\n\nmax-h-none\tmax-height: none;\n\nmax-h-full\tmax-height: 100%;\n\nmax-h-screen\tmax-height: 100vh;\n\nmax-h-min\tmax-height: min-content;\n\nmax-h-max\tmax-height: max-content;\n\nmax-h-fit\tmax-height: fit-content;\n\n​\nBasic usage\n​\nSetting the maximum height\n\nSet the maximum height of an element using the max-h-full or max-h-screen utilities.\n\n<div class=\"h-24 ...\">\n  <div class=\"h-48 max-h-full ...\">\n    <!-- ... -->\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:max-h-screen to only apply the max-h-screen utility on hover.\n\n<div class=\"h-48 max-h-full hover:max-h-screen\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:max-h-screen to apply the max-h-screen utility at only medium screen sizes and above.\n\n<div class=\"h-48 max-h-full md:max-h-screen\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s max-height scale uses a combination of the default spacing scale as well as some additional height related values.\n\nYou can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the max-height scale by editing theme.maxHeight or theme.extend.maxHeight in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      maxHeight: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off max-height value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"max-h-[32rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nMin-Height\nFont Family\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the maximum height\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Height - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/height",
    "html": "Sizing\n\nHeight\n\nUtilities for setting the height of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nh-0\theight: 0px;\n\nh-px\theight: 1px;\n\nh-0.5\theight: 0.125rem; /* 2px */\n\nh-1\theight: 0.25rem; /* 4px */\n\nh-1.5\theight: 0.375rem; /* 6px */\n\nh-2\theight: 0.5rem; /* 8px */\n\nh-2.5\theight: 0.625rem; /* 10px */\n\nh-3\theight: 0.75rem; /* 12px */\n\nh-3.5\theight: 0.875rem; /* 14px */\n\nh-4\theight: 1rem; /* 16px */\n\nh-5\theight: 1.25rem; /* 20px */\n\nh-6\theight: 1.5rem; /* 24px */\n\nh-7\theight: 1.75rem; /* 28px */\n\nh-8\theight: 2rem; /* 32px */\n\nh-9\theight: 2.25rem; /* 36px */\n\nh-10\theight: 2.5rem; /* 40px */\n\nh-11\theight: 2.75rem; /* 44px */\n\nh-12\theight: 3rem; /* 48px */\n\nh-14\theight: 3.5rem; /* 56px */\n\nh-16\theight: 4rem; /* 64px */\n\nh-20\theight: 5rem; /* 80px */\n\nh-24\theight: 6rem; /* 96px */\n\nh-28\theight: 7rem; /* 112px */\n\nh-32\theight: 8rem; /* 128px */\n\nh-36\theight: 9rem; /* 144px */\n\nh-40\theight: 10rem; /* 160px */\n\nh-44\theight: 11rem; /* 176px */\n\nh-48\theight: 12rem; /* 192px */\n\nh-52\theight: 13rem; /* 208px */\n\nh-56\theight: 14rem; /* 224px */\n\nh-60\theight: 15rem; /* 240px */\n\nh-64\theight: 16rem; /* 256px */\n\nh-72\theight: 18rem; /* 288px */\n\nh-80\theight: 20rem; /* 320px */\n\nh-96\theight: 24rem; /* 384px */\n\nh-auto\theight: auto;\n\nh-1/2\theight: 50%;\n\nh-1/3\theight: 33.333333%;\n\nh-2/3\theight: 66.666667%;\n\nh-1/4\theight: 25%;\n\nh-2/4\theight: 50%;\n\nh-3/4\theight: 75%;\n\nh-1/5\theight: 20%;\n\nh-2/5\theight: 40%;\n\nh-3/5\theight: 60%;\n\nh-4/5\theight: 80%;\n\nh-1/6\theight: 16.666667%;\n\nh-2/6\theight: 33.333333%;\n\nh-3/6\theight: 50%;\n\nh-4/6\theight: 66.666667%;\n\nh-5/6\theight: 83.333333%;\n\nh-full\theight: 100%;\n\nh-screen\theight: 100vh;\n\nh-min\theight: min-content;\n\nh-max\theight: max-content;\n\nh-fit\theight: fit-content;\n\n​\nBasic usage\n​\nFixed heights\n\nUse h-{number} or h-px to set an element to a fixed height.\n\nh-96\nh-80\nh-64\nh-48\nh-40\nh-32\nh-24\n<div class=\"h-96 ...\">h-96</div>\n<div class=\"h-80 ...\">h-80</div>\n<div class=\"h-64 ...\">h-64</div>\n<div class=\"h-48 ...\">h-48</div>\n<div class=\"h-40 ...\">h-40</div>\n<div class=\"h-32 ...\">h-32</div>\n<div class=\"h-24 ...\">h-24</div>\n​\nFull height\n\nUse h-full to set an element’s height to 100% of its parent, as long as the parent has a defined height.\n\n<div class=\"h-48\">\n  <div class=\"h-full ...\">\n    <!-- This element will have a height of `12rem` (h-48) -->\n  </div>\n</div>\n​\nViewport height\n\nUse h-screen to make an element span the entire height of the viewport.\n\n<div class=\"h-screen\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:h-full to only apply the h-full utility on hover.\n\n<div class=\"h-8 hover:h-full\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:h-full to apply the h-full utility at only medium screen sizes and above.\n\n<div class=\"h-8 md:h-full\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s height scale is a combination of the default spacing scale as well as some additional values specific to heights.\n\nYou can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nTo customize height separately, use the theme.height section of your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      height: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off height value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"h-[32rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nMax-Width\nMin-Height\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nFixed heights\nFull height\nViewport height\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Max-Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/max-width",
    "html": "Sizing\n\nMax-Width\n\nUtilities for setting the maximum width of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nmax-w-0\tmax-width: 0rem; /* 0px */\n\nmax-w-none\tmax-width: none;\n\nmax-w-xs\tmax-width: 20rem; /* 320px */\n\nmax-w-sm\tmax-width: 24rem; /* 384px */\n\nmax-w-md\tmax-width: 28rem; /* 448px */\n\nmax-w-lg\tmax-width: 32rem; /* 512px */\n\nmax-w-xl\tmax-width: 36rem; /* 576px */\n\nmax-w-2xl\tmax-width: 42rem; /* 672px */\n\nmax-w-3xl\tmax-width: 48rem; /* 768px */\n\nmax-w-4xl\tmax-width: 56rem; /* 896px */\n\nmax-w-5xl\tmax-width: 64rem; /* 1024px */\n\nmax-w-6xl\tmax-width: 72rem; /* 1152px */\n\nmax-w-7xl\tmax-width: 80rem; /* 1280px */\n\nmax-w-full\tmax-width: 100%;\n\nmax-w-min\tmax-width: min-content;\n\nmax-w-max\tmax-width: max-content;\n\nmax-w-fit\tmax-width: fit-content;\n\nmax-w-prose\tmax-width: 65ch;\n\nmax-w-screen-sm\tmax-width: 640px;\n\nmax-w-screen-md\tmax-width: 768px;\n\nmax-w-screen-lg\tmax-width: 1024px;\n\nmax-w-screen-xl\tmax-width: 1280px;\n\nmax-w-screen-2xl\tmax-width: 1536px;\n\n​\nBasic usage\n​\nSetting the maximum width\n\nSet the maximum width of an element using the max-w-{size} utilities.\n\nAndrew Alfred\nAssistant to the Traveling Secretary\n<div class=\"max-w-md ...\">\n  <!-- ... -->\n</div>\n​\nReading width\n\nThe max-w-prose utility gives an element a max-width optimized for readability and adapts based on the font size.\n\ntext-sm\n\nOh yeah. It's the best part. It's crunchy, it's explosive, it's where the muffin breaks free of the pan and sort of does it's own thing. I'll tell you. That's a million dollar idea right there. Just sell the tops.\n\ntext-base\n\nOh yeah. It's the best part. It's crunchy, it's explosive, it's where the muffin breaks free of the pan and sort of does it's own thing. I'll tell you. That's a million dollar idea right there. Just sell the tops.\n\ntext-xl\n\nOh yeah. It's the best part. It's crunchy, it's explosive, it's where the muffin breaks free of the pan and sort of does it's own thing. I'll tell you. That's a million dollar idea right there. Just sell the tops.\n\n<div class=\"text-sm max-w-prose ...\">\n  <p>Oh yeah. It's the best part. It's crunchy, it's explosive, it's where the muffin breaks free of the pan and sort of does it's own thing. I'll tell you. That's a million dollar idea right there. Just sell the tops.</p>\n</div>\n\n<div class=\"text-base max-w-prose ...\">\n  <p>Oh yeah. It's the best part. It's crunchy, it's explosive, it's where the muffin breaks free of the pan and sort of does it's own thing. I'll tell you. That's a million dollar idea right there. Just sell the tops.</p>\n</div>\n\n<div class=\"text-xl max-w-prose ...\">\n  <p>Oh yeah. It's the best part. It's crunchy, it's explosive, it's where the muffin breaks free of the pan and sort of does it's own thing. I'll tell you. That's a million dollar idea right there. Just sell the tops.</p>\n</div>\n​\nConstraining to your breakpoints\n\nThe max-w-screen-{breakpoint} classes can be used to give an element a max-width matching a specific breakpoint. These values are automatically derived from the theme.screens section of your tailwind.config.js file.\n\n<div class=\"max-w-screen-2xl\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:max-w-lg to only apply the max-w-lg utility on hover.\n\n<div class=\"max-w-sm hover:max-w-lg\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:max-w-lg to apply the max-w-lg utility at only medium screen sizes and above.\n\n<div class=\"max-w-sm md:max-w-lg\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize your max-width scale by editing theme.maxWidth or theme.extend.maxWidth in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      maxWidth: {\n\n        '1/2': '50%',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off max-width value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"max-w-[50%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nMin-Width\nHeight\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the maximum width\nReading width\nConstraining to your breakpoints\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Min-Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/min-width",
    "html": "Sizing\n\nMin-Width\n\nUtilities for setting the minimum width of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nmin-w-0\tmin-width: 0px;\n\nmin-w-full\tmin-width: 100%;\n\nmin-w-min\tmin-width: min-content;\n\nmin-w-max\tmin-width: max-content;\n\nmin-w-fit\tmin-width: fit-content;\n\n​\nBasic usage\n​\nSetting the minimum width\n\nSet the minimum width of an element using the min-w-{width} utilities.\n\n<span class=\"min-w-full ...\">\n  <!-- ... -->\n</span>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:min-w-0 to only apply the min-w-0 utility on hover.\n\n<div class=\"w-24 min-w-full hover:min-w-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:min-w-0 to apply the min-w-0 utility at only medium screen sizes and above.\n\n<div class=\"w-24 min-w-full md:min-w-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nYou can customize your min-width scale by editing theme.minWidth or theme.extend.minWidth in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    minWidth: {\n\n      '1/2': '50%',\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off min-width value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"min-w-[50%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nWidth\nMax-Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the minimum width\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Space Between - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/space",
    "html": "Spacing\n\nSpace Between\n\nUtilities for controlling the space between child elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nspace-x-0 > * + *\tmargin-left: 0px;\n\nspace-y-0 > * + *\tmargin-top: 0px;\n\nspace-x-0.5 > * + *\tmargin-left: 0.125rem; /* 2px */\n\nspace-y-0.5 > * + *\tmargin-top: 0.125rem; /* 2px */\n\nspace-x-1 > * + *\tmargin-left: 0.25rem; /* 4px */\n\nspace-y-1 > * + *\tmargin-top: 0.25rem; /* 4px */\n\nspace-x-1.5 > * + *\tmargin-left: 0.375rem; /* 6px */\n\nspace-y-1.5 > * + *\tmargin-top: 0.375rem; /* 6px */\n\nspace-x-2 > * + *\tmargin-left: 0.5rem; /* 8px */\n\nspace-y-2 > * + *\tmargin-top: 0.5rem; /* 8px */\n\nspace-x-2.5 > * + *\tmargin-left: 0.625rem; /* 10px */\n\nspace-y-2.5 > * + *\tmargin-top: 0.625rem; /* 10px */\n\nspace-x-3 > * + *\tmargin-left: 0.75rem; /* 12px */\n\nspace-y-3 > * + *\tmargin-top: 0.75rem; /* 12px */\n\nspace-x-3.5 > * + *\tmargin-left: 0.875rem; /* 14px */\n\nspace-y-3.5 > * + *\tmargin-top: 0.875rem; /* 14px */\n\nspace-x-4 > * + *\tmargin-left: 1rem; /* 16px */\n\nspace-y-4 > * + *\tmargin-top: 1rem; /* 16px */\n\nspace-x-5 > * + *\tmargin-left: 1.25rem; /* 20px */\n\nspace-y-5 > * + *\tmargin-top: 1.25rem; /* 20px */\n\nspace-x-6 > * + *\tmargin-left: 1.5rem; /* 24px */\n\nspace-y-6 > * + *\tmargin-top: 1.5rem; /* 24px */\n\nspace-x-7 > * + *\tmargin-left: 1.75rem; /* 28px */\n\nspace-y-7 > * + *\tmargin-top: 1.75rem; /* 28px */\n\nspace-x-8 > * + *\tmargin-left: 2rem; /* 32px */\n\nspace-y-8 > * + *\tmargin-top: 2rem; /* 32px */\n\nspace-x-9 > * + *\tmargin-left: 2.25rem; /* 36px */\n\nspace-y-9 > * + *\tmargin-top: 2.25rem; /* 36px */\n\nspace-x-10 > * + *\tmargin-left: 2.5rem; /* 40px */\n\nspace-y-10 > * + *\tmargin-top: 2.5rem; /* 40px */\n\nspace-x-11 > * + *\tmargin-left: 2.75rem; /* 44px */\n\nspace-y-11 > * + *\tmargin-top: 2.75rem; /* 44px */\n\nspace-x-12 > * + *\tmargin-left: 3rem; /* 48px */\n\nspace-y-12 > * + *\tmargin-top: 3rem; /* 48px */\n\nspace-x-14 > * + *\tmargin-left: 3.5rem; /* 56px */\n\nspace-y-14 > * + *\tmargin-top: 3.5rem; /* 56px */\n\nspace-x-16 > * + *\tmargin-left: 4rem; /* 64px */\n\nspace-y-16 > * + *\tmargin-top: 4rem; /* 64px */\n\nspace-x-20 > * + *\tmargin-left: 5rem; /* 80px */\n\nspace-y-20 > * + *\tmargin-top: 5rem; /* 80px */\n\nspace-x-24 > * + *\tmargin-left: 6rem; /* 96px */\n\nspace-y-24 > * + *\tmargin-top: 6rem; /* 96px */\n\nspace-x-28 > * + *\tmargin-left: 7rem; /* 112px */\n\nspace-y-28 > * + *\tmargin-top: 7rem; /* 112px */\n\nspace-x-32 > * + *\tmargin-left: 8rem; /* 128px */\n\nspace-y-32 > * + *\tmargin-top: 8rem; /* 128px */\n\nspace-x-36 > * + *\tmargin-left: 9rem; /* 144px */\n\nspace-y-36 > * + *\tmargin-top: 9rem; /* 144px */\n\nspace-x-40 > * + *\tmargin-left: 10rem; /* 160px */\n\nspace-y-40 > * + *\tmargin-top: 10rem; /* 160px */\n\nspace-x-44 > * + *\tmargin-left: 11rem; /* 176px */\n\nspace-y-44 > * + *\tmargin-top: 11rem; /* 176px */\n\nspace-x-48 > * + *\tmargin-left: 12rem; /* 192px */\n\nspace-y-48 > * + *\tmargin-top: 12rem; /* 192px */\n\nspace-x-52 > * + *\tmargin-left: 13rem; /* 208px */\n\nspace-y-52 > * + *\tmargin-top: 13rem; /* 208px */\n\nspace-x-56 > * + *\tmargin-left: 14rem; /* 224px */\n\nspace-y-56 > * + *\tmargin-top: 14rem; /* 224px */\n\nspace-x-60 > * + *\tmargin-left: 15rem; /* 240px */\n\nspace-y-60 > * + *\tmargin-top: 15rem; /* 240px */\n\nspace-x-64 > * + *\tmargin-left: 16rem; /* 256px */\n\nspace-y-64 > * + *\tmargin-top: 16rem; /* 256px */\n\nspace-x-72 > * + *\tmargin-left: 18rem; /* 288px */\n\nspace-y-72 > * + *\tmargin-top: 18rem; /* 288px */\n\nspace-x-80 > * + *\tmargin-left: 20rem; /* 320px */\n\nspace-y-80 > * + *\tmargin-top: 20rem; /* 320px */\n\nspace-x-96 > * + *\tmargin-left: 24rem; /* 384px */\n\nspace-y-96 > * + *\tmargin-top: 24rem; /* 384px */\n\nspace-x-px > * + *\tmargin-left: 1px;\n\nspace-y-px > * + *\tmargin-top: 1px;\n\nspace-y-reverse > * + *\t--tw-space-y-reverse: 1;\n\nspace-x-reverse > * + *\t--tw-space-x-reverse: 1;\n\n​\nBasic usage\n​\nAdd horizontal space between children\n\nControl the horizontal space between elements using the space-x-{amount} utilities.\n\n01\n02\n03\n<div class=\"flex space-x-4 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nAdd vertical space between children\n\nControl the vertical space between elements using the space-y-{amount} utilities.\n\n01\n02\n03\n<div class=\"flex flex-col space-y-4 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nReversing children order\n\nIf your elements are in reverse order (using say flex-row-reverse or flex-col-reverse), use the space-x-reverse or space-y-reverse utilities to ensure the space is added to the correct side of each element.\n\n01\n02\n03\n<div class=\"flex flex-row-reverse space-x-4 space-x-reverse ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nUsing negative values\n\nTo use a negative space value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"flex -space-x-4 ...\">\n  <!-- ... -->\n</div>\n​\nLimitations\n\nThese utilities are really just a shortcut for adding margin to all-but-the-first-item in a group, and aren’t designed to handle complex cases like grids, layouts that wrap, or situations where the children are rendered in a complex custom order rather than their natural DOM order.\n\nFor those situations, it’s better to use the gap utilities when possible, or add margin to every element with a matching negative margin on the parent:\n\n<div class=\"flow-root\">\n  <div class=\"-m-2 flex flex-wrap\">\n    <div class=\"m-2 ...\"></div>\n    <div class=\"m-2 ...\"></div>\n    <div class=\"m-2 ...\"></div>\n  </div>\n</div>\n​\nCannot be paired with divide utilities\n\nThe space-* utilities are not designed to work together with the divide utilities. For those situations, consider adding margin/padding utilities to the children instead.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:space-x-8 to only apply the space-x-8 utility on hover.\n\n<div class=\"flex space-x-2 hover:space-x-8\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:space-x-8 to apply the space-x-8 utility at only medium screen sizes and above.\n\n<div class=\"flex space-x-2 md:space-x-8\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s space scale uses the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '5px': '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the space scale by editing theme.space or theme.extend.space in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      space: {\n\n        '5px': '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off space-{x|y} value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"space-y-[5px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nMargin\nWidth\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdd horizontal space between children\nAdd vertical space between children\nReversing children order\nUsing negative values\nLimitations\nCannot be paired with divide utilities\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Width - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/width",
    "html": "Sizing\n\nWidth\n\nUtilities for setting the width of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nw-0\twidth: 0px;\n\nw-px\twidth: 1px;\n\nw-0.5\twidth: 0.125rem; /* 2px */\n\nw-1\twidth: 0.25rem; /* 4px */\n\nw-1.5\twidth: 0.375rem; /* 6px */\n\nw-2\twidth: 0.5rem; /* 8px */\n\nw-2.5\twidth: 0.625rem; /* 10px */\n\nw-3\twidth: 0.75rem; /* 12px */\n\nw-3.5\twidth: 0.875rem; /* 14px */\n\nw-4\twidth: 1rem; /* 16px */\n\nw-5\twidth: 1.25rem; /* 20px */\n\nw-6\twidth: 1.5rem; /* 24px */\n\nw-7\twidth: 1.75rem; /* 28px */\n\nw-8\twidth: 2rem; /* 32px */\n\nw-9\twidth: 2.25rem; /* 36px */\n\nw-10\twidth: 2.5rem; /* 40px */\n\nw-11\twidth: 2.75rem; /* 44px */\n\nw-12\twidth: 3rem; /* 48px */\n\nw-14\twidth: 3.5rem; /* 56px */\n\nw-16\twidth: 4rem; /* 64px */\n\nw-20\twidth: 5rem; /* 80px */\n\nw-24\twidth: 6rem; /* 96px */\n\nw-28\twidth: 7rem; /* 112px */\n\nw-32\twidth: 8rem; /* 128px */\n\nw-36\twidth: 9rem; /* 144px */\n\nw-40\twidth: 10rem; /* 160px */\n\nw-44\twidth: 11rem; /* 176px */\n\nw-48\twidth: 12rem; /* 192px */\n\nw-52\twidth: 13rem; /* 208px */\n\nw-56\twidth: 14rem; /* 224px */\n\nw-60\twidth: 15rem; /* 240px */\n\nw-64\twidth: 16rem; /* 256px */\n\nw-72\twidth: 18rem; /* 288px */\n\nw-80\twidth: 20rem; /* 320px */\n\nw-96\twidth: 24rem; /* 384px */\n\nw-auto\twidth: auto;\n\nw-1/2\twidth: 50%;\n\nw-1/3\twidth: 33.333333%;\n\nw-2/3\twidth: 66.666667%;\n\nw-1/4\twidth: 25%;\n\nw-2/4\twidth: 50%;\n\nw-3/4\twidth: 75%;\n\nw-1/5\twidth: 20%;\n\nw-2/5\twidth: 40%;\n\nw-3/5\twidth: 60%;\n\nw-4/5\twidth: 80%;\n\nw-1/6\twidth: 16.666667%;\n\nw-2/6\twidth: 33.333333%;\n\nw-3/6\twidth: 50%;\n\nw-4/6\twidth: 66.666667%;\n\nw-5/6\twidth: 83.333333%;\n\nw-1/12\twidth: 8.333333%;\n\nw-2/12\twidth: 16.666667%;\n\nw-3/12\twidth: 25%;\n\nw-4/12\twidth: 33.333333%;\n\nw-5/12\twidth: 41.666667%;\n\nw-6/12\twidth: 50%;\n\nw-7/12\twidth: 58.333333%;\n\nw-8/12\twidth: 66.666667%;\n\nw-9/12\twidth: 75%;\n\nw-10/12\twidth: 83.333333%;\n\nw-11/12\twidth: 91.666667%;\n\nw-full\twidth: 100%;\n\nw-screen\twidth: 100vw;\n\nw-min\twidth: min-content;\n\nw-max\twidth: max-content;\n\nw-fit\twidth: fit-content;\n\n​\nBasic usage\n​\nFixed widths\n\nUse w-{number} or w-px to set an element to a fixed width.\n\nw-96\nw-80\nw-64\nw-48\nw-40\nw-32\nw-24\n<div class=\"w-96 ...\">w-96</div>\n<div class=\"w-80 ...\">w-80</div>\n<div class=\"w-64 ...\">w-64</div>\n<div class=\"w-48 ...\">w-48</div>\n<div class=\"w-40 ...\">w-40</div>\n<div class=\"w-32 ...\">w-32</div>\n<div class=\"w-24 ...\">w-24</div>\n​\nPercentage widths\n\nUse w-{fraction} or w-full to set an element to a percentage based width.\n\nw-1/2\nw-1/2\nw-2/5\nw-3/5\nw-1/3\nw-2/3\nw-1/4\nw-3/4\nw-1/5\nw-4/5\nw-1/6\nw-5/6\nw-full\n<div class=\"flex ...\">\n  <div class=\"w-1/2 ... \">w-1/2</div>\n  <div class=\"w-1/2 ... \">w-1/2</div>\n</div>\n<div class=\"flex ...\">\n  <div class=\"w-2/5 ...\">w-2/5</div>\n  <div class=\"w-3/5 ...\">w-3/5</div>\n</div>\n<div class=\"flex ...\">\n  <div class=\"w-1/3 ...\">w-1/3</div>\n  <div class=\"w-2/3 ...\">w-2/3</div>\n</div>\n<div class=\"flex ...\">\n  <div class=\"w-1/4 ...\">w-1/4</div>\n  <div class=\"w-3/4 ...\">w-3/4</div>\n</div>\n<div class=\"flex ...\">\n  <div class=\"w-1/5 ...\">w-1/5</div>\n  <div class=\"w-4/5 ...\">w-4/5</div>\n</div>\n<div class=\"flex ...\">\n  <div class=\"w-1/6 ...\">w-1/6</div>\n  <div class=\"w-5/6 ...\">w-5/6</div>\n</div>\n<div class=\"w-full ...\">w-full</div>\n​\nViewport width\n\nUse w-screen to make an element span the entire width of the viewport.\n\n<div class=\"w-screen\">\n  <!-- ... -->\n</div>\n​\nResetting the width\n\nThe w-auto utility can be useful if you need to remove an element’s assigned width under a specific condition, like at a particular breakpoint:\n\n<div class=\"w-full md:w-auto\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:w-full to only apply the w-full utility on hover.\n\n<div class=\"w-1/2 hover:w-full\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:w-full to apply the w-full utility at only medium screen sizes and above.\n\n<div class=\"w-1/2 md:w-full\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s width scale is a combination of the default spacing scale as well as some additional values specific to widths.\n\nYou can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nTo customize width separately, use the theme.width section of your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      width: {\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off width value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"w-[32rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nSpace Between\nMin-Width\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nFixed widths\nPercentage widths\nViewport width\nResetting the width\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Margin - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/margin",
    "html": "Spacing\n\nMargin\n\nUtilities for controlling an element's margin.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nm-0\tmargin: 0px;\n\nmx-0\tmargin-left: 0px;\nmargin-right: 0px;\n\nmy-0\tmargin-top: 0px;\nmargin-bottom: 0px;\n\nms-0\tmargin-inline-start: 0px;\n\nme-0\tmargin-inline-end: 0px;\n\nmt-0\tmargin-top: 0px;\n\nmr-0\tmargin-right: 0px;\n\nmb-0\tmargin-bottom: 0px;\n\nml-0\tmargin-left: 0px;\n\nm-px\tmargin: 1px;\n\nmx-px\tmargin-left: 1px;\nmargin-right: 1px;\n\nmy-px\tmargin-top: 1px;\nmargin-bottom: 1px;\n\nms-px\tmargin-inline-start: 1px;\n\nme-px\tmargin-inline-end: 1px;\n\nmt-px\tmargin-top: 1px;\n\nmr-px\tmargin-right: 1px;\n\nmb-px\tmargin-bottom: 1px;\n\nml-px\tmargin-left: 1px;\n\nm-0.5\tmargin: 0.125rem; /* 2px */\n\nmx-0.5\tmargin-left: 0.125rem; /* 2px */\nmargin-right: 0.125rem; /* 2px */\n\nmy-0.5\tmargin-top: 0.125rem; /* 2px */\nmargin-bottom: 0.125rem; /* 2px */\n\nms-0.5\tmargin-inline-start: 0.125rem; /* 2px */\n\nme-0.5\tmargin-inline-end: 0.125rem; /* 2px */\n\nmt-0.5\tmargin-top: 0.125rem; /* 2px */\n\nmr-0.5\tmargin-right: 0.125rem; /* 2px */\n\nmb-0.5\tmargin-bottom: 0.125rem; /* 2px */\n\nml-0.5\tmargin-left: 0.125rem; /* 2px */\n\nm-1\tmargin: 0.25rem; /* 4px */\n\nmx-1\tmargin-left: 0.25rem; /* 4px */\nmargin-right: 0.25rem; /* 4px */\n\nmy-1\tmargin-top: 0.25rem; /* 4px */\nmargin-bottom: 0.25rem; /* 4px */\n\nms-1\tmargin-inline-start: 0.25rem; /* 4px */\n\nme-1\tmargin-inline-end: 0.25rem; /* 4px */\n\nmt-1\tmargin-top: 0.25rem; /* 4px */\n\nmr-1\tmargin-right: 0.25rem; /* 4px */\n\nmb-1\tmargin-bottom: 0.25rem; /* 4px */\n\nml-1\tmargin-left: 0.25rem; /* 4px */\n\nm-1.5\tmargin: 0.375rem; /* 6px */\n\nmx-1.5\tmargin-left: 0.375rem; /* 6px */\nmargin-right: 0.375rem; /* 6px */\n\nmy-1.5\tmargin-top: 0.375rem; /* 6px */\nmargin-bottom: 0.375rem; /* 6px */\n\nms-1.5\tmargin-inline-start: 0.375rem; /* 6px */\n\nme-1.5\tmargin-inline-end: 0.375rem; /* 6px */\n\nmt-1.5\tmargin-top: 0.375rem; /* 6px */\n\nmr-1.5\tmargin-right: 0.375rem; /* 6px */\n\nmb-1.5\tmargin-bottom: 0.375rem; /* 6px */\n\nml-1.5\tmargin-left: 0.375rem; /* 6px */\n\nm-2\tmargin: 0.5rem; /* 8px */\n\nmx-2\tmargin-left: 0.5rem; /* 8px */\nmargin-right: 0.5rem; /* 8px */\n\nmy-2\tmargin-top: 0.5rem; /* 8px */\nmargin-bottom: 0.5rem; /* 8px */\n\nms-2\tmargin-inline-start: 0.5rem; /* 8px */\n\nme-2\tmargin-inline-end: 0.5rem; /* 8px */\n\nmt-2\tmargin-top: 0.5rem; /* 8px */\n\nmr-2\tmargin-right: 0.5rem; /* 8px */\n\nmb-2\tmargin-bottom: 0.5rem; /* 8px */\n\nml-2\tmargin-left: 0.5rem; /* 8px */\n\nm-2.5\tmargin: 0.625rem; /* 10px */\n\nmx-2.5\tmargin-left: 0.625rem; /* 10px */\nmargin-right: 0.625rem; /* 10px */\n\nmy-2.5\tmargin-top: 0.625rem; /* 10px */\nmargin-bottom: 0.625rem; /* 10px */\n\nms-2.5\tmargin-inline-start: 0.625rem; /* 10px */\n\nme-2.5\tmargin-inline-end: 0.625rem; /* 10px */\n\nmt-2.5\tmargin-top: 0.625rem; /* 10px */\n\nmr-2.5\tmargin-right: 0.625rem; /* 10px */\n\nmb-2.5\tmargin-bottom: 0.625rem; /* 10px */\n\nml-2.5\tmargin-left: 0.625rem; /* 10px */\n\nm-3\tmargin: 0.75rem; /* 12px */\n\nmx-3\tmargin-left: 0.75rem; /* 12px */\nmargin-right: 0.75rem; /* 12px */\n\nmy-3\tmargin-top: 0.75rem; /* 12px */\nmargin-bottom: 0.75rem; /* 12px */\n\nms-3\tmargin-inline-start: 0.75rem; /* 12px */\n\nme-3\tmargin-inline-end: 0.75rem; /* 12px */\n\nmt-3\tmargin-top: 0.75rem; /* 12px */\n\nmr-3\tmargin-right: 0.75rem; /* 12px */\n\nmb-3\tmargin-bottom: 0.75rem; /* 12px */\n\nml-3\tmargin-left: 0.75rem; /* 12px */\n\nm-3.5\tmargin: 0.875rem; /* 14px */\n\nmx-3.5\tmargin-left: 0.875rem; /* 14px */\nmargin-right: 0.875rem; /* 14px */\n\nmy-3.5\tmargin-top: 0.875rem; /* 14px */\nmargin-bottom: 0.875rem; /* 14px */\n\nms-3.5\tmargin-inline-start: 0.875rem; /* 14px */\n\nme-3.5\tmargin-inline-end: 0.875rem; /* 14px */\n\nmt-3.5\tmargin-top: 0.875rem; /* 14px */\n\nmr-3.5\tmargin-right: 0.875rem; /* 14px */\n\nmb-3.5\tmargin-bottom: 0.875rem; /* 14px */\n\nml-3.5\tmargin-left: 0.875rem; /* 14px */\n\nm-4\tmargin: 1rem; /* 16px */\n\nmx-4\tmargin-left: 1rem; /* 16px */\nmargin-right: 1rem; /* 16px */\n\nmy-4\tmargin-top: 1rem; /* 16px */\nmargin-bottom: 1rem; /* 16px */\n\nms-4\tmargin-inline-start: 1rem; /* 16px */\n\nme-4\tmargin-inline-end: 1rem; /* 16px */\n\nmt-4\tmargin-top: 1rem; /* 16px */\n\nmr-4\tmargin-right: 1rem; /* 16px */\n\nmb-4\tmargin-bottom: 1rem; /* 16px */\n\nml-4\tmargin-left: 1rem; /* 16px */\n\nm-5\tmargin: 1.25rem; /* 20px */\n\nmx-5\tmargin-left: 1.25rem; /* 20px */\nmargin-right: 1.25rem; /* 20px */\n\nmy-5\tmargin-top: 1.25rem; /* 20px */\nmargin-bottom: 1.25rem; /* 20px */\n\nms-5\tmargin-inline-start: 1.25rem; /* 20px */\n\nme-5\tmargin-inline-end: 1.25rem; /* 20px */\n\nmt-5\tmargin-top: 1.25rem; /* 20px */\n\nmr-5\tmargin-right: 1.25rem; /* 20px */\n\nmb-5\tmargin-bottom: 1.25rem; /* 20px */\n\nml-5\tmargin-left: 1.25rem; /* 20px */\n\nm-6\tmargin: 1.5rem; /* 24px */\n\nmx-6\tmargin-left: 1.5rem; /* 24px */\nmargin-right: 1.5rem; /* 24px */\n\nmy-6\tmargin-top: 1.5rem; /* 24px */\nmargin-bottom: 1.5rem; /* 24px */\n\nms-6\tmargin-inline-start: 1.5rem; /* 24px */\n\nme-6\tmargin-inline-end: 1.5rem; /* 24px */\n\nmt-6\tmargin-top: 1.5rem; /* 24px */\n\nmr-6\tmargin-right: 1.5rem; /* 24px */\n\nmb-6\tmargin-bottom: 1.5rem; /* 24px */\n\nml-6\tmargin-left: 1.5rem; /* 24px */\n\nm-7\tmargin: 1.75rem; /* 28px */\n\nmx-7\tmargin-left: 1.75rem; /* 28px */\nmargin-right: 1.75rem; /* 28px */\n\nmy-7\tmargin-top: 1.75rem; /* 28px */\nmargin-bottom: 1.75rem; /* 28px */\n\nms-7\tmargin-inline-start: 1.75rem; /* 28px */\n\nme-7\tmargin-inline-end: 1.75rem; /* 28px */\n\nmt-7\tmargin-top: 1.75rem; /* 28px */\n\nmr-7\tmargin-right: 1.75rem; /* 28px */\n\nmb-7\tmargin-bottom: 1.75rem; /* 28px */\n\nml-7\tmargin-left: 1.75rem; /* 28px */\n\nm-8\tmargin: 2rem; /* 32px */\n\nmx-8\tmargin-left: 2rem; /* 32px */\nmargin-right: 2rem; /* 32px */\n\nmy-8\tmargin-top: 2rem; /* 32px */\nmargin-bottom: 2rem; /* 32px */\n\nms-8\tmargin-inline-start: 2rem; /* 32px */\n\nme-8\tmargin-inline-end: 2rem; /* 32px */\n\nmt-8\tmargin-top: 2rem; /* 32px */\n\nmr-8\tmargin-right: 2rem; /* 32px */\n\nmb-8\tmargin-bottom: 2rem; /* 32px */\n\nml-8\tmargin-left: 2rem; /* 32px */\n\nm-9\tmargin: 2.25rem; /* 36px */\n\nmx-9\tmargin-left: 2.25rem; /* 36px */\nmargin-right: 2.25rem; /* 36px */\n\nmy-9\tmargin-top: 2.25rem; /* 36px */\nmargin-bottom: 2.25rem; /* 36px */\n\nms-9\tmargin-inline-start: 2.25rem; /* 36px */\n\nme-9\tmargin-inline-end: 2.25rem; /* 36px */\n\nmt-9\tmargin-top: 2.25rem; /* 36px */\n\nmr-9\tmargin-right: 2.25rem; /* 36px */\n\nmb-9\tmargin-bottom: 2.25rem; /* 36px */\n\nml-9\tmargin-left: 2.25rem; /* 36px */\n\nm-10\tmargin: 2.5rem; /* 40px */\n\nmx-10\tmargin-left: 2.5rem; /* 40px */\nmargin-right: 2.5rem; /* 40px */\n\nmy-10\tmargin-top: 2.5rem; /* 40px */\nmargin-bottom: 2.5rem; /* 40px */\n\nms-10\tmargin-inline-start: 2.5rem; /* 40px */\n\nme-10\tmargin-inline-end: 2.5rem; /* 40px */\n\nmt-10\tmargin-top: 2.5rem; /* 40px */\n\nmr-10\tmargin-right: 2.5rem; /* 40px */\n\nmb-10\tmargin-bottom: 2.5rem; /* 40px */\n\nml-10\tmargin-left: 2.5rem; /* 40px */\n\nm-11\tmargin: 2.75rem; /* 44px */\n\nmx-11\tmargin-left: 2.75rem; /* 44px */\nmargin-right: 2.75rem; /* 44px */\n\nmy-11\tmargin-top: 2.75rem; /* 44px */\nmargin-bottom: 2.75rem; /* 44px */\n\nms-11\tmargin-inline-start: 2.75rem; /* 44px */\n\nme-11\tmargin-inline-end: 2.75rem; /* 44px */\n\nmt-11\tmargin-top: 2.75rem; /* 44px */\n\nmr-11\tmargin-right: 2.75rem; /* 44px */\n\nmb-11\tmargin-bottom: 2.75rem; /* 44px */\n\nml-11\tmargin-left: 2.75rem; /* 44px */\n\nm-12\tmargin: 3rem; /* 48px */\n\nmx-12\tmargin-left: 3rem; /* 48px */\nmargin-right: 3rem; /* 48px */\n\nmy-12\tmargin-top: 3rem; /* 48px */\nmargin-bottom: 3rem; /* 48px */\n\nms-12\tmargin-inline-start: 3rem; /* 48px */\n\nme-12\tmargin-inline-end: 3rem; /* 48px */\n\nmt-12\tmargin-top: 3rem; /* 48px */\n\nmr-12\tmargin-right: 3rem; /* 48px */\n\nmb-12\tmargin-bottom: 3rem; /* 48px */\n\nml-12\tmargin-left: 3rem; /* 48px */\n\nm-14\tmargin: 3.5rem; /* 56px */\n\nmx-14\tmargin-left: 3.5rem; /* 56px */\nmargin-right: 3.5rem; /* 56px */\n\nmy-14\tmargin-top: 3.5rem; /* 56px */\nmargin-bottom: 3.5rem; /* 56px */\n\nms-14\tmargin-inline-start: 3.5rem; /* 56px */\n\nme-14\tmargin-inline-end: 3.5rem; /* 56px */\n\nmt-14\tmargin-top: 3.5rem; /* 56px */\n\nmr-14\tmargin-right: 3.5rem; /* 56px */\n\nmb-14\tmargin-bottom: 3.5rem; /* 56px */\n\nml-14\tmargin-left: 3.5rem; /* 56px */\n\nm-16\tmargin: 4rem; /* 64px */\n\nmx-16\tmargin-left: 4rem; /* 64px */\nmargin-right: 4rem; /* 64px */\n\nmy-16\tmargin-top: 4rem; /* 64px */\nmargin-bottom: 4rem; /* 64px */\n\nms-16\tmargin-inline-start: 4rem; /* 64px */\n\nme-16\tmargin-inline-end: 4rem; /* 64px */\n\nmt-16\tmargin-top: 4rem; /* 64px */\n\nmr-16\tmargin-right: 4rem; /* 64px */\n\nmb-16\tmargin-bottom: 4rem; /* 64px */\n\nml-16\tmargin-left: 4rem; /* 64px */\n\nm-20\tmargin: 5rem; /* 80px */\n\nmx-20\tmargin-left: 5rem; /* 80px */\nmargin-right: 5rem; /* 80px */\n\nmy-20\tmargin-top: 5rem; /* 80px */\nmargin-bottom: 5rem; /* 80px */\n\nms-20\tmargin-inline-start: 5rem; /* 80px */\n\nme-20\tmargin-inline-end: 5rem; /* 80px */\n\nmt-20\tmargin-top: 5rem; /* 80px */\n\nmr-20\tmargin-right: 5rem; /* 80px */\n\nmb-20\tmargin-bottom: 5rem; /* 80px */\n\nml-20\tmargin-left: 5rem; /* 80px */\n\nm-24\tmargin: 6rem; /* 96px */\n\nmx-24\tmargin-left: 6rem; /* 96px */\nmargin-right: 6rem; /* 96px */\n\nmy-24\tmargin-top: 6rem; /* 96px */\nmargin-bottom: 6rem; /* 96px */\n\nms-24\tmargin-inline-start: 6rem; /* 96px */\n\nme-24\tmargin-inline-end: 6rem; /* 96px */\n\nmt-24\tmargin-top: 6rem; /* 96px */\n\nmr-24\tmargin-right: 6rem; /* 96px */\n\nmb-24\tmargin-bottom: 6rem; /* 96px */\n\nml-24\tmargin-left: 6rem; /* 96px */\n\nm-28\tmargin: 7rem; /* 112px */\n\nmx-28\tmargin-left: 7rem; /* 112px */\nmargin-right: 7rem; /* 112px */\n\nmy-28\tmargin-top: 7rem; /* 112px */\nmargin-bottom: 7rem; /* 112px */\n\nms-28\tmargin-inline-start: 7rem; /* 112px */\n\nme-28\tmargin-inline-end: 7rem; /* 112px */\n\nmt-28\tmargin-top: 7rem; /* 112px */\n\nmr-28\tmargin-right: 7rem; /* 112px */\n\nmb-28\tmargin-bottom: 7rem; /* 112px */\n\nml-28\tmargin-left: 7rem; /* 112px */\n\nm-32\tmargin: 8rem; /* 128px */\n\nmx-32\tmargin-left: 8rem; /* 128px */\nmargin-right: 8rem; /* 128px */\n\nmy-32\tmargin-top: 8rem; /* 128px */\nmargin-bottom: 8rem; /* 128px */\n\nms-32\tmargin-inline-start: 8rem; /* 128px */\n\nme-32\tmargin-inline-end: 8rem; /* 128px */\n\nmt-32\tmargin-top: 8rem; /* 128px */\n\nmr-32\tmargin-right: 8rem; /* 128px */\n\nmb-32\tmargin-bottom: 8rem; /* 128px */\n\nml-32\tmargin-left: 8rem; /* 128px */\n\nm-36\tmargin: 9rem; /* 144px */\n\nmx-36\tmargin-left: 9rem; /* 144px */\nmargin-right: 9rem; /* 144px */\n\nmy-36\tmargin-top: 9rem; /* 144px */\nmargin-bottom: 9rem; /* 144px */\n\nms-36\tmargin-inline-start: 9rem; /* 144px */\n\nme-36\tmargin-inline-end: 9rem; /* 144px */\n\nmt-36\tmargin-top: 9rem; /* 144px */\n\nmr-36\tmargin-right: 9rem; /* 144px */\n\nmb-36\tmargin-bottom: 9rem; /* 144px */\n\nml-36\tmargin-left: 9rem; /* 144px */\n\nm-40\tmargin: 10rem; /* 160px */\n\nmx-40\tmargin-left: 10rem; /* 160px */\nmargin-right: 10rem; /* 160px */\n\nmy-40\tmargin-top: 10rem; /* 160px */\nmargin-bottom: 10rem; /* 160px */\n\nms-40\tmargin-inline-start: 10rem; /* 160px */\n\nme-40\tmargin-inline-end: 10rem; /* 160px */\n\nmt-40\tmargin-top: 10rem; /* 160px */\n\nmr-40\tmargin-right: 10rem; /* 160px */\n\nmb-40\tmargin-bottom: 10rem; /* 160px */\n\nml-40\tmargin-left: 10rem; /* 160px */\n\nm-44\tmargin: 11rem; /* 176px */\n\nmx-44\tmargin-left: 11rem; /* 176px */\nmargin-right: 11rem; /* 176px */\n\nmy-44\tmargin-top: 11rem; /* 176px */\nmargin-bottom: 11rem; /* 176px */\n\nms-44\tmargin-inline-start: 11rem; /* 176px */\n\nme-44\tmargin-inline-end: 11rem; /* 176px */\n\nmt-44\tmargin-top: 11rem; /* 176px */\n\nmr-44\tmargin-right: 11rem; /* 176px */\n\nmb-44\tmargin-bottom: 11rem; /* 176px */\n\nml-44\tmargin-left: 11rem; /* 176px */\n\nm-48\tmargin: 12rem; /* 192px */\n\nmx-48\tmargin-left: 12rem; /* 192px */\nmargin-right: 12rem; /* 192px */\n\nmy-48\tmargin-top: 12rem; /* 192px */\nmargin-bottom: 12rem; /* 192px */\n\nms-48\tmargin-inline-start: 12rem; /* 192px */\n\nme-48\tmargin-inline-end: 12rem; /* 192px */\n\nmt-48\tmargin-top: 12rem; /* 192px */\n\nmr-48\tmargin-right: 12rem; /* 192px */\n\nmb-48\tmargin-bottom: 12rem; /* 192px */\n\nml-48\tmargin-left: 12rem; /* 192px */\n\nm-52\tmargin: 13rem; /* 208px */\n\nmx-52\tmargin-left: 13rem; /* 208px */\nmargin-right: 13rem; /* 208px */\n\nmy-52\tmargin-top: 13rem; /* 208px */\nmargin-bottom: 13rem; /* 208px */\n\nms-52\tmargin-inline-start: 13rem; /* 208px */\n\nme-52\tmargin-inline-end: 13rem; /* 208px */\n\nmt-52\tmargin-top: 13rem; /* 208px */\n\nmr-52\tmargin-right: 13rem; /* 208px */\n\nmb-52\tmargin-bottom: 13rem; /* 208px */\n\nml-52\tmargin-left: 13rem; /* 208px */\n\nm-56\tmargin: 14rem; /* 224px */\n\nmx-56\tmargin-left: 14rem; /* 224px */\nmargin-right: 14rem; /* 224px */\n\nmy-56\tmargin-top: 14rem; /* 224px */\nmargin-bottom: 14rem; /* 224px */\n\nms-56\tmargin-inline-start: 14rem; /* 224px */\n\nme-56\tmargin-inline-end: 14rem; /* 224px */\n\nmt-56\tmargin-top: 14rem; /* 224px */\n\nmr-56\tmargin-right: 14rem; /* 224px */\n\nmb-56\tmargin-bottom: 14rem; /* 224px */\n\nml-56\tmargin-left: 14rem; /* 224px */\n\nm-60\tmargin: 15rem; /* 240px */\n\nmx-60\tmargin-left: 15rem; /* 240px */\nmargin-right: 15rem; /* 240px */\n\nmy-60\tmargin-top: 15rem; /* 240px */\nmargin-bottom: 15rem; /* 240px */\n\nms-60\tmargin-inline-start: 15rem; /* 240px */\n\nme-60\tmargin-inline-end: 15rem; /* 240px */\n\nmt-60\tmargin-top: 15rem; /* 240px */\n\nmr-60\tmargin-right: 15rem; /* 240px */\n\nmb-60\tmargin-bottom: 15rem; /* 240px */\n\nml-60\tmargin-left: 15rem; /* 240px */\n\nm-64\tmargin: 16rem; /* 256px */\n\nmx-64\tmargin-left: 16rem; /* 256px */\nmargin-right: 16rem; /* 256px */\n\nmy-64\tmargin-top: 16rem; /* 256px */\nmargin-bottom: 16rem; /* 256px */\n\nms-64\tmargin-inline-start: 16rem; /* 256px */\n\nme-64\tmargin-inline-end: 16rem; /* 256px */\n\nmt-64\tmargin-top: 16rem; /* 256px */\n\nmr-64\tmargin-right: 16rem; /* 256px */\n\nmb-64\tmargin-bottom: 16rem; /* 256px */\n\nml-64\tmargin-left: 16rem; /* 256px */\n\nm-72\tmargin: 18rem; /* 288px */\n\nmx-72\tmargin-left: 18rem; /* 288px */\nmargin-right: 18rem; /* 288px */\n\nmy-72\tmargin-top: 18rem; /* 288px */\nmargin-bottom: 18rem; /* 288px */\n\nms-72\tmargin-inline-start: 18rem; /* 288px */\n\nme-72\tmargin-inline-end: 18rem; /* 288px */\n\nmt-72\tmargin-top: 18rem; /* 288px */\n\nmr-72\tmargin-right: 18rem; /* 288px */\n\nmb-72\tmargin-bottom: 18rem; /* 288px */\n\nml-72\tmargin-left: 18rem; /* 288px */\n\nm-80\tmargin: 20rem; /* 320px */\n\nmx-80\tmargin-left: 20rem; /* 320px */\nmargin-right: 20rem; /* 320px */\n\nmy-80\tmargin-top: 20rem; /* 320px */\nmargin-bottom: 20rem; /* 320px */\n\nms-80\tmargin-inline-start: 20rem; /* 320px */\n\nme-80\tmargin-inline-end: 20rem; /* 320px */\n\nmt-80\tmargin-top: 20rem; /* 320px */\n\nmr-80\tmargin-right: 20rem; /* 320px */\n\nmb-80\tmargin-bottom: 20rem; /* 320px */\n\nml-80\tmargin-left: 20rem; /* 320px */\n\nm-96\tmargin: 24rem; /* 384px */\n\nmx-96\tmargin-left: 24rem; /* 384px */\nmargin-right: 24rem; /* 384px */\n\nmy-96\tmargin-top: 24rem; /* 384px */\nmargin-bottom: 24rem; /* 384px */\n\nms-96\tmargin-inline-start: 24rem; /* 384px */\n\nme-96\tmargin-inline-end: 24rem; /* 384px */\n\nmt-96\tmargin-top: 24rem; /* 384px */\n\nmr-96\tmargin-right: 24rem; /* 384px */\n\nmb-96\tmargin-bottom: 24rem; /* 384px */\n\nml-96\tmargin-left: 24rem; /* 384px */\n\nm-auto\tmargin: auto;\n\nmx-auto\tmargin-left: auto;\nmargin-right: auto;\n\nmy-auto\tmargin-top: auto;\nmargin-bottom: auto;\n\nms-auto\tmargin-inline-start: auto;\n\nme-auto\tmargin-inline-end: auto;\n\nmt-auto\tmargin-top: auto;\n\nmr-auto\tmargin-right: auto;\n\nmb-auto\tmargin-bottom: auto;\n\nml-auto\tmargin-left: auto;\n\n​\nBasic usage\n​\nAdd margin to a single side\n\nControl the margin on one side of an element using the m{t|r|b|l}-{size} utilities.\n\nFor example, mt-6 would add 1.5rem of margin to the top of an element, mr-4 would add 1rem of margin to the right of an element, mb-8 would add 2rem of margin to the bottom of an element, and ml-2 would add 0.5rem of margin to the left of an element.\n\nmt-6\nmr-4\nmb-8\nml-2\n<div class=\"mt-6 ...\">mt-6</div>\n<div class=\"mr-4 ...\">mr-4</div>\n<div class=\"mb-8 ...\">mb-8</div>\n<div class=\"ml-2 ...\">ml-2</div>\n​\nAdd horizontal margin\n\nControl the horizontal margin of an element using the mx-{size} utilities.\n\nmx-8\n<div class=\"mx-8 ...\">mx-8</div>\n​\nAdd vertical margin\n\nControl the vertical margin of an element using the my-{size} utilities.\n\nmy-8\n<div class=\"my-8 ...\">my-8</div>\n​\nAdd margin to all sides\n\nControl the margin on all sides of an element using the m-{size} utilities.\n\nm-8\n<div class=\"m-8 ...\">m-8</div>\n​\nUsing negative values\n\nTo use a negative margin value, prefix the class name with a dash to convert it to a negative value.\n\n-mt-8\n<div class=\"w-36 h-16 bg-sky-400 opacity-20 ...\"></div>\n<div class=\"-mt-8 bg-sky-300 ...\">-mt-8</div>\n​\nUsing logical properties\n\nUse the ms-* and me-* utilities to set the margin-inline-start and margin-inline-end logical properties, which map to either the left or right side based on the text direction.\n\nLeft-to-right\n\nms-8\nme-8\n\nRight-to-left\n\nms-8\nme-8\n<div dir=\"ltr\">\n  <div class=\"ms-8 ...\">ms-8</div>\n  <div class=\"me-8 ...\">me-8</div>\n<div>\n\n<div dir=\"rtl\">\n  <div class=\"ms-8 ...\">ms-8</div>\n  <div class=\"me-8 ...\">me-8</div>\n<div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:mt-8 to only apply the mt-8 utility on hover.\n\n<div class=\"mt-4 hover:mt-8\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:mt-8 to apply the mt-8 utility at only medium screen sizes and above.\n\n<div class=\"mt-4 md:mt-8\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s margin scale uses the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '5px': '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the margin scale by editing theme.margin or theme.extend.margin in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      margin: {\n\n        '5px': '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off margin value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"m-[5px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nPadding\nSpace Between\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdd margin to a single side\nAdd horizontal margin\nAdd vertical margin\nAdd margin to all sides\nUsing negative values\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Padding - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/padding",
    "html": "Spacing\n\nPadding\n\nUtilities for controlling an element's padding.\n\n​\nQuick reference\nClass\n\t\nProperties\n\np-0\tpadding: 0px;\n\npx-0\tpadding-left: 0px;\npadding-right: 0px;\n\npy-0\tpadding-top: 0px;\npadding-bottom: 0px;\n\nps-0\tpadding-inline-start: 0px;\n\npe-0\tpadding-inline-end: 0px;\n\npt-0\tpadding-top: 0px;\n\npr-0\tpadding-right: 0px;\n\npb-0\tpadding-bottom: 0px;\n\npl-0\tpadding-left: 0px;\n\np-px\tpadding: 1px;\n\npx-px\tpadding-left: 1px;\npadding-right: 1px;\n\npy-px\tpadding-top: 1px;\npadding-bottom: 1px;\n\nps-px\tpadding-inline-start: 1px;\n\npe-px\tpadding-inline-end: 1px;\n\npt-px\tpadding-top: 1px;\n\npr-px\tpadding-right: 1px;\n\npb-px\tpadding-bottom: 1px;\n\npl-px\tpadding-left: 1px;\n\np-0.5\tpadding: 0.125rem; /* 2px */\n\npx-0.5\tpadding-left: 0.125rem; /* 2px */\npadding-right: 0.125rem; /* 2px */\n\npy-0.5\tpadding-top: 0.125rem; /* 2px */\npadding-bottom: 0.125rem; /* 2px */\n\nps-0.5\tpadding-inline-start: 0.125rem; /* 2px */\n\npe-0.5\tpadding-inline-end: 0.125rem; /* 2px */\n\npt-0.5\tpadding-top: 0.125rem; /* 2px */\n\npr-0.5\tpadding-right: 0.125rem; /* 2px */\n\npb-0.5\tpadding-bottom: 0.125rem; /* 2px */\n\npl-0.5\tpadding-left: 0.125rem; /* 2px */\n\np-1\tpadding: 0.25rem; /* 4px */\n\npx-1\tpadding-left: 0.25rem; /* 4px */\npadding-right: 0.25rem; /* 4px */\n\npy-1\tpadding-top: 0.25rem; /* 4px */\npadding-bottom: 0.25rem; /* 4px */\n\nps-1\tpadding-inline-start: 0.25rem; /* 4px */\n\npe-1\tpadding-inline-end: 0.25rem; /* 4px */\n\npt-1\tpadding-top: 0.25rem; /* 4px */\n\npr-1\tpadding-right: 0.25rem; /* 4px */\n\npb-1\tpadding-bottom: 0.25rem; /* 4px */\n\npl-1\tpadding-left: 0.25rem; /* 4px */\n\np-1.5\tpadding: 0.375rem; /* 6px */\n\npx-1.5\tpadding-left: 0.375rem; /* 6px */\npadding-right: 0.375rem; /* 6px */\n\npy-1.5\tpadding-top: 0.375rem; /* 6px */\npadding-bottom: 0.375rem; /* 6px */\n\nps-1.5\tpadding-inline-start: 0.375rem; /* 6px */\n\npe-1.5\tpadding-inline-end: 0.375rem; /* 6px */\n\npt-1.5\tpadding-top: 0.375rem; /* 6px */\n\npr-1.5\tpadding-right: 0.375rem; /* 6px */\n\npb-1.5\tpadding-bottom: 0.375rem; /* 6px */\n\npl-1.5\tpadding-left: 0.375rem; /* 6px */\n\np-2\tpadding: 0.5rem; /* 8px */\n\npx-2\tpadding-left: 0.5rem; /* 8px */\npadding-right: 0.5rem; /* 8px */\n\npy-2\tpadding-top: 0.5rem; /* 8px */\npadding-bottom: 0.5rem; /* 8px */\n\nps-2\tpadding-inline-start: 0.5rem; /* 8px */\n\npe-2\tpadding-inline-end: 0.5rem; /* 8px */\n\npt-2\tpadding-top: 0.5rem; /* 8px */\n\npr-2\tpadding-right: 0.5rem; /* 8px */\n\npb-2\tpadding-bottom: 0.5rem; /* 8px */\n\npl-2\tpadding-left: 0.5rem; /* 8px */\n\np-2.5\tpadding: 0.625rem; /* 10px */\n\npx-2.5\tpadding-left: 0.625rem; /* 10px */\npadding-right: 0.625rem; /* 10px */\n\npy-2.5\tpadding-top: 0.625rem; /* 10px */\npadding-bottom: 0.625rem; /* 10px */\n\nps-2.5\tpadding-inline-start: 0.625rem; /* 10px */\n\npe-2.5\tpadding-inline-end: 0.625rem; /* 10px */\n\npt-2.5\tpadding-top: 0.625rem; /* 10px */\n\npr-2.5\tpadding-right: 0.625rem; /* 10px */\n\npb-2.5\tpadding-bottom: 0.625rem; /* 10px */\n\npl-2.5\tpadding-left: 0.625rem; /* 10px */\n\np-3\tpadding: 0.75rem; /* 12px */\n\npx-3\tpadding-left: 0.75rem; /* 12px */\npadding-right: 0.75rem; /* 12px */\n\npy-3\tpadding-top: 0.75rem; /* 12px */\npadding-bottom: 0.75rem; /* 12px */\n\nps-3\tpadding-inline-start: 0.75rem; /* 12px */\n\npe-3\tpadding-inline-end: 0.75rem; /* 12px */\n\npt-3\tpadding-top: 0.75rem; /* 12px */\n\npr-3\tpadding-right: 0.75rem; /* 12px */\n\npb-3\tpadding-bottom: 0.75rem; /* 12px */\n\npl-3\tpadding-left: 0.75rem; /* 12px */\n\np-3.5\tpadding: 0.875rem; /* 14px */\n\npx-3.5\tpadding-left: 0.875rem; /* 14px */\npadding-right: 0.875rem; /* 14px */\n\npy-3.5\tpadding-top: 0.875rem; /* 14px */\npadding-bottom: 0.875rem; /* 14px */\n\nps-3.5\tpadding-inline-start: 0.875rem; /* 14px */\n\npe-3.5\tpadding-inline-end: 0.875rem; /* 14px */\n\npt-3.5\tpadding-top: 0.875rem; /* 14px */\n\npr-3.5\tpadding-right: 0.875rem; /* 14px */\n\npb-3.5\tpadding-bottom: 0.875rem; /* 14px */\n\npl-3.5\tpadding-left: 0.875rem; /* 14px */\n\np-4\tpadding: 1rem; /* 16px */\n\npx-4\tpadding-left: 1rem; /* 16px */\npadding-right: 1rem; /* 16px */\n\npy-4\tpadding-top: 1rem; /* 16px */\npadding-bottom: 1rem; /* 16px */\n\nps-4\tpadding-inline-start: 1rem; /* 16px */\n\npe-4\tpadding-inline-end: 1rem; /* 16px */\n\npt-4\tpadding-top: 1rem; /* 16px */\n\npr-4\tpadding-right: 1rem; /* 16px */\n\npb-4\tpadding-bottom: 1rem; /* 16px */\n\npl-4\tpadding-left: 1rem; /* 16px */\n\np-5\tpadding: 1.25rem; /* 20px */\n\npx-5\tpadding-left: 1.25rem; /* 20px */\npadding-right: 1.25rem; /* 20px */\n\npy-5\tpadding-top: 1.25rem; /* 20px */\npadding-bottom: 1.25rem; /* 20px */\n\nps-5\tpadding-inline-start: 1.25rem; /* 20px */\n\npe-5\tpadding-inline-end: 1.25rem; /* 20px */\n\npt-5\tpadding-top: 1.25rem; /* 20px */\n\npr-5\tpadding-right: 1.25rem; /* 20px */\n\npb-5\tpadding-bottom: 1.25rem; /* 20px */\n\npl-5\tpadding-left: 1.25rem; /* 20px */\n\np-6\tpadding: 1.5rem; /* 24px */\n\npx-6\tpadding-left: 1.5rem; /* 24px */\npadding-right: 1.5rem; /* 24px */\n\npy-6\tpadding-top: 1.5rem; /* 24px */\npadding-bottom: 1.5rem; /* 24px */\n\nps-6\tpadding-inline-start: 1.5rem; /* 24px */\n\npe-6\tpadding-inline-end: 1.5rem; /* 24px */\n\npt-6\tpadding-top: 1.5rem; /* 24px */\n\npr-6\tpadding-right: 1.5rem; /* 24px */\n\npb-6\tpadding-bottom: 1.5rem; /* 24px */\n\npl-6\tpadding-left: 1.5rem; /* 24px */\n\np-7\tpadding: 1.75rem; /* 28px */\n\npx-7\tpadding-left: 1.75rem; /* 28px */\npadding-right: 1.75rem; /* 28px */\n\npy-7\tpadding-top: 1.75rem; /* 28px */\npadding-bottom: 1.75rem; /* 28px */\n\nps-7\tpadding-inline-start: 1.75rem; /* 28px */\n\npe-7\tpadding-inline-end: 1.75rem; /* 28px */\n\npt-7\tpadding-top: 1.75rem; /* 28px */\n\npr-7\tpadding-right: 1.75rem; /* 28px */\n\npb-7\tpadding-bottom: 1.75rem; /* 28px */\n\npl-7\tpadding-left: 1.75rem; /* 28px */\n\np-8\tpadding: 2rem; /* 32px */\n\npx-8\tpadding-left: 2rem; /* 32px */\npadding-right: 2rem; /* 32px */\n\npy-8\tpadding-top: 2rem; /* 32px */\npadding-bottom: 2rem; /* 32px */\n\nps-8\tpadding-inline-start: 2rem; /* 32px */\n\npe-8\tpadding-inline-end: 2rem; /* 32px */\n\npt-8\tpadding-top: 2rem; /* 32px */\n\npr-8\tpadding-right: 2rem; /* 32px */\n\npb-8\tpadding-bottom: 2rem; /* 32px */\n\npl-8\tpadding-left: 2rem; /* 32px */\n\np-9\tpadding: 2.25rem; /* 36px */\n\npx-9\tpadding-left: 2.25rem; /* 36px */\npadding-right: 2.25rem; /* 36px */\n\npy-9\tpadding-top: 2.25rem; /* 36px */\npadding-bottom: 2.25rem; /* 36px */\n\nps-9\tpadding-inline-start: 2.25rem; /* 36px */\n\npe-9\tpadding-inline-end: 2.25rem; /* 36px */\n\npt-9\tpadding-top: 2.25rem; /* 36px */\n\npr-9\tpadding-right: 2.25rem; /* 36px */\n\npb-9\tpadding-bottom: 2.25rem; /* 36px */\n\npl-9\tpadding-left: 2.25rem; /* 36px */\n\np-10\tpadding: 2.5rem; /* 40px */\n\npx-10\tpadding-left: 2.5rem; /* 40px */\npadding-right: 2.5rem; /* 40px */\n\npy-10\tpadding-top: 2.5rem; /* 40px */\npadding-bottom: 2.5rem; /* 40px */\n\nps-10\tpadding-inline-start: 2.5rem; /* 40px */\n\npe-10\tpadding-inline-end: 2.5rem; /* 40px */\n\npt-10\tpadding-top: 2.5rem; /* 40px */\n\npr-10\tpadding-right: 2.5rem; /* 40px */\n\npb-10\tpadding-bottom: 2.5rem; /* 40px */\n\npl-10\tpadding-left: 2.5rem; /* 40px */\n\np-11\tpadding: 2.75rem; /* 44px */\n\npx-11\tpadding-left: 2.75rem; /* 44px */\npadding-right: 2.75rem; /* 44px */\n\npy-11\tpadding-top: 2.75rem; /* 44px */\npadding-bottom: 2.75rem; /* 44px */\n\nps-11\tpadding-inline-start: 2.75rem; /* 44px */\n\npe-11\tpadding-inline-end: 2.75rem; /* 44px */\n\npt-11\tpadding-top: 2.75rem; /* 44px */\n\npr-11\tpadding-right: 2.75rem; /* 44px */\n\npb-11\tpadding-bottom: 2.75rem; /* 44px */\n\npl-11\tpadding-left: 2.75rem; /* 44px */\n\np-12\tpadding: 3rem; /* 48px */\n\npx-12\tpadding-left: 3rem; /* 48px */\npadding-right: 3rem; /* 48px */\n\npy-12\tpadding-top: 3rem; /* 48px */\npadding-bottom: 3rem; /* 48px */\n\nps-12\tpadding-inline-start: 3rem; /* 48px */\n\npe-12\tpadding-inline-end: 3rem; /* 48px */\n\npt-12\tpadding-top: 3rem; /* 48px */\n\npr-12\tpadding-right: 3rem; /* 48px */\n\npb-12\tpadding-bottom: 3rem; /* 48px */\n\npl-12\tpadding-left: 3rem; /* 48px */\n\np-14\tpadding: 3.5rem; /* 56px */\n\npx-14\tpadding-left: 3.5rem; /* 56px */\npadding-right: 3.5rem; /* 56px */\n\npy-14\tpadding-top: 3.5rem; /* 56px */\npadding-bottom: 3.5rem; /* 56px */\n\nps-14\tpadding-inline-start: 3.5rem; /* 56px */\n\npe-14\tpadding-inline-end: 3.5rem; /* 56px */\n\npt-14\tpadding-top: 3.5rem; /* 56px */\n\npr-14\tpadding-right: 3.5rem; /* 56px */\n\npb-14\tpadding-bottom: 3.5rem; /* 56px */\n\npl-14\tpadding-left: 3.5rem; /* 56px */\n\np-16\tpadding: 4rem; /* 64px */\n\npx-16\tpadding-left: 4rem; /* 64px */\npadding-right: 4rem; /* 64px */\n\npy-16\tpadding-top: 4rem; /* 64px */\npadding-bottom: 4rem; /* 64px */\n\nps-16\tpadding-inline-start: 4rem; /* 64px */\n\npe-16\tpadding-inline-end: 4rem; /* 64px */\n\npt-16\tpadding-top: 4rem; /* 64px */\n\npr-16\tpadding-right: 4rem; /* 64px */\n\npb-16\tpadding-bottom: 4rem; /* 64px */\n\npl-16\tpadding-left: 4rem; /* 64px */\n\np-20\tpadding: 5rem; /* 80px */\n\npx-20\tpadding-left: 5rem; /* 80px */\npadding-right: 5rem; /* 80px */\n\npy-20\tpadding-top: 5rem; /* 80px */\npadding-bottom: 5rem; /* 80px */\n\nps-20\tpadding-inline-start: 5rem; /* 80px */\n\npe-20\tpadding-inline-end: 5rem; /* 80px */\n\npt-20\tpadding-top: 5rem; /* 80px */\n\npr-20\tpadding-right: 5rem; /* 80px */\n\npb-20\tpadding-bottom: 5rem; /* 80px */\n\npl-20\tpadding-left: 5rem; /* 80px */\n\np-24\tpadding: 6rem; /* 96px */\n\npx-24\tpadding-left: 6rem; /* 96px */\npadding-right: 6rem; /* 96px */\n\npy-24\tpadding-top: 6rem; /* 96px */\npadding-bottom: 6rem; /* 96px */\n\nps-24\tpadding-inline-start: 6rem; /* 96px */\n\npe-24\tpadding-inline-end: 6rem; /* 96px */\n\npt-24\tpadding-top: 6rem; /* 96px */\n\npr-24\tpadding-right: 6rem; /* 96px */\n\npb-24\tpadding-bottom: 6rem; /* 96px */\n\npl-24\tpadding-left: 6rem; /* 96px */\n\np-28\tpadding: 7rem; /* 112px */\n\npx-28\tpadding-left: 7rem; /* 112px */\npadding-right: 7rem; /* 112px */\n\npy-28\tpadding-top: 7rem; /* 112px */\npadding-bottom: 7rem; /* 112px */\n\nps-28\tpadding-inline-start: 7rem; /* 112px */\n\npe-28\tpadding-inline-end: 7rem; /* 112px */\n\npt-28\tpadding-top: 7rem; /* 112px */\n\npr-28\tpadding-right: 7rem; /* 112px */\n\npb-28\tpadding-bottom: 7rem; /* 112px */\n\npl-28\tpadding-left: 7rem; /* 112px */\n\np-32\tpadding: 8rem; /* 128px */\n\npx-32\tpadding-left: 8rem; /* 128px */\npadding-right: 8rem; /* 128px */\n\npy-32\tpadding-top: 8rem; /* 128px */\npadding-bottom: 8rem; /* 128px */\n\nps-32\tpadding-inline-start: 8rem; /* 128px */\n\npe-32\tpadding-inline-end: 8rem; /* 128px */\n\npt-32\tpadding-top: 8rem; /* 128px */\n\npr-32\tpadding-right: 8rem; /* 128px */\n\npb-32\tpadding-bottom: 8rem; /* 128px */\n\npl-32\tpadding-left: 8rem; /* 128px */\n\np-36\tpadding: 9rem; /* 144px */\n\npx-36\tpadding-left: 9rem; /* 144px */\npadding-right: 9rem; /* 144px */\n\npy-36\tpadding-top: 9rem; /* 144px */\npadding-bottom: 9rem; /* 144px */\n\nps-36\tpadding-inline-start: 9rem; /* 144px */\n\npe-36\tpadding-inline-end: 9rem; /* 144px */\n\npt-36\tpadding-top: 9rem; /* 144px */\n\npr-36\tpadding-right: 9rem; /* 144px */\n\npb-36\tpadding-bottom: 9rem; /* 144px */\n\npl-36\tpadding-left: 9rem; /* 144px */\n\np-40\tpadding: 10rem; /* 160px */\n\npx-40\tpadding-left: 10rem; /* 160px */\npadding-right: 10rem; /* 160px */\n\npy-40\tpadding-top: 10rem; /* 160px */\npadding-bottom: 10rem; /* 160px */\n\nps-40\tpadding-inline-start: 10rem; /* 160px */\n\npe-40\tpadding-inline-end: 10rem; /* 160px */\n\npt-40\tpadding-top: 10rem; /* 160px */\n\npr-40\tpadding-right: 10rem; /* 160px */\n\npb-40\tpadding-bottom: 10rem; /* 160px */\n\npl-40\tpadding-left: 10rem; /* 160px */\n\np-44\tpadding: 11rem; /* 176px */\n\npx-44\tpadding-left: 11rem; /* 176px */\npadding-right: 11rem; /* 176px */\n\npy-44\tpadding-top: 11rem; /* 176px */\npadding-bottom: 11rem; /* 176px */\n\nps-44\tpadding-inline-start: 11rem; /* 176px */\n\npe-44\tpadding-inline-end: 11rem; /* 176px */\n\npt-44\tpadding-top: 11rem; /* 176px */\n\npr-44\tpadding-right: 11rem; /* 176px */\n\npb-44\tpadding-bottom: 11rem; /* 176px */\n\npl-44\tpadding-left: 11rem; /* 176px */\n\np-48\tpadding: 12rem; /* 192px */\n\npx-48\tpadding-left: 12rem; /* 192px */\npadding-right: 12rem; /* 192px */\n\npy-48\tpadding-top: 12rem; /* 192px */\npadding-bottom: 12rem; /* 192px */\n\nps-48\tpadding-inline-start: 12rem; /* 192px */\n\npe-48\tpadding-inline-end: 12rem; /* 192px */\n\npt-48\tpadding-top: 12rem; /* 192px */\n\npr-48\tpadding-right: 12rem; /* 192px */\n\npb-48\tpadding-bottom: 12rem; /* 192px */\n\npl-48\tpadding-left: 12rem; /* 192px */\n\np-52\tpadding: 13rem; /* 208px */\n\npx-52\tpadding-left: 13rem; /* 208px */\npadding-right: 13rem; /* 208px */\n\npy-52\tpadding-top: 13rem; /* 208px */\npadding-bottom: 13rem; /* 208px */\n\nps-52\tpadding-inline-start: 13rem; /* 208px */\n\npe-52\tpadding-inline-end: 13rem; /* 208px */\n\npt-52\tpadding-top: 13rem; /* 208px */\n\npr-52\tpadding-right: 13rem; /* 208px */\n\npb-52\tpadding-bottom: 13rem; /* 208px */\n\npl-52\tpadding-left: 13rem; /* 208px */\n\np-56\tpadding: 14rem; /* 224px */\n\npx-56\tpadding-left: 14rem; /* 224px */\npadding-right: 14rem; /* 224px */\n\npy-56\tpadding-top: 14rem; /* 224px */\npadding-bottom: 14rem; /* 224px */\n\nps-56\tpadding-inline-start: 14rem; /* 224px */\n\npe-56\tpadding-inline-end: 14rem; /* 224px */\n\npt-56\tpadding-top: 14rem; /* 224px */\n\npr-56\tpadding-right: 14rem; /* 224px */\n\npb-56\tpadding-bottom: 14rem; /* 224px */\n\npl-56\tpadding-left: 14rem; /* 224px */\n\np-60\tpadding: 15rem; /* 240px */\n\npx-60\tpadding-left: 15rem; /* 240px */\npadding-right: 15rem; /* 240px */\n\npy-60\tpadding-top: 15rem; /* 240px */\npadding-bottom: 15rem; /* 240px */\n\nps-60\tpadding-inline-start: 15rem; /* 240px */\n\npe-60\tpadding-inline-end: 15rem; /* 240px */\n\npt-60\tpadding-top: 15rem; /* 240px */\n\npr-60\tpadding-right: 15rem; /* 240px */\n\npb-60\tpadding-bottom: 15rem; /* 240px */\n\npl-60\tpadding-left: 15rem; /* 240px */\n\np-64\tpadding: 16rem; /* 256px */\n\npx-64\tpadding-left: 16rem; /* 256px */\npadding-right: 16rem; /* 256px */\n\npy-64\tpadding-top: 16rem; /* 256px */\npadding-bottom: 16rem; /* 256px */\n\nps-64\tpadding-inline-start: 16rem; /* 256px */\n\npe-64\tpadding-inline-end: 16rem; /* 256px */\n\npt-64\tpadding-top: 16rem; /* 256px */\n\npr-64\tpadding-right: 16rem; /* 256px */\n\npb-64\tpadding-bottom: 16rem; /* 256px */\n\npl-64\tpadding-left: 16rem; /* 256px */\n\np-72\tpadding: 18rem; /* 288px */\n\npx-72\tpadding-left: 18rem; /* 288px */\npadding-right: 18rem; /* 288px */\n\npy-72\tpadding-top: 18rem; /* 288px */\npadding-bottom: 18rem; /* 288px */\n\nps-72\tpadding-inline-start: 18rem; /* 288px */\n\npe-72\tpadding-inline-end: 18rem; /* 288px */\n\npt-72\tpadding-top: 18rem; /* 288px */\n\npr-72\tpadding-right: 18rem; /* 288px */\n\npb-72\tpadding-bottom: 18rem; /* 288px */\n\npl-72\tpadding-left: 18rem; /* 288px */\n\np-80\tpadding: 20rem; /* 320px */\n\npx-80\tpadding-left: 20rem; /* 320px */\npadding-right: 20rem; /* 320px */\n\npy-80\tpadding-top: 20rem; /* 320px */\npadding-bottom: 20rem; /* 320px */\n\nps-80\tpadding-inline-start: 20rem; /* 320px */\n\npe-80\tpadding-inline-end: 20rem; /* 320px */\n\npt-80\tpadding-top: 20rem; /* 320px */\n\npr-80\tpadding-right: 20rem; /* 320px */\n\npb-80\tpadding-bottom: 20rem; /* 320px */\n\npl-80\tpadding-left: 20rem; /* 320px */\n\np-96\tpadding: 24rem; /* 384px */\n\npx-96\tpadding-left: 24rem; /* 384px */\npadding-right: 24rem; /* 384px */\n\npy-96\tpadding-top: 24rem; /* 384px */\npadding-bottom: 24rem; /* 384px */\n\nps-96\tpadding-inline-start: 24rem; /* 384px */\n\npe-96\tpadding-inline-end: 24rem; /* 384px */\n\npt-96\tpadding-top: 24rem; /* 384px */\n\npr-96\tpadding-right: 24rem; /* 384px */\n\npb-96\tpadding-bottom: 24rem; /* 384px */\n\npl-96\tpadding-left: 24rem; /* 384px */\n\n​\nBasic usage\n​\nAdd padding to a single side\n\nControl the padding on one side of an element using the p{t|r|b|l}-{size} utilities.\n\nFor example, pt-6 would add 1.5rem of padding to the top of an element, pr-4 would add 1rem of padding to the right of an element, pb-8 would add 2rem of padding to the bottom of an element, and pl-2 would add 0.5rem of padding to the left of an element.\n\npt-6\npr-4\npb-8\npl-2\n<div class=\"pt-6 ...\">pt-6</div>\n<div class=\"pr-4 ...\">pr-4</div>\n<div class=\"pb-8 ...\">pb-8</div>\n<div class=\"pl-2 ...\">pl-2</div>\n​\nAdd horizontal padding\n\nControl the horizontal padding of an element using the px-{size} utilities.\n\npx-8\n<div class=\"px-8 ...\">px-8</div>\n​\nAdd vertical padding\n\nControl the vertical padding of an element using the py-{size} utilities.\n\npy-8\n<div class=\"py-8 ...\">py-8</div>\n​\nAdd padding to all sides\n\nControl the padding on all sides of an element using the p-{size} utilities.\n\np-8\n<div class=\"p-8 ...\">p-8</div>\n​\nUsing logical properties\n\nUse the ps-* and pe-* utilities to set the padding-inline-start and padding-inline-end logical properties, which map to either the left or right side based on the text direction.\n\nLeft-to-right\n\nps-8\npe-8\n\nRight-to-left\n\nps-8\npe-8\n<div dir=\"ltr\">\n  <div class=\"ps-8 ...\">ps-8</div>\n  <div class=\"pe-8 ...\">pe-8</div>\n<div>\n\n<div dir=\"rtl\">\n  <div class=\"ps-8 ...\">ps-8</div>\n  <div class=\"pe-8 ...\">pe-8</div>\n<div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:py-8 to only apply the py-8 utility on hover.\n\n<div class=\"py-4 hover:py-8\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:py-8 to apply the py-8 utility at only medium screen sizes and above.\n\n<div class=\"py-4 md:py-8\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s padding scale uses the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '5px': '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the padding scale by editing theme.padding or theme.extend.padding in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      padding: {\n\n        '5px': '5px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off padding value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"p-[5px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nPlace Self\nMargin\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdd padding to a single side\nAdd horizontal padding\nAdd vertical padding\nAdd padding to all sides\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Place Items - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/place-items",
    "html": "Flexbox & Grid\n\nPlace Items\n\nUtilities for controlling how items are justified and aligned at the same time.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nplace-items-start\tplace-items: start;\n\nplace-items-end\tplace-items: end;\n\nplace-items-center\tplace-items: center;\n\nplace-items-baseline\tplace-items: baseline;\n\nplace-items-stretch\tplace-items: stretch;\n\n​\nBasic usage\n​\nStart\n\nUse place-items-start to place grid items on the start of their grid areas on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 place-items-start ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nEnd\n\nUse place-items-end to place grid items on the end of their grid areas on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 place-items-end h-56 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nCenter\n\nUse place-items-center to place grid items on the center of their grid areas on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 place-items-center h-56 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nStretch\n\nUse place-items-stretch to stretch items along their grid areas on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 place-items-stretch h-56 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:place-items-center to only apply the place-items-center utility on hover.\n\n<div class=\"grid place-items-start hover:place-items-center\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:place-items-center to apply the place-items-center utility at only medium screen sizes and above.\n\n<div class=\"grid place-items-start md:place-items-center\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nPlace Content\nPlace Self\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStart\nEnd\nCenter\nStretch\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Place Self - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/place-self",
    "html": "Flexbox & Grid\n\nPlace Self\n\nUtilities for controlling how an individual item is justified and aligned at the same time.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nplace-self-auto\tplace-self: auto;\n\nplace-self-start\tplace-self: start;\n\nplace-self-end\tplace-self: end;\n\nplace-self-center\tplace-self: center;\n\nplace-self-stretch\tplace-self: stretch;\n\n​\nBasic usage\n​\nAuto\n\nUse place-self-auto to align an item based on the value of the container’s place-items property:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 ...\">\n  <div>01</div>\n  <div class=\"place-self-auto ...\">02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nStart\n\nUse place-self-start to align an item to the start on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 ...\">\n  <div>01</div>\n  <div class=\"place-self-start ...\">02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nCenter\n\nUse place-self-center to align an item at the center on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 ...\">\n  <div>01</div>\n  <div class=\"place-self-center ...\">02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nEnd\n\nUse place-self-end to align an item to the end on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-4 ...\">\n  <div>01</div>\n  <div class=\"place-self-end ...\">02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nStretch\n\nUse place-self-stretch to stretch an item on both axes:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid grid-cols-3 gap-2 ...\">\n  <div>01</div>\n  <div class=\"place-self-stretch ...\">02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:place-self-end to only apply the place-self-end utility on hover.\n\n<div class=\"place-self-start hover:place-self-end\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:place-self-end to apply the place-self-end utility at only medium screen sizes and above.\n\n<div class=\"place-self-start md:place-self-end\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nPlace Items\nPadding\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAuto\nStart\nCenter\nEnd\nStretch\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Place Content - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/place-content",
    "html": "Flexbox & Grid\n\nPlace Content\n\nUtilities for controlling how content is justified and aligned at the same time.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nplace-content-center\tplace-content: center;\n\nplace-content-start\tplace-content: start;\n\nplace-content-end\tplace-content: end;\n\nplace-content-between\tplace-content: space-between;\n\nplace-content-around\tplace-content: space-around;\n\nplace-content-evenly\tplace-content: space-evenly;\n\nplace-content-baseline\tplace-content: baseline;\n\nplace-content-stretch\tplace-content: stretch;\n\n​\nBasic usage\n​\nCenter\n\nUse place-content-center to pack items in the center of the block axis:\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-center h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nStart\n\nUse place-content-start to pack items against the start of the block axis:\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-start h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nEnd\n\nUse place-content-end to to pack items against the end of the block axis:\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-end h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nSpace between\n\nUse place-content-between to distribute grid items along the block axis so that that there is an equal amount of space between each row on the block axis.\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-between h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nSpace around\n\nUse place-content-around distribute grid items such that there is an equal amount of space around each row on the block axis:\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-around h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nSpace evenly\n\nUse place-content-evenly to distribute grid items such that they are evenly spaced on the block axis:\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-evenly h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nStretch\n\nUse place-content-stretch to stretch grid items along their grid areas on the block axis:\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-2 gap-4 place-content-stretch h-48 ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:place-content-center to only apply the place-content-center utility on hover.\n\n<div class=\"grid place-content-start hover:place-content-center\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:place-content-center to apply the place-content-center utility at only medium screen sizes and above.\n\n<div class=\"grid place-content-start md:place-content-center\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nAlign Self\nPlace Items\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nCenter\nStart\nEnd\nSpace between\nSpace around\nSpace evenly\nStretch\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Align Self - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/align-self",
    "html": "Flexbox & Grid\n\nAlign Self\n\nUtilities for controlling how an individual flex or grid item is positioned along its container's cross axis.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nself-auto\talign-self: auto;\n\nself-start\talign-self: flex-start;\n\nself-end\talign-self: flex-end;\n\nself-center\talign-self: center;\n\nself-stretch\talign-self: stretch;\n\nself-baseline\talign-self: baseline;\n\n​\nBasic usage\n​\nAuto\n\nUse self-auto to align an item based on the value of the container’s align-items property:\n\n01\n02\n03\n<div class=\"flex items-stretch ...\">\n  <div>01</div>\n  <div class=\"self-auto ...\">02</div>\n  <div>03</div>\n</div>\n​\nStart\n\nUse self-start to align an item to the start of the container’s cross axis, despite the container’s align-items value:\n\n01\n02\n03\n<div class=\"flex items-stretch ...\">\n  <div>01</div>\n  <div class=\"self-start ...\">02</div>\n  <div>03</div>\n</div>\n​\nCenter\n\nUse self-center to align an item along the center of the container’s cross axis, despite the container’s align-items value:\n\n01\n02\n03\n<div class=\"flex items-stretch ...\">\n  <div>01</div>\n  <div class=\"self-center ...\">02</div>\n  <div>03</div>\n</div>\n​\nEnd\n\nUse self-end to align an item to the end of the container’s cross axis, despite the container’s align-items value:\n\n01\n02\n03\n<div class=\"flex items-stretch ...\">\n  <div>01</div>\n  <div class=\"self-end ...\">02</div>\n  <div>03</div>\n</div>\n​\nStretch\n\nUse self-stretch to stretch an item to fill the container’s cross axis, despite the container’s align-items value:\n\n01\n02\n03\n<div class=\"flex items-stretch ...\">\n  <div>01</div>\n  <div class=\"self-stretch ...\">02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:self-end to only apply the self-end utility on hover.\n\n<div class=\"self-auto hover:self-end\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:self-end to apply the self-end utility at only medium screen sizes and above.\n\n<div class=\"self-auto md:self-end\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nAlign Items\nPlace Content\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAuto\nStart\nCenter\nEnd\nStretch\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Align Content - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/align-content",
    "html": "Flexbox & Grid\n\nAlign Content\n\nUtilities for controlling how rows are positioned in multi-row flex and grid containers.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncontent-normal\talign-content: normal;\n\ncontent-center\talign-content: center;\n\ncontent-start\talign-content: flex-start;\n\ncontent-end\talign-content: flex-end;\n\ncontent-between\talign-content: space-between;\n\ncontent-around\talign-content: space-around;\n\ncontent-evenly\talign-content: space-evenly;\n\ncontent-baseline\talign-content: baseline;\n\ncontent-stretch\talign-content: stretch;\n\n​\nBasic usage\n​\nStart\n\nUse content-start to pack rows in a container against the start of the cross axis:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-start ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nCenter\n\nUse content-center to pack rows in a container in the center of the cross axis:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-center ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nEnd\n\nUse content-end to pack rows in a container against the end of the cross axis:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-end ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nSpace between\n\nUse content-between to distribute rows in a container such that there is an equal amount of space between each line:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-between ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nSpace around\n\nUse content-around to distribute rows in a container such that there is an equal amount of space around each line:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-around ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nSpace evenly\n\nUse content-evenly to distribute rows in a container such that there is an equal amount of space around each item, but also accounting for the doubling of space you would normally see between each item when using content-around:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-evenly ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nStretch\n\nUse content-stretch to allow content items to fill the available space along the container’s cross axis:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-stretch ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nNormal\n\nUse content-normal to pack content items in their default position as if no align-content value was set:\n\n01\n02\n03\n04\n05\n<div class=\"h-56 grid grid-cols-3 gap-4 content-normal ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:content-around to only apply the content-around utility on hover.\n\n<div class=\"grid content-start hover:content-around\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:content-around to apply the content-around utility at only medium screen sizes and above.\n\n<div class=\"grid content-start md:content-around\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nJustify Self\nAlign Items\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStart\nCenter\nEnd\nSpace between\nSpace around\nSpace evenly\nStretch\nNormal\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Align Items - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/align-items",
    "html": "Flexbox & Grid\n\nAlign Items\n\nUtilities for controlling how flex and grid items are positioned along a container's cross axis.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nitems-start\talign-items: flex-start;\n\nitems-end\talign-items: flex-end;\n\nitems-center\talign-items: center;\n\nitems-baseline\talign-items: baseline;\n\nitems-stretch\talign-items: stretch;\n\n​\nBasic usage\n​\nStretch\n\nUse items-stretch to stretch items to fill the container’s cross axis:\n\n01\n02\n03\n<div class=\"flex items-stretch ...\">\n  <div class=\"py-4\">01</div>\n  <div class=\"py-12\">02</div>\n  <div class=\"py-8\">03</div>\n</div>\n​\nStart\n\nUse items-start to align items to the start of the container’s cross axis:\n\n01\n02\n03\n<div class=\"flex items-start ...\">\n  <div class=\"py-4\">01</div>\n  <div class=\"py-12\">02</div>\n  <div class=\"py-8\">03</div>\n</div>\n​\nCenter\n\nUse items-center to align items along the center of the container’s cross axis:\n\n01\n02\n03\n<div class=\"flex items-center ...\">\n  <div class=\"py-4\">01</div>\n  <div class=\"py-12\">02</div>\n  <div class=\"py-8\">03</div>\n</div>\n​\nEnd\n\nUse items-end to align items to the end of the container’s cross axis:\n\n01\n02\n03\n<div class=\"flex items-end ...\">\n  <div class=\"py-4\">01</div>\n  <div class=\"py-12\">02</div>\n  <div class=\"py-8\">03</div>\n</div>\n​\nBaseline\n\nUse items-baseline to align items along the container’s cross axis such that all of their baselines align:\n\n01\n02\n03\n<div class=\"flex items-baseline ...\">\n  <div class=\"pt-2 pb-6\">01</div>\n  <div class=\"pt-8 pb-12\">02</div>\n  <div class=\"pt-12 pb-4\">03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:items-center to only apply the items-center utility on hover.\n\n<div class=\"flex items-stretch hover:items-center\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:items-center to apply the items-center utility at only medium screen sizes and above.\n\n<div class=\"flex items-stretch md:items-center\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nAlign Content\nAlign Self\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStretch\nStart\nCenter\nEnd\nBaseline\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Justify Self - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/justify-self",
    "html": "Flexbox & Grid\n\nJustify Self\n\nUtilities for controlling how an individual grid item is aligned along its inline axis.\n\n​\nQuick reference\nClass\n\t\nProperties\n\njustify-self-auto\tjustify-self: auto;\n\njustify-self-start\tjustify-self: start;\n\njustify-self-end\tjustify-self: end;\n\njustify-self-center\tjustify-self: center;\n\njustify-self-stretch\tjustify-self: stretch;\n\n​\nBasic usage\n​\nAuto\n\nUse justify-self-auto to align an item based on the value of the grid’s justify-items property:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-stretch ...\">\n  <!-- ... -->\n  <div class=\"justify-self-auto ...\">02</div>\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n</div>\n​\nStart\n\nUse justify-self-start to align a grid item to the start of its inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-stretch ...\">\n  <!-- ... -->\n  <div class=\"justify-self-start ...\">02</div>\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n</div>\n​\nCenter\n\nUse justify-self-center to align a grid item along the center of its inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-stretch ...\">\n  <!-- ... -->\n  <div class=\"justify-self-center ...\">02</div>\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n</div>\n​\nEnd\n\nUse justify-self-end to align a grid item to the end of its inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-stretch ...\">\n  <!-- ... -->\n  <div class=\"justify-self-end ...\">02</div>\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n</div>\n​\nStretch\n\nUse justify-self-stretch to stretch a grid item to fill the grid area on its inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-start ...\">\n  <!-- ... -->\n  <div class=\"justify-self-stretch ...\">02</div>\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:justify-self-end to only apply the justify-self-end utility on hover.\n\n<div class=\"justify-self-start hover:justify-self-end\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:justify-self-end to apply the justify-self-end utility at only medium screen sizes and above.\n\n<div class=\"justify-self-start md:justify-self-end\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nJustify Items\nAlign Content\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAuto\nStart\nCenter\nEnd\nStretch\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Justify Content - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/justify-content",
    "html": "Flexbox & Grid\n\nJustify Content\n\nUtilities for controlling how flex and grid items are positioned along a container's main axis.\n\n​\nQuick reference\nClass\n\t\nProperties\n\njustify-normal\tjustify-content: normal;\n\njustify-start\tjustify-content: flex-start;\n\njustify-end\tjustify-content: flex-end;\n\njustify-center\tjustify-content: center;\n\njustify-between\tjustify-content: space-between;\n\njustify-around\tjustify-content: space-around;\n\njustify-evenly\tjustify-content: space-evenly;\n\njustify-stretch\tjustify-content: stretch;\n\n​\nBasic usage\n​\nStart\n\nUse justify-start to justify items against the start of the container’s main axis:\n\n01\n02\n03\n<div class=\"flex justify-start ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nCenter\n\nUse justify-center to justify items along the center of the container’s main axis:\n\n01\n02\n03\n<div class=\"flex justify-center ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nEnd\n\nUse justify-end to justify items against the end of the container’s main axis:\n\n01\n02\n03\n<div class=\"flex justify-end ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nSpace between\n\nUse justify-between to justify items along the container’s main axis such that there is an equal amount of space between each item:\n\n01\n02\n03\n<div class=\"flex justify-between ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nSpace around\n\nUse justify-around to justify items along the container’s main axis such that there is an equal amount of space on each side of each item:\n\n01\n02\n03\n<div class=\"flex justify-around ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nSpace evenly\n\nUse justify-evenly to justify items along the container’s main axis such that there is an equal amount of space around each item, but also accounting for the doubling of space you would normally see between each item when using justify-around:\n\n01\n02\n03\n<div class=\"flex justify-evenly ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nStretch\n\nUse justify-stretch to allow content items to fill the available space along the container’s main axis:\n\n01\n02\n03\n<div class=\"grid grid-flow-col justify-stretch ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nNormal\n\nUse justify-normal to pack content items in their default position as if no justify-content value was set:\n\n01\n02\n03\n<div class=\"flex justify-normal ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:justify-between to only apply the justify-between utility on hover.\n\n<div class=\"flex justify-start hover:justify-between\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:justify-between to apply the justify-between utility at only medium screen sizes and above.\n\n<div class=\"flex justify-start md:justify-between\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nGap\nJustify Items\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStart\nCenter\nEnd\nSpace between\nSpace around\nSpace evenly\nStretch\nNormal\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Gap - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/gap",
    "html": "Flexbox & Grid\n\nGap\n\nUtilities for controlling gutters between grid and flexbox items.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ngap-0\tgap: 0px;\n\ngap-x-0\tcolumn-gap: 0px;\n\ngap-y-0\trow-gap: 0px;\n\ngap-px\tgap: 1px;\n\ngap-x-px\tcolumn-gap: 1px;\n\ngap-y-px\trow-gap: 1px;\n\ngap-0.5\tgap: 0.125rem; /* 2px */\n\ngap-x-0.5\tcolumn-gap: 0.125rem; /* 2px */\n\ngap-y-0.5\trow-gap: 0.125rem; /* 2px */\n\ngap-1\tgap: 0.25rem; /* 4px */\n\ngap-x-1\tcolumn-gap: 0.25rem; /* 4px */\n\ngap-y-1\trow-gap: 0.25rem; /* 4px */\n\ngap-1.5\tgap: 0.375rem; /* 6px */\n\ngap-x-1.5\tcolumn-gap: 0.375rem; /* 6px */\n\ngap-y-1.5\trow-gap: 0.375rem; /* 6px */\n\ngap-2\tgap: 0.5rem; /* 8px */\n\ngap-x-2\tcolumn-gap: 0.5rem; /* 8px */\n\ngap-y-2\trow-gap: 0.5rem; /* 8px */\n\ngap-2.5\tgap: 0.625rem; /* 10px */\n\ngap-x-2.5\tcolumn-gap: 0.625rem; /* 10px */\n\ngap-y-2.5\trow-gap: 0.625rem; /* 10px */\n\ngap-3\tgap: 0.75rem; /* 12px */\n\ngap-x-3\tcolumn-gap: 0.75rem; /* 12px */\n\ngap-y-3\trow-gap: 0.75rem; /* 12px */\n\ngap-3.5\tgap: 0.875rem; /* 14px */\n\ngap-x-3.5\tcolumn-gap: 0.875rem; /* 14px */\n\ngap-y-3.5\trow-gap: 0.875rem; /* 14px */\n\ngap-4\tgap: 1rem; /* 16px */\n\ngap-x-4\tcolumn-gap: 1rem; /* 16px */\n\ngap-y-4\trow-gap: 1rem; /* 16px */\n\ngap-5\tgap: 1.25rem; /* 20px */\n\ngap-x-5\tcolumn-gap: 1.25rem; /* 20px */\n\ngap-y-5\trow-gap: 1.25rem; /* 20px */\n\ngap-6\tgap: 1.5rem; /* 24px */\n\ngap-x-6\tcolumn-gap: 1.5rem; /* 24px */\n\ngap-y-6\trow-gap: 1.5rem; /* 24px */\n\ngap-7\tgap: 1.75rem; /* 28px */\n\ngap-x-7\tcolumn-gap: 1.75rem; /* 28px */\n\ngap-y-7\trow-gap: 1.75rem; /* 28px */\n\ngap-8\tgap: 2rem; /* 32px */\n\ngap-x-8\tcolumn-gap: 2rem; /* 32px */\n\ngap-y-8\trow-gap: 2rem; /* 32px */\n\ngap-9\tgap: 2.25rem; /* 36px */\n\ngap-x-9\tcolumn-gap: 2.25rem; /* 36px */\n\ngap-y-9\trow-gap: 2.25rem; /* 36px */\n\ngap-10\tgap: 2.5rem; /* 40px */\n\ngap-x-10\tcolumn-gap: 2.5rem; /* 40px */\n\ngap-y-10\trow-gap: 2.5rem; /* 40px */\n\ngap-11\tgap: 2.75rem; /* 44px */\n\ngap-x-11\tcolumn-gap: 2.75rem; /* 44px */\n\ngap-y-11\trow-gap: 2.75rem; /* 44px */\n\ngap-12\tgap: 3rem; /* 48px */\n\ngap-x-12\tcolumn-gap: 3rem; /* 48px */\n\ngap-y-12\trow-gap: 3rem; /* 48px */\n\ngap-14\tgap: 3.5rem; /* 56px */\n\ngap-x-14\tcolumn-gap: 3.5rem; /* 56px */\n\ngap-y-14\trow-gap: 3.5rem; /* 56px */\n\ngap-16\tgap: 4rem; /* 64px */\n\ngap-x-16\tcolumn-gap: 4rem; /* 64px */\n\ngap-y-16\trow-gap: 4rem; /* 64px */\n\ngap-20\tgap: 5rem; /* 80px */\n\ngap-x-20\tcolumn-gap: 5rem; /* 80px */\n\ngap-y-20\trow-gap: 5rem; /* 80px */\n\ngap-24\tgap: 6rem; /* 96px */\n\ngap-x-24\tcolumn-gap: 6rem; /* 96px */\n\ngap-y-24\trow-gap: 6rem; /* 96px */\n\ngap-28\tgap: 7rem; /* 112px */\n\ngap-x-28\tcolumn-gap: 7rem; /* 112px */\n\ngap-y-28\trow-gap: 7rem; /* 112px */\n\ngap-32\tgap: 8rem; /* 128px */\n\ngap-x-32\tcolumn-gap: 8rem; /* 128px */\n\ngap-y-32\trow-gap: 8rem; /* 128px */\n\ngap-36\tgap: 9rem; /* 144px */\n\ngap-x-36\tcolumn-gap: 9rem; /* 144px */\n\ngap-y-36\trow-gap: 9rem; /* 144px */\n\ngap-40\tgap: 10rem; /* 160px */\n\ngap-x-40\tcolumn-gap: 10rem; /* 160px */\n\ngap-y-40\trow-gap: 10rem; /* 160px */\n\ngap-44\tgap: 11rem; /* 176px */\n\ngap-x-44\tcolumn-gap: 11rem; /* 176px */\n\ngap-y-44\trow-gap: 11rem; /* 176px */\n\ngap-48\tgap: 12rem; /* 192px */\n\ngap-x-48\tcolumn-gap: 12rem; /* 192px */\n\ngap-y-48\trow-gap: 12rem; /* 192px */\n\ngap-52\tgap: 13rem; /* 208px */\n\ngap-x-52\tcolumn-gap: 13rem; /* 208px */\n\ngap-y-52\trow-gap: 13rem; /* 208px */\n\ngap-56\tgap: 14rem; /* 224px */\n\ngap-x-56\tcolumn-gap: 14rem; /* 224px */\n\ngap-y-56\trow-gap: 14rem; /* 224px */\n\ngap-60\tgap: 15rem; /* 240px */\n\ngap-x-60\tcolumn-gap: 15rem; /* 240px */\n\ngap-y-60\trow-gap: 15rem; /* 240px */\n\ngap-64\tgap: 16rem; /* 256px */\n\ngap-x-64\tcolumn-gap: 16rem; /* 256px */\n\ngap-y-64\trow-gap: 16rem; /* 256px */\n\ngap-72\tgap: 18rem; /* 288px */\n\ngap-x-72\tcolumn-gap: 18rem; /* 288px */\n\ngap-y-72\trow-gap: 18rem; /* 288px */\n\ngap-80\tgap: 20rem; /* 320px */\n\ngap-x-80\tcolumn-gap: 20rem; /* 320px */\n\ngap-y-80\trow-gap: 20rem; /* 320px */\n\ngap-96\tgap: 24rem; /* 384px */\n\ngap-x-96\tcolumn-gap: 24rem; /* 384px */\n\ngap-y-96\trow-gap: 24rem; /* 384px */\n\n​\nBasic usage\n​\nSetting the gap between elements\n\nUse gap-{size} to change the gap between both rows and columns in grid and flexbox layouts.\n\n01\n02\n03\n04\n<div class=\"grid gap-4 grid-cols-2\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n</div>\n​\nChanging row and column gaps independently\n\nUse gap-x-{size} and gap-y-{size} to change the gap between rows and columns independently.\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid gap-x-8 gap-y-4 grid-cols-3\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:gap-6 to only apply the gap-6 utility on hover.\n\n<div class=\"grid gap-4 hover:gap-6\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:gap-6 to apply the gap-6 utility at only medium screen sizes and above.\n\n<div class=\"grid gap-4 md:gap-6\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind’s gap scale uses the default spacing scale. You can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '11': '2.75rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the gap scale by editing theme.gap or theme.extend.gap in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gap: {\n\n        '11': '2.75rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off gap value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grid gap-[2.75rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrid Auto Rows\nJustify Content\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the gap between elements\nChanging row and column gaps independently\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Justify Items - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/justify-items",
    "html": "Flexbox & Grid\n\nJustify Items\n\nUtilities for controlling how grid items are aligned along their inline axis.\n\n​\nQuick reference\nClass\n\t\nProperties\n\njustify-items-start\tjustify-items: start;\n\njustify-items-end\tjustify-items: end;\n\njustify-items-center\tjustify-items: center;\n\njustify-items-stretch\tjustify-items: stretch;\n\n​\nBasic usage\n​\nStart\n\nUse justify-items-start to justify grid items against the start of their inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-start ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nEnd\n\nUse justify-items-end to justify grid items against the end of their inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-end ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nCenter\n\nUse justify-items-center to justify grid items along their inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-center ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nStretch\n\nUse justify-items-stretch to stretch items along their inline axis:\n\n01\n02\n03\n04\n05\n06\n<div class=\"grid justify-items-stretch ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n  <div>06</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:justify-items-center to only apply the justify-items-center utility on hover.\n\n<div class=\"grid justify-items-start hover:justify-items-center\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:justify-items-center to apply the justify-items-center utility at only medium screen sizes and above.\n\n<div class=\"grid justify-items-start md:justify-items-center\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nJustify Content\nJustify Self\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStart\nEnd\nCenter\nStretch\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Auto Rows - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-auto-rows",
    "html": "Flexbox & Grid\n\nGrid Auto Rows\n\nUtilities for controlling the size of implicitly-created grid rows.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nauto-rows-auto\tgrid-auto-rows: auto;\n\nauto-rows-min\tgrid-auto-rows: min-content;\n\nauto-rows-max\tgrid-auto-rows: max-content;\n\nauto-rows-fr\tgrid-auto-rows: minmax(0, 1fr);\n\n​\nBasic usage\n​\nSizing implicitly-created grid rows\n\nUse the auto-rows-{size} utilities to control the size of implicitly-created grid rows.\n\n<div class=\"grid grid-flow-row auto-rows-max\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:auto-rows-min to only apply the auto-rows-min utility on hover.\n\n<div class=\"grid grid-flow-row auto-rows-max hover:auto-rows-min\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:auto-rows-min to apply the auto-rows-min utility at only medium screen sizes and above.\n\n<div class=\"grid grid-flow-row auto-rows-max md:auto-rows-min\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes four general purpose grid-auto-rows utilities. You can customize these values by editing theme.gridAutoRows or theme.extend.gridAutoRows in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridAutoRows: {\n\n        '2fr': 'minmax(0, 2fr)',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grid-auto-rows value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grid grid-flow-row auto-rows-[minmax(0,_2fr)]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrid Auto Columns\nGap\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSizing implicitly-created grid rows\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Auto Columns - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-auto-columns",
    "html": "Flexbox & Grid\n\nGrid Auto Columns\n\nUtilities for controlling the size of implicitly-created grid columns.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nauto-cols-auto\tgrid-auto-columns: auto;\n\nauto-cols-min\tgrid-auto-columns: min-content;\n\nauto-cols-max\tgrid-auto-columns: max-content;\n\nauto-cols-fr\tgrid-auto-columns: minmax(0, 1fr);\n\n​\nBasic usage\n​\nSizing implicitly-created grid columns\n\nUse the auto-cols-{size} utilities to control the size of implicitly-created grid columns.\n\n<div class=\"grid grid-flow-col auto-cols-max\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:auto-cols-min to only apply the auto-cols-min utility on hover.\n\n<div class=\"grid grid-flow-col auto-cols-max hover:auto-cols-min\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:auto-cols-min to apply the auto-cols-min utility at only medium screen sizes and above.\n\n<div class=\"grid grid-flow-col auto-cols-max md:auto-cols-min\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes four general purpose grid-auto-columns utilities. You can customize these values by editing theme.gridAutoColumns or theme.extend.gridAutoColumns in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridAutoColumns: {\n\n        '2fr': 'minmax(0, 2fr)',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grid-auto-columns value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grid grid-flow-col auto-cols-[minmax(0,_2fr)]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrid Auto Flow\nGrid Auto Rows\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSizing implicitly-created grid columns\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Auto Flow - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-auto-flow",
    "html": "Flexbox & Grid\n\nGrid Auto Flow\n\nUtilities for controlling how elements in a grid are auto-placed.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ngrid-flow-row\tgrid-auto-flow: row;\n\ngrid-flow-col\tgrid-auto-flow: column;\n\ngrid-flow-dense\tgrid-auto-flow: dense;\n\ngrid-flow-row-dense\tgrid-auto-flow: row dense;\n\ngrid-flow-col-dense\tgrid-auto-flow: column dense;\n\n​\nBasic usage\n​\nControlling grid element placement\n\nUse the grid-flow-{keyword} utilities to control how the auto-placement algorithm works for a grid layout.\n\n01\n02\n03\n04\n05\n<div class=\"grid grid-flow-row-dense grid-cols-3 grid-rows-3 ...\">\n  <div class=\"col-span-2\">01</div>\n  <div class=\"col-span-2\">02</div>\n  <div>03</div>\n  <div>04</div>\n  <div>05</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:grid-flow-row to only apply the grid-flow-row utility on hover.\n\n<div class=\"grid grid-flow-col hover:grid-flow-row\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:grid-flow-row to apply the grid-flow-row utility at only medium screen sizes and above.\n\n<div class=\"grid grid-flow-col md:grid-flow-row\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nGrid Row Start / End\nGrid Auto Columns\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nControlling grid element placement\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Row Start / End - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-row",
    "html": "Flexbox & Grid\n\nGrid Row Start / End\n\nUtilities for controlling how elements are sized and placed across grid rows.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nrow-auto\tgrid-row: auto;\n\nrow-span-1\tgrid-row: span 1 / span 1;\n\nrow-span-2\tgrid-row: span 2 / span 2;\n\nrow-span-3\tgrid-row: span 3 / span 3;\n\nrow-span-4\tgrid-row: span 4 / span 4;\n\nrow-span-5\tgrid-row: span 5 / span 5;\n\nrow-span-6\tgrid-row: span 6 / span 6;\n\nrow-span-full\tgrid-row: 1 / -1;\n\nrow-start-1\tgrid-row-start: 1;\n\nrow-start-2\tgrid-row-start: 2;\n\nrow-start-3\tgrid-row-start: 3;\n\nrow-start-4\tgrid-row-start: 4;\n\nrow-start-5\tgrid-row-start: 5;\n\nrow-start-6\tgrid-row-start: 6;\n\nrow-start-7\tgrid-row-start: 7;\n\nrow-start-auto\tgrid-row-start: auto;\n\nrow-end-1\tgrid-row-end: 1;\n\nrow-end-2\tgrid-row-end: 2;\n\nrow-end-3\tgrid-row-end: 3;\n\nrow-end-4\tgrid-row-end: 4;\n\nrow-end-5\tgrid-row-end: 5;\n\nrow-end-6\tgrid-row-end: 6;\n\nrow-end-7\tgrid-row-end: 7;\n\nrow-end-auto\tgrid-row-end: auto;\n\n​\nBasic usage\n​\nSpanning rows\n\nUse the row-span-{n} utilities to make an element span n rows.\n\n01\n02\n03\n<div class=\"grid grid-rows-3 grid-flow-col gap-4\">\n  <div class=\"row-span-3 ...\">01</div>\n  <div class=\"col-span-2 ...\">02</div>\n  <div class=\"row-span-2 col-span-2 ...\">03</div>\n</div>\n​\nStarting and ending lines\n\nUse the row-start-{n} and row-end-{n} utilities to make an element start or end at the nth grid line. These can also be combined with the row-span-{n} utilities to span a specific number of rows.\n\nNote that CSS grid lines start at 1, not 0, so a full-height element in a 3-row grid would start at line 1 and end at line 4.\n\n01\n02\n03\n<div class=\"grid grid-rows-3 grid-flow-col gap-4\">\n  <div class=\"row-start-2 row-span-2 ...\">01</div>\n  <div class=\"row-end-3 row-span-2 ...\">02</div>\n  <div class=\"row-start-1 row-end-4 ...\">03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:row-span-4 to only apply the row-span-4 utility on hover.\n\n<div class=\"row-span-3 hover:row-span-4\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:row-span-4 to apply the row-span-4 utility at only medium screen sizes and above.\n\n<div class=\"row-span-3 md:row-span-4\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes grid-row utilities for working with grids with up to 6 explicit rows. You can customize these values by editing theme.gridRow, theme.extend.gridRow, theme.gridRowStart, theme.extend.gridRowStart, theme.gridRowEnd, and theme.extend.gridRowEnd in your tailwind.config.js file.\n\nFor creating more row-{value} utilities that control the grid-row shorthand property directly, customize the gridRow section of your Tailwind theme config:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridRow: {\n\n        'span-16': 'span 16 / span 16',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nWe use this internally for our row-span-{n} utilities. Note that since this configures the grid-row shorthand property directly, we include the word span directly in the value name, it’s not baked into the class name automatically. That means you are free to add entries that do whatever you want here — they don’t just have to be span utilities.\n\nTo add new row-start-{n} utilities, use the gridRowStart section of your Tailwind theme config:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridRowStart: {\n\n        '8': '8',\n\n        '9': '9',\n\n        '10': '10',\n\n        '11': '11',\n\n        '12': '12',\n\n        '13': '13',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nTo add new row-end-{n} utilities, use the gridRowEnd section of your Tailwind theme config:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridRowEnd: {\n\n        '8': '8',\n\n        '9': '9',\n\n        '10': '10',\n\n        '11': '11',\n\n        '12': '12',\n\n        '13': '13',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grid-row/grid-row-start/grid-row-end value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"row-[span_16_/_span_16]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrid Template Rows\nGrid Auto Flow\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSpanning rows\nStarting and ending lines\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Template Rows - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-template-rows",
    "html": "Flexbox & Grid\n\nGrid Template Rows\n\nUtilities for specifying the rows in a grid layout.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ngrid-rows-1\tgrid-template-rows: repeat(1, minmax(0, 1fr));\n\ngrid-rows-2\tgrid-template-rows: repeat(2, minmax(0, 1fr));\n\ngrid-rows-3\tgrid-template-rows: repeat(3, minmax(0, 1fr));\n\ngrid-rows-4\tgrid-template-rows: repeat(4, minmax(0, 1fr));\n\ngrid-rows-5\tgrid-template-rows: repeat(5, minmax(0, 1fr));\n\ngrid-rows-6\tgrid-template-rows: repeat(6, minmax(0, 1fr));\n\ngrid-rows-none\tgrid-template-rows: none;\n\n​\nBasic usage\n​\nSpecifying the rows in a grid\n\nUse the grid-rows-{n} utilities to create grids with n equally sized rows.\n\n01\n02\n03\n04\n05\n06\n07\n08\n09\n<div class=\"grid grid-rows-4 grid-flow-col gap-4\">\n  <div>01</div>\n  <!-- ... -->\n  <div>09</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:grid-rows-6 to only apply the grid-rows-6 utility on hover.\n\n<div class=\"grid grid-rows-2 hover:grid-rows-6\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:grid-rows-6 to apply the grid-rows-6 utility at only medium screen sizes and above.\n\n<div class=\"grid grid-rows-2 md:grid-rows-6\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes grid-template-row utilities for creating basic grids with up to 6 equal width rows. You can customize these values by editing theme.gridTemplateRows or theme.extend.gridTemplateRows in your tailwind.config.js file.\n\nYou have direct access to the grid-template-rows CSS property here so you can make your custom rows values as generic or as complicated and site-specific as you like.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridTemplateRows: {\n\n        // Simple 8 row grid\n\n        '8': 'repeat(8, minmax(0, 1fr))',\n\n\n\n        // Complex site-specific row configuration\n\n        'layout': '200px minmax(900px, 1fr) 100px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grid-template-rows value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grid grid-rows-[200px_minmax(900px,_1fr)_100px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrid Column Start / End\nGrid Row Start / End\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSpecifying the rows in a grid\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Column Start / End - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-column",
    "html": "Flexbox & Grid\n\nGrid Column Start / End\n\nUtilities for controlling how elements are sized and placed across grid columns.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncol-auto\tgrid-column: auto;\n\ncol-span-1\tgrid-column: span 1 / span 1;\n\ncol-span-2\tgrid-column: span 2 / span 2;\n\ncol-span-3\tgrid-column: span 3 / span 3;\n\ncol-span-4\tgrid-column: span 4 / span 4;\n\ncol-span-5\tgrid-column: span 5 / span 5;\n\ncol-span-6\tgrid-column: span 6 / span 6;\n\ncol-span-7\tgrid-column: span 7 / span 7;\n\ncol-span-8\tgrid-column: span 8 / span 8;\n\ncol-span-9\tgrid-column: span 9 / span 9;\n\ncol-span-10\tgrid-column: span 10 / span 10;\n\ncol-span-11\tgrid-column: span 11 / span 11;\n\ncol-span-12\tgrid-column: span 12 / span 12;\n\ncol-span-full\tgrid-column: 1 / -1;\n\ncol-start-1\tgrid-column-start: 1;\n\ncol-start-2\tgrid-column-start: 2;\n\ncol-start-3\tgrid-column-start: 3;\n\ncol-start-4\tgrid-column-start: 4;\n\ncol-start-5\tgrid-column-start: 5;\n\ncol-start-6\tgrid-column-start: 6;\n\ncol-start-7\tgrid-column-start: 7;\n\ncol-start-8\tgrid-column-start: 8;\n\ncol-start-9\tgrid-column-start: 9;\n\ncol-start-10\tgrid-column-start: 10;\n\ncol-start-11\tgrid-column-start: 11;\n\ncol-start-12\tgrid-column-start: 12;\n\ncol-start-13\tgrid-column-start: 13;\n\ncol-start-auto\tgrid-column-start: auto;\n\ncol-end-1\tgrid-column-end: 1;\n\ncol-end-2\tgrid-column-end: 2;\n\ncol-end-3\tgrid-column-end: 3;\n\ncol-end-4\tgrid-column-end: 4;\n\ncol-end-5\tgrid-column-end: 5;\n\ncol-end-6\tgrid-column-end: 6;\n\ncol-end-7\tgrid-column-end: 7;\n\ncol-end-8\tgrid-column-end: 8;\n\ncol-end-9\tgrid-column-end: 9;\n\ncol-end-10\tgrid-column-end: 10;\n\ncol-end-11\tgrid-column-end: 11;\n\ncol-end-12\tgrid-column-end: 12;\n\ncol-end-13\tgrid-column-end: 13;\n\ncol-end-auto\tgrid-column-end: auto;\n\n​\nBasic usage\n​\nSpanning columns\n\nUse the col-span-{n} utilities to make an element span n columns.\n\n01\n02\n03\n04\n05\n06\n07\n<div class=\"grid grid-cols-3 gap-4\">\n  <div class=\"...\">01</div>\n  <div class=\"...\">02</div>\n  <div class=\"...\">03</div>\n  <div class=\"col-span-2 ...\">04</div>\n  <div class=\"...\">05</div>\n  <div class=\"...\">06</div>\n  <div class=\"col-span-2 ...\">07</div>\n</div>\n​\nStarting and ending lines\n\nUse the col-start-{n} and col-end-{n} utilities to make an element start or end at the nth grid line. These can also be combined with the col-span-{n} utilities to span a specific number of columns.\n\nNote that CSS grid lines start at 1, not 0, so a full-width element in a 6-column grid would start at line 1 and end at line 7.\n\n01\n02\n03\n04\n<div class=\"grid grid-cols-6 gap-4\">\n  <div class=\"col-start-2 col-span-4 ...\">01</div>\n  <div class=\"col-start-1 col-end-3 ...\">02</div>\n  <div class=\"col-end-7 col-span-2 ...\">03</div>\n  <div class=\"col-start-1 col-end-7 ...\">04</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:col-span-6 to only apply the col-span-6 utility on hover.\n\n<div class=\"col-span-2 hover:col-span-6\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:col-span-6 to apply the col-span-6 utility at only medium screen sizes and above.\n\n<div class=\"col-span-2 md:col-span-6\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes grid-column utilities for working with grids with up to 12 columns. You change, add, or remove these by customizing the gridColumn, gridColumnStart, and gridColumnEnd sections of your Tailwind theme config.\n\nFor creating more col-{value} utilities that control the grid-column shorthand property directly, customize the gridColumn section of your Tailwind theme config:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridColumn: {\n\n        'span-16': 'span 16 / span 16',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nWe use this internally for our col-span-{n} utilities. Note that since this configures the grid-column shorthand property directly, we include the word span directly in the value name, it’s not baked into the class name automatically. That means you are free to add entries that do whatever you want here — they don’t just have to be span utilities.\n\nTo add new col-start-{n} utilities, use the gridColumnStart section of your Tailwind theme config:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridColumnStart: {\n\n        '13': '13',\n\n        '14': '14',\n\n        '15': '15',\n\n        '16': '16',\n\n        '17': '17',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nTo add new col-end-{n} utilities, use the gridColumnEnd section of your Tailwind theme config:\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridColumnEnd: {\n\n        '13': '13',\n\n        '14': '14',\n\n        '15': '15',\n\n        '16': '16',\n\n        '17': '17',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grid-column/grid-column-start/grid-column-end value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"col-[16_/_span_16]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nGrid Template Columns\nGrid Template Rows\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSpanning columns\nStarting and ending lines\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Grid Template Columns - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/grid-template-columns",
    "html": "Flexbox & Grid\n\nGrid Template Columns\n\nUtilities for specifying the columns in a grid layout.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ngrid-cols-1\tgrid-template-columns: repeat(1, minmax(0, 1fr));\n\ngrid-cols-2\tgrid-template-columns: repeat(2, minmax(0, 1fr));\n\ngrid-cols-3\tgrid-template-columns: repeat(3, minmax(0, 1fr));\n\ngrid-cols-4\tgrid-template-columns: repeat(4, minmax(0, 1fr));\n\ngrid-cols-5\tgrid-template-columns: repeat(5, minmax(0, 1fr));\n\ngrid-cols-6\tgrid-template-columns: repeat(6, minmax(0, 1fr));\n\ngrid-cols-7\tgrid-template-columns: repeat(7, minmax(0, 1fr));\n\ngrid-cols-8\tgrid-template-columns: repeat(8, minmax(0, 1fr));\n\ngrid-cols-9\tgrid-template-columns: repeat(9, minmax(0, 1fr));\n\ngrid-cols-10\tgrid-template-columns: repeat(10, minmax(0, 1fr));\n\ngrid-cols-11\tgrid-template-columns: repeat(11, minmax(0, 1fr));\n\ngrid-cols-12\tgrid-template-columns: repeat(12, minmax(0, 1fr));\n\ngrid-cols-none\tgrid-template-columns: none;\n\n​\nBasic usage\n​\nSpecifying the columns in a grid\n\nUse the grid-cols-{n} utilities to create grids with n equally sized columns.\n\n01\n02\n03\n04\n05\n06\n07\n08\n09\n<div class=\"grid grid-cols-4 gap-4\">\n  <div>01</div>\n  <!-- ... -->\n  <div>09</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:grid-cols-6 to only apply the grid-cols-6 utility on hover.\n\n<div class=\"grid grid-cols-1 hover:grid-cols-6\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:grid-cols-6 to apply the grid-cols-6 utility at only medium screen sizes and above.\n\n<div class=\"grid grid-cols-1 md:grid-cols-6\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind includes grid-template-column utilities for creating basic grids with up to 12 equal width columns. You can customize these values by editing theme.gridTemplateColumns or theme.extend.gridTemplateColumns in your tailwind.config.js file.\n\nYou have direct access to the grid-template-columns CSS property here so you can make your custom column values as generic or as complicated and site-specific as you like.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      gridTemplateColumns: {\n\n        // Simple 16 column grid\n\n        '16': 'repeat(16, minmax(0, 1fr))',\n\n\n\n        // Complex site-specific column configuration\n\n        'footer': '200px minmax(900px, 1fr) 100px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off grid-template-columns value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grid grid-cols-[200px_minmax(900px,_1fr)_100px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nOrder\nGrid Column Start / End\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSpecifying the columns in a grid\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Order - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/order",
    "html": "Flexbox & Grid\n\nOrder\n\nUtilities for controlling the order of flex and grid items.\n\n​\nQuick reference\nClass\n\t\nProperties\n\norder-1\torder: 1;\n\norder-2\torder: 2;\n\norder-3\torder: 3;\n\norder-4\torder: 4;\n\norder-5\torder: 5;\n\norder-6\torder: 6;\n\norder-7\torder: 7;\n\norder-8\torder: 8;\n\norder-9\torder: 9;\n\norder-10\torder: 10;\n\norder-11\torder: 11;\n\norder-12\torder: 12;\n\norder-first\torder: -9999;\n\norder-last\torder: 9999;\n\norder-none\torder: 0;\n\n​\nBasic usage\n​\nOrdering flex and grid items\n\nUse order-{order} to render flex and grid items in a different order than they appear in the DOM.\n\n01\n02\n03\n<div class=\"flex justify-between ...\">\n  <div class=\"order-last\">01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nUsing negative values\n\nTo use a negative order value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"-order-1\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:order-last to only apply the order-last utility on hover.\n\n<div class=\"order-first hover:order-last\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:order-last to apply the order-last utility at only medium screen sizes and above.\n\n<div class=\"order-first md:order-last\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides utilities for order-first, order-last, order-none, and an order-{number} utility for the numbers 1 through 12. You can customize these values by editing theme.order or theme.extend.order in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      order: {\n\n        '13': '13'\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off order value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"order-[13]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFlex Shrink\nGrid Template Columns\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nOrdering flex and grid items\nUsing negative values\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Flex Shrink - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/flex-shrink",
    "html": "Flexbox & Grid\n\nFlex Shrink\n\nUtilities for controlling how flex items shrink.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nshrink\tflex-shrink: 1;\n\nshrink-0\tflex-shrink: 0;\n\n​\nBasic usage\n​\nShrink\n\nUse shrink to allow a flex item to shrink if needed:\n\n01\n02\n03\n<div class=\"flex ...\">\n  <div class=\"flex-none w-14 h-14 ...\">\n    01\n  </div>\n  <div class=\"shrink w-64 h-14 ...\">\n    02\n  </div>\n  <div class=\"flex-none w-14 h-14 ...\">\n    03\n  </div>\n</div>\n​\nDon’t shrink\n\nUse shrink-0 to prevent a flex item from shrinking:\n\n01\n02\n03\n<div class=\"flex ...\">\n  <div class=\"flex-1 h-16 ...\">\n    01\n  </div>\n  <div class=\"shrink-0 h-16 w-32 ...\">\n    02\n  </div>\n  <div class=\"flex-1 h-16 ...\">\n    03\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:shrink-0 to only apply the shrink-0 utility on hover.\n\n<div class=\"shrink hover:shrink-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:shrink-0 to apply the shrink-0 utility at only medium screen sizes and above.\n\n<div class=\"shrink md:shrink-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides two shrink utilities. You can customize these values by editing theme.flexShrink or theme.extend.flexShrink in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      flexShrink: {\n\n        2: '2'\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off flex-shrink value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"shrink-[2]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFlex Grow\nOrder\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nShrink\nDon't shrink\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Flex - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/flex",
    "html": "Flexbox & Grid\n\nFlex\n\nUtilities for controlling how flex items both grow and shrink.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nflex-1\tflex: 1 1 0%;\n\nflex-auto\tflex: 1 1 auto;\n\nflex-initial\tflex: 0 1 auto;\n\nflex-none\tflex: none;\n\n​\nBasic usage\n​\nInitial\n\nUse flex-initial to allow a flex item to shrink but not grow, taking into account its initial size:\n\n01\n02\n03\n<div class=\"flex\">\n  <div class=\"flex-none w-14 h-14\">\n    01\n  </div>\n  <div class=\"flex-initial w-64 ...\">\n    02\n  </div>\n  <div class=\"flex-initial w-32 ...\">\n    03\n  </div>\n</div>\n​\nFlex 1\n\nUse flex-1 to allow a flex item to grow and shrink as needed, ignoring its initial size:\n\n01\n02\n03\n<div class=\"flex\">\n  <div class=\"flex-none ...\">\n    01\n  </div>\n  <div class=\"flex-1 w-64 ...\">\n    02\n  </div>\n  <div class=\"flex-1 w-32 ...\">\n    03\n  </div>\n</div>\n​\nAuto\n\nUse flex-auto to allow a flex item to grow and shrink, taking into account its initial size:\n\n01\n02\n03\n<div class=\"flex ...\">\n  <div class=\"flex-none ...\">\n    01\n  </div>\n  <div class=\"flex-auto w-64 ...\">\n    02\n  </div>\n  <div class=\"flex-auto w-32 ...\">\n    03\n  </div>\n</div>\n​\nNone\n\nUse flex-none to prevent a flex item from growing or shrinking:\n\n01\n02\n03\n<div class=\"flex ...\">\n  <div class=\"flex-none w-14 h-14 ...\">\n    01\n  </div>\n  <div class=\"flex-none ...\">\n    02\n  </div>\n  <div class=\"flex-1 ...\">\n    03\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:flex-1 to only apply the flex-1 utility on hover.\n\n<div class=\"flex-none hover:flex-1\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:flex-1 to apply the flex-1 utility at only medium screen sizes and above.\n\n<div class=\"flex-none md:flex-1\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides four flex utilities. You can customize these values by editing theme.flex or theme.extend.flex in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      flex: {\n\n        '2': '2 2 0%'\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off flex value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"flex-[2_2_0%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFlex Wrap\nFlex Grow\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nInitial\nFlex 1\nAuto\nNone\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Flex Grow - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/flex-grow",
    "html": "Flexbox & Grid\n\nFlex Grow\n\nUtilities for controlling how flex items grow.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ngrow\tflex-grow: 1;\n\ngrow-0\tflex-grow: 0;\n\n​\nBasic usage\n​\nGrow\n\nUse grow to allow a flex item to grow to fill any available space:\n\n01\n02\n03\n<div class=\"flex ...\">\n  <div class=\"flex-none w-14 h-14 ...\">\n    01\n  </div>\n  <div class=\"grow h-14 ...\">\n    02\n  </div>\n  <div class=\"flex-none w-14 h-14 ...\">\n    03\n  </div>\n</div>\n​\nDon’t grow\n\nUse grow-0 to prevent a flex item from growing:\n\n01\n02\n03\n<div class=\"flex ...\">\n  <div class=\"grow h-14 ...\">\n    01\n  </div>\n  <div class=\"grow-0 h-14 ...\">\n    02\n  </div>\n  <div class=\"grow h-14 ...\">\n    03\n  </div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:grow-0 to only apply the grow-0 utility on hover.\n\n<div class=\"grow hover:grow-0\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:grow-0 to apply the grow-0 utility at only medium screen sizes and above.\n\n<div class=\"grow md:grow-0\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides two grow utilities. You can customize these values by editing theme.flexGrow or theme.extend.flexGrow in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      flexGrow: {\n\n        2: '2'\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off flex-grow value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"grow-[2]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nFlex\nFlex Shrink\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nGrow\nDon't grow\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Flex Wrap - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/flex-wrap",
    "html": "Flexbox & Grid\n\nFlex Wrap\n\nUtilities for controlling how flex items wrap.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nflex-wrap\tflex-wrap: wrap;\n\nflex-wrap-reverse\tflex-wrap: wrap-reverse;\n\nflex-nowrap\tflex-wrap: nowrap;\n\n​\nBasic usage\n​\nDon’t wrap\n\nUse flex-nowrap to prevent flex items from wrapping, causing inflexible items to overflow the container if necessary:\n\n01\n02\n03\n<div class=\"flex flex-nowrap\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nWrap normally\n\nUse flex-wrap to allow flex items to wrap:\n\n01\n02\n03\n<div class=\"flex flex-wrap\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nWrap reversed\n\nUse flex-wrap-reverse to wrap flex items in the reverse direction:\n\n01\n02\n03\n<div class=\"flex flex-wrap-reverse\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:flex-wrap-reverse to only apply the flex-wrap-reverse utility on hover.\n\n<div class=\"flex flex-wrap hover:flex-wrap-reverse\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:flex-wrap-reverse to apply the flex-wrap-reverse utility at only medium screen sizes and above.\n\n<div class=\"flex flex-wrap md:flex-wrap-reverse\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nFlex Direction\nFlex\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nDon't wrap\nWrap normally\nWrap reversed\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Flex Basis - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/flex-basis",
    "html": "Flexbox & Grid\n\nFlex Basis\n\nUtilities for controlling the initial size of flex items.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbasis-0\tflex-basis: 0px;\n\nbasis-1\tflex-basis: 0.25rem; /* 4px */\n\nbasis-2\tflex-basis: 0.5rem; /* 8px */\n\nbasis-3\tflex-basis: 0.75rem; /* 12px */\n\nbasis-4\tflex-basis: 1rem; /* 16px */\n\nbasis-5\tflex-basis: 1.25rem; /* 20px */\n\nbasis-6\tflex-basis: 1.5rem; /* 24px */\n\nbasis-7\tflex-basis: 1.75rem; /* 28px */\n\nbasis-8\tflex-basis: 2rem; /* 32px */\n\nbasis-9\tflex-basis: 2.25rem; /* 36px */\n\nbasis-10\tflex-basis: 2.5rem; /* 40px */\n\nbasis-11\tflex-basis: 2.75rem; /* 44px */\n\nbasis-12\tflex-basis: 3rem; /* 48px */\n\nbasis-14\tflex-basis: 3.5rem; /* 56px */\n\nbasis-16\tflex-basis: 4rem; /* 64px */\n\nbasis-20\tflex-basis: 5rem; /* 80px */\n\nbasis-24\tflex-basis: 6rem; /* 96px */\n\nbasis-28\tflex-basis: 7rem; /* 112px */\n\nbasis-32\tflex-basis: 8rem; /* 128px */\n\nbasis-36\tflex-basis: 9rem; /* 144px */\n\nbasis-40\tflex-basis: 10rem; /* 160px */\n\nbasis-44\tflex-basis: 11rem; /* 176px */\n\nbasis-48\tflex-basis: 12rem; /* 192px */\n\nbasis-52\tflex-basis: 13rem; /* 208px */\n\nbasis-56\tflex-basis: 14rem; /* 224px */\n\nbasis-60\tflex-basis: 15rem; /* 240px */\n\nbasis-64\tflex-basis: 16rem; /* 256px */\n\nbasis-72\tflex-basis: 18rem; /* 288px */\n\nbasis-80\tflex-basis: 20rem; /* 320px */\n\nbasis-96\tflex-basis: 24rem; /* 384px */\n\nbasis-auto\tflex-basis: auto;\n\nbasis-px\tflex-basis: 1px;\n\nbasis-0.5\tflex-basis: 0.125rem; /* 2px */\n\nbasis-1.5\tflex-basis: 0.375rem; /* 6px */\n\nbasis-2.5\tflex-basis: 0.625rem; /* 10px */\n\nbasis-3.5\tflex-basis: 0.875rem; /* 14px */\n\nbasis-1/2\tflex-basis: 50%;\n\nbasis-1/3\tflex-basis: 33.333333%;\n\nbasis-2/3\tflex-basis: 66.666667%;\n\nbasis-1/4\tflex-basis: 25%;\n\nbasis-2/4\tflex-basis: 50%;\n\nbasis-3/4\tflex-basis: 75%;\n\nbasis-1/5\tflex-basis: 20%;\n\nbasis-2/5\tflex-basis: 40%;\n\nbasis-3/5\tflex-basis: 60%;\n\nbasis-4/5\tflex-basis: 80%;\n\nbasis-1/6\tflex-basis: 16.666667%;\n\nbasis-2/6\tflex-basis: 33.333333%;\n\nbasis-3/6\tflex-basis: 50%;\n\nbasis-4/6\tflex-basis: 66.666667%;\n\nbasis-5/6\tflex-basis: 83.333333%;\n\nbasis-1/12\tflex-basis: 8.333333%;\n\nbasis-2/12\tflex-basis: 16.666667%;\n\nbasis-3/12\tflex-basis: 25%;\n\nbasis-4/12\tflex-basis: 33.333333%;\n\nbasis-5/12\tflex-basis: 41.666667%;\n\nbasis-6/12\tflex-basis: 50%;\n\nbasis-7/12\tflex-basis: 58.333333%;\n\nbasis-8/12\tflex-basis: 66.666667%;\n\nbasis-9/12\tflex-basis: 75%;\n\nbasis-10/12\tflex-basis: 83.333333%;\n\nbasis-11/12\tflex-basis: 91.666667%;\n\nbasis-full\tflex-basis: 100%;\n\n​\nBasic usage\n​\nSetting the flex basis\n\nUse the basis-{size} utilities to set the initial size of flex items.\n\n01\n02\n03\n<div class=\"flex flex-row\">\n  <div class=\"basis-1/4\">01</div>\n  <div class=\"basis-1/4\">02</div>\n  <div class=\"basis-1/2\">03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:basis-1/2 to only apply the basis-1/2 utility on hover.\n\n<div class=\"basis-1/3 hover:basis-1/2\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:basis-1/3 to apply the basis-1/3 utility at only medium screen sizes and above.\n\n<div class=\"flex flex-row\">\n  <div class=\"basis-1/4 md:basis-1/3\">01</div>\n  <div class=\"basis-1/4 md:basis-1/3\">02</div>\n  <div class=\"basis-1/2 md:basis-1/3\">03</div>\n</div>\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nThe default flex basis scale is a combination of the default spacing scale as well as a set of percentage based values.\n\nYou can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '112': '28rem',\n\n        '128': '32rem',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the flex basis scale by editing theme.flexBasis or theme.extend.flexBasis in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      flexBasis: {\n\n        '1/7': '14.2857143%',\n\n        '2/7': '28.5714286%',\n\n        '3/7': '42.8571429%',\n\n        '4/7': '57.1428571%',\n\n        '5/7': '71.4285714%',\n\n        '6/7': '85.7142857%',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off flex-basis value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"basis-[14.2857143%]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nZ-Index\nFlex Direction\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the flex basis\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Flex Direction - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/flex-direction",
    "html": "Flexbox & Grid\n\nFlex Direction\n\nUtilities for controlling the direction of flex items.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nflex-row\tflex-direction: row;\n\nflex-row-reverse\tflex-direction: row-reverse;\n\nflex-col\tflex-direction: column;\n\nflex-col-reverse\tflex-direction: column-reverse;\n\n​\nBasic usage\n​\nRow\n\nUse flex-row to position flex items horizontally in the same direction as text:\n\n01\n02\n03\n<div class=\"flex flex-row ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nRow reversed\n\nUse flex-row-reverse to position flex items horizontally in the opposite direction:\n\n01\n02\n03\n<div class=\"flex flex-row-reverse ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nColumn\n\nUse flex-col to position flex items vertically:\n\n01\n02\n03\n<div class=\"flex flex-col ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nColumn reversed\n\nUse flex-col-reverse to position flex items vertically in the opposite direction:\n\n01\n02\n03\n<div class=\"flex flex-col-reverse ...\">\n  <div>01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:flex-row to only apply the flex-row utility on hover.\n\n<div class=\"flex flex-col hover:flex-row\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:flex-row to apply the flex-row utility at only medium screen sizes and above.\n\n<div class=\"flex flex-col md:flex-row\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nFlex Basis\nFlex Wrap\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nRow\nRow reversed\nColumn\nColumn reversed\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Z-Index - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/z-index",
    "html": "Layout\n\nZ-Index\n\nUtilities for controlling the stack order of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nz-0\tz-index: 0;\n\nz-10\tz-index: 10;\n\nz-20\tz-index: 20;\n\nz-30\tz-index: 30;\n\nz-40\tz-index: 40;\n\nz-50\tz-index: 50;\n\nz-auto\tz-index: auto;\n\n​\nBasic usage\n​\nSetting the z-index\n\nControl the stack order (or three-dimensional positioning) of an element in Tailwind, regardless of order it has been displayed, using the z-{index} utilities.\n\n05\n04\n03\n02\n01\n<div class=\"z-40 ...\">05</div>\n<div class=\"z-30 ...\">04</div>\n<div class=\"z-20 ...\">03</div>\n<div class=\"z-10 ...\">02</div>\n<div class=\"z-0 ...\">01</div>\n​\nUsing negative values\n\nTo use a negative z-index value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"-z-50\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:z-50 to only apply the z-50 utility on hover.\n\n<div class=\"z-0 hover:z-50\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:z-50 to apply the z-50 utility at only medium screen sizes and above.\n\n<div class=\"z-0 md:z-50\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides six numeric z-index utilities and an auto utility. You can customize these values by editing theme.zIndex or theme.extend.zIndex in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      zIndex: {\n\n        '100': '100',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off z-index value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"z-[100]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nVisibility\nFlex Basis\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the z-index\nUsing negative values\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Top / Right / Bottom / Left - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/top-right-bottom-left",
    "html": "Layout\n\nTop / Right / Bottom / Left\n\nUtilities for controlling the placement of positioned elements.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ninset-0\tinset: 0px;\n\ninset-x-0\tleft: 0px;\nright: 0px;\n\ninset-y-0\ttop: 0px;\nbottom: 0px;\n\nstart-0\tinset-inline-start: 0px;\n\nend-0\tinset-inline-end: 0px;\n\ntop-0\ttop: 0px;\n\nright-0\tright: 0px;\n\nbottom-0\tbottom: 0px;\n\nleft-0\tleft: 0px;\n\ninset-px\tinset: 1px;\n\ninset-x-px\tleft: 1px;\nright: 1px;\n\ninset-y-px\ttop: 1px;\nbottom: 1px;\n\nstart-px\tinset-inline-start: 1px;\n\nend-px\tinset-inline-end: 1px;\n\ntop-px\ttop: 1px;\n\nright-px\tright: 1px;\n\nbottom-px\tbottom: 1px;\n\nleft-px\tleft: 1px;\n\ninset-0.5\tinset: 0.125rem; /* 2px */\n\ninset-x-0.5\tleft: 0.125rem; /* 2px */\nright: 0.125rem; /* 2px */\n\ninset-y-0.5\ttop: 0.125rem; /* 2px */\nbottom: 0.125rem; /* 2px */\n\nstart-0.5\tinset-inline-start: 0.125rem; /* 2px */\n\nend-0.5\tinset-inline-end: 0.125rem; /* 2px */\n\ntop-0.5\ttop: 0.125rem; /* 2px */\n\nright-0.5\tright: 0.125rem; /* 2px */\n\nbottom-0.5\tbottom: 0.125rem; /* 2px */\n\nleft-0.5\tleft: 0.125rem; /* 2px */\n\ninset-1\tinset: 0.25rem; /* 4px */\n\ninset-x-1\tleft: 0.25rem; /* 4px */\nright: 0.25rem; /* 4px */\n\ninset-y-1\ttop: 0.25rem; /* 4px */\nbottom: 0.25rem; /* 4px */\n\nstart-1\tinset-inline-start: 0.25rem; /* 4px */\n\nend-1\tinset-inline-end: 0.25rem; /* 4px */\n\ntop-1\ttop: 0.25rem; /* 4px */\n\nright-1\tright: 0.25rem; /* 4px */\n\nbottom-1\tbottom: 0.25rem; /* 4px */\n\nleft-1\tleft: 0.25rem; /* 4px */\n\ninset-1.5\tinset: 0.375rem; /* 6px */\n\ninset-x-1.5\tleft: 0.375rem; /* 6px */\nright: 0.375rem; /* 6px */\n\ninset-y-1.5\ttop: 0.375rem; /* 6px */\nbottom: 0.375rem; /* 6px */\n\nstart-1.5\tinset-inline-start: 0.375rem; /* 6px */\n\nend-1.5\tinset-inline-end: 0.375rem; /* 6px */\n\ntop-1.5\ttop: 0.375rem; /* 6px */\n\nright-1.5\tright: 0.375rem; /* 6px */\n\nbottom-1.5\tbottom: 0.375rem; /* 6px */\n\nleft-1.5\tleft: 0.375rem; /* 6px */\n\ninset-2\tinset: 0.5rem; /* 8px */\n\ninset-x-2\tleft: 0.5rem; /* 8px */\nright: 0.5rem; /* 8px */\n\ninset-y-2\ttop: 0.5rem; /* 8px */\nbottom: 0.5rem; /* 8px */\n\nstart-2\tinset-inline-start: 0.5rem; /* 8px */\n\nend-2\tinset-inline-end: 0.5rem; /* 8px */\n\ntop-2\ttop: 0.5rem; /* 8px */\n\nright-2\tright: 0.5rem; /* 8px */\n\nbottom-2\tbottom: 0.5rem; /* 8px */\n\nleft-2\tleft: 0.5rem; /* 8px */\n\ninset-2.5\tinset: 0.625rem; /* 10px */\n\ninset-x-2.5\tleft: 0.625rem; /* 10px */\nright: 0.625rem; /* 10px */\n\ninset-y-2.5\ttop: 0.625rem; /* 10px */\nbottom: 0.625rem; /* 10px */\n\nstart-2.5\tinset-inline-start: 0.625rem; /* 10px */\n\nend-2.5\tinset-inline-end: 0.625rem; /* 10px */\n\ntop-2.5\ttop: 0.625rem; /* 10px */\n\nright-2.5\tright: 0.625rem; /* 10px */\n\nbottom-2.5\tbottom: 0.625rem; /* 10px */\n\nleft-2.5\tleft: 0.625rem; /* 10px */\n\ninset-3\tinset: 0.75rem; /* 12px */\n\ninset-x-3\tleft: 0.75rem; /* 12px */\nright: 0.75rem; /* 12px */\n\ninset-y-3\ttop: 0.75rem; /* 12px */\nbottom: 0.75rem; /* 12px */\n\nstart-3\tinset-inline-start: 0.75rem; /* 12px */\n\nend-3\tinset-inline-end: 0.75rem; /* 12px */\n\ntop-3\ttop: 0.75rem; /* 12px */\n\nright-3\tright: 0.75rem; /* 12px */\n\nbottom-3\tbottom: 0.75rem; /* 12px */\n\nleft-3\tleft: 0.75rem; /* 12px */\n\ninset-3.5\tinset: 0.875rem; /* 14px */\n\ninset-x-3.5\tleft: 0.875rem; /* 14px */\nright: 0.875rem; /* 14px */\n\ninset-y-3.5\ttop: 0.875rem; /* 14px */\nbottom: 0.875rem; /* 14px */\n\nstart-3.5\tinset-inline-start: 0.875rem; /* 14px */\n\nend-3.5\tinset-inline-end: 0.875rem; /* 14px */\n\ntop-3.5\ttop: 0.875rem; /* 14px */\n\nright-3.5\tright: 0.875rem; /* 14px */\n\nbottom-3.5\tbottom: 0.875rem; /* 14px */\n\nleft-3.5\tleft: 0.875rem; /* 14px */\n\ninset-4\tinset: 1rem; /* 16px */\n\ninset-x-4\tleft: 1rem; /* 16px */\nright: 1rem; /* 16px */\n\ninset-y-4\ttop: 1rem; /* 16px */\nbottom: 1rem; /* 16px */\n\nstart-4\tinset-inline-start: 1rem; /* 16px */\n\nend-4\tinset-inline-end: 1rem; /* 16px */\n\ntop-4\ttop: 1rem; /* 16px */\n\nright-4\tright: 1rem; /* 16px */\n\nbottom-4\tbottom: 1rem; /* 16px */\n\nleft-4\tleft: 1rem; /* 16px */\n\ninset-5\tinset: 1.25rem; /* 20px */\n\ninset-x-5\tleft: 1.25rem; /* 20px */\nright: 1.25rem; /* 20px */\n\ninset-y-5\ttop: 1.25rem; /* 20px */\nbottom: 1.25rem; /* 20px */\n\nstart-5\tinset-inline-start: 1.25rem; /* 20px */\n\nend-5\tinset-inline-end: 1.25rem; /* 20px */\n\ntop-5\ttop: 1.25rem; /* 20px */\n\nright-5\tright: 1.25rem; /* 20px */\n\nbottom-5\tbottom: 1.25rem; /* 20px */\n\nleft-5\tleft: 1.25rem; /* 20px */\n\ninset-6\tinset: 1.5rem; /* 24px */\n\ninset-x-6\tleft: 1.5rem; /* 24px */\nright: 1.5rem; /* 24px */\n\ninset-y-6\ttop: 1.5rem; /* 24px */\nbottom: 1.5rem; /* 24px */\n\nstart-6\tinset-inline-start: 1.5rem; /* 24px */\n\nend-6\tinset-inline-end: 1.5rem; /* 24px */\n\ntop-6\ttop: 1.5rem; /* 24px */\n\nright-6\tright: 1.5rem; /* 24px */\n\nbottom-6\tbottom: 1.5rem; /* 24px */\n\nleft-6\tleft: 1.5rem; /* 24px */\n\ninset-7\tinset: 1.75rem; /* 28px */\n\ninset-x-7\tleft: 1.75rem; /* 28px */\nright: 1.75rem; /* 28px */\n\ninset-y-7\ttop: 1.75rem; /* 28px */\nbottom: 1.75rem; /* 28px */\n\nstart-7\tinset-inline-start: 1.75rem; /* 28px */\n\nend-7\tinset-inline-end: 1.75rem; /* 28px */\n\ntop-7\ttop: 1.75rem; /* 28px */\n\nright-7\tright: 1.75rem; /* 28px */\n\nbottom-7\tbottom: 1.75rem; /* 28px */\n\nleft-7\tleft: 1.75rem; /* 28px */\n\ninset-8\tinset: 2rem; /* 32px */\n\ninset-x-8\tleft: 2rem; /* 32px */\nright: 2rem; /* 32px */\n\ninset-y-8\ttop: 2rem; /* 32px */\nbottom: 2rem; /* 32px */\n\nstart-8\tinset-inline-start: 2rem; /* 32px */\n\nend-8\tinset-inline-end: 2rem; /* 32px */\n\ntop-8\ttop: 2rem; /* 32px */\n\nright-8\tright: 2rem; /* 32px */\n\nbottom-8\tbottom: 2rem; /* 32px */\n\nleft-8\tleft: 2rem; /* 32px */\n\ninset-9\tinset: 2.25rem; /* 36px */\n\ninset-x-9\tleft: 2.25rem; /* 36px */\nright: 2.25rem; /* 36px */\n\ninset-y-9\ttop: 2.25rem; /* 36px */\nbottom: 2.25rem; /* 36px */\n\nstart-9\tinset-inline-start: 2.25rem; /* 36px */\n\nend-9\tinset-inline-end: 2.25rem; /* 36px */\n\ntop-9\ttop: 2.25rem; /* 36px */\n\nright-9\tright: 2.25rem; /* 36px */\n\nbottom-9\tbottom: 2.25rem; /* 36px */\n\nleft-9\tleft: 2.25rem; /* 36px */\n\ninset-10\tinset: 2.5rem; /* 40px */\n\ninset-x-10\tleft: 2.5rem; /* 40px */\nright: 2.5rem; /* 40px */\n\ninset-y-10\ttop: 2.5rem; /* 40px */\nbottom: 2.5rem; /* 40px */\n\nstart-10\tinset-inline-start: 2.5rem; /* 40px */\n\nend-10\tinset-inline-end: 2.5rem; /* 40px */\n\ntop-10\ttop: 2.5rem; /* 40px */\n\nright-10\tright: 2.5rem; /* 40px */\n\nbottom-10\tbottom: 2.5rem; /* 40px */\n\nleft-10\tleft: 2.5rem; /* 40px */\n\ninset-11\tinset: 2.75rem; /* 44px */\n\ninset-x-11\tleft: 2.75rem; /* 44px */\nright: 2.75rem; /* 44px */\n\ninset-y-11\ttop: 2.75rem; /* 44px */\nbottom: 2.75rem; /* 44px */\n\nstart-11\tinset-inline-start: 2.75rem; /* 44px */\n\nend-11\tinset-inline-end: 2.75rem; /* 44px */\n\ntop-11\ttop: 2.75rem; /* 44px */\n\nright-11\tright: 2.75rem; /* 44px */\n\nbottom-11\tbottom: 2.75rem; /* 44px */\n\nleft-11\tleft: 2.75rem; /* 44px */\n\ninset-12\tinset: 3rem; /* 48px */\n\ninset-x-12\tleft: 3rem; /* 48px */\nright: 3rem; /* 48px */\n\ninset-y-12\ttop: 3rem; /* 48px */\nbottom: 3rem; /* 48px */\n\nstart-12\tinset-inline-start: 3rem; /* 48px */\n\nend-12\tinset-inline-end: 3rem; /* 48px */\n\ntop-12\ttop: 3rem; /* 48px */\n\nright-12\tright: 3rem; /* 48px */\n\nbottom-12\tbottom: 3rem; /* 48px */\n\nleft-12\tleft: 3rem; /* 48px */\n\ninset-14\tinset: 3.5rem; /* 56px */\n\ninset-x-14\tleft: 3.5rem; /* 56px */\nright: 3.5rem; /* 56px */\n\ninset-y-14\ttop: 3.5rem; /* 56px */\nbottom: 3.5rem; /* 56px */\n\nstart-14\tinset-inline-start: 3.5rem; /* 56px */\n\nend-14\tinset-inline-end: 3.5rem; /* 56px */\n\ntop-14\ttop: 3.5rem; /* 56px */\n\nright-14\tright: 3.5rem; /* 56px */\n\nbottom-14\tbottom: 3.5rem; /* 56px */\n\nleft-14\tleft: 3.5rem; /* 56px */\n\ninset-16\tinset: 4rem; /* 64px */\n\ninset-x-16\tleft: 4rem; /* 64px */\nright: 4rem; /* 64px */\n\ninset-y-16\ttop: 4rem; /* 64px */\nbottom: 4rem; /* 64px */\n\nstart-16\tinset-inline-start: 4rem; /* 64px */\n\nend-16\tinset-inline-end: 4rem; /* 64px */\n\ntop-16\ttop: 4rem; /* 64px */\n\nright-16\tright: 4rem; /* 64px */\n\nbottom-16\tbottom: 4rem; /* 64px */\n\nleft-16\tleft: 4rem; /* 64px */\n\ninset-20\tinset: 5rem; /* 80px */\n\ninset-x-20\tleft: 5rem; /* 80px */\nright: 5rem; /* 80px */\n\ninset-y-20\ttop: 5rem; /* 80px */\nbottom: 5rem; /* 80px */\n\nstart-20\tinset-inline-start: 5rem; /* 80px */\n\nend-20\tinset-inline-end: 5rem; /* 80px */\n\ntop-20\ttop: 5rem; /* 80px */\n\nright-20\tright: 5rem; /* 80px */\n\nbottom-20\tbottom: 5rem; /* 80px */\n\nleft-20\tleft: 5rem; /* 80px */\n\ninset-24\tinset: 6rem; /* 96px */\n\ninset-x-24\tleft: 6rem; /* 96px */\nright: 6rem; /* 96px */\n\ninset-y-24\ttop: 6rem; /* 96px */\nbottom: 6rem; /* 96px */\n\nstart-24\tinset-inline-start: 6rem; /* 96px */\n\nend-24\tinset-inline-end: 6rem; /* 96px */\n\ntop-24\ttop: 6rem; /* 96px */\n\nright-24\tright: 6rem; /* 96px */\n\nbottom-24\tbottom: 6rem; /* 96px */\n\nleft-24\tleft: 6rem; /* 96px */\n\ninset-28\tinset: 7rem; /* 112px */\n\ninset-x-28\tleft: 7rem; /* 112px */\nright: 7rem; /* 112px */\n\ninset-y-28\ttop: 7rem; /* 112px */\nbottom: 7rem; /* 112px */\n\nstart-28\tinset-inline-start: 7rem; /* 112px */\n\nend-28\tinset-inline-end: 7rem; /* 112px */\n\ntop-28\ttop: 7rem; /* 112px */\n\nright-28\tright: 7rem; /* 112px */\n\nbottom-28\tbottom: 7rem; /* 112px */\n\nleft-28\tleft: 7rem; /* 112px */\n\ninset-32\tinset: 8rem; /* 128px */\n\ninset-x-32\tleft: 8rem; /* 128px */\nright: 8rem; /* 128px */\n\ninset-y-32\ttop: 8rem; /* 128px */\nbottom: 8rem; /* 128px */\n\nstart-32\tinset-inline-start: 8rem; /* 128px */\n\nend-32\tinset-inline-end: 8rem; /* 128px */\n\ntop-32\ttop: 8rem; /* 128px */\n\nright-32\tright: 8rem; /* 128px */\n\nbottom-32\tbottom: 8rem; /* 128px */\n\nleft-32\tleft: 8rem; /* 128px */\n\ninset-36\tinset: 9rem; /* 144px */\n\ninset-x-36\tleft: 9rem; /* 144px */\nright: 9rem; /* 144px */\n\ninset-y-36\ttop: 9rem; /* 144px */\nbottom: 9rem; /* 144px */\n\nstart-36\tinset-inline-start: 9rem; /* 144px */\n\nend-36\tinset-inline-end: 9rem; /* 144px */\n\ntop-36\ttop: 9rem; /* 144px */\n\nright-36\tright: 9rem; /* 144px */\n\nbottom-36\tbottom: 9rem; /* 144px */\n\nleft-36\tleft: 9rem; /* 144px */\n\ninset-40\tinset: 10rem; /* 160px */\n\ninset-x-40\tleft: 10rem; /* 160px */\nright: 10rem; /* 160px */\n\ninset-y-40\ttop: 10rem; /* 160px */\nbottom: 10rem; /* 160px */\n\nstart-40\tinset-inline-start: 10rem; /* 160px */\n\nend-40\tinset-inline-end: 10rem; /* 160px */\n\ntop-40\ttop: 10rem; /* 160px */\n\nright-40\tright: 10rem; /* 160px */\n\nbottom-40\tbottom: 10rem; /* 160px */\n\nleft-40\tleft: 10rem; /* 160px */\n\ninset-44\tinset: 11rem; /* 176px */\n\ninset-x-44\tleft: 11rem; /* 176px */\nright: 11rem; /* 176px */\n\ninset-y-44\ttop: 11rem; /* 176px */\nbottom: 11rem; /* 176px */\n\nstart-44\tinset-inline-start: 11rem; /* 176px */\n\nend-44\tinset-inline-end: 11rem; /* 176px */\n\ntop-44\ttop: 11rem; /* 176px */\n\nright-44\tright: 11rem; /* 176px */\n\nbottom-44\tbottom: 11rem; /* 176px */\n\nleft-44\tleft: 11rem; /* 176px */\n\ninset-48\tinset: 12rem; /* 192px */\n\ninset-x-48\tleft: 12rem; /* 192px */\nright: 12rem; /* 192px */\n\ninset-y-48\ttop: 12rem; /* 192px */\nbottom: 12rem; /* 192px */\n\nstart-48\tinset-inline-start: 12rem; /* 192px */\n\nend-48\tinset-inline-end: 12rem; /* 192px */\n\ntop-48\ttop: 12rem; /* 192px */\n\nright-48\tright: 12rem; /* 192px */\n\nbottom-48\tbottom: 12rem; /* 192px */\n\nleft-48\tleft: 12rem; /* 192px */\n\ninset-52\tinset: 13rem; /* 208px */\n\ninset-x-52\tleft: 13rem; /* 208px */\nright: 13rem; /* 208px */\n\ninset-y-52\ttop: 13rem; /* 208px */\nbottom: 13rem; /* 208px */\n\nstart-52\tinset-inline-start: 13rem; /* 208px */\n\nend-52\tinset-inline-end: 13rem; /* 208px */\n\ntop-52\ttop: 13rem; /* 208px */\n\nright-52\tright: 13rem; /* 208px */\n\nbottom-52\tbottom: 13rem; /* 208px */\n\nleft-52\tleft: 13rem; /* 208px */\n\ninset-56\tinset: 14rem; /* 224px */\n\ninset-x-56\tleft: 14rem; /* 224px */\nright: 14rem; /* 224px */\n\ninset-y-56\ttop: 14rem; /* 224px */\nbottom: 14rem; /* 224px */\n\nstart-56\tinset-inline-start: 14rem; /* 224px */\n\nend-56\tinset-inline-end: 14rem; /* 224px */\n\ntop-56\ttop: 14rem; /* 224px */\n\nright-56\tright: 14rem; /* 224px */\n\nbottom-56\tbottom: 14rem; /* 224px */\n\nleft-56\tleft: 14rem; /* 224px */\n\ninset-60\tinset: 15rem; /* 240px */\n\ninset-x-60\tleft: 15rem; /* 240px */\nright: 15rem; /* 240px */\n\ninset-y-60\ttop: 15rem; /* 240px */\nbottom: 15rem; /* 240px */\n\nstart-60\tinset-inline-start: 15rem; /* 240px */\n\nend-60\tinset-inline-end: 15rem; /* 240px */\n\ntop-60\ttop: 15rem; /* 240px */\n\nright-60\tright: 15rem; /* 240px */\n\nbottom-60\tbottom: 15rem; /* 240px */\n\nleft-60\tleft: 15rem; /* 240px */\n\ninset-64\tinset: 16rem; /* 256px */\n\ninset-x-64\tleft: 16rem; /* 256px */\nright: 16rem; /* 256px */\n\ninset-y-64\ttop: 16rem; /* 256px */\nbottom: 16rem; /* 256px */\n\nstart-64\tinset-inline-start: 16rem; /* 256px */\n\nend-64\tinset-inline-end: 16rem; /* 256px */\n\ntop-64\ttop: 16rem; /* 256px */\n\nright-64\tright: 16rem; /* 256px */\n\nbottom-64\tbottom: 16rem; /* 256px */\n\nleft-64\tleft: 16rem; /* 256px */\n\ninset-72\tinset: 18rem; /* 288px */\n\ninset-x-72\tleft: 18rem; /* 288px */\nright: 18rem; /* 288px */\n\ninset-y-72\ttop: 18rem; /* 288px */\nbottom: 18rem; /* 288px */\n\nstart-72\tinset-inline-start: 18rem; /* 288px */\n\nend-72\tinset-inline-end: 18rem; /* 288px */\n\ntop-72\ttop: 18rem; /* 288px */\n\nright-72\tright: 18rem; /* 288px */\n\nbottom-72\tbottom: 18rem; /* 288px */\n\nleft-72\tleft: 18rem; /* 288px */\n\ninset-80\tinset: 20rem; /* 320px */\n\ninset-x-80\tleft: 20rem; /* 320px */\nright: 20rem; /* 320px */\n\ninset-y-80\ttop: 20rem; /* 320px */\nbottom: 20rem; /* 320px */\n\nstart-80\tinset-inline-start: 20rem; /* 320px */\n\nend-80\tinset-inline-end: 20rem; /* 320px */\n\ntop-80\ttop: 20rem; /* 320px */\n\nright-80\tright: 20rem; /* 320px */\n\nbottom-80\tbottom: 20rem; /* 320px */\n\nleft-80\tleft: 20rem; /* 320px */\n\ninset-96\tinset: 24rem; /* 384px */\n\ninset-x-96\tleft: 24rem; /* 384px */\nright: 24rem; /* 384px */\n\ninset-y-96\ttop: 24rem; /* 384px */\nbottom: 24rem; /* 384px */\n\nstart-96\tinset-inline-start: 24rem; /* 384px */\n\nend-96\tinset-inline-end: 24rem; /* 384px */\n\ntop-96\ttop: 24rem; /* 384px */\n\nright-96\tright: 24rem; /* 384px */\n\nbottom-96\tbottom: 24rem; /* 384px */\n\nleft-96\tleft: 24rem; /* 384px */\n\ninset-auto\tinset: auto;\n\ninset-1/2\tinset: 50%;\n\ninset-1/3\tinset: 33.333333%;\n\ninset-2/3\tinset: 66.666667%;\n\ninset-1/4\tinset: 25%;\n\ninset-2/4\tinset: 50%;\n\ninset-3/4\tinset: 75%;\n\ninset-full\tinset: 100%;\n\ninset-x-auto\tleft: auto;\nright: auto;\n\ninset-x-1/2\tleft: 50%;\nright: 50%;\n\ninset-x-1/3\tleft: 33.333333%;\nright: 33.333333%;\n\ninset-x-2/3\tleft: 66.666667%;\nright: 66.666667%;\n\ninset-x-1/4\tleft: 25%;\nright: 25%;\n\ninset-x-2/4\tleft: 50%;\nright: 50%;\n\ninset-x-3/4\tleft: 75%;\nright: 75%;\n\ninset-x-full\tleft: 100%;\nright: 100%;\n\ninset-y-auto\ttop: auto;\nbottom: auto;\n\ninset-y-1/2\ttop: 50%;\nbottom: 50%;\n\ninset-y-1/3\ttop: 33.333333%;\nbottom: 33.333333%;\n\ninset-y-2/3\ttop: 66.666667%;\nbottom: 66.666667%;\n\ninset-y-1/4\ttop: 25%;\nbottom: 25%;\n\ninset-y-2/4\ttop: 50%;\nbottom: 50%;\n\ninset-y-3/4\ttop: 75%;\nbottom: 75%;\n\ninset-y-full\ttop: 100%;\nbottom: 100%;\n\nstart-auto\tinset-inline-start: auto;\n\nstart-1/2\tinset-inline-start: 50%;\n\nstart-1/3\tinset-inline-start: 33.333333%;\n\nstart-2/3\tinset-inline-start: 66.666667%;\n\nstart-1/4\tinset-inline-start: 25%;\n\nstart-2/4\tinset-inline-start: 50%;\n\nstart-3/4\tinset-inline-start: 75%;\n\nstart-full\tinset-inline-start: 100%;\n\nend-auto\tinset-inline-end: auto;\n\nend-1/2\tinset-inline-end: 50%;\n\nend-1/3\tinset-inline-end: 33.333333%;\n\nend-2/3\tinset-inline-end: 66.666667%;\n\nend-1/4\tinset-inline-end: 25%;\n\nend-2/4\tinset-inline-end: 50%;\n\nend-3/4\tinset-inline-end: 75%;\n\nend-full\tinset-inline-end: 100%;\n\ntop-auto\ttop: auto;\n\ntop-1/2\ttop: 50%;\n\ntop-1/3\ttop: 33.333333%;\n\ntop-2/3\ttop: 66.666667%;\n\ntop-1/4\ttop: 25%;\n\ntop-2/4\ttop: 50%;\n\ntop-3/4\ttop: 75%;\n\ntop-full\ttop: 100%;\n\nright-auto\tright: auto;\n\nright-1/2\tright: 50%;\n\nright-1/3\tright: 33.333333%;\n\nright-2/3\tright: 66.666667%;\n\nright-1/4\tright: 25%;\n\nright-2/4\tright: 50%;\n\nright-3/4\tright: 75%;\n\nright-full\tright: 100%;\n\nbottom-auto\tbottom: auto;\n\nbottom-1/2\tbottom: 50%;\n\nbottom-1/3\tbottom: 33.333333%;\n\nbottom-2/3\tbottom: 66.666667%;\n\nbottom-1/4\tbottom: 25%;\n\nbottom-2/4\tbottom: 50%;\n\nbottom-3/4\tbottom: 75%;\n\nbottom-full\tbottom: 100%;\n\nleft-auto\tleft: auto;\n\nleft-1/2\tleft: 50%;\n\nleft-1/3\tleft: 33.333333%;\n\nleft-2/3\tleft: 66.666667%;\n\nleft-1/4\tleft: 25%;\n\nleft-2/4\tleft: 50%;\n\nleft-3/4\tleft: 75%;\n\nleft-full\tleft: 100%;\n\n​\nBasic usage\n​\nPlacing a positioned element\n\nUse the {top|right|bottom|left|inset}-{size} utilities to set the horizontal or vertical position of a positioned element.\n\n01\n02\n03\n04\n05\n06\n07\n08\n09\n<!-- Pin to top left corner -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute left-0 top-0 h-16 w-16 ...\">01</div>\n</div>\n\n<!-- Span top edge -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute inset-x-0 top-0 h-16 ...\">02</div>\n</div>\n\n<!-- Pin to top right corner -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute top-0 right-0 h-16 w-16 ...\">03</div>\n</div>\n\n<!-- Span left edge -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute inset-y-0 left-0 w-16 ...\">04</div>\n</div>\n\n<!-- Fill entire parent -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute inset-0 ...\">05</div>\n</div>\n\n<!-- Span right edge -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute inset-y-0 right-0 w-16 ...\">06</div>\n</div>\n\n<!-- Pin to bottom left corner -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute bottom-0 left-0 h-16 w-16 ...\">07</div>\n</div>\n\n<!-- Span bottom edge -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute inset-x-0 bottom-0 h-16 ...\">08</div>\n</div>\n\n<!-- Pin to bottom right corner -->\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute bottom-0 right-0 h-16 w-16 ...\">09</div>\n</div>\n​\nUsing negative values\n\nTo use a negative top/right/bottom/left value, prefix the class name with a dash to convert it to a negative value.\n\n<div class=\"relative h-32 w-32 ...\">\n  <div class=\"absolute h-14 w-14 -left-4 -top-4 ...\"></div>\n</div>\n​\nUsing logical properties\n\nUse the start-* and end-* utilities to set the inset-inline-start and inset-inline-end logical properties, which map to either the left or right side based on the text direction.\n\nLeft-to-right\n\nRight-to-left\n\n<div dir=\"ltr\">\n  <div class=\"relative h-32 w-32 ...\">\n    <div class=\"absolute h-14 w-14 top-0 start-0 ...\"></div>\n  </div>\n<div>\n\n<div dir=\"rtl\">\n  <div class=\"relative h-32 w-32 ...\">\n    <div class=\"absolute h-14 w-14 top-0 start-0 ...\"></div>\n  </div>\n<div>\n\nFor more control, you can also use the LTR and RTL modifiers to conditionally apply specific styles depending on the current text direction.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:top-6 to only apply the top-6 utility on hover.\n\n<div class=\"top-4 hover:top-6\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:top-6 to apply the top-6 utility at only medium screen sizes and above.\n\n<div class=\"top-4 md:top-6\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides top/right/bottom/left/inset utilities for a combination of the default spacing scale, auto, full as well as some additional fraction values.\n\nYou can customize your spacing scale by editing theme.spacing or theme.extend.spacing in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      spacing: {\n\n        '3px': '3px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nAlternatively, you can customize just the top/right/bottom/left/inset scale by editing theme.inset or theme.extend.inset in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      inset: {\n\n        '3px': '3px',\n\n      }\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off top/right/bottom/left value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"top-[3px]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nPosition\nVisibility\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nPlacing a positioned element\nUsing negative values\nUsing logical properties\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Visibility - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/visibility",
    "html": "Layout\n\nVisibility\n\nUtilities for controlling the visibility of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nvisible\tvisibility: visible;\n\ninvisible\tvisibility: hidden;\n\ncollapse\tvisibility: collapse;\n\n​\nBasic usage\n​\nMaking elements invisible\n\nUse invisible to hide an element, but still maintain its place in the DOM, affecting the layout of other elements (compare with hidden from the display documentation).\n\n01\n03\n<div class=\"grid grid-cols-3 gap-4\">\n  <div>01</div>\n  <div class=\"invisible ...\">02</div>\n  <div>03</div>\n</div>\n​\nCollapsing elements\n\nUse collapse to hide table rows, row groups, columns, and column groups as if they were set to display: none, but without impacting the size of other rows and columns.\n\nThis makes it possible to dynamically toggle rows and columns without affecting the table layout.\n\nShowing all rows\nInvoice #\tClient\tAmount\n#100\tPendant Publishing\t$2,000.00\n#101\tKruger Industrial Smoothing\t$545.00\n#102\tJ. Peterman\t$10,000.25\nHiding a row using `collapse`\nInvoice #\tClient\tAmount\n#100\tPendant Publishing\t$2,000.00\n#102\tJ. Peterman\t$10,000.25\nHiding a row using `hidden`\nInvoice #\tClient\tAmount\n#100\tPendant Publishing\t$2,000.00\n#102\tJ. Peterman\t$10,000.25\n<table>\n  <thead>\n    <tr>\n      <th>Invoice #</th>\n      <th>Client</th>\n      <th>Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>#100</td>\n      <td>Pendant Publishing</td>\n      <td>$2,000.00</td>\n    </tr>\n    <tr class=\"collapse\">\n      <td>#101</td>\n      <td>Kruger Industrial Smoothing</td>\n      <td>$545.00</td>\n    </tr>\n    <tr>\n      <td>#102</td>\n      <td>J. Peterman</td>\n      <td>$10,000.25</td>\n    </tr>\n  </tbody>\n</table>\n​\nMaking elements visible\n\nUse visible to make an element visible. This is mostly useful for undoing the invisible utility at different screen sizes.\n\n01\n02\n03\n<div class=\"grid grid-cols-3 gap-4\">\n  <div>01</div>\n  <div class=\"visible ...\">02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:invisible to only apply the invisible utility on hover.\n\n<div class=\"visible hover:invisible\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:invisible to apply the invisible utility at only medium screen sizes and above.\n\n<div class=\"visible md:invisible\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nTop / Right / Bottom / Left\nZ-Index\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nMaking elements invisible\nCollapsing elements\nMaking elements visible\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Position - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/position",
    "html": "Layout\n\nPosition\n\nUtilities for controlling how an element is positioned in the DOM.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nstatic\tposition: static;\n\nfixed\tposition: fixed;\n\nabsolute\tposition: absolute;\n\nrelative\tposition: relative;\n\nsticky\tposition: sticky;\n\n​\nBasic usage\n​\nStatically positioning elements\n\nUse static to position an element according to the normal flow of the document.\n\nAny offsets will be ignored and the element will not act as a position reference for absolutely positioned children.\n\nStatic parent\n\nAbsolute child\n\n<div class=\"static ...\">\n  <p>Static parent</p>\n  <div class=\"absolute bottom-0 left-0 ...\">\n    <p>Absolute child</p>\n  </div>\n</div>\n​\nRelatively positioning elements\n\nUse relative to position an element according to the normal flow of the document.\n\nAny offsets are calculated relative to the element’s normal position and the element will act as a position reference for absolutely positioned children.\n\nRelative parent\n\nAbsolute child\n\n<div class=\"relative ...\">\n  <p>Relative parent</p>\n  <div class=\"absolute bottom-0 left-0 ...\">\n    <p>Absolute child</p>\n  </div>\n</div>\n​\nAbsolutely positioning elements\n\nUse absolute to position an element outside of the normal flow of the document, causing neighboring elements to act as if the element doesn’t exist.\n\nAny offsets are calculated relative to the nearest parent that has a position other than static, and the element will act as a position reference for other absolutely positioned children.\n\nWith static positioning\n\nRelative parent\n\nStatic parent\n\nStatic child\n\nStatic sibling\n\nWith absolute positioning\n\nRelative parent\n\nStatic parent\n\nAbsolute child\n\nStatic sibling\n\n<div class=\"static ...\">\n  <!-- Static parent -->\n  <div class=\"static ...\"><p>Static child</p></div>\n  <div class=\"inline-block ...\"><p>Static sibling</p></div>\n  <!-- Static parent -->\n  <div class=\"absolute ...\"><p>Absolute child</p></div>\n  <div class=\"inline-block ...\"><p>Static sibling</p></div>\n</div>\n​\nFixed positioning elements\n\nUse fixed to position an element relative to the browser window.\n\nAny offsets are calculated relative to the viewport and the element will act as a position reference for absolutely positioned children.\n\nContacts\nAndrew Alfred\nDebra Houston\nJane White\nRay Flint\nMindy Albrect\nDavid Arnold\n<div class=\"relative\">\n  <div class=\"fixed top-0 left-0 right-0\">Contacts</div>\n  <div>\n    <div>\n      <img src=\"...\" />\n      <strong>Andrew Alfred</strong>\n    </div>\n    <div>\n      <img src=\"...\" />\n      <strong>Debra Houston</strong>\n    </div>\n    <!-- ... -->\n  </div>\n</div>\n​\nSticky positioning elements\n\nUse sticky to position an element as relative until it crosses a specified threshold, then treat it as fixed until its parent is off screen.\n\nAny offsets are calculated relative to the element’s normal position and the element will act as a position reference for absolutely positioned children.\n\nA\nAndrew Alfred\nAisha Houston\nAnna White\nAndy Flint\nB\nBob Alfred\nBianca Houston\nBrianna White\nBert Flint\nC\nColton Alfred\nCynthia Houston\nCheyenne White\nCharlie Flint\n<div>\n  <div>\n    <div class=\"sticky top-0 ...\">A</div>\n    <div>\n      <div>\n        <img src=\"...\" />\n        <strong>Andrew Alfred</strong>\n      </div>\n      <div>\n        <img src=\"...\" />\n        <strong>Aisha Houston</strong>\n      </div>\n      <!-- ... -->\n    </div>\n  </div>\n  <div>\n    <div class=\"sticky top-0\">B</div>\n    <div>\n      <div>\n        <img src=\"...\" />\n        <strong>Bob Alfred</strong>\n      </div>\n      <!-- ... -->\n    </div>\n  </div>\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:absolute to only apply the absolute utility on hover.\n\n<div class=\"relative hover:absolute\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:absolute to apply the absolute utility at only medium screen sizes and above.\n\n<div class=\"relative md:absolute\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nOverscroll Behavior\nTop / Right / Bottom / Left\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nStatically positioning elements\nRelatively positioning elements\nAbsolutely positioning elements\nFixed positioning elements\nSticky positioning elements\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Overscroll Behavior - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/overscroll-behavior",
    "html": "Layout\n\nOverscroll Behavior\n\nUtilities for controlling how the browser behaves when reaching the boundary of a scrolling area.\n\n​\nQuick reference\nClass\n\t\nProperties\n\noverscroll-auto\toverscroll-behavior: auto;\n\noverscroll-contain\toverscroll-behavior: contain;\n\noverscroll-none\toverscroll-behavior: none;\n\noverscroll-y-auto\toverscroll-behavior-y: auto;\n\noverscroll-y-contain\toverscroll-behavior-y: contain;\n\noverscroll-y-none\toverscroll-behavior-y: none;\n\noverscroll-x-auto\toverscroll-behavior-x: auto;\n\noverscroll-x-contain\toverscroll-behavior-x: contain;\n\noverscroll-x-none\toverscroll-behavior-x: none;\n\n​\nBasic usage\n​\nPreventing parent overscrolling\n\nUse overscroll-contain to prevent scrolling in the target area from triggering scrolling in the parent element, but preserve “bounce” effects when scrolling past the end of the container in operating systems that support it.\n\nWell, let me tell you something, funny boy. Y'know that little stamp, the one that says \"New York Public Library\"? Well that may not mean anything to you, but that means a lot to me. One whole hell of a lot.\n\nSure, go ahead, laugh if you want to. I've seen your type before: Flashy, making the scene, flaunting convention. Yeah, I know what you're thinking. What's this guy making such a big stink about old library books? Well, let me give you a hint, junior.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better?\n\n<div class=\"overscroll-contain ...\">Well, let me tell you something, ...</div>\n​\nPreventing overscroll bouncing\n\nUse overscroll-none to prevent scrolling in the target area from triggering scrolling in the parent element, and also prevent “bounce” effects when scrolling past the end of the container.\n\nWell, let me tell you something, funny boy. Y'know that little stamp, the one that says \"New York Public Library\"? Well that may not mean anything to you, but that means a lot to me. One whole hell of a lot.\n\nSure, go ahead, laugh if you want to. I've seen your type before: Flashy, making the scene, flaunting convention. Yeah, I know what you're thinking. What's this guy making such a big stink about old library books? Well, let me give you a hint, junior.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better?\n\n<div class=\"overscroll-none ...\">Well, let me tell you something, ...</div>\n​\nUsing the default overscroll behavior\n\nUse overscroll-auto to make it possible for the user to continue scrolling a parent scroll area when they reach the boundary of the primary scroll area.\n\nWell, let me tell you something, funny boy. Y'know that little stamp, the one that says \"New York Public Library\"? Well that may not mean anything to you, but that means a lot to me. One whole hell of a lot.\n\nSure, go ahead, laugh if you want to. I've seen your type before: Flashy, making the scene, flaunting convention. Yeah, I know what you're thinking. What's this guy making such a big stink about old library books? Well, let me give you a hint, junior.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better?\n\n<div class=\"overscroll-auto ...\">Well, let me tell you something, ...</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use focus:overscroll-contain to only apply the overscroll-contain utility on focus.\n\n<html class=\"overscroll-auto focus:overscroll-contain\">\n  <!-- ... -->\n</html>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:overscroll-contain to apply the overscroll-contain utility at only medium screen sizes and above.\n\n<html class=\"overscroll-auto md:overscroll-contain\">\n  <!-- ... -->\n</html>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nOverflow\nPosition\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nPreventing parent overscrolling\nPreventing overscroll bouncing\nUsing the default overscroll behavior\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Overflow - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/overflow",
    "html": "Layout\n\nOverflow\n\nUtilities for controlling how an element handles content that is too large for the container.\n\n​\nQuick reference\nClass\n\t\nProperties\n\noverflow-auto\toverflow: auto;\n\noverflow-hidden\toverflow: hidden;\n\noverflow-clip\toverflow: clip;\n\noverflow-visible\toverflow: visible;\n\noverflow-scroll\toverflow: scroll;\n\noverflow-x-auto\toverflow-x: auto;\n\noverflow-y-auto\toverflow-y: auto;\n\noverflow-x-hidden\toverflow-x: hidden;\n\noverflow-y-hidden\toverflow-y: hidden;\n\noverflow-x-clip\toverflow-x: clip;\n\noverflow-y-clip\toverflow-y: clip;\n\noverflow-x-visible\toverflow-x: visible;\n\noverflow-y-visible\toverflow-y: visible;\n\noverflow-x-scroll\toverflow-x: scroll;\n\noverflow-y-scroll\toverflow-y: scroll;\n\n​\nBasic usage\n​\nShowing content that overflows\n\nUse overflow-visible to prevent content within an element from being clipped. Note that any content that overflows the bounds of the element will then be visible.\n\nAndrew Alfred\nTechnical advisor\n<div class=\"overflow-visible ...\"></div>\n​\nHiding content that overflows\n\nUse overflow-hidden to clip any content within an element that overflows the bounds of that element.\n\nAndrew Alfred\nTechnical advisor\n<div class=\"overflow-hidden ...\"></div>\n​\nScrolling if needed\n\nUse overflow-auto to add scrollbars to an element in the event that its content overflows the bounds of that element. Unlike overflow-scroll, which always shows scrollbars, this utility will only show them if scrolling is necessary.\n\nAndrew Alfred\nTechnical advisor\nDebra Houston\nAnalyst\nJane White\nDirector, Marketing\nRay Flint\nTechnical Advisor\n<div class=\"overflow-auto ...\"></div>\n​\nScrolling horizontally if needed\n\nUse overflow-x-auto to allow horizontal scrolling if needed.\n\nAndrew\nEmily\nWhitney\nDavid\nKristin\nSarah\n<div class=\"overflow-x-auto ...\"></div>\n​\nScrolling vertically if needed\n\nUse overflow-y-auto to allow vertical scrolling if needed.\n\nAndrew Alfred\nTechnical advisor\nDebra Houston\nAnalyst\nJane White\nDirector, Marketing\nRay Flint\nTechnical Advisor\n<div class=\"overflow-y-auto h-32 ...\"></div>\n​\nScrolling horizontally always\n\nUse overflow-x-scroll to allow horizontal scrolling and always show scrollbars unless always-visible scrollbars are disabled by the operating system.\n\nAndrew\nEmily\nWhitney\nDavid\nKristin\nSarah\n<div class=\"overflow-x-scroll ...\"></div>\n​\nScrolling vertically always\n\nUse overflow-y-scroll to allow vertical scrolling and always show scrollbars unless always-visible scrollbars are disabled by the operating system.\n\nAndrew Alfred\nTechnical advisor\nDebra Houston\nAnalyst\nJane White\nDirector, Marketing\nRay Flint\nTechnical Advisor\n<div class=\"overflow-y-scroll ...\"></div>\n​\nScrolling in all directions\n\nUse overflow-scroll to add scrollbars to an element. Unlike overflow-auto, which only shows scrollbars if they are necessary, this utility always shows them. Note that some operating systems (like macOS) hide unnecessary scrollbars regardless of this setting.\n\nSun\nMon\nTue\nWed\nThu\nFri\nSat\n5 AM\n6 AM\n7 AM\n8 AM\n9 AM\n10 AM\n11 AM\n12 PM\n1 PM\n2 PM\n3 PM\n4 PM\n5 PM\n6 PM\n7 PM\n8 PM\n5 AM\nFlight to vancouver\nToronto YYZ\n6 AM\nBreakfast\nMel's Diner\n5 PM\n🎉 Party party 🎉\nWe like to party!\n<div class=\"overflow-scroll ...\"></div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:overflow-scroll to only apply the overflow-scroll utility on hover.\n\n<div class=\"overflow-auto hover:overflow-scroll\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:overflow-scroll to apply the overflow-scroll utility at only medium screen sizes and above.\n\n<div class=\"overflow-auto md:overflow-scroll\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nObject Position\nOverscroll Behavior\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nShowing content that overflows\nHiding content that overflows\nScrolling if needed\nScrolling horizontally if needed\nScrolling vertically if needed\nScrolling horizontally always\nScrolling vertically always\nScrolling in all directions\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Object Position - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/object-position",
    "html": "Layout\n\nObject Position\n\nUtilities for controlling how a replaced element's content should be positioned within its container.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nobject-bottom\tobject-position: bottom;\n\nobject-center\tobject-position: center;\n\nobject-left\tobject-position: left;\n\nobject-left-bottom\tobject-position: left bottom;\n\nobject-left-top\tobject-position: left top;\n\nobject-right\tobject-position: right;\n\nobject-right-bottom\tobject-position: right bottom;\n\nobject-right-top\tobject-position: right top;\n\nobject-top\tobject-position: top;\n\n​\nBasic usage\n​\nPositioning a replaced element\n\nUse the object-{side} utilities to specify how a replaced element’s content should be positioned within its container.\n\nobject-left-top\n\nobject-top\n\nobject-right-top\n\nobject-left\n\nobject-center\n\nobject-right\n\nobject-left-bottom\n\nobject-bottom\n\nobject-right-bottom\n\n<img class=\"object-none object-left-top bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-top bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-right-top bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-left bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-center bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-right bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-left-bottom bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-bottom bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n<img class=\"object-none object-right-bottom bg-yellow-300 w-24 h-24 ...\" src=\"...\">\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:object-top to only apply the object-top utility on hover.\n\n<img class=\"object-center hover:object-top\" src=\"...\">\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:object-top to apply the object-top utility at only medium screen sizes and above.\n\n<img class=\"object-center md:object-top\" src=\"...\">\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides nine object position utilities. You can customize these values by editing theme.objectPosition or theme.extend.objectPosition in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      objectPosition: {\n\n        'center-bottom': 'center bottom',\n\n      }\n\n    },\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off object-position value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<img class=\"object-[center_bottom]\" src=\"...\">\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nObject Fit\nOverflow\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nPositioning a replaced element\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Object Fit - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/object-fit",
    "html": "Layout\n\nObject Fit\n\nUtilities for controlling how a replaced element's content should be resized.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nobject-contain\tobject-fit: contain;\n\nobject-cover\tobject-fit: cover;\n\nobject-fill\tobject-fit: fill;\n\nobject-none\tobject-fit: none;\n\nobject-scale-down\tobject-fit: scale-down;\n\n​\nBasic usage\n​\nResizing to cover a container\n\nResize an element’s content to cover its container using object-cover.\n\n<div class=\"bg-indigo-300 ...\">\n  <img class=\"object-cover h-48 w-96 ...\">\n</div>\n​\nContaining an element\n\nResize an element’s content to stay contained within its container using object-contain.\n\n<div class=\"bg-purple-300 ...\">\n  <img class=\"object-contain h-48 w-96 ...\">\n</div>\n​\nStretching to fit a container\n\nStretch an element’s content to fit its container using object-fill.\n\n<div class=\"bg-sky-300 ...\">\n  <img class=\"object-fill h-48 w-96 ...\">\n</div>\n​\nScaling down if too large\n\nDisplay an element’s content at its original size but scale it down to fit its container if necessary using object-scale-down.\n\n<div class=\"bg-cyan-300\">\n  <img class=\"object-scale-down h-48 w-96 ...\">\n</div>\n​\nUsing an element’s original size\n\nDisplay an element’s content at its original size ignoring the container size using object-none.\n\n<div class=\"bg-yellow-300\">\n  <img class=\"object-none h-48 w-96 ...\">\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:object-scale-down to only apply the object-scale-down utility on hover.\n\n<img class=\"object-contain hover:object-scale-down\">\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:object-scale-down to apply the object-scale-down utility at only medium screen sizes and above.\n\n<img class=\"object-contain md:object-scale-down\">\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nIsolation\nObject Position\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nResizing to cover a container\nContaining an element\nStretching to fit a container\nScaling down if too large\nUsing an element's original size\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Isolation - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/isolation",
    "html": "Layout\n\nIsolation\n\nUtilities for controlling whether an element should explicitly create a new stacking context.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nisolate\tisolation: isolate;\n\nisolation-auto\tisolation: auto;\n\n​\nBasic usage\n​\nSetting the stacking context\n\nUse the isolate and isolation-auto utilities to control whether an element should explicitly create a new stacking context.\n\n<div class=\"isolate ...\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:isolation-auto to only apply the isolation-auto utility on hover.\n\n<div class=\"isolate hover:isolation-auto\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:isolation-auto to apply the isolation-auto utility at only medium screen sizes and above.\n\n<div class=\"isolate md:isolation-auto\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nClear\nObject Fit\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the stacking context\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Clear - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/clear",
    "html": "Layout\n\nClear\n\nUtilities for controlling the wrapping of content around an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nclear-left\tclear: left;\n\nclear-right\tclear: right;\n\nclear-both\tclear: both;\n\nclear-none\tclear: none;\n\n​\nBasic usage\n​\nClearing left-floated elements\n\nUse clear-left to position an element below any preceding left-floated elements.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-left ...\" src=\"path/to/image.jpg\">\n<img class=\"float-right ...\" src=\"path/to/image.jpg\">\n<p class=\"clear-left ...\">Maybe we can live without libraries...</p>\n​\nClearing right-floated elements\n\nUse clear-right to position an element below any preceding right-floated elements.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-left ...\" src=\"path/to/image.jpg\">\n<img class=\"float-right ...\" src=\"path/to/image.jpg\">\n<p class=\"clear-right ...\">Maybe we can live without libraries...</p>\n​\nClearing all floated elements\n\nUse clear-both to position an element below all preceding floated elements.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-left ...\" src=\"path/to/image.jpg\">\n<img class=\"float-right ...\" src=\"path/to/image.jpg\">\n<p class=\"clear-both ...\">Maybe we can live without libraries...</p>\n​\nDisabling applied clears\n\nUse clear-none to reset any clears that are applied to an element. This is the default value for the clear property.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-left ...\" src=\"path/to/image.jpg\">\n<img class=\"float-right ...\" src=\"path/to/image.jpg\">\n<p class=\"clear-none ...\">Maybe we can live without libraries...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:clear-none to only apply the clear-none utility on hover.\n\n<p class=\"clear-left hover:clear-none\">\n  <!-- ... -->\n</p>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:clear-none to apply the clear-none utility at only medium screen sizes and above.\n\n<p class=\"clear-left md:clear-none\">\n  <!-- ... -->\n</p>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nFloats\nIsolation\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nClearing left-floated elements\nClearing right-floated elements\nClearing all floated elements\nDisabling applied clears\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Floats - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/float",
    "html": "Layout\n\nFloats\n\nUtilities for controlling the wrapping of content around an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nfloat-right\tfloat: right;\n\nfloat-left\tfloat: left;\n\nfloat-none\tfloat: none;\n\n​\nBasic usage\n​\nFloating elements to the right\n\nUse float-right to float an element to the right of its container.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-right ...\" src=\"path/to/image.jpg\">\n<p>Maybe we can live without libraries, people like you and me. ...</p>\n​\nFloating elements to the left\n\nUse float-left to float an element to the left of its container.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-left ...\" src=\"path/to/image.jpg\">\n<p>Maybe we can live without libraries, people like you and me. ...</p>\n​\nDisabling a float\n\nUse float-none to reset any floats that are applied to an element. This is the default value for the float property.\n\nMaybe we can live without libraries, people like you and me. Maybe. Sure, we're too old to change the world, but what about that kid, sitting down, opening a book, right now, in a branch at the local library and finding drawings of pee-pees and wee-wees on the Cat in the Hat and the Five Chinese Brothers? Doesn't HE deserve better? Look. If you think this is about overdue fines and missing books, you'd better think again. This is about that kid's right to read a book without getting his mind warped! Or: maybe that turns you on, Seinfeld; maybe that's how y'get your kicks. You and your good-time buddies.\n\n<img class=\"float-none ...\" src=\"path/to/image.jpg\">\n<p>Maybe we can live without libraries, people like you and me. ...</p>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:float-right to only apply the float-right utility on hover.\n\n<img class=\"float-right hover:float-left\" src=\"path/to/image.jpg\">\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:float-right to apply the float-right utility at only medium screen sizes and above.\n\n<img class=\"float-right md:float-left\" src=\"path/to/image.jpg\">\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nDisplay\nClear\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nFloating elements to the right\nFloating elements to the left\nDisabling a float\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Display - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/display",
    "html": "Layout\n\nDisplay\n\nUtilities for controlling the display box type of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nblock\tdisplay: block;\n\ninline-block\tdisplay: inline-block;\n\ninline\tdisplay: inline;\n\nflex\tdisplay: flex;\n\ninline-flex\tdisplay: inline-flex;\n\ntable\tdisplay: table;\n\ninline-table\tdisplay: inline-table;\n\ntable-caption\tdisplay: table-caption;\n\ntable-cell\tdisplay: table-cell;\n\ntable-column\tdisplay: table-column;\n\ntable-column-group\tdisplay: table-column-group;\n\ntable-footer-group\tdisplay: table-footer-group;\n\ntable-header-group\tdisplay: table-header-group;\n\ntable-row-group\tdisplay: table-row-group;\n\ntable-row\tdisplay: table-row;\n\nflow-root\tdisplay: flow-root;\n\ngrid\tdisplay: grid;\n\ninline-grid\tdisplay: inline-grid;\n\ncontents\tdisplay: contents;\n\nlist-item\tdisplay: list-item;\n\nhidden\tdisplay: none;\n\n​\nBasic usage\n​\nBlock & Inline\n\nUse inline, inline-block, and block to control the flow of text and elements.\n\nWhen controlling the flow of text, using the CSS property display: inline will cause the text inside the element to wrap normally.\n\nWhile using the property display: inline-block will wrap the element to prevent the text inside from extending beyond its parent.\n\nLastly, using the property\ndisplay: block\nwill put the element on its own line and fill its parent.\n<div>\n  When controlling the flow of text, using the CSS property\n  <span class=\"inline\">display: inline</span>\n  will cause the text inside the element to wrap normally.\n\n  While using the property <span class=\"inline-block\">display: inline-block</span>\n  will wrap the element to prevent the text inside from extending beyond its parent.\n\n  Lastly, using the property <span class=\"block\">display: block</span>\n  will put the element on its own line and fill its parent.\n</div>\n​\nFlow Root\n\nUse flow-root to create a block-level element with its own block formatting context.\n\nWell, let me tell you something, funny boy. Y'know that little stamp, the one that says \"New York Public Library\"? Well that may not mean anything to you, but that means a lot to me. One whole hell of a lot.\nSure, go ahead, laugh if you want to. I've seen your type before: Flashy, making the scene, flaunting convention. Yeah, I know what you're thinking. What's this guy making such a big stink about old library books? Well, let me give you a hint, junior.\n<div class=\"p-4\">\n  <div class=\"flow-root ...\">\n    <div class=\"my-4 ...\">Well, let me tell you something, ...</div>\n  </div>\n  <div class=\"flow-root ...\">\n    <div class=\"my-4 ...\">Sure, go ahead, laugh if you want...</div>\n  </div>\n</div>\n​\nFlex\n\nUse flex to create a block-level flex container.\n\nAndrew Alfred\nTechnical advisor\n<div class=\"flex items-center\">\n  <img src=\"path/to/image.jpg\">\n  <div>\n    <strong>Andrew Alfred</strong>\n    <span>Technical advisor</span>\n  </div>\n</div>\n​\nInline Flex\n\nUse inline-flex to create an inline flex container that flows with text.\n\nToday I spent most of the day researching ways to take advantage of the fact that bottles can be returned for 10 cents in Michigan, but only 5 cents here. \nKramer\n keeps telling me there is no way to make it work, that he has run the numbers on every possible approach, but I just have to believe there's a way to make it work, there's simply too much opportunity here.\n\n<p>\n  Today I spent most of the day researching ways to ...\n  <span class=\"inline-flex items-baseline\">\n    <img src=\"path/to/image.jpg\" alt=\"\" class=\"self-center w-5 h-5 rounded-full mx-1\" />\n    <span>Kramer</span>\n  </span>\n  keeps telling me there is no way to make it work, that ...\n</p>\n​\nGrid\n\nUse grid to create a grid container.\n\n01\n02\n03\n04\n05\n06\n07\n08\n09\n<div class=\"grid gap-4 grid-cols-3 grid-rows-3\">\n  <!-- ... -->\n</div>\n​\nInline Grid\n\nUse inline-grid to create an inline grid container.\n\n01\n02\n03\n04\n05\n06\n \n01\n02\n03\n04\n05\n06\n<span class=\"inline-grid grid-cols-3 gap-4\">\n  <span>01</span>\n  <span>02</span>\n  <span>03</span>\n  <span>04</span>\n  <span>05</span>\n  <span>06</span>\n</span>\n<span class=\"inline-grid grid-cols-3 gap-4\">\n  <span>01</span>\n  <span>02</span>\n  <span>03</span>\n  <span>04</span>\n  <span>05</span>\n  <span>06</span>\n</span>\n​\nContents\n\nUse contents to create a “phantom” container whose children act like direct children of the parent.\n\n01\n02\n03\n04\n<div class=\"flex ...\">\n  <div class=\"flex-1 ...\">01</div>\n  <div class=\"contents\">\n    <div class=\"flex-1 ...\">02</div>\n    <div class=\"flex-1 ...\">03</div>\n  </div>\n  <div class=\"flex-1 ...\">04</div>\n</div>\n​\nTable\n\nUse the table, table-row, table-cell, table-caption, table-column, table-column-group, table-header-group, table-row-group, and table-footer-group utilities to create elements that behave like their respective table elements.\n\nSong\tArtist\tYear\nThe Sliding Mr. Bones (Next Stop, Pottersville)\tMalcolm Lockyer\t1961\nWitchy Woman\tThe Eagles\t1972\nShining Star\tEarth, Wind, and Fire\t1975\n<div class=\"table w-full ...\">\n  <div class=\"table-header-group ...\">\n    <div class=\"table-row\">\n      <div class=\"table-cell text-left ...\">Song</div>\n      <div class=\"table-cell text-left ...\">Artist</div>\n      <div class=\"table-cell text-left ...\">Year</div>\n    </div>\n  </div>\n  <div class=\"table-row-group\">\n    <div class=\"table-row\">\n      <div class=\"table-cell ...\">The Sliding Mr. Bones (Next Stop, Pottersville)</div>\n      <div class=\"table-cell ...\">Malcolm Lockyer</div>\n      <div class=\"table-cell ...\">1961</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell ...\">Witchy Woman</div>\n      <div class=\"table-cell ...\">The Eagles</div>\n      <div class=\"table-cell ...\">1972</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell ...\">Shining Star</div>\n      <div class=\"table-cell ...\">Earth, Wind, and Fire</div>\n      <div class=\"table-cell ...\">1975</div>\n    </div>\n  </div>\n</div>\n​\nHidden\n\nUse hidden to set an element to display: none and remove it from the page layout (compare with invisible from the visibility documentation).\n\n02\n03\n<div class=\"flex ...\">\n  <div class=\"hidden ...\">01</div>\n  <div>02</div>\n  <div>03</div>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:inline-flex to only apply the inline-flex utility on hover.\n\n<div class=\"flex hover:inline-flex\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:inline-flex to apply the inline-flex utility at only medium screen sizes and above.\n\n<div class=\"flex md:inline-flex\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBox Sizing\nFloats\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nBlock & Inline\nFlow Root\nFlex\nInline Flex\nGrid\nInline Grid\nContents\nTable\nHidden\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Box Sizing - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/box-sizing",
    "html": "Layout\n\nBox Sizing\n\nUtilities for controlling how the browser should calculate an element's total size.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbox-border\tbox-sizing: border-box;\n\nbox-content\tbox-sizing: content-box;\n\n​\nBasic usage\n​\nIncluding borders and padding\n\nUse box-border to set an element’s box-sizing to border-box, telling the browser to include the element’s borders and padding when you give it a height or width.\n\nThis means a 100px × 100px element with a 2px border and 4px of padding on all sides will be rendered as 100px × 100px, with an internal content area of 88px × 88px.\n\nTailwind makes this the default for all elements in our preflight base styles.\n\n128px\n128px\n<div class=\"box-border h-32 w-32 p-4 border-4 ...\">\n  <!-- ... -->\n</div>\n​\nExcluding borders and padding\n\nUse box-content to set an element’s box-sizing to content-box, telling the browser to add borders and padding on top of the element’s specified width or height.\n\nThis means a 100px × 100px element with a 2px border and 4px of padding on all sides will actually be rendered as 112px × 112px, with an internal content area of 100px × 100px.\n\n128px\n128px\n<div class=\"box-content h-32 w-32 p-4 border-4 ...\">\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:box-content to only apply the box-content utility on hover.\n\n<div class=\"box-border hover:box-content\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:box-content to apply the box-content utility at only medium screen sizes and above.\n\n<div class=\"box-border md:box-content\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBox Decoration Break\nDisplay\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nIncluding borders and padding\nExcluding borders and padding\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Box Decoration Break - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/box-decoration-break",
    "html": "Layout\n\nBox Decoration Break\n\nUtilities for controlling how element fragments should be rendered across multiple lines, columns, or pages.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbox-decoration-clone\tbox-decoration-break: clone;\n\nbox-decoration-slice\tbox-decoration-break: slice;\n\n​\nBasic usage\n​\nSetting the box decoration break\n\nUse the box-decoration-slice and box-decoration-clone utilities to control whether properties like background, border, border-image, box-shadow, clip-page, margin, and padding should be rendered as if the element were one continuous fragment, or distinct blocks.\n\nbox-decoration-slice\n\nHello\nWorld\n\nbox-decoration-clone\n\nHello\nWorld\n<span class=\"box-decoration-slice bg-gradient-to-r from-indigo-600 to-pink-500 text-white px-2 ...\">\n  Hello<br />\n  World\n</span>\n<span class=\"box-decoration-clone bg-gradient-to-r from-indigo-600 to-pink-500 text-white px-2 ...\">\n  Hello<br />\n  World\n</span>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:box-decoration-slice to only apply the box-decoration-slice utility on hover.\n\n<div class=\"box-decoration-clone hover:box-decoration-slice\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:box-decoration-slice to apply the box-decoration-slice utility at only medium screen sizes and above.\n\n<div class=\"box-decoration-clone md:box-decoration-slice\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBreak Inside\nBox Sizing\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the box decoration break\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Break Inside - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/break-inside",
    "html": "Layout\n\nBreak Inside\n\nUtilities for controlling how a column or page should break within an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbreak-inside-auto\tbreak-inside: auto;\n\nbreak-inside-avoid\tbreak-inside: avoid;\n\nbreak-inside-avoid-page\tbreak-inside: avoid-page;\n\nbreak-inside-avoid-column\tbreak-inside: avoid-column;\n\n​\nBasic usage\n​\nSetting the break-inside behavior\n\nUse the break-inside-{value} utilities to control how a column or page break should behave within an element. For example, use the break-inside-avoid-column utility to avoid a column break within an element.\n\n<div class=\"columns-2\">\n  <p>Well, let me tell you something, ...</p>\n  <p class=\"break-inside-avoid-column\">Sure, go ahead, laugh...</p>\n  <p>Maybe we can live without...</p>\n  <p>Look. If you think this is...</p>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:break-inside-avoid-column to only apply the break-inside-avoid-column utility on hover.\n\n<div class=\"hover:break-inside-avoid-column\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:break-inside-avoid-column to apply the break-inside-avoid-column utility at only medium screen sizes and above.\n\n<div class=\"md:break-inside-avoid-column\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBreak Before\nBox Decoration Break\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the break-inside behavior\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Columns - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/columns",
    "html": "Layout\n\nColumns\n\nUtilities for controlling the number of columns within an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\ncolumns-1\tcolumns: 1;\n\ncolumns-2\tcolumns: 2;\n\ncolumns-3\tcolumns: 3;\n\ncolumns-4\tcolumns: 4;\n\ncolumns-5\tcolumns: 5;\n\ncolumns-6\tcolumns: 6;\n\ncolumns-7\tcolumns: 7;\n\ncolumns-8\tcolumns: 8;\n\ncolumns-9\tcolumns: 9;\n\ncolumns-10\tcolumns: 10;\n\ncolumns-11\tcolumns: 11;\n\ncolumns-12\tcolumns: 12;\n\ncolumns-auto\tcolumns: auto;\n\ncolumns-3xs\tcolumns: 16rem; /* 256px */\n\ncolumns-2xs\tcolumns: 18rem; /* 288px */\n\ncolumns-xs\tcolumns: 20rem; /* 320px */\n\ncolumns-sm\tcolumns: 24rem; /* 384px */\n\ncolumns-md\tcolumns: 28rem; /* 448px */\n\ncolumns-lg\tcolumns: 32rem; /* 512px */\n\ncolumns-xl\tcolumns: 36rem; /* 576px */\n\ncolumns-2xl\tcolumns: 42rem; /* 672px */\n\ncolumns-3xl\tcolumns: 48rem; /* 768px */\n\ncolumns-4xl\tcolumns: 56rem; /* 896px */\n\ncolumns-5xl\tcolumns: 64rem; /* 1024px */\n\ncolumns-6xl\tcolumns: 72rem; /* 1152px */\n\ncolumns-7xl\tcolumns: 80rem; /* 1280px */\n\n​\nBasic usage\n​\nAdding based on column count\n\nUse the columns-{count} utilities to set the number of columns that should be created for the content within an element. The column width will be automatically adjusted to accommodate that number.\n\n<div class=\"columns-3 ...\">\n  <img class=\"w-full aspect-video ...\" src=\"...\" />\n  <img class=\"w-full aspect-square ...\" src=\"...\" />\n  <!-- ... -->\n</div>\n​\nAdding based on column width\n\nUse the columns-{width} utilities to set the ideal column width for the content within an element, with the number of columns (the count) automatically adjusting to accommodate that value.\n\nThis “t-shirt” scale is the same as the max-width scale, with the addition of 2xs and 3xs, since smaller columns may be desirable.\n\nResize the example to see the expected behaviour\n\n<div class=\"columns-3xs ...\">\n  <img class=\"w-full aspect-video ...\" src=\"...\" />\n  <img class=\"w-full aspect-square ...\" src=\"...\" />\n  <!-- ... -->\n</div>\n​\nSetting the column gap\n\nTo specify the width between columns, you can use the gap-x utilities:\n\n<div class=\"gap-8 columns-3 ...\">\n  <img class=\"w-full aspect-video ...\" src=\"...\" />\n  <img class=\"w-full aspect-square ...\" src=\"...\" />\n  <!-- ... -->\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:columns-3 to only apply the columns-3 utility on hover.\n\n<div class=\"columns-2 hover:columns-3\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:columns-3 to apply the columns-3 utility at only medium screen sizes and above.\n\n<div class=\"columns-2 md:columns-3\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides a column count scale from 1-12 as well as a column t-shirt scale from 3xs-7xl. You can customize these values by editing theme.columns or theme.extend.columns in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      columns: {\n\n        '4xs': '14rem',\n\n      }\n\n    },\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off columns value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<div class=\"columns-[10rem]\">\n  <!-- ... -->\n</div>\n\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nContainer\nBreak After\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nAdding based on column count\nAdding based on column width\nSetting the column gap\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Break Before - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/break-before",
    "html": "Layout\n\nBreak Before\n\nUtilities for controlling how a column or page should break before an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbreak-before-auto\tbreak-before: auto;\n\nbreak-before-avoid\tbreak-before: avoid;\n\nbreak-before-all\tbreak-before: all;\n\nbreak-before-avoid-page\tbreak-before: avoid-page;\n\nbreak-before-page\tbreak-before: page;\n\nbreak-before-left\tbreak-before: left;\n\nbreak-before-right\tbreak-before: right;\n\nbreak-before-column\tbreak-before: column;\n\n​\nBasic usage\n​\nSetting the break-before behavior\n\nUse the break-before-{value} utilities to control how a column or page break should behave before an element. For example, use the break-before-column utility to force a column break before an element.\n\n<div class=\"columns-2\">\n  <p>Well, let me tell you something, ...</p>\n  <p class=\"break-before-column\">Sure, go ahead, laugh...</p>\n  <p>Maybe we can live without...</p>\n  <p>Look. If you think this is...</p>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:break-before-column to only apply the break-before-column utility on hover.\n\n<div class=\"hover:break-before-column\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:break-before-column to apply the break-before-column utility at only medium screen sizes and above.\n\n<div class=\"md:break-before-column\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nBreak After\nBreak Inside\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the break-before behavior\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Break After - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/break-after",
    "html": "Layout\n\nBreak After\n\nUtilities for controlling how a column or page should break after an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\nbreak-after-auto\tbreak-after: auto;\n\nbreak-after-avoid\tbreak-after: avoid;\n\nbreak-after-all\tbreak-after: all;\n\nbreak-after-avoid-page\tbreak-after: avoid-page;\n\nbreak-after-page\tbreak-after: page;\n\nbreak-after-left\tbreak-after: left;\n\nbreak-after-right\tbreak-after: right;\n\nbreak-after-column\tbreak-after: column;\n\n​\nBasic usage\n​\nSetting the break-after behavior\n\nUse the break-after-{value} utilities to control how a column or page break should behave after an element. For example, use the break-after-column utility to force a column break after an element.\n\n<div class=\"columns-2\">\n  <p>Well, let me tell you something, ...</p>\n  <p class=\"break-after-column\">Sure, go ahead, laugh...</p>\n  <p>Maybe we can live without...</p>\n  <p>Look. If you think this is...</p>\n</div>\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:break-after-column to only apply the break-after-column utility on hover.\n\n<div class=\"hover:break-after-column\">\n  <!-- ... -->\n</div>\n\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:break-after-column to apply the break-after-column utility at only medium screen sizes and above.\n\n<div class=\"md:break-after-column\">\n  <!-- ... -->\n</div>\n\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\nColumns\nBreak Before\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the break-after behavior\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Aspect Ratio - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/aspect-ratio",
    "html": "Layout\n\nAspect Ratio\n\nUtilities for controlling the aspect ratio of an element.\n\n​\nQuick reference\nClass\n\t\nProperties\n\naspect-auto\taspect-ratio: auto;\n\naspect-square\taspect-ratio: 1 / 1;\n\naspect-video\taspect-ratio: 16 / 9;\n\n​\nBasic usage\n​\nSetting the aspect ratio\n\nUse the aspect-{ratio} utilities to set the desired aspect ratio of an element.\n\n<iframe class=\"w-full aspect-video ...\" src=\"https://www.youtube.com/...\"></iframe>\n\nTailwind doesn’t include a large set of aspect ratio values out of the box since it’s easier to just use arbitrary values. See the arbitrary values section for more information.\n\n​\nBrowser support\n\nThe aspect-{ratio} utilities use the native aspect-ratio CSS property, which was not supported in Safari until version 15. Until Safari 15 is popularized, Tailwind’s aspect-ratio plugin is a good alternative.\n\n​\nApplying conditionally\n​\nHover, focus, and other states\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use hover:aspect-square to only apply the aspect-square utility on hover.\n\n<iframe class=\"w-full aspect-video hover:aspect-square\" src=\"https://www.youtube.com/...\"></iframe>\n\nFor a complete list of all available state modifiers, check out the Hover, Focus, & Other States documentation.\n\n​\nBreakpoints and media queries\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use md:aspect-square to apply the aspect-square utility at only medium screen sizes and above.\n\n<iframe class=\"w-full aspect-video md:aspect-square\" src=\"https://www.youtube.com/...\"></iframe>\n\nTo learn more, check out the documentation on Responsive Design, Dark Mode and other media query modifiers.\n\n​\nUsing custom values\n​\nCustomizing your theme\n\nBy default, Tailwind provides a minimal set of aspect-ratio utilities. You can customize these values by editing theme.aspectRatio or theme.extend.aspectRatio in your tailwind.config.js file.\n\ntailwind.config.js\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      aspectRatio: {\n\n        '4/3': '4 / 3',\n\n      },\n\n    }\n\n  }\n\n}\n\n\nLearn more about customizing the default theme in the theme customization documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off aspect-ratio value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n<iframe class=\"w-full aspect-[4/3]\" src=\"https://www.youtube.com/...\"></iframe>\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nPreflight\nContainer\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nSetting the aspect ratio\nBrowser support\nApplying conditionally\nHover, focus, and other states\nBreakpoints and media queries\nUsing custom values\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Container - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/container",
    "html": "Layout\n\nContainer\n\nA component for fixing an element's width to the current breakpoint.\n\n​\nQuick reference\nClass\n\t\nBreakpoint\n\t\nProperties\n\ncontainer\tNone\twidth: 100%;\nsm (640px)\tmax-width: 640px;\nmd (768px)\tmax-width: 768px;\nlg (1024px)\tmax-width: 1024px;\nxl (1280px)\tmax-width: 1280px;\n2xl (1536px)\tmax-width: 1536px;\n​\nBasic usage\n​\nUsing the container\n\nThe container class sets the max-width of an element to match the min-width of the current breakpoint. This is useful if you’d prefer to design for a fixed set of screen sizes instead of trying to accommodate a fully fluid viewport.\n\nNote that unlike containers you might have used in other frameworks, Tailwind’s container does not center itself automatically and does not have any built-in horizontal padding.\n\nTo center a container, use the mx-auto utility:\n\n<div class=\"container mx-auto\">\n  <!-- ... -->\n</div>\n\nTo add horizontal padding, use the px-{size} utilities:\n\n<div class=\"container mx-auto px-4\">\n  <!-- ... -->\n</div>\n\nIf you’d like to center your containers by default or include default horizontal padding, see the customization options below.\n\n​\nApplying conditionally\n​\nResponsive variants\n\nThe container class also includes responsive variants like md:container by default that allow you to make something behave like a container at only a certain breakpoint and up:\n\n<!-- Full-width fluid until the `md` breakpoint, then lock to container -->\n<div class=\"md:container md:mx-auto\">\n  <!-- ... -->\n</div>\n​\nCustomizing\n​\nCentering by default\n\nTo center containers by default, set the center option to true in the theme.container section of your config file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    container: {\n      center: true,\n    },\n  },\n}\n​\nAdding horizontal padding\n\nTo add horizontal padding by default, specify the amount of padding you’d like using the padding option in the theme.container section of your config file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    container: {\n      padding: '2rem',\n    },\n  },\n}\n\nIf you want to specify a different padding amount for each breakpoint, use an object to provide a default value and any breakpoint-specific overrides:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    container: {\n      padding: {\n        DEFAULT: '1rem',\n        sm: '2rem',\n        lg: '4rem',\n        xl: '5rem',\n        '2xl': '6rem',\n      },\n    },\n  },\n};\nAspect Ratio\nColumns\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nQuick reference\nBasic usage\nUsing the container\nApplying conditionally\nResponsive variants\nCustomizing\nCentering by default\nAdding horizontal padding\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Preflight - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/preflight",
    "html": "Base Styles\n\nPreflight\n\nAn opinionated set of base styles for Tailwind projects.\n\n​\nOverview\n\nBuilt on top of modern-normalize, Preflight is a set of base styles for Tailwind projects that are designed to smooth over cross-browser inconsistencies and make it easier for you to work within the constraints of your design system.\n\nTailwind automatically injects these styles when you include @tailwind base in your CSS:\n\n@tailwind base; /* Preflight will be injected here */\n\n@tailwind components;\n\n@tailwind utilities;\n\nWhile most of the styles in Preflight are meant to go unnoticed — they simply make things behave more like you’d expect them to — some are more opinionated and can be surprising when you first encounter them.\n\nFor a complete reference of all the styles applied by Preflight, see the stylesheet.\n\n​\nDefault margins are removed\n\nPreflight removes all of the default margins from elements like headings, blockquotes, paragraphs, etc.\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nThis makes it harder to accidentally rely on margin values applied by the user-agent stylesheet that are not part of your spacing scale.\n\n​\nHeadings are unstyled\n\nAll heading elements are completely unstyled by default, and have the same font-size and font-weight as normal text.\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nThe reason for this is two-fold:\n\nIt helps you avoid accidentally deviating from your type scale. By default, browsers assign sizes to headings that don’t exist in Tailwind’s default type scale, and aren’t guaranteed to exist in your own type scale.\nIn UI development, headings should often be visually de-emphasized. Making headings unstyled by default means any styling you apply to headings happens consciously and deliberately.\n\nYou can always add default header styles to your project by adding your own base styles.\n\nIf you’d like to selectively introduce sensible default heading styles into article-style parts of a page, we recommend the @tailwindcss/typography plugin.\n\n​\nLists are unstyled\n\nOrdered and unordered lists are unstyled by default, with no bullets/numbers and no margin or padding.\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nIf you’d like to style a list, you can do so using the list-style-type and list-style-position utilities:\n\n<ul class=\"list-disc list-inside\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n</ul>\n\nYou can always add default list styles to your project by adding your own base styles.\n\nIf you’d like to selectively introduce default list styles into article-style parts of a page, we recommend the @tailwindcss/typography plugin.\n\n​\nAccessibility considerations\n\nUnstyled lists are not announced as lists by VoiceOver. If your content is truly a list but you would like to keep it unstyled, add a “list” role to the element:\n\n<ul role=\"list\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n</ul>\n​\nImages are block-level\n\nImages and other replaced elements (like svg, video, canvas, and others) are display: block by default.\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n\nThis helps to avoid unexpected alignment issues that you often run into using the browser default of display: inline.\n\nIf you ever need to make one of these elements inline instead of block, simply use the inline utility:\n\n<img class=\"inline\" src=\"...\" alt=\"...\">\n​\nImages are constrained to the parent width\n\nImages and videos are constrained to the parent width in a way that preserves their intrinsic aspect ratio.\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\nThis prevents them from overflowing their containers and makes them responsive by default. If you ever need to override this behavior, use the max-w-none utility:\n\n<img class=\"max-w-none\" src=\"...\" alt=\"...\">\n​\nBorder styles are reset globally\n\nIn order to make it easy to add a border by simply adding the border class, Tailwind overrides the default border styles for all elements with the following rules:\n\n*,\n::before,\n::after {\n  border-width: 0;\n  border-style: solid;\n  border-color: theme('borderColor.DEFAULT', currentColor);\n}\n\nSince the border class only sets the border-width property, this reset ensures that adding that class always adds a solid 1px border using your configured default border color.\n\nThis can cause some unexpected results when integrating certain third-party libraries, like Google maps for example.\n\nWhen you run into situations like this, you can work around them by overriding the Preflight styles with your own custom CSS:\n\n.google-map * {\n  border-style: none;\n}\n​\nExtending Preflight\n\nIf you’d like to add your own base styles on top of Preflight, simply add them to your CSS using the @layer base directive:\n\n@tailwind base;\n\n@layer base {\n  h1 {\n    @apply text-2xl;\n  }\n  h2 {\n    @apply text-xl;\n  }\n  h3 {\n    @apply text-lg;\n  }\n  a {\n    @apply text-blue-600 underline;\n  }\n}\n\n@tailwind components;\n\n@tailwind utilities;\n\nLearn more in the adding base styles documentation.\n\n​\nDisabling Preflight\n\nIf you’d like to completely disable Preflight — perhaps because you’re integrating Tailwind into an existing project or because you’d like to provide your own base styles — all you need to do is set preflight to false in the corePlugins section of your tailwind.config.js file:\n\ntailwind.config.js\nmodule.exports = {\n\n  corePlugins: {\n\n    preflight: false,\n\n  }\n\n}\n\nPresets\nAspect Ratio\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nOverview\nDefault margins are removed\nHeadings are unstyled\nLists are unstyled\nAccessibility considerations\nImages are block-level\nImages are constrained to the parent width\nBorder styles are reset globally\nExtending Preflight\nDisabling Preflight\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Plugins - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/plugins",
    "html": "Customization\n\nPlugins\n\nExtending Tailwind with reusable third-party plugins.\n\n​\nOverview\n\nPlugins let you register new styles for Tailwind to inject into the user’s stylesheet using JavaScript instead of CSS.\n\nTo get started with your first plugin, import Tailwind’s plugin function from tailwindcss/plugin. Then inside your plugins array, call the imported plugin function with an anonymous function as the first argument.\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    plugin(function({ addUtilities, addComponents, e, config }) {\n      // Add your custom styles here\n    }),\n  ]\n}\n\nPlugin functions receive a single object argument that can be destructured into several helper functions:\n\naddUtilities(), for registering new static utility styles\nmatchUtilities(), for registering new dynamic utility styles\naddComponents(), for registering new static component styles\nmatchComponents(), for registering new dynamic component styles\naddBase(), for registering new base styles\naddVariant(), for registering custom static variants\nmatchVariant(), for registering custom dynamic variants\ntheme(), for looking up values in the user’s theme configuration\nconfig(), for looking up values in the user’s Tailwind configuration\ncorePlugins(), for checking if a core plugin is enabled\ne(), for manually escaping strings meant to be used in class names\n​\nOfficial plugins\n\nWe’ve developed a handful of official plugins for popular features that for one reason or another don’t belong in core yet.\n\nPlugins can be added to your project by installing them via npm, then adding them to your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  plugins: [\n    require('@tailwindcss/typography'),\n    require('@tailwindcss/forms'),\n    require('@tailwindcss/aspect-ratio'),\n    require('@tailwindcss/container-queries'),\n  ]\n}\n​\nTypography\n\nThe @tailwindcss/typography plugin adds a set of prose classes that can be used to quickly add sensible typographic styles to content blocks that come from sources like markdown or a CMS database.\n\n<article class=\"prose lg:prose-xl\">\n  <h1>Garlic bread with cheese: What the science tells us</h1>\n  <p>\n    For years parents have espoused the health benefits of eating garlic bread with cheese to their\n    children, with the food earning such an iconic status in our culture that kids will often dress\n    up as warm, cheesy loaf for Halloween.\n  </p>\n  <p>\n    But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases\n    springing up around the country.\n  </p>\n  <!-- ... -->\n</article>\n\nLearn more about the typography plugin →\n\n​\nForms\n\nThe @tailwindcss/forms plugin adds an opinionated form reset layer that makes it easier to style form elements with utility classes.\n\n<!-- You can actually customize padding on a select element: -->\n<select class=\"px-4 py-3 rounded-full\">\n  <!-- ... -->\n</select>\n\n<!-- Or change a checkbox color using text color utilities: -->\n<input type=\"checkbox\" class=\"rounded text-pink-500\" />\n\nLearn more about the forms plugin →\n\n​\nAspect ratio\n\nThe @tailwindcss/aspect-ratio plugin is an alternative to native aspect-ratio support that works in older browsers, and adds aspect-w-{n} and aspect-h-{n} classes that can be combined to give an element a fixed aspect ratio.\n\n<div class=\"aspect-w-16 aspect-h-9\">\n  <iframe src=\"https://www.youtube.com/embed/dQw4w9WgXcQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\n\nLearn more about the aspect ratio plugin →\n\n​\nContainer queries\n\nThe @tailwindcss/container-queries plugin adds new @{size} variants like @sm and @md that let you style an element based on the dimensions of a parent marked with @container instead of the viewport.\n\n<div class=\"@container\">\n  <div class=\"@lg:text-sky-400\">\n    <!-- ... -->\n  </div>\n</div>\n\nLearn more about the container queries plugin →\n\n​\nAdding utilities\n\nThe addUtilities and matchUtilities functions allow you to register new styles in Tailwind’s utilities layer.\n\nLike with the utilities Tailwind includes by default, utilities added by a plugin will only be included in the generated CSS if they are actually being used in the project.\n\n​\nStatic utilities\n\nUse the addUtilities function to register simple static utilities that don’t support user-provided values:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    plugin(function({ addUtilities }) {\n      addUtilities({\n        '.content-auto': {\n          'content-visibility': 'auto',\n        },\n        '.content-hidden': {\n          'content-visibility': 'hidden',\n        },\n        '.content-visible': {\n          'content-visibility': 'visible',\n        },\n      })\n    })\n  ]\n}\n\nLearn more about how to represent your styles in JavaScript in the CSS-in-JS syntax reference.\n\n​\nDynamic utilities\n\nUse the matchUtilities function to register utilities that map to values defined in the user’s theme configuration:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  theme: {\n    tabSize: {\n      1: '1',\n      2: '2',\n      4: '4',\n      8: '8',\n    }\n  },\n  plugins: [\n    plugin(function({ matchUtilities, theme }) {\n      matchUtilities(\n        {\n          tab: (value) => ({\n            tabSize: value\n          }),\n        },\n        { values: theme('tabSize') }\n      )\n    })\n  ]\n}\n\nUtilities defined this way also support arbitrary values, which means you can use values not present in the theme using square bracket notation:\n\n<div class=\"tab-[13]\">\n  <!-- ... -->\n</div>\n​\nPrefix and important\n\nBy default, plugin utilities automatically respect the user’s prefix and important preferences.\n\nThat means that given this Tailwind configuration:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  prefix: 'tw-',\n  important: true,\n  // ...\n}\n\n…the example plugin above would generate the following CSS:\n\n.tw-content-auto {\n  content-visibility: auto !important;\n}\n.tw-content-hidden {\n  content-visibility: hidden !important;\n}\n.tw-content-visible {\n  content-visibility: visible !important;\n}\n​\nUsing with modifiers\n\nAny custom utilities added using addUtilities can automatically be used with modifiers:\n\n<div class=\"content-auto lg:content-visible\">\n  <!-- ... -->\n</div>\n\nLearn more in the Hover, Focus, and Other States documentation.\n\n​\nProviding default values\n\nUtility plugins can provide default values by including a configuration object as the second argument to the plugin function:\n\n./plugins/tab-size.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = plugin(function({ matchUtilities, theme }) {\n  matchUtilities(\n    {\n      tab: (value) => ({\n        tabSize: value\n      }),\n    },\n    { values: theme('tabSize') }\n  )\n}, {\n  theme: {\n    tabSize: {\n      1: '1',\n      2: '2',\n      4: '4',\n      8: '8',\n    }\n  }\n})\n\nThese values behave just like the values in the default configuration, and can be overridden or extended by the end user.\n\n​\nAdding components\n\nThe addComponents function allows you to register new styles in Tailwind’s components layer.\n\nUse it to add more opinionated, complex classes like buttons, form controls, alerts, etc; the sort of pre-built components you often see in other frameworks that you might need to override with utility classes.\n\nTo add new component styles from a plugin, call addComponents, passing in your styles using CSS-in-JS syntax:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    plugin(function({ addComponents }) {\n      addComponents({\n        '.btn': {\n          padding: '.5rem 1rem',\n          borderRadius: '.25rem',\n          fontWeight: '600',\n        },\n        '.btn-blue': {\n          backgroundColor: '#3490dc',\n          color: '#fff',\n          '&:hover': {\n            backgroundColor: '#2779bd'\n          },\n        },\n        '.btn-red': {\n          backgroundColor: '#e3342f',\n          color: '#fff',\n          '&:hover': {\n            backgroundColor: '#cc1f1a'\n          },\n        },\n      })\n    })\n  ]\n}\n\nLike with other component classes in Tailwind, component classes added by a plugin will only be included in the generated CSS if they are actually being used in the project.\n\n​\nPrefix and important\n\nBy default, component classes automatically respect the user’s prefix preference, but they are not affected by the user’s important preference.\n\nThat means that given this Tailwind configuration:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  prefix: 'tw-',\n  important: true,\n  // ...\n}\n\n…the example plugin above would generate the following CSS:\n\n.tw-btn {\n  padding: .5rem 1rem;\n  border-radius: .25rem;\n  font-weight: 600;\n}\n.tw-btn-blue {\n  background-color: #3490dc;\n  color: #fff;\n}\n.tw-btn-blue:hover {\n  background-color: #2779bd;\n}\n.tw-btn-red {\n  background-color: #e3342f;\n  color: #fff;\n}\n.tw-btn-red:hover {\n  background-color: #cc1f1a;\n}\n\nAlthough there’s rarely a good reason to make component declarations important, if you really need to do it you can always add !important manually:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    plugin(function({ addComponents }) {\n      addComponents({\n        '.btn': {\n          padding: '.5rem 1rem !important',\n          borderRadius: '.25rem !important',\n          fontWeight: '600 !important',\n        },\n        // ...\n      })\n    })\n  ]\n}\n\nAll classes in a selector will be prefixed by default, so if you add a more complex style like:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  prefix: 'tw-',\n  plugins: [\n    plugin(function({ addComponents }) {\n      const components = {\n        // ...\n        '.navbar-inverse a.nav-link': {\n            color: '#fff',\n        }\n      }\n\n      addComponents(components)\n    })\n  ]\n}\n\n…the following CSS would be generated:\n\n.tw-navbar-inverse a.tw-nav-link {\n    color: #fff;\n}\n​\nUsing with modifiers\n\nAny component classes added using addComponents can automatically be used with modifiers:\n\n<div class=\"btn md:btn-lg\">\n  <!-- ... -->\n</div>\n\nLearn more in the Hover, Focus, and Other States documentation.\n\n​\nAdding base styles\n\nThe addBase function allows you to register new styles in Tailwind’s base layer. Use it to add things like base typography styles, opinionated global resets, or @font-face rules.\n\nTo add new base styles from a plugin, call addBase, passing in your styles using CSS-in-JS syntax:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    plugin(function({ addBase, theme }) {\n      addBase({\n        'h1': { fontSize: theme('fontSize.2xl') },\n        'h2': { fontSize: theme('fontSize.xl') },\n        'h3': { fontSize: theme('fontSize.lg') },\n      })\n    })\n  ]\n}\n\nSince base styles are meant to target bare selectors like div or h1, they do not respect the user’s prefix or important configuration.\n\n​\nAdding variants\n\nThe addVariant and matchVariant functions allow you to register your own custom modifiers that can be used just like built-in variants like hover, focus, or supports.\n\n​\nStatic variants\n\nUse the addVariant function for simple custom variants, passing in the name of your custom variant, and a format string that represents how the selector should be modified.\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    plugin(function({ addVariant }) {\n      addVariant('optional', '&:optional')\n      addVariant('hocus', ['&:hover', '&:focus'])\n      addVariant('inverted-colors', '@media (inverted-colors: inverted)')\n    })\n  ]\n}\n\nThe first argument is the modifier name that users will use in their HTML, so the above example would make it possible to write classes like these:\n\n<form class=\"flex inverted-colors:outline ...\">\n  <input class=\"optional:border-gray-300 ...\" />\n  <button class=\"bg-blue-500 hocus:bg-blue-600\">...</button>\n</form>\n​\nDynamic variants\n\nUse the matchVariant function to register new parameterized variants like the built-in supports-*, data-*, and aria-* variants:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    plugin(function({ matchVariant }) {\n      matchVariant(\n        'nth',\n        (value) => {\n          return `&:nth-child(${value})`;\n        },\n        {\n          values: {\n            1: '1',\n            2: '2',\n            3: '3',\n          }\n        }\n      );\n    })\n  ]\n}\n\nVariants defined with matchVariant also support arbitrary values using square bracket notation:\n\n<div class=\"nth-[3n+1]:bg-blue-500 ...\">\n  <!-- ... -->\n</div>\n\nUse the sort option to control the source order of the generated CSS if needed to avoid precedence issues with other values that come from the same variant:\n\nmatchVariant(\"min\", (value) => `@media (min-width: ${value})`, {\n  sort(a, z) {\n    return parseInt(a.value) - parseInt(z.value);\n  },\n});\n​\nParent and sibling states\n\nYour custom modifiers won’t automatically work with Tailwind’s parent and sibling state modifiers.\n\nTo support the group-* and peer-* versions of your own custom modifiers, register them as separate variants using the special :merge directive to ensure the .group and .peer classes only appear once in the final selector.\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\n\n\nmodule.exports = {\n\n  // ...\n\n  plugins: [\n\n    plugin(function({ addVariant }) {\n\n      addVariant('optional', '&:optional')\n\n      addVariant('group-optional', ':merge(.group):optional &')\n\n      addVariant('peer-optional', ':merge(.peer):optional ~ &')\n\n    })\n\n  ]\n\n}\n\n​\nExtending the configuration\n\nPlugins can merge their own set of configuration values into the user’s tailwind.config.js configuration by providing an object as the second argument to the plugin function:\n\n./plugins/tab-size.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = plugin(function({ matchUtilities, theme }) {\n  matchUtilities(\n    {\n      tab: (value) => ({\n        tabSize: value\n      }),\n    },\n    { values: theme('tabSize') }\n  )\n}, {\n  theme: {\n    tabSize: {\n      1: '1',\n      2: '2',\n      4: '4',\n      8: '8',\n    }\n  }\n})\n\nThis can be useful for things like providing default theme values for the classes your plugin generates.\n\n​\nExposing options\n\nSometimes it makes sense for a plugin to be configurable in a way that doesn’t really belong under theme, like perhaps you want users to be able to customize the class name your plugin uses.\n\nFor cases like this, you can use plugin.withOptions to define a plugin that can be invoked with a configuration object. This API is similar to the regular plugin API, except each argument should be a function that receives the user’s options and returns the value that you would have normally passed in using the regular API:\n\n./plugins/markdown.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = plugin.withOptions(function (options = {}) {\n  return function({ addComponents }) {\n    const className = options.className ?? 'markdown'\n\n    addComponents({\n      [`.${className}`]: {\n        // ...\n      }\n    })\n  }\n}, function (options) {\n  return {\n    theme: {\n      markdown: {\n        // ...\n      }\n    },\n  }\n})\n\nThe user would invoke your plugin passing along their options when registering it in their plugins configuration:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    // ...\n  },\n  plugins: [\n    require('./plugins/markdown.js')({\n      className: 'wysiwyg'\n    })\n  ],\n}\n\nThe user can also register plugins created this way normally without invoking them if they don’t need to pass in any custom options:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    // ...\n  },\n  plugins: [\n    require('./plugins/markdown.js')\n  ],\n}\n​\nCSS-in-JS syntax\n\nTailwind’s plugin system expects CSS rules written as JavaScript objects, using the same sort of syntax you might recognize from CSS-in-JS libraries like Emotion, powered by postcss-js under-the-hood.\n\nConsider this simple CSS rule:\n\n.card {\n  background-color: #fff;\n  border-radius: .25rem;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n\nTranslating this to a CSS-in-JS object would look like this:\n\naddComponents({\n  '.card': {\n    'background-color': '#fff',\n    'border-radius': '.25rem',\n    'box-shadow': '0 2px 4px rgba(0,0,0,0.2)',\n  }\n})\n\nFor convenience, property names can also be written in camelCase and will be automatically translated to dash-case:\n\naddComponents({\n  '.card': {\n    backgroundColor: '#fff',\n    borderRadius: '.25rem',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n  }\n})\n\nNesting is also supported (powered by postcss-nested), using the same syntax you might be familiar with from Sass or Less:\n\naddComponents({\n  '.card': {\n    backgroundColor: '#fff',\n    borderRadius: '.25rem',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    '&:hover': {\n      boxShadow: '0 10px 15px rgba(0,0,0,0.2)',\n    },\n    '@media (min-width: 500px)': {\n      borderRadius: '.5rem',\n    }\n  }\n})\n\nMultiple rules can be defined in the same object:\n\naddComponents({\n  '.btn': {\n    padding: '.5rem 1rem',\n    borderRadius: '.25rem',\n    fontWeight: '600',\n  },\n  '.btn-blue': {\n    backgroundColor: '#3490dc',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#2779bd'\n    },\n  },\n  '.btn-red': {\n    backgroundColor: '#e3342f',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#cc1f1a'\n    },\n  },\n})\n\n…or as an array of objects in case you need to repeat the same key:\n\naddComponents([\n  {\n    '@media (min-width: 500px)': {\n      // ...\n    }\n  },\n  {\n    '@media (min-width: 500px)': {\n      // ...\n    }\n  },\n  {\n    '@media (min-width: 500px)': {\n      // ...\n    }\n  },\n])\nSpacing\nPresets\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nOverview\nOfficial plugins\nTypography\nForms\nAspect ratio\nContainer queries\nAdding utilities\nStatic utilities\nDynamic utilities\nPrefix and important\nUsing with modifiers\nProviding default values\nAdding components\nPrefix and important\nUsing with modifiers\nAdding base styles\nAdding variants\nStatic variants\nDynamic variants\nParent and sibling states\nExtending the configuration\nExposing options\nCSS-in-JS syntax\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Presets - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/presets",
    "html": "Customization\n\nPresets\n\nCreating your own reusable configuration presets.\n\nBy default, any configuration you add in your own tailwind.config.js file is intelligently merged with the default configuration, with your own configuration acting as a set of overrides and extensions.\n\nThe presets option lets you specify a different configuration to use as your base, making it easy to package up a set of customizations that you’d like to reuse across projects.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('@acmecorp/tailwind-base')\n  ],\n  // ...\n}\n\nThis can be very useful for teams that manage multiple Tailwind projects for the same brand where they want a single source of truth for colors, fonts, and other common customizations.\n\n​\nCreating a preset\n\nPresets are just regular Tailwind configuration objects, taking the exact same shape as the configuration you would add in your tailwind.config.js file.\n\nmy-preset.js\n// Example preset\nmodule.exports = {\n  theme: {\n    colors: {\n      blue: {\n        light: '#85d7ff',\n        DEFAULT: '#1fb6ff',\n        dark: '#009eeb',\n      },\n      pink: {\n        light: '#ff7ce5',\n        DEFAULT: '#ff49db',\n        dark: '#ff16d1',\n      },\n      gray: {\n        darkest: '#1f2d3d',\n        dark: '#3c4858',\n        DEFAULT: '#c0ccda',\n        light: '#e0e6ed',\n        lightest: '#f9fafc',\n      }\n    },\n    fontFamily: {\n      sans: ['Graphik', 'sans-serif'],\n    },\n    extend: {\n      flexGrow: {\n        2: '2',\n        3: '3',\n      },\n      zIndex: {\n        60: '60',\n        70: '70',\n        80: '80',\n        90: '90',\n        100: '100',\n      },\n    }\n  },\n  plugins: [\n    require('@tailwindcss/typography'),\n    require('@tailwindcss/aspect-ratio'),\n  ],\n}\n\nAs you can see, presets can contain all of the configuration options you’re used to, including theme overrides and extensions, adding plugins, configuring a prefix, and so on. Read about how configurations are merged for more details.\n\nAssuming this preset was saved at ./my-preset.js, you would use it by adding it to the tailwind.config.js file in your actual project under the presets key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('./my-preset.js')\n  ],\n  // Customizations specific to this project would go here\n  theme: {\n    extend: {\n      minHeight: {\n        48: '12rem',\n      }\n    }\n  },\n}\n\nBy default, presets themselves extend Tailwind’s default configuration just like your own configuration would. If you’d like to create a preset that completely replaces the default configuration, include an empty presets key in the preset itself:\n\n// Example preset\nmodule.exports = {\n  presets: [],\n  theme: {\n    // ...\n  },\n  plugins: [\n    // ...\n  ],\n}\n\nFor more information, read about disabling the default configuration.\n\n​\nMerging logic in-depth\n\nProject-specific configurations (those found in your tailwind.config.js file) are merged against presets the same way they are merged against the default configuration.\n\nThe following options in tailwind.config.js simply replace the same option if present in a preset:\n\ncontent\ndarkMode\nprefix\nimportant\nvariantOrder\nseparator\nsafelist\n\nThe remaining options are each carefully merged in the way that makes the most sense for that option, explained in more detail below.\n\n​\nTheme\n\nThe theme object is merged shallowly, with top-level keys in tailwind.config.js replacing the same top-level keys in any presets. The exception to this is the extend key, which is collected across all configurations and applied on top of the rest of the theme configuration.\n\nLearn more about how the theme option works in the theme configuration documentation.\n\n​\nPresets\n\nThe presets array is merged across configurations, allowing presets to include their own presets, which can also include their own presets.\n\n​\nPlugins\n\nThe plugins array is merged across configurations to make it possible for a preset to register plugins while also allowing you to add additional plugins at the project-level.\n\nThis means it’s not possible to disable a plugin that has been added by a preset. If you find yourself wanting to disable a plugin in a preset, it’s a sign that you should probably remove that plugin from the preset and include it on a project-by-project basis instead, or split your preset into two presets.\n\n​\nCore plugins\n\nThe corePlugins option behaves differently depending on whether you configure it as an object or as an array.\n\nIf you configure corePlugins as an object, it is merged across configurations.\n\nmy-preset.js\nmodule.exports = {\n  // ...\n  corePlugins: {\n    float: false,\n  },\n}\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('./my-preset.js'),\n  ],\n  // This configuration will be merged\n  corePlugins: {\n    cursor: false\n  }\n}\n\nIf you configure corePlugins as an array, it replaces any corePlugins configuration provided by your configured preset(s).\n\nmy-preset.js\nmodule.exports = {\n  // ...\n  corePlugins: {\n    float: false,\n  },\n}\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('./example-preset.js'),\n  ],\n  // This will replace the configuration in the preset\n  corePlugins: ['float', 'padding', 'margin']\n}\n​\nExtending multiple presets\n\nThe presets option is an array and can accept multiple presets. This is useful if you want to split your reusable customizations up into composable chunks that can be imported independently.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('@acmecorp/tailwind-colors'),\n    require('@acmecorp/tailwind-fonts'),\n    require('@acmecorp/tailwind-spacing'),\n  ]\n}\n\nWhen adding multiple presets, it’s important to note that if they overlap in any way, they are resolved the same way your own customizations are resolved against a preset, and the last configuration wins.\n\nFor example, if both of these configurations provided a custom color palette (and were not using extend), the color palette from configuration-b would be used:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('@acmecorp/configuration-a'),\n    require('@acmecorp/configuration-b'),\n  ]\n}\n​\nDisabling the default configuration\n\nIf you’d like to completely disable the default configuration and start with no base configuration at all, set presets to an empty array:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [],\n  // ...\n}\n\nThis will completely disable all of Tailwind’s defaults, so no colors, font families, font sizes, spacing values, etc. will be generated at all.\n\nYou can also do this from within a preset if you’d like your preset to provide a complete design system on its own that doesn’t extend Tailwind’s defaults:\n\nmy-preset.js\nmodule.exports = {\n  presets: [],\n  // ...\n}\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  presets: [\n    require('./my-preset.js')\n  ],\n  // ...\n}\nPlugins\nPreflight\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nCreating a preset\nMerging logic in-depth\nTheme\nPresets\nPlugins\nCore plugins\nExtending multiple presets\nDisabling the default configuration\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Customizing Colors - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/customizing-colors",
    "html": "Customization\n\nCustomizing Colors\n\nCustomizing the default color palette for your project.\n\n​\nDefault color palette\n\nTailwind includes an expertly-crafted default color palette out-of-the-box that is a great starting point if you don’t have your own specific branding in mind.\n\nSlate\n50\n#f8fafc\n100\n#f1f5f9\n200\n#e2e8f0\n300\n#cbd5e1\n400\n#94a3b8\n500\n#64748b\n600\n#475569\n700\n#334155\n800\n#1e293b\n900\n#0f172a\n950\n#020617\nGray\n50\n#f9fafb\n100\n#f3f4f6\n200\n#e5e7eb\n300\n#d1d5db\n400\n#9ca3af\n500\n#6b7280\n600\n#4b5563\n700\n#374151\n800\n#1f2937\n900\n#111827\n950\n#030712\nZinc\n50\n#fafafa\n100\n#f4f4f5\n200\n#e4e4e7\n300\n#d4d4d8\n400\n#a1a1aa\n500\n#71717a\n600\n#52525b\n700\n#3f3f46\n800\n#27272a\n900\n#18181b\n950\n#09090b\nNeutral\n50\n#fafafa\n100\n#f5f5f5\n200\n#e5e5e5\n300\n#d4d4d4\n400\n#a3a3a3\n500\n#737373\n600\n#525252\n700\n#404040\n800\n#262626\n900\n#171717\n950\n#0a0a0a\nStone\n50\n#fafaf9\n100\n#f5f5f4\n200\n#e7e5e4\n300\n#d6d3d1\n400\n#a8a29e\n500\n#78716c\n600\n#57534e\n700\n#44403c\n800\n#292524\n900\n#1c1917\n950\n#0c0a09\nRed\n50\n#fef2f2\n100\n#fee2e2\n200\n#fecaca\n300\n#fca5a5\n400\n#f87171\n500\n#ef4444\n600\n#dc2626\n700\n#b91c1c\n800\n#991b1b\n900\n#7f1d1d\n950\n#450a0a\nOrange\n50\n#fff7ed\n100\n#ffedd5\n200\n#fed7aa\n300\n#fdba74\n400\n#fb923c\n500\n#f97316\n600\n#ea580c\n700\n#c2410c\n800\n#9a3412\n900\n#7c2d12\n950\n#431407\nAmber\n50\n#fffbeb\n100\n#fef3c7\n200\n#fde68a\n300\n#fcd34d\n400\n#fbbf24\n500\n#f59e0b\n600\n#d97706\n700\n#b45309\n800\n#92400e\n900\n#78350f\n950\n#451a03\nYellow\n50\n#fefce8\n100\n#fef9c3\n200\n#fef08a\n300\n#fde047\n400\n#facc15\n500\n#eab308\n600\n#ca8a04\n700\n#a16207\n800\n#854d0e\n900\n#713f12\n950\n#422006\nLime\n50\n#f7fee7\n100\n#ecfccb\n200\n#d9f99d\n300\n#bef264\n400\n#a3e635\n500\n#84cc16\n600\n#65a30d\n700\n#4d7c0f\n800\n#3f6212\n900\n#365314\n950\n#1a2e05\nGreen\n50\n#f0fdf4\n100\n#dcfce7\n200\n#bbf7d0\n300\n#86efac\n400\n#4ade80\n500\n#22c55e\n600\n#16a34a\n700\n#15803d\n800\n#166534\n900\n#14532d\n950\n#052e16\nEmerald\n50\n#ecfdf5\n100\n#d1fae5\n200\n#a7f3d0\n300\n#6ee7b7\n400\n#34d399\n500\n#10b981\n600\n#059669\n700\n#047857\n800\n#065f46\n900\n#064e3b\n950\n#022c22\nTeal\n50\n#f0fdfa\n100\n#ccfbf1\n200\n#99f6e4\n300\n#5eead4\n400\n#2dd4bf\n500\n#14b8a6\n600\n#0d9488\n700\n#0f766e\n800\n#115e59\n900\n#134e4a\n950\n#042f2e\nCyan\n50\n#ecfeff\n100\n#cffafe\n200\n#a5f3fc\n300\n#67e8f9\n400\n#22d3ee\n500\n#06b6d4\n600\n#0891b2\n700\n#0e7490\n800\n#155e75\n900\n#164e63\n950\n#083344\nSky\n50\n#f0f9ff\n100\n#e0f2fe\n200\n#bae6fd\n300\n#7dd3fc\n400\n#38bdf8\n500\n#0ea5e9\n600\n#0284c7\n700\n#0369a1\n800\n#075985\n900\n#0c4a6e\n950\n#082f49\nBlue\n50\n#eff6ff\n100\n#dbeafe\n200\n#bfdbfe\n300\n#93c5fd\n400\n#60a5fa\n500\n#3b82f6\n600\n#2563eb\n700\n#1d4ed8\n800\n#1e40af\n900\n#1e3a8a\n950\n#172554\nIndigo\n50\n#eef2ff\n100\n#e0e7ff\n200\n#c7d2fe\n300\n#a5b4fc\n400\n#818cf8\n500\n#6366f1\n600\n#4f46e5\n700\n#4338ca\n800\n#3730a3\n900\n#312e81\n950\n#1e1b4b\nViolet\n50\n#f5f3ff\n100\n#ede9fe\n200\n#ddd6fe\n300\n#c4b5fd\n400\n#a78bfa\n500\n#8b5cf6\n600\n#7c3aed\n700\n#6d28d9\n800\n#5b21b6\n900\n#4c1d95\n950\n#2e1065\nPurple\n50\n#faf5ff\n100\n#f3e8ff\n200\n#e9d5ff\n300\n#d8b4fe\n400\n#c084fc\n500\n#a855f7\n600\n#9333ea\n700\n#7e22ce\n800\n#6b21a8\n900\n#581c87\n950\n#3b0764\nFuchsia\n50\n#fdf4ff\n100\n#fae8ff\n200\n#f5d0fe\n300\n#f0abfc\n400\n#e879f9\n500\n#d946ef\n600\n#c026d3\n700\n#a21caf\n800\n#86198f\n900\n#701a75\n950\n#4a044e\nPink\n50\n#fdf2f8\n100\n#fce7f3\n200\n#fbcfe8\n300\n#f9a8d4\n400\n#f472b6\n500\n#ec4899\n600\n#db2777\n700\n#be185d\n800\n#9d174d\n900\n#831843\n950\n#500724\nRose\n50\n#fff1f2\n100\n#ffe4e6\n200\n#fecdd3\n300\n#fda4af\n400\n#fb7185\n500\n#f43f5e\n600\n#e11d48\n700\n#be123c\n800\n#9f1239\n900\n#881337\n950\n#4c0519\n\nBut when you do need to customize your palette, you can configure your colors under the colors key in the theme section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      // Configure your color palette here\n    }\n  }\n}\n\nWhen it comes to building a custom color palette, you can either configure your own custom colors from scratch if you know exactly what you want, or curate your colors from our extensive included color palette if you want a head start.\n\n​\nUsing custom colors\n\nIf you’d like to completely replace the default color palette with your own custom colors, add your colors directly under the theme.colors section of your configuration file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      'white': '#ffffff',\n      'purple': '#3f3cbb',\n      'midnight': '#121063',\n      'metal': '#565584',\n      'tahiti': '#3ab7bf',\n      'silver': '#ecebff',\n      'bubble-gum': '#ff77e9',\n      'bermuda': '#78dcca',\n    },\n  },\n}\n\nBy default, these colors will be made available everywhere in the framework where you use colors, like the text color utilities, border color utilities, background color utilities, and more.\n\n<div class=\"bg-midnight text-tahiti\">\n  <!-- ... -->\n</div>\n\nDon’t forget to include values like transparent and currentColor if you want to use them in your project.\n\n​\nColor object syntax\n\nWhen your palette includes multiple shades of the same color, it can be convenient to group them together using our nested color object syntax:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      'white': '#ffffff',\n      'tahiti': {\n        100: '#cffafe',\n        200: '#a5f3fc',\n        300: '#67e8f9',\n        400: '#22d3ee',\n        500: '#06b6d4',\n        600: '#0891b2',\n        700: '#0e7490',\n        800: '#155e75',\n        900: '#164e63',\n      },\n      // ...\n    },\n  },\n}\n\nThe nested keys will be combined with the parent key to form class names like bg-tahiti-400.\n\nLike many other places in Tailwind, the special DEFAULT key can be used when you want to define a value with no suffix:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      // ...\n      'tahiti': {\n        light: '#67e8f9',\n        DEFAULT: '#06b6d4',\n        dark: '#0e7490',\n      },\n      // ...\n    },\n  },\n}\n\nThis will create classes like bg-tahiti, bg-tahiti-light, and bg-tahiti-dark.\n\n​\nArbitrary values\n\nIf you need a one-off custom color in your project, consider using Tailwind’s arbitrary value notation to generate a class for that color on-demand instead of adding it to your theme:\n\nShare on Twitter\n<button class=\"bg-[#1da1f2] text-white ...\">\n  <svg><!-- ... --></svg>\n  Share on Twitter\n</button>\n\nLearn more in the using arbitrary values documentation.\n\n​\nGenerating colors\n\nIf you’re wondering how we automatically generated the 50–950 shades of each color, bad news — color is complicated and to get the absolute best results we picked all of Tailwind’s default colors by hand, meticulously balancing them by eye and testing them in real designs to make sure we were happy with them.\n\nIf you are creating your own custom color palette and don’t feel confident doing it by hand, UI Colors is a great tool that can give you a good starting point based on any custom color.\n\nTwo other useful tools we recommend for building your own palettes are Palettte and ColorBox — they won’t do the work for you but their interfaces are well-designed for doing this sort of work.\n\n​\nUsing the default colors\n\nIf you don’t have a set of completely custom colors in mind for your project, you can curate your colors from our default palette by importing tailwindcss/colors in your configuration file and choosing the colors you want to use:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      black: colors.black,\n      white: colors.white,\n      gray: colors.gray,\n      emerald: colors.emerald,\n      indigo: colors.indigo,\n      yellow: colors.yellow,\n    },\n  },\n}\n\nThis can be helpful if you want to deliberately limit your color palette and reduce the number of class names suggested by IntelliSense.\n\n​\nAliasing color names\n\nYou can also alias the colors in our default palette to make the names simpler and easier to remember:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\n\n\nmodule.exports = {\n\n  theme: {\n\n    colors: {\n\n      transparent: 'transparent',\n\n      current: 'currentColor',\n\n      black: colors.black,\n\n      white: colors.white,\n\n      gray: colors.slate,\n\n      green: colors.emerald,\n\n      purple: colors.violet,\n\n      yellow: colors.amber,\n\n      pink: colors.fuchsia,\n\n    },\n\n  },\n\n}\n\n\nThis is especially common for grays, as you usually only use one set in any given project and it’s nice to be able to type bg-gray-300 instead of bg-neutral-300 for example.\n\n​\nAdding additional colors\n\nIf you’d like to add a brand new color to the default palette, add it in the theme.extend.colors section of your configuration file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        brown: {\n          50: '#fdf8f6',\n          100: '#f2e8e5',\n          200: '#eaddd7',\n          300: '#e0cec7',\n          400: '#d2bab0',\n          500: '#bfa094',\n          600: '#a18072',\n          700: '#977669',\n          800: '#846358',\n          900: '#43302b',\n        },\n      }\n    },\n  },\n}\n\nYou can also use theme.extend.colors to add additional shades to an existing color if it’s needed for your design:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        blue: {\n          950: '#17275c',\n        },\n      }\n    },\n  },\n}\n​\nDisabling a default color\n\nIf you’d like to disable any of the default colors, the best approach is to override the default color palette and just include the colors you do want:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      current: 'currentColor',\n      black: colors.black,\n      white: colors.white,\n      gray: colors.gray,\n      emerald: colors.emerald,\n      indigo: colors.indigo,\n      yellow: colors.yellow,\n    },\n  },\n}\n​\nNaming your colors\n\nTailwind uses literal color names (like red, green, etc.) and a numeric scale (where 50 is light and 900 is dark) by default. We think this is the best choice for most projects, and have found it easier to maintain than using abstract names like primary or danger.\n\nThat said, you can name your colors in Tailwind whatever you like, and if you’re working on a project that needs to support multiple themes for example, it might make sense to use more abstract names:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      primary: '#5c6ac4',\n      secondary: '#ecc94b',\n      // ...\n    }\n  }\n}\n\nYou can configure those colors explicitly like we have above, or you can pull in colors from our default color palette and alias them:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\nmodule.exports = {\n  theme: {\n    colors: {\n      primary: colors.indigo,\n      secondary: colors.yellow,\n      neutral: colors.gray,\n    }\n  }\n}\n\nAgain, we recommend sticking to the default naming convention for most projects, and only using abstract names if you have a really good reason.\n\n​\nUsing CSS variables\n\nIf you’d like to define your colors as CSS variables, you’ll need to define those variables as just the color channels if you want them to work with the opacity modifier syntax:\n\nDefine your CSS variables as channels with no color space function\n\nmain.css\n@tailwind base;\n\n@tailwind components;\n\n@tailwind utilities;\n\n\n\n@layer base {\n\n  :root {\n\n    --color-primary: 255 115 179;\n\n    --color-secondary: 111 114 185;\n\n    /* ... */\n\n  }\n\n}\n\n\nDon’t include the color space function or opacity modifiers won’t work\n\nmain.css\n@tailwind base;\n\n@tailwind components;\n\n@tailwind utilities;\n\n\n\n@layer base {\n\n  :root {\n\n    --color-primary: rgb(255 115 179);\n\n    --color-secondary: rgb(111 114 185);\n\n    /* ... */\n\n  }\n\n}\n\n\nThen define your colors in your configuration file, being sure to include the color space you’re using, and the special <alpha-value> placeholder that Tailwind will use to inject the alpha value when using an opacity modifier:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      // Using modern `rgb`\n      primary: 'rgb(var(--color-primary) / <alpha-value>)',\n      secondary: 'rgb(var(--color-secondary) / <alpha-value>)',\n\n      // Using modern `hsl`\n      primary: 'hsl(var(--color-primary) / <alpha-value>)',\n      secondary: 'hsl(var(--color-secondary) / <alpha-value>)',\n\n      // Using legacy `rgba`\n      primary: 'rgba(var(--color-primary), <alpha-value>)',\n      secondary: 'rgba(var(--color-secondary), <alpha-value>)',\n    }\n  }\n}\n\nWhen defining your colors this way, make sure that the format of your CSS variables is correct for the color function you are using. You’ll want to use spaces if using the modern space-separated syntax, and commas if using legacy functions like rgba or hsla:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    /* For rgb(255 115 179 / <alpha-value>) */\n    --color-primary: 255 115 179;\n\n    /* For hsl(198deg 93% 60% / <alpha-value>) */\n    --color-primary: 198deg 93% 60%;\n\n    /* For rgba(255, 115, 179, <alpha-value>) */\n    --color-primary: 255, 115, 179;\n  }\n}\nScreens\nSpacing\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nDefault color palette\nUsing custom colors\nColor object syntax\nArbitrary values\nGenerating colors\nUsing the default colors\nAliasing color names\nAdding additional colors\nDisabling a default color\nNaming your colors\nUsing CSS variables\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Customizing Spacing - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/customizing-spacing",
    "html": "Customization\n\nCustomizing Spacing\n\nCustomizing the default spacing and sizing scale for your project.\n\nUse the spacing key in the theme section of your tailwind.config.js file to customize Tailwind’s default spacing/sizing scale.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    spacing: {\n      '1': '8px',\n      '2': '12px',\n      '3': '16px',\n      '4': '24px',\n      '5': '32px',\n      '6': '48px',\n    }\n  }\n}\n\nBy default the spacing scale is inherited by the padding, margin, width, height, maxHeight, gap, inset, space, translate, scrollMargin, and scrollPadding core plugins.\n\n​\nExtending the default spacing scale\n\nAs described in the theme documentation, if you’d like to extend the default spacing scale, you can do so using the theme.extend.spacing section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      spacing: {\n        '13': '3.25rem',\n        '15': '3.75rem',\n        '128': '32rem',\n        '144': '36rem',\n      }\n    }\n  }\n}\n\nThis will generate classes like p-13, m-15, and h-128 in addition to all of Tailwind’s default spacing/sizing utilities.\n\n​\nOverriding the default spacing scale\n\nAs described in the theme documentation, if you’d like to override the default spacing scale, you can do so using the theme.spacing section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    spacing: {\n      sm: '8px',\n      md: '12px',\n      lg: '16px',\n      xl: '24px',\n    }\n  }\n}\n\nThis will disable Tailwind’s default spacing scale and generate classes like p-sm, m-md, w-lg, and h-xl instead.\n\n​\nDefault spacing scale\n\nBy default, Tailwind includes a generous and comprehensive numeric spacing scale. The values are proportional, so 16 is twice as much spacing as 8 for example. One spacing unit is equal to 0.25rem, which translates to 4px by default in common browsers.\n\nName\tSize\tPixels\t\nPreview\n\n0\t0px\t0px\t\n\npx\t1px\t1px\t\n\n0.5\t0.125rem\t2px\t\n\n1\t0.25rem\t4px\t\n\n1.5\t0.375rem\t6px\t\n\n2\t0.5rem\t8px\t\n\n2.5\t0.625rem\t10px\t\n\n3\t0.75rem\t12px\t\n\n3.5\t0.875rem\t14px\t\n\n4\t1rem\t16px\t\n\n5\t1.25rem\t20px\t\n\n6\t1.5rem\t24px\t\n\n7\t1.75rem\t28px\t\n\n8\t2rem\t32px\t\n\n9\t2.25rem\t36px\t\n\n10\t2.5rem\t40px\t\n\n11\t2.75rem\t44px\t\n\n12\t3rem\t48px\t\n\n14\t3.5rem\t56px\t\n\n16\t4rem\t64px\t\n\n20\t5rem\t80px\t\n\n24\t6rem\t96px\t\n\n28\t7rem\t112px\t\n\n32\t8rem\t128px\t\n\n36\t9rem\t144px\t\n\n40\t10rem\t160px\t\n\n44\t11rem\t176px\t\n\n48\t12rem\t192px\t\n\n52\t13rem\t208px\t\n\n56\t14rem\t224px\t\n\n60\t15rem\t240px\t\n\n64\t16rem\t256px\t\n\n72\t18rem\t288px\t\n\n80\t20rem\t320px\t\n\n96\t24rem\t384px\t\nColors\nPlugins\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nExtending the default spacing scale\nOverriding the default spacing scale\nDefault spacing scale\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Customizing Screens - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/screens",
    "html": "Customization\n\nCustomizing Screens\n\nCustomizing the default breakpoints for your project.\n\n​\nConfiguring custom screens\n\nYou define your project’s breakpoints in the theme.screens section of your tailwind.config.js file. The keys become your responsive modifiers (like md:text-center), and the values are the min-width where that breakpoint should start.\n\nThe default breakpoints are inspired by common device resolutions:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '640px',\n      // => @media (min-width: 640px) { ... }\n\n      'md': '768px',\n      // => @media (min-width: 768px) { ... }\n\n      'lg': '1024px',\n      // => @media (min-width: 1024px) { ... }\n\n      'xl': '1280px',\n      // => @media (min-width: 1280px) { ... }\n\n      '2xl': '1536px',\n      // => @media (min-width: 1536px) { ... }\n    }\n  }\n}\n\nFeel free to have as few or as many screens as you want, naming them in whatever way you’d prefer for your project.\n\n​\nOverriding the defaults\n\nTo completely replace the default breakpoints, add your custom screens configuration directly under the theme key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '576px',\n      // => @media (min-width: 576px) { ... }\n\n      'md': '960px',\n      // => @media (min-width: 960px) { ... }\n\n      'lg': '1440px',\n      // => @media (min-width: 1440px) { ... }\n    },\n  }\n}\n\nAny default screens you haven’t overridden (such as xl using the above example) will be removed and will not be available as screen modifiers.\n\n​\nOverriding a single screen\n\nTo override a single screen size (like lg), add your custom screens value under the theme.extend key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        'lg': '992px',\n        // => @media (min-width: 992px) { ... }\n      },\n    },\n  },\n}\n\nThis will replace the default screens value with the same name, without changing the order of your breakpoints.\n\n​\nAdding larger breakpoints\n\nThe easiest way to add an additional larger breakpoint is using the extend key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        '3xl': '1600px',\n      },\n    },\n  },\n  plugins: [],\n}\n\nThis will add your custom screen to the end of the default breakpoint list.\n\n​\nAdding smaller breakpoints\n\nIf you want to add an additional small breakpoint, you can’t use extend because the small breakpoint would be added to the end of the breakpoint list, and breakpoints need to be sorted from smallest to largest in order to work as expected with a min-width breakpoint system.\n\nInstead, override the entire screens key, re-specifying the default breakpoints:\n\ntailwind.config.js\nconst defaultTheme = require('tailwindcss/defaultTheme')\n\nmodule.exports = {\n  theme: {\n    screens: {\n      'xs': '475px',\n      ...defaultTheme.screens,\n    },\n  },\n  plugins: [],\n}\n\nWe expose the default theme at tailwindcss/defaultTheme so you don’t have to maintain the list of default breakpoints yourself.\n\n​\nUsing custom screen names\n\nYou can name your custom screens whatever you like, and are not limited to following the sm/md/lg/xl/2xl convention that Tailwind uses by default.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'tablet': '640px',\n      // => @media (min-width: 640px) { ... }\n\n      'laptop': '1024px',\n      // => @media (min-width: 1024px) { ... }\n\n      'desktop': '1280px',\n      // => @media (min-width: 1280px) { ... }\n    },\n  }\n}\n\nYour responsive modifiers will reflect these custom screen names, so using them in your HTML would now look like this:\n\n<div class=\"grid grid-cols-1 tablet:grid-cols-2 laptop:grid-cols-3 desktop:grid-cols-4\">\n  <!-- ... -->\n</div>\n​\nAdvanced configuration\n\nBy default, breakpoints are min-width to encourage a mobile-first workflow. If you need more control over your media queries, you can also define them using an object syntax that lets you specify explicit min-width and max-width values.\n\n​\nMax-width breakpoints\n\nIf you want to work with max-width breakpoints instead of min-width, you can specify your screens as objects with a max key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      '2xl': {'max': '1535px'},\n      // => @media (max-width: 1535px) { ... }\n\n      'xl': {'max': '1279px'},\n      // => @media (max-width: 1279px) { ... }\n\n      'lg': {'max': '1023px'},\n      // => @media (max-width: 1023px) { ... }\n\n      'md': {'max': '767px'},\n      // => @media (max-width: 767px) { ... }\n\n      'sm': {'max': '639px'},\n      // => @media (max-width: 639px) { ... }\n    }\n  }\n}\n\nMake sure to list max-width breakpoints in descending order so that they override each other as expected.\n\n​\nFixed-range breakpoints\n\nIf you want your breakpoints to specify both a min-width and a max-width, use the min and max keys together:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': {'min': '640px', 'max': '767px'},\n      // => @media (min-width: 640px and max-width: 767px) { ... }\n\n      'md': {'min': '768px', 'max': '1023px'},\n      // => @media (min-width: 768px and max-width: 1023px) { ... }\n\n      'lg': {'min': '1024px', 'max': '1279px'},\n      // => @media (min-width: 1024px and max-width: 1279px) { ... }\n\n      'xl': {'min': '1280px', 'max': '1535px'},\n      // => @media (min-width: 1280px and max-width: 1535px) { ... }\n\n      '2xl': {'min': '1536px'},\n      // => @media (min-width: 1536px) { ... }\n    },\n  }\n}\n\nUnlike regular min-width or max-width breakpoints, breakpoints defined this way will only take effect when the viewport size is explicitly within the defined range.\n\n<div class=\"md:text-center\">\n  This text will be centered on medium screens, but revert back\n  to the default (left-aligned) at all other screen sizes.\n</div>\n​\nMulti-range breakpoints\n\nSometimes it can be useful to have a single breakpoint definition apply in multiple ranges.\n\nFor example, say you have a sidebar and want your breakpoints to be based on the content-area width rather than the entire viewport. You can simulate this by having one of your breakpoints fall back to a smaller breakpoint when the sidebar becomes visible and shrinks the content area:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '500px',\n      'md': [\n        // Sidebar appears at 768px, so revert to `sm:` styles between 768px\n        // and 868px, after which the main content area is wide enough again to\n        // apply the `md:` styles.\n        {'min': '668px', 'max': '767px'},\n        {'min': '868px'}\n      ],\n      'lg': '1100px',\n      'xl': '1400px',\n    }\n  }\n}\n​\nCustom media queries\n\nIf you want full control over the generated media query, use the raw key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        'tall': { 'raw': '(min-height: 800px)' },\n        // => @media (min-height: 800px) { ... }\n      }\n    }\n  }\n}\n\nMedia queries defined using the raw key will be output as-is, and the min and max keys will be ignored.\n\nTheme\nColors\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nConfiguring custom screens\nOverriding the defaults\nOverriding a single screen\nAdding larger breakpoints\nAdding smaller breakpoints\nUsing custom screen names\nAdvanced configuration\nMax-width breakpoints\nFixed-range breakpoints\nMulti-range breakpoints\nCustom media queries\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Theme Configuration - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/theme",
    "html": "Customization\n\nTheme Configuration\n\nCustomizing the default theme for your project.\n\nThe theme section of your tailwind.config.js file is where you define your project’s color palette, type scale, fonts, breakpoints, border radius values, and more.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      sm: '480px',\n      md: '768px',\n      lg: '976px',\n      xl: '1440px',\n    },\n    colors: {\n      'blue': '#1fb6ff',\n      'purple': '#7e5bef',\n      'pink': '#ff49db',\n      'orange': '#ff7849',\n      'green': '#13ce66',\n      'yellow': '#ffc82c',\n      'gray-dark': '#273444',\n      'gray': '#8492a6',\n      'gray-light': '#d3dce6',\n    },\n    fontFamily: {\n      sans: ['Graphik', 'sans-serif'],\n      serif: ['Merriweather', 'serif'],\n    },\n    extend: {\n      spacing: {\n        '128': '32rem',\n        '144': '36rem',\n      },\n      borderRadius: {\n        '4xl': '2rem',\n      }\n    }\n  }\n}\n\nWe provide a sensible default theme with a very generous set of values to get you started, but don’t be afraid to change it or extend it; you’re encouraged to customize it as much as you need to fit the goals of your design.\n\n​\nTheme structure\n\nThe theme object contains keys for screens, colors, and spacing, as well as a key for each customizable core plugin.\n\nSee the theme configuration reference or the default theme for a complete list of theme options.\n\n​\nScreens\n\nThe screens key allows you to customize the responsive breakpoints in your project.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'sm': '640px',\n      'md': '768px',\n      'lg': '1024px',\n      'xl': '1280px',\n      '2xl': '1536px',\n    }\n  }\n}\n\nTo learn more, see the breakpoint customization documentation.\n\n​\nColors\n\nThe colors key allows you to customize the global color palette for your project.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    colors: {\n      transparent: 'transparent',\n      black: '#000',\n      white: '#fff',\n      gray: {\n        100: '#f7fafc',\n        // ...\n        900: '#1a202c',\n      },\n\n      // ...\n    }\n  }\n}\n\nBy default, these colors are inherited by all color-related core plugins, like backgroundColor, borderColor, textColor, and others.\n\nTo learn more, see the color customization documentation.\n\n​\nSpacing\n\nThe spacing key allows you to customize the global spacing and sizing scale for your project.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    spacing: {\n      px: '1px',\n      0: '0',\n      0.5: '0.125rem',\n      1: '0.25rem',\n      1.5: '0.375rem',\n      2: '0.5rem',\n      2.5: '0.625rem',\n      3: '0.75rem',\n      3.5: '0.875rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n      11: '2.75rem',\n      12: '3rem',\n      14: '3.5rem',\n      16: '4rem',\n      20: '5rem',\n      24: '6rem',\n      28: '7rem',\n      32: '8rem',\n      36: '9rem',\n      40: '10rem',\n      44: '11rem',\n      48: '12rem',\n      52: '13rem',\n      56: '14rem',\n      60: '15rem',\n      64: '16rem',\n      72: '18rem',\n      80: '20rem',\n      96: '24rem',\n    },\n  }\n}\n\nBy default, these values are inherited by the padding, margin, width, height, maxHeight, flex-basis, gap, inset, space, translate, scrollMargin, scrollPadding, and textIndent core plugins.\n\nTo learn more, see the spacing customization documentation.\n\n​\nCore plugins\n\nThe rest of the theme section is used to configure which values are available for each individual core plugin.\n\nFor example, the borderRadius key lets you customize which border radius utilities will be generated:\n\nmodule.exports = {\n  theme: {\n    borderRadius: {\n      'none': '0',\n      'sm': '.125rem',\n      DEFAULT: '.25rem',\n      'lg': '.5rem',\n      'full': '9999px',\n    },\n  }\n}\n\nThe keys determine the suffix for the generated classes, and the values determine the value of the actual CSS declaration.\n\nThe example borderRadius configuration above would generate the following CSS classes:\n\n.rounded-none { border-radius: 0 }\n.rounded-sm   { border-radius: .125rem }\n.rounded      { border-radius: .25rem }\n.rounded-lg   { border-radius: .5rem }\n.rounded-full { border-radius: 9999px }\n\nYou’ll notice that using a key of DEFAULT in the theme configuration created the class rounded with no suffix. This is a common convention in Tailwind and is supported by all core plugins.\n\nTo learn more about customizing a specific core plugin, visit the documentation for that plugin.\n\nFor a complete reference of available theme properties and their default values, see the default theme configuration.\n\n​\nCustomizing the default theme\n\nOut of the box, your project will automatically inherit the values from the default theme configuration. If you would like to customize the default theme, you have a few different options depending on your goals.\n\n​\nExtending the default theme\n\nIf you’d like to preserve the default values for a theme option but also add new values, add your extensions under the theme.extend key in your configuration file. Values under this key are merged with existing theme values and automatically become available as new classes that you can use.\n\nAs an example, here we extend the fontFamily property to add the font-display class that can change the font used on an element:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      fontFamily: {\n        display: 'Oswald, ui-serif', // Adds a new `font-display` class\n      }\n    }\n  }\n}\n\nAfter adding this to your theme you can use it just like any other font-{family} utility:\n\n<h1 class=\"font-display\">\n  This uses the Oswald font\n</h1>\n\nIn some cases, properties map to variants that can be placed in front of a utility to conditionally apply its styles. For example, to add a 3xl screen size that works just like the existing responsive screens, add a property under the screens key:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      screens: {\n        '3xl': '1600px', // Adds a new `3xl:` screen variant\n      }\n    }\n  }\n}\n\nWith this addition, a new 3xl screen size is made available alongside the existing responsive variants like sm, md, lg, etc. You can use this new variant by placing it before a utility class:\n\n<blockquote class=\"text-base md:text-md 3xl:text-lg\">\n  Oh I gotta get on that internet, I'm late on everything!\n</blockquote>\n​\nOverriding the default theme\n\nTo override an option in the default theme, add your overrides directly under the theme section of your tailwind.config.js:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    // Replaces all of the default `opacity` values\n    opacity: {\n      '0': '0',\n      '20': '0.2',\n      '40': '0.4',\n      '60': '0.6',\n      '80': '0.8',\n      '100': '1',\n    }\n  }\n}\n\nThis will completely replace Tailwind’s default configuration for that key, so in the example above none of the default opacity utilities would be generated.\n\nAny keys you do not provide will be inherited from the default theme, so in the above example, the default theme configuration for things like colors, spacing, border-radius, background-position, etc. would be preserved.\n\nYou can of course both override some parts of the default theme and extend other parts of the default theme within the same configuration:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    opacity: {\n      '0': '0',\n      '20': '0.2',\n      '40': '0.4',\n      '60': '0.6',\n      '80': '0.8',\n      '100': '1',\n    },\n    extend: {\n      screens: {\n        '3xl': '1600px',\n      }\n    }\n  }\n}\n​\nReferencing other values\n\nIf you need to reference another value in your theme, you can do so by providing a closure instead of a static value. The closure will receive an object that includes a theme() function that you can use to look up other values in your theme using dot notation.\n\nFor example, you could generate background-size utilities for every value in your spacing scale by referencing theme('spacing') in your backgroundSize configuration:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    spacing: {\n      // ...\n    },\n    backgroundSize: ({ theme }) => ({\n      auto: 'auto',\n      cover: 'cover',\n      contain: 'contain',\n      ...theme('spacing')\n    })\n  }\n}\n\nThe theme() function attempts to find the value you are looking for from the fully merged theme object, so it can reference your own customizations as well as the default theme values. It also works recursively, so as long as there is a static value at the end of the chain it will be able to resolve the value you are looking for.\n\nNote that you can only use this kind of closure with top-level theme keys, not the keys inside of each section.\n\nYou can’t use functions for individual values\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    fill: {\n      gray: ({ theme }) => theme('colors.gray')\n    }\n  }\n}\n\nUse functions for top-level theme keys\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    fill: ({ theme }) => ({\n      gray: theme('colors.gray')\n    })\n  }\n}\n​\nReferencing the default theme\n\nIf you’d like to reference a value in the default theme for any reason, you can import it from tailwindcss/defaultTheme.\n\nOne example of where this is useful is if you’d like to add a font family to one of Tailwind’s default font stacks:\n\ntailwind.config.js\nconst defaultTheme = require('tailwindcss/defaultTheme')\n\nmodule.exports = {\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: [\n          'Lato',\n          ...defaultTheme.fontFamily.sans,\n        ]\n      }\n    }\n  }\n}\n​\nDisabling an entire core plugin\n\nIf you don’t want to generate any classes for a certain core plugin, it’s better to set that plugin to false in your corePlugins configuration than to provide an empty object for that key in your theme configuration.\n\nDon’t assign an empty object in your theme configuration\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    opacity: {},\n  }\n}\n\nDo disable the plugin in your corePlugins configuration\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  corePlugins: {\n    opacity: false,\n  }\n}\n\nThe end result is the same, but since many core plugins expose no configuration they can only be disabled using corePlugins anyways, so it’s better to be consistent.\n\n​\nConfiguration reference\n\nExcept for screens, colors, and spacing, all of the keys in the theme object map to one of Tailwind’s core plugins. Since many plugins are responsible for CSS properties that only accept a static set of values (like float for example), note that not every plugin has a corresponding key in the theme object.\n\nAll of these keys are also available under the theme.extend key to enable extending the default theme.\n\nKey\tDescription\naccentColor\tValues for the accent-color property\nanimation\tValues for the animation property\naria\tValues for the aria property\naspectRatio\tValues for the aspect-ratio property\nbackdropBlur\tValues for the backdropBlur plugin\nbackdropBrightness\tValues for the backdropBrightness plugin\nbackdropContrast\tValues for the backdropContrast plugin\nbackdropGrayscale\tValues for the backdropGrayscale plugin\nbackdropHueRotate\tValues for the backdropHueRotate plugin\nbackdropInvert\tValues for the backdropInvert plugin\nbackdropOpacity\tValues for the backdropOpacity plugin\nbackdropSaturate\tValues for the backdropSaturate plugin\nbackdropSepia\tValues for the backdropSepia plugin\nbackgroundColor\tValues for the background-color property\nbackgroundImage\tValues for the background-image property\nbackgroundOpacity\tValues for the background-opacity property\nbackgroundPosition\tValues for the background-position property\nbackgroundSize\tValues for the background-size property\nblur\tValues for the blur plugin\nborderColor\tValues for the border-color property\nborderOpacity\tValues for the borderOpacity plugin\nborderRadius\tValues for the border-radius property\nborderSpacing\tValues for the border-spacing property\nborderWidth\tValues for the borderWidth plugin\nboxShadow\tValues for the box-shadow property\nboxShadowColor\tValues for the boxShadowColor plugin\nbrightness\tValues for the brightness plugin\ncaretColor\tValues for the caret-color property\ncolors\tYour project's color palette\ncolumns\tValues for the columns property\ncontainer\tConfiguration for the container plugin\ncontent\tValues for the content property\ncontrast\tValues for the contrast plugin\ncursor\tValues for the cursor property\ndivideColor\tValues for the divideColor plugin\ndivideOpacity\tValues for the divideOpacity plugin\ndivideWidth\tValues for the divideWidth plugin\ndropShadow\tValues for the dropShadow plugin\nfill\tValues for the fill plugin\nflex\tValues for the flex property\nflexBasis\tValues for the flex-basis property\nflexGrow\tValues for the flex-grow property\nflexShrink\tValues for the flex-shrink property\nfontFamily\tValues for the font-family property\nfontSize\tValues for the font-size property\nfontWeight\tValues for the font-weight property\ngap\tValues for the gap property\ngradientColorStops\tValues for the gradientColorStops plugin\ngradientColorStopPositions\tValues for the gradient-color-stop-positions property\ngrayscale\tValues for the grayscale plugin\ngridAutoColumns\tValues for the grid-auto-columns property\ngridAutoRows\tValues for the grid-auto-rows property\ngridColumn\tValues for the grid-column property\ngridColumnEnd\tValues for the grid-column-end property\ngridColumnStart\tValues for the grid-column-start property\ngridRow\tValues for the grid-row property\ngridRowEnd\tValues for the grid-row-end property\ngridRowStart\tValues for the grid-row-start property\ngridTemplateColumns\tValues for the grid-template-columns property\ngridTemplateRows\tValues for the grid-template-rows property\nheight\tValues for the height property\nhueRotate\tValues for the hueRotate plugin\ninset\tValues for the top, right, bottom, and left properties\ninvert\tValues for the invert plugin\nkeyframes\tKeyframe values used in the animation plugin\nletterSpacing\tValues for the letter-spacing property\nlineHeight\tValues for the line-height property\nlistStyleType\tValues for the list-style-type property\nlistStyleImage\tValues for the list-style-image property\nmargin\tValues for the margin property\nlineClamp\tValues for the line-clamp property\nmaxHeight\tValues for the max-height property\nmaxWidth\tValues for the max-width property\nminHeight\tValues for the min-height property\nminWidth\tValues for the min-width property\nobjectPosition\tValues for the object-position property\nopacity\tValues for the opacity property\norder\tValues for the order property\noutlineColor\tValues for the outline-color property\noutlineOffset\tValues for the outline-offset property\noutlineWidth\tValues for the outline-width property\npadding\tValues for the padding property\nplaceholderColor\tValues for the placeholderColor plugin\nplaceholderOpacity\tValues for the placeholderOpacity plugin\nringColor\tValues for the ringColor plugin\nringOffsetColor\tValues for the ringOffsetColor plugin\nringOffsetWidth\tValues for the ringOffsetWidth plugin\nringOpacity\tValues for the ringOpacity plugin\nringWidth\tValues for the ringWidth plugin\nrotate\tValues for the rotate plugin\nsaturate\tValues for the saturate plugin\nscale\tValues for the scale plugin\nscreens\tYour project's responsive breakpoints\nscrollMargin\tValues for the scroll-margin property\nscrollPadding\tValues for the scroll-padding property\nsepia\tValues for the sepia plugin\nskew\tValues for the skew plugin\nspace\tValues for the space plugin\nspacing\tYour project's spacing scale\nstroke\tValues for the stroke property\nstrokeWidth\tValues for the stroke-width property\nsupports\tValues for the supports property\ndata\tValues for the data property\ntextColor\tValues for the text-color property\ntextDecorationColor\tValues for the text-decoration-color property\ntextDecorationThickness\tValues for the text-decoration-thickness property\ntextIndent\tValues for the text-indent property\ntextOpacity\tValues for the textOpacity plugin\ntextUnderlineOffset\tValues for the text-underline-offset property\ntransformOrigin\tValues for the transform-origin property\ntransitionDelay\tValues for the transition-delay property\ntransitionDuration\tValues for the transition-duration property\ntransitionProperty\tValues for the transition-property property\ntransitionTimingFunction\tValues for the transition-timing-function property\ntranslate\tValues for the translate plugin\nwidth\tValues for the width property\nwillChange\tValues for the will-change property\nzIndex\tValues for the z-index property\nContent\nScreens\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nTheme structure\nScreens\nColors\nSpacing\nCore plugins\nCustomizing the default theme\nExtending the default theme\nOverriding the default theme\nReferencing other values\nReferencing the default theme\nDisabling an entire core plugin\nConfiguration reference\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Content Configuration - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/content-configuration",
    "html": "Customization\n\nContent Configuration\n\nConfiguring the content sources for your project.\n\nThe content section of your tailwind.config.js file is where you configure the paths to all of your HTML templates, JavaScript components, and any other source files that contain Tailwind class names.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n  ],\n  // ...\n}\n\nThis guide covers everything you need to know to make sure Tailwind generates all of the CSS needed for your project.\n\n​\nConfiguring source paths\n\nTailwind CSS works by scanning all of your HTML, JavaScript components, and any other template files for class names, then generating all of the corresponding CSS for those styles.\n\nIn order for Tailwind to generate all of the CSS you need, it needs to know about every single file in your project that contains any Tailwind class names.\n\nConfigure the paths to all of your content files in the content section of your configuration file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}'\n  ],\n  // ...\n}\n\nPaths are configured as glob patterns, making it easy to match all of the content files in your project without a ton of configuration:\n\nUse * to match anything except slashes and hidden files\nUse ** to match zero or more directories\nUse comma separate values between {} to match against a list of options\n\nTailwind uses the fast-glob library under-the-hood — check out their documentation for other supported pattern features.\n\nPaths are relative to your project root, not your tailwind.config.js file, so if your tailwind.config.js file is in a custom location, you should still write your paths relative to the root of your project.\n\n​\nPattern recommendations\n\nFor the best performance and to avoid false positives, be as specific as possible with your content configuration.\n\nIf you use a really broad pattern like this one, Tailwind will even scan node_modules for content which is probably not what you want:\n\nDon’t use extremely broad patterns\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './**/*.{html,js}',\n  ],\n  // ...\n}\n\nIf you have any files you need to scan that are at the root of your project (often an index.html file), list that file independently so your other patterns can be more specific:\n\nBe specific with your content patterns\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './components/**/*.{html,js}',\n    './pages/**/*.{html,js}',\n    './index.html',\n  ],\n  // ...\n}\n\nSome frameworks hide their main HTML entry point in a different place than the rest of your templates (often public/index.html), so if you are adding Tailwind classes to that file make sure it’s included in your configuration as well:\n\nRemember to include your HTML entry point if applicable\n\ntailwind.config.js\nmodule.exports = {\n\n  content: [\n\n    './public/index.html',\n\n    './src/**/*.{html,js}',\n\n  ],\n\n  // ...\n\n}\n\n\nIf you have any JavaScript files that manipulate your HTML to add classes, make sure you include those as well:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    // ...\n    './src/**/*.js',\n  ],\n  // ...\n}\nsrc/spaghetti.js\n// ...\nmenuButton.addEventListener('click', function () {\n  let classList = document.getElementById('nav').classList\n  classList.toggle('hidden')\n  classList.toggle('block')\n})\n// ...\n\nIt’s also important that you don’t scan any CSS files — configure Tailwind to scan your templates where your class names are being used, never the CSS file that Tailwind is generating.\n\nNever include CSS files in your content configuration\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/**/*.css',\n  ],\n  // ...\n}\n​\nClass detection in-depth\n\nThe way Tailwind scans your source code for classes is intentionally very simple — we don’t actually parse or execute any of your code in the language it’s written in, we just use regular expressions to extract every string that could possibly be a class name.\n\nFor example, here’s some HTML with every potential class name string individually highlighted:\n\n<div class=\"md:flex\">\n  <div class=\"md:flex-shrink-0\">\n    <img class=\"rounded-lg md:w-56\" src=\"/img/shopping.jpg\" alt=\"Woman paying for a purchase\">\n  </div>\n  <div class=\"mt-4 md:mt-0 md:ml-6\">\n    <div class=\"uppercase tracking-wide text-sm text-indigo-600 font-bold\">\n      Marketing\n    </div>\n    <a href=\"/get-started\" class=\"block mt-1 text-lg leading-tight font-semibold text-gray-900 hover:underline\">\n      Finding customers for your new business\n    </a>\n    <p class=\"mt-2 text-gray-600\">\n      Getting a new business off the ground is a lot of hard work.\n      Here are five ideas you can use to find your first customers.\n    </p>\n  </div>\n</div>\n\nWe don’t just limit our search to class=\"...\" attributes because you could be using classes anywhere, like in some JavaScript for toggling a menu:\n\nspaghetti.js\n<script>\n  menuButton.addEventListener('click', function () {\n    let classList = document.getElementById('nav').classList\n    classList.toggle('hidden')\n    classList.toggle('block')\n  })\n</script>\n\nBy using this very simple approach, Tailwind works extremely reliably with any programming language, like JSX for example:\n\nButton.jsx\nconst sizes = {\n  md: 'px-4 py-2 rounded-md text-base',\n  lg: 'px-5 py-3 rounded-lg text-lg',\n}\n\nconst colors = {\n  indigo: 'bg-indigo-500 hover:bg-indigo-600 text-white',\n  cyan: 'bg-cyan-600 hover:bg-cyan-700 text-white',\n}\n\nexport default function Button({ color, size, children }) {\n  let colorClasses = colors[color]\n  let sizeClasses = sizes[size]\n\n  return (\n    <button type=\"button\" className={`font-bold ${sizeClasses} ${colorClasses}`}>\n      {children}\n    </button>\n  )\n}\n​\nDynamic class names\n\nThe most important implication of how Tailwind extracts class names is that it will only find classes that exist as complete unbroken strings in your source files.\n\nIf you use string interpolation or concatenate partial class names together, Tailwind will not find them and therefore will not generate the corresponding CSS:\n\nDon’t construct class names dynamically\n\n<div class=\"text-{{ error ? 'red' : 'green' }}-600\"></div>\n\nIn the example above, the strings text-red-600 and text-green-600 do not exist, so Tailwind will not generate those classes.\n\nInstead, make sure any class names you’re using exist in full:\n\nAlways use complete class names\n\n<div class=\"{{ error ? 'text-red-600' : 'text-green-600' }}\"></div>\n\nIf you’re using a component library like React or Vue, this means you shouldn’t use props to dynamically construct classes:\n\nDon’t use props to build class names dynamically\n\nfunction Button({ color, children }) {\n  return (\n    <button className={`bg-${color}-600 hover:bg-${color}-500 ...`}>\n      {children}\n    </button>\n  )\n}\n\nInstead, map props to complete class names that are statically detectable at build-time:\n\nAlways map props to static class names\n\nfunction Button({ color, children }) {\n  const colorVariants = {\n    blue: 'bg-blue-600 hover:bg-blue-500',\n    red: 'bg-red-600 hover:bg-red-500',\n  }\n\n  return (\n    <button className={`${colorVariants[color]} ...`}>\n      {children}\n    </button>\n  )\n}\n\nThis has the added benefit of letting you map different prop values to different color shades for example:\n\nfunction Button({ color, children }) {\n  const colorVariants = {\n    blue: 'bg-blue-600 hover:bg-blue-500 text-white',\n    red: 'bg-red-500 hover:bg-red-400 text-white',\n    yellow: 'bg-yellow-300 hover:bg-yellow-400 text-black',\n  }\n\n  return (\n    <button className={`${colorVariants[color]} ...`}>\n      {children}\n    </button>\n  )\n}\n\nAs long as you always use complete class names in your code, Tailwind will generate all of your CSS perfectly every time.\n\n​\nWorking with third-party libraries\n\nIf you’re working with any third-party libraries (for example Select2) and styling that library with your own custom CSS, we recommend writing those styles without using Tailwind’s @layer feature:\n\nmain.css\n@tailwind base;\n@tailwind components;\n\n.select2-dropdown {\n  @apply rounded-b-lg shadow-md;\n}\n.select2-search {\n  @apply border border-gray-300 rounded;\n}\n.select2-results__group {\n  @apply text-lg font-bold text-gray-900;\n}\n/* ... */\n\n@tailwind utilities;\n\nThis will ensure that Tailwind always includes those styles in your CSS, which is a lot easier than configuring Tailwind to scan the source code of a third-party library.\n\nIf you’ve created your own reusable set of components that are styled with Tailwind and are importing them in multiple projects, make sure to configure Tailwind to scan those components for class names:\n\ntailwind.config.js\nmodule.exports = {\n\n  content: [\n\n    './components/**/*.{html,js}',\n\n    './pages/**/*.{html,js}',\n\n    './node_modules/@my-company/tailwind-components/**/*.js',\n\n  ],\n\n  // ...\n\n}\n\n\nThis will make sure Tailwind generates all of the CSS needed for those components as well.\n\nIf you’re working in a monorepo with workspaces, you may need to use require.resolve to make sure Tailwind can see your content files:\n\ntailwind.config.js\nconst path = require('path');\n\n\n\nmodule.exports = {\n\n  content: [\n\n    './components/**/*.{html,js}',\n\n    './pages/**/*.{html,js}',\n\n    path.join(path.dirname(require.resolve('@my-company/tailwind-components')), '**/*.js'),\n\n  ],\n\n  // ...\n\n}\n\n​\nUsing relative paths\n\nBy default Tailwind resolves non-absolute content paths relative to the current working directory, not the tailwind.config.js file. This can lead to unexpected results if you run Tailwind from a different directory.\n\nTo always resolve paths relative to the tailwind.config.js file, use the object notation for your content configuration and set the relative property to true:\n\ntailwind.config.js\nmodule.exports = {\n\n  content: {\n\n    relative: true,\n\n    files: [\n\n      './pages/**/*.{html,js}',\n\n      './components/**/*.{html,js}',\n\n    ],\n\n  },\n\n  // ...\n\n}\n\n\nThis will likely become the default behavior in the next major version of the framework.\n\n​\nConfiguring raw content\n\nIf for whatever reason you need to configure Tailwind to scan some raw content rather than the contents of a file, use an object with a raw key instead of a path:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n    { raw: '<div class=\"font-bold\">', extension: 'html' },\n  ],\n  // ...\n}\n\nThere aren’t many valid use-cases for this — safelisting is usually what you really want instead.\n\n​\nSafelisting classes\n\nFor the smallest file size and best development experience, we highly recommend relying on your content configuration to tell Tailwind which classes to generate as much as possible.\n\nSafelisting is a last-resort, and should only be used in situations where it’s impossible to scan certain content for class names. These situations are rare, and you should almost never need this feature.\n\nIf you need to make sure Tailwind generates certain class names that don’t exist in your content files, use the safelist option:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n  ],\n  safelist: [\n    'bg-red-500',\n    'text-3xl',\n    'lg:text-4xl',\n  ]\n  // ...\n}\n\nOne example of where this can be useful is if your site displays user-generated content and you want users to be able to use a constrained set of Tailwind classes in their content that might not exist in your own site’s source files.\n\n​\nUsing regular expressions\n\nTailwind supports pattern-based safelisting for situations where you need to safelist a lot of classes:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n  ],\n  safelist: [\n    'text-2xl',\n    'text-3xl',\n    {\n      pattern: /bg-(red|green|blue)-(100|200|300)/,\n    },\n  ],\n  // ...\n}\n\nPatterns can only match against base utility names like /bg-red-.+/, and won’t match if the pattern includes a variant modifier like /hover:bg-red-.+/.\n\nIf you want to force Tailwind to generate variants for any matched classes, include them using the variants option:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n  ],\n  safelist: [\n    'text-2xl',\n    'text-3xl',\n    {\n      pattern: /bg-(red|green|blue)-(100|200|300)/,\n      variants: ['lg', 'hover', 'focus', 'lg:hover'],\n    },\n  ],\n  // ...\n}\n​\nDiscarding classes\n\nSince Tailwind uses a very simple approach to detecting class names in your content, you may find that some classes are being generated that you don’t actually need.\n\nFor example, this HTML would still generate the container class, even though that class is not actually being used:\n\n<div class=\"text-lg leading-8 text-gray-600\">\n  Every custom pool we design starts as a used shipping container, and is\n  retrofitted with state of the art technology and finishes to turn it into\n  a beautiful and functional way to entertain your guests all summer long.\n</div>\n\nYou may also want to prevent Tailwind from generating certain classes when those classes would conflict with some existing CSS, but you don’t want to go so far as to prefix all of your Tailwind classes.\n\nIn these situations, you can use the blocklist option to tell Tailwind to ignore specific classes that it detects in your content:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n  ],\n  blocklist: [\n    'container',\n    'collapse',\n  ],\n  // ...\n}\n\nThe blocklist option only affects CSS that would be generated by Tailwind, not custom CSS you’ve authored yourself or are importing from another library.\n\nUnlike safelist, the blocklist option only supports strings, and you cannot block classes using regular expressions.\n\n​\nTransforming source files\n\nIf you’re authoring content in a format that compiles to HTML (like Markdown), it often makes sense to compile that content to HTML before scanning it for class names.\n\nUse the content.transform option to transform any content matching a specific file extension before extracting classes:\n\ntailwind.config.js\nconst remark = require('remark')\n\nmodule.exports = {\n  content: {\n    files: ['./src/**/*.{html,md}'],\n    transform: {\n      md: (content) => {\n        return remark().process(content)\n      }\n    }\n  },\n  // ...\n}\n\nWhen using content.transform, you’ll need to provide your source paths using content.files instead of as a top-level array under content.\n\n​\nCustomizing extraction logic\n\nUse the extract option to override the logic Tailwind uses to detect class names for specific file extensions:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: {\n    files: ['./src/**/*.{html,wtf}'],\n    extract: {\n      wtf: (content) => {\n        return content.match(/[^<>\"'`\\s]*/g)\n      }\n    }\n  },\n  // ...\n}\n\nThis is an advanced feature and most users won’t need it — the default extraction logic in Tailwind works extremely well for almost all projects.\n\nAs with transforming, when using content.extract, you’ll need to provide your source paths using content.files instead of as a top-level array under content.\n\n​\nTroubleshooting\n​\nClasses aren’t generated\n\nIf Tailwind isn’t generating classes, make sure your content configuration is correct and matches all of the right source files.\n\nA common mistake is missing a file extension, for example if you’re using jsx instead of js for your React components:\n\ntailwind.config.js\nmodule.exports = {\n\n  content: [\n\n    './src/**/*.{html,js}',\n\n    './src/**/*.{html,js,jsx}'\n\n  ],\n\n  // ...\n\n}\n\n\nOr creating a new folder mid-project that wasn’t covered originally and forgetting to add it to your configuration:\n\ntailwind.config.js\nmodule.exports = {\n\n  content: [\n\n    './pages/**/*.{html,js}',\n\n    './components/**/*.{html,js}',\n\n    './util/**/*.{html,js}'\n\n  ],\n\n  // ...\n\n}\n\n\nIt could also be that you are trying to use dynamic class names, which won’t work because Tailwind doesn’t actually evaluate your source code and can only detect static unbroken class strings.\n\nDon’t construct class names dynamically\n\n<div class=\"text-{{ error ? 'red' : 'green' }}-600\"></div>\n\nMake sure you always use complete class names in your code:\n\nAlways use complete class names\n\n<div class=\"{{ error ? 'text-red-600' : 'text-green-600' }}\"></div>\n\nRead our documentation on dynamic class names for more details.\n\n​\nStyles rebuild in an infinite loop\n\nIf your CSS seems to be rebuilding in an infinite loop, there’s a good chance it’s because your build tool doesn’t support the glob option when registering PostCSS dependencies.\n\nMany build tools (such as webpack) don’t support this option, and as a result we can only tell them to watch specific files or entire directories. We can’t tell webpack to only watch *.html files in a directory for example.\n\nThat means that if building your CSS causes any files in those directories to change, a rebuild will be triggered, even if the changed file doesn’t match the extension in your glob.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    // With some build tools, your CSS will rebuild\n    // any time *any* file in `src` changes.\n    './src/**/*.{html,js}',\n  ],\n  // ...\n}\n\nSo if you are watching src/**/*.html for changes, but you are writing your CSS output file to src/css/styles.css, you will get an infinite rebuild loop using some tools.\n\nIdeally we could warn you about this in the console, but many tools support it perfectly fine (including our own CLI tool), and we have no reliable way to detect what build tool you are using.\n\nTo solve this problem, use more specific paths in your content config, making sure to only include directories that won’t change when your CSS builds:\n\ntailwind.config.js\nmodule.exports = {\n\n  content: [\n\n    './src/**/*.{html,js}',\n\n    './src/pages/**/*.{html,js}',\n\n    './src/components/**/*.{html,js}',\n\n    './src/layouts/**/*.{html,js}',\n\n    './src/index.html',\n\n  ],\n\n  // ...\n\n}\n\n\nIf necessary, adjust your actual project directory structure to make sure you can target your template files without accidentally catching your CSS file or other build artifacts like manifest files.\n\nIf you absolutely can’t change your content config or directory structure, your best bet is to compile your CSS separately with a tool that has complete glob support. We recommend using Tailwind CLI, which is a fast, simple, purpose-built tool for compiling your CSS with Tailwind.\n\n​\nIt just isn’t working properly\n\nIf you are experiencing weird, hard to describe issues with the output, or things just don’t seem like they are working at all, there’s a good chance it’s due to your build tool not supporting PostCSS dependency messages properly (or at all). One known example of this currently is Stencil.\n\nWhen you are having these sorts of issues, we recommend using Tailwind CLI to compile your CSS separately instead of trying to integrate Tailwind into your existing tooling.\n\nYou can use packages like npm-run-all or concurrently to compile your CSS alongside your usual development command by adding some scripts to your project like this:\n\n// package.json\n{\n  // ...\n  \"scripts\": {\n    \"start\": \"concurrently \\\"npm run start:css\\\" \\\"react-scripts start\\\"\",\n    \"start:css\": \"tailwindcss -o src/tailwind.css --watch\",\n    \"build\": \"npm run build:css && react-scripts build\",\n    \"build:css\": \"NODE_ENV=production tailwindcss -o src/tailwind.css -m\",\n  },\n}\n\nEither way, please be sure to check for an existing issue or open a new one so we can figure out the problem and try to improve compatibility with whatever tool you are using.\n\nConfiguration\nTheme\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nConfiguring source paths\nPattern recommendations\nClass detection in-depth\nDynamic class names\nWorking with third-party libraries\nUsing relative paths\nConfiguring raw content\nSafelisting classes\nUsing regular expressions\nDiscarding classes\nTransforming source files\nCustomizing extraction logic\nTroubleshooting\nClasses aren't generated\nStyles rebuild in an infinite loop\nIt just isn't working properly\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Configuration - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/configuration",
    "html": "Customization\n\nConfiguration\n\nA guide to configuring and customizing your Tailwind installation.\n\nBecause Tailwind is a framework for building bespoke user interfaces, it has been designed from the ground up with customization in mind.\n\nBy default, Tailwind will look for an optional tailwind.config.js file at the root of your project where you can define any customizations.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: ['./src/**/*.{html,js}'],\n  theme: {\n    colors: {\n      'blue': '#1fb6ff',\n      'purple': '#7e5bef',\n      'pink': '#ff49db',\n      'orange': '#ff7849',\n      'green': '#13ce66',\n      'yellow': '#ffc82c',\n      'gray-dark': '#273444',\n      'gray': '#8492a6',\n      'gray-light': '#d3dce6',\n    },\n    fontFamily: {\n      sans: ['Graphik', 'sans-serif'],\n      serif: ['Merriweather', 'serif'],\n    },\n    extend: {\n      spacing: {\n        '8xl': '96rem',\n        '9xl': '128rem',\n      },\n      borderRadius: {\n        '4xl': '2rem',\n      }\n    }\n  },\n}\n\nEvery section of the config file is optional, so you only have to specify what you’d like to change. Any missing sections will fall back to Tailwind’s default configuration.\n\n​\nCreating your configuration file\n\nGenerate a Tailwind config file for your project using the Tailwind CLI utility included when you install the tailwindcss npm package:\n\nnpx tailwindcss init\n\nThis will create a minimal tailwind.config.js file at the root of your project:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n​\nUsing a different file name\n\nTo use a name other than tailwind.config.js, pass it as an argument on the command-line:\n\nnpx tailwindcss init tailwindcss-config.js\n\nWhen you use a custom file name, you will need to specify it as a command-line argument when compiling your CSS with the Tailwind CLI tool:\n\nnpx tailwindcss -c ./tailwindcss-config.js -i input.css -o output.css\n\nIf you’re using Tailwind as a PostCSS plugin, you will need to specify your custom configuration path in your PostCSS configuration:\n\npostcss.config.js\nmodule.exports = {\n  plugins: {\n    tailwindcss: { config: './tailwindcss-config.js' },\n  },\n}\n\nAlternatively, you can specify your custom configuration path using the @config directive:\n\n@config \"./tailwindcss-config.js\";\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nLearn more about the @config directive in the Functions & Directives documentation.\n\n​\nUsing ESM or TypeScript\n\nYou can also configure Tailwind CSS in ESM or even TypeScript:\n\ntailwind.config.js\ntailwind.config.ts\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n\n\nWhen you run npx tailwindcss init, we’ll detect if your project is an ES Module and automatically generate your config file with the right syntax.\n\nYou can also generate an ESM config file explicitly by using the --esm flag:\n\nnpx tailwindcss init --esm\n\nTo generate a TypeScript config file, use the --ts flag:\n\nnpx tailwindcss init --ts\n​\nGenerating a PostCSS configuration file\n\nUse the -p flag if you’d like to also generate a basic postcss.config.js file alongside your tailwind.config.js file:\n\nnpx tailwindcss init -p\n\nThis will generate a postcss.config.js file in your project that looks like this:\n\npostcss.config.js\nmodule.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n​\nScaffolding the entire default configuration\n\nFor most users we encourage you to keep your config file as minimal as possible, and only specify the things you want to customize.\n\nIf you’d rather scaffold a complete configuration file that includes all of Tailwind’s default configuration, use the --full option:\n\nnpx tailwindcss init --full\n\nYou’ll get a file that matches the default configuration file Tailwind uses internally.\n\n​\nConfiguration options\n​\nContent\n\nThe content section is where you configure the paths to all of your HTML templates, JS components, and any other files that contain Tailwind class names.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './pages/**/*.{html,js}',\n    './components/**/*.{html,js}',\n  ],\n  // ...\n}\n\nLearn more about configuring your content sources in the Content Configuration documentation.\n\n​\nTheme\n\nThe theme section is where you define your color palette, fonts, type scale, border sizes, breakpoints — anything related to the visual design of your site.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  theme: {\n    colors: {\n      'blue': '#1fb6ff',\n      'purple': '#7e5bef',\n      'pink': '#ff49db',\n      'orange': '#ff7849',\n      'green': '#13ce66',\n      'yellow': '#ffc82c',\n      'gray-dark': '#273444',\n      'gray': '#8492a6',\n      'gray-light': '#d3dce6',\n    },\n    fontFamily: {\n      sans: ['Graphik', 'sans-serif'],\n      serif: ['Merriweather', 'serif'],\n    },\n    extend: {\n      spacing: {\n        '8xl': '96rem',\n        '9xl': '128rem',\n      },\n      borderRadius: {\n        '4xl': '2rem',\n      }\n    }\n  }\n}\n\nLearn more about the default theme and how to customize it in the theme configuration guide.\n\n​\nPlugins\n\nThe plugins section allows you to register plugins with Tailwind that can be used to generate extra utilities, components, base styles, or custom variants.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  plugins: [\n    require('@tailwindcss/forms'),\n    require('@tailwindcss/aspect-ratio'),\n    require('@tailwindcss/typography'),\n    require('tailwindcss-children'),\n  ],\n}\n\nLearn more about writing your own plugins in the plugin authoring guide.\n\n​\nPresets\n\nThe presets section allows you to specify your own custom base configuration instead of using Tailwind’s default base configuration.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  presets: [\n    require('@acmecorp/base-tailwind-config')\n  ],\n\n  // Project-specific customizations\n  theme: {\n    //...\n  },\n}\n\nLearn more about presets in the presets documentation.\n\n​\nPrefix\n\nThe prefix option allows you to add a custom prefix to all of Tailwind’s generated utility classes. This can be really useful when layering Tailwind on top of existing CSS where there might be naming conflicts.\n\nFor example, you could add a tw- prefix by setting the prefix option like so:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  prefix: 'tw-',\n}\n\nNow every class will be generated with the configured prefix:\n\n.tw-text-left {\n  text-align: left;\n}\n.tw-text-center {\n  text-align: center;\n}\n.tw-text-right {\n  text-align: right;\n}\n/* etc. */\n\nIt’s important to understand that this prefix is added after any variant modifiers. That means that classes with responsive or state modifiers like sm: or hover: will still have the responsive or state modifier first, with your custom prefix appearing after the colon:\n\n<div class=\"tw-text-lg md:tw-text-xl tw-bg-red-500 hover:tw-bg-blue-500\">\n  <!-- -->\n</div>\n\nThe dash modifier for negative values should be added before your prefix, so -mt-8 would become -tw-mt-8 if you’ve configured tw- as your prefix:\n\n<div class=\"-tw-mt-8\">\n  <!-- -->\n</div>\n\nPrefixes are only added to classes generated by Tailwind; no prefix will be added to your own custom classes.\n\nThat means if you add your own custom utility like this:\n\n@layer utilities {\n  .bg-brand-gradient { /* ... */ }\n}\n\n…the generated variants will not have your configured prefix:\n\n.bg-brand-gradient { /* ... */ }\n.hover\\:bg-brand-gradient:hover { /* ... */ }\n\nIf you’d like to prefix your own utilities as well, just add the prefix to the class definition:\n\n@layer utilities {\n  .tw-bg-brand-gradient { /* ... */ }\n}\n​\nImportant\n\nThe important option lets you control whether or not Tailwind’s utilities should be marked with !important. This can be really useful when using Tailwind with existing CSS that has high specificity selectors.\n\nTo generate utilities as !important, set the important key in your configuration options to true:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  important: true,\n}\n\nNow all of Tailwind’s utility classes will be generated as !important:\n\n.leading-none {\n  line-height: 1 !important;\n}\n.leading-tight {\n  line-height: 1.25 !important;\n}\n.leading-snug {\n  line-height: 1.375 !important;\n}\n/* etc. */\n\nThis also applies to any custom utilities you define in your CSS using the @layer utilities directive:\n\n/* Input */\n@layer utilities {\n  .bg-brand-gradient {\n    background-image: linear-gradient(#3490dc, #6574cd);\n  }\n}\n\n/* Output */\n.bg-brand-gradient {\n  background-image: linear-gradient(#3490dc, #6574cd) !important;\n}\n​\nSelector strategy\n\nSetting important to true can introduce some issues when incorporating third-party JS libraries that add inline styles to your elements. In those cases, Tailwind’s !important utilities defeat the inline styles, which can break your intended design.\n\nTo get around this, you can set important to an ID selector like #app instead:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  important: '#app',\n}\n\nThis configuration will prefix all of your utilities with the given selector, effectively increasing their specificity without actually making them !important.\n\nAfter you specify the important selector, you’ll need to ensure that the root element of your site matches it. Using the example above, we would need to set our root element’s id attribute to app in order for styles to work properly.\n\nAfter your configuration is all set up and your root element matches the selector in your Tailwind config, all of Tailwind’s utilities will have a high enough specificity to defeat other classes used in your project, without interfering with inline styles:\n\n<html>\n<!-- ... -->\n<style>\n  .high-specificity .nested .selector {\n    color: blue;\n  }\n</style>\n<body id=\"app\">\n  <div class=\"high-specificity\">\n    <div class=\"nested\">\n      <!-- Will be red-500 -->\n      <div class=\"selector text-red-500\"><!-- ... --></div>\n    </div>\n  </div>\n\n  <!-- Will be #bada55 -->\n  <div class=\"text-red-500\" style=\"color: #bada55;\"><!-- ... --></div>\n</body>\n</html>\n\nWhen using the selector strategy, be sure that the template file that includes your root selector is included in your content configuration, otherwise all of your CSS will be removed when building for production.\n\n​\nImportant modifier\n\nAlternatively, you can make any utility important by adding a ! character to the beginning:\n\n<p class=\"!font-medium font-bold\">\n  This will be medium even though bold comes later in the CSS.\n</p>\n\nThe ! always goes at the beginning of the utility name, after any variants, but before any prefix:\n\n<div class=\"sm:hover:!tw-font-bold\">\n\nThis can be useful in rare situations where you need to increase specificity because you’re at war with some styles you don’t control.\n\n​\nSeparator\n\nThe separator option lets you customize which character should be used to separate modifiers (screen sizes, hover, focus, etc.) from utility names (text-center, items-end, etc.).\n\nWe use a colon by default (:), but it can be useful to change this if you’re using a templating language like Pug that doesn’t support special characters in class names.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  separator: '_',\n}\n​\nCore Plugins\n\nThe corePlugins section lets you completely disable classes that Tailwind would normally generate by default if you don’t need them for your project.\n\nTo disable specific core plugins, provide an object for corePlugins that sets those plugins to false:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  corePlugins: {\n    float: false,\n    objectFit: false,\n    objectPosition: false,\n  }\n}\n\nIf you’d like to safelist which core plugins should be enabled, provide an array that includes a list of the core plugins you’d like to use:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  corePlugins: [\n    'margin',\n    'padding',\n    'backgroundColor',\n    // ...\n  ]\n}\n\nIf you’d like to disable all of Tailwind’s core plugins and simply use Tailwind as a tool for processing your own custom plugins, provide an empty array:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  corePlugins: []\n}\n\nHere’s a list of every core plugin for reference:\n\nCore Plugin\tDescription\naccentColor\tThe accent-color utilities like accent-green-800\naccessibility\tThe sr-only and not-sr-only utilities\nalignContent\tThe align-content utilities like content-between\nalignItems\tThe align-items utilities like items-center\nalignSelf\tThe align-self utilities like self-end\nanimation\tThe animation utilities like animate-ping\nappearance\tThe appearance utilities like appearance-none\naspectRatio\tThe aspect-ratio utilities like aspect-square\nbackdropBlur\tThe backdrop-blur utilities like backdrop-blur-md\nbackdropBrightness\tThe backdrop-brightness utilities like backdrop-brightness-100\nbackdropContrast\tThe backdrop-contrast utilities like backdrop-contrast-100\nbackdropFilter\tThe backdrop-filter utilities like backdrop-filter\nbackdropGrayscale\tThe backdrop-grayscale utilities like backdrop-grayscale-0\nbackdropHueRotate\tThe backdrop-hue-rotate utilities like backdrop-hue-rotate-30\nbackdropInvert\tThe backdrop-invert utilities like backdrop-invert-0\nbackdropOpacity\tThe backdrop-opacity utilities like backdrop-opacity-50\nbackdropSaturate\tThe backdrop-saturate utilities like backdrop-saturate-100\nbackdropSepia\tThe backdrop-sepia utilities like backdrop-sepia-0\nbackgroundAttachment\tThe background-attachment utilities like bg-local\nbackgroundBlendMode\tThe background-blend-mode utilities like bg-blend-color-burn\nbackgroundClip\tThe background-clip utilities like bg-clip-padding\nbackgroundColor\tThe background-color utilities like bg-green-800\nbackgroundImage\tThe background-image utilities like bg-gradient-to-br\nbackgroundOpacity\tThe background-color opacity utilities like bg-opacity-25\nbackgroundOrigin\tThe background-origin utilities like bg-origin-padding\nbackgroundPosition\tThe background-position utilities like bg-left-top\nbackgroundRepeat\tThe background-repeat utilities like bg-repeat-x\nbackgroundSize\tThe background-size utilities like bg-cover\nblur\tThe blur utilities like blur-md\nborderCollapse\tThe border-collapse utilities like border-collapse\nborderColor\tThe border-color utilities like border-e-green-800\nborderOpacity\tThe border-color opacity utilities like border-opacity-25\nborderRadius\tThe border-radius utilities like rounded-ss-lg\nborderSpacing\tThe border-spacing utilities like border-spacing-x-28\nborderStyle\tThe border-style utilities like border-dotted\nborderWidth\tThe border-width utilities like border-e-4\nboxDecorationBreak\tThe box-decoration-break utilities like decoration-clone\nboxShadow\tThe box-shadow utilities like shadow-lg\nboxShadowColor\tThe box-shadow-color utilities like shadow-green-800\nboxSizing\tThe box-sizing utilities like box-border\nbreakAfter\tThe break-after utilities like break-after-avoid-page\nbreakBefore\tThe break-before utilities like break-before-avoid-page\nbreakInside\tThe break-inside utilities like break-inside-avoid\nbrightness\tThe brightness utilities like brightness-100\ncaptionSide\tThe caption-side utilities like caption-top\ncaretColor\tThe caret-color utilities like caret-green-800\nclear\tThe clear utilities like clear-right\ncolumns\tThe columns utilities like columns-auto\ncontainer\tThe container component\ncontent\tThe content utilities like content-none\ncontrast\tThe contrast utilities like contrast-100\ncursor\tThe cursor utilities like cursor-grab\ndisplay\tThe display utilities like table-column-group\ndivideColor\tThe between elements border-color utilities like divide-slate-500\ndivideOpacity\tThe divide-opacity utilities like divide-opacity-50\ndivideStyle\tThe divide-style utilities like divide-dotted\ndivideWidth\tThe between elements border-width utilities like divide-x-2\ndropShadow\tThe drop-shadow utilities like drop-shadow-lg\nfill\tThe fill utilities like fill-green-700\nfilter\tThe filter utilities like filter\nflex\tThe flex utilities like flex-auto\nflexBasis\tThe flex-basis utilities like basis-px\nflexDirection\tThe flex-direction utilities like flex-row-reverse\nflexGrow\tThe flex-grow utilities like flex-grow\nflexShrink\tThe flex-shrink utilities like flex-shrink\nflexWrap\tThe flex-wrap utilities like flex-wrap-reverse\nfloat\tThe float utilities like float-left\nfontFamily\tThe font-family utilities like font-serif\nfontSize\tThe font-size utilities like text-3xl\nfontSmoothing\tThe font-smoothing utilities like antialiased\nfontStyle\tThe font-style utilities like italic\nfontVariantNumeric\tThe font-variant-numeric utilities like oldstyle-nums\nfontWeight\tThe font-weight utilities like font-medium\ngap\tThe gap utilities like gap-x-28\ngradientColorStops\tThe gradient-color-stops utilities like via-emerald-700\ngrayscale\tThe grayscale utilities like grayscale-0\ngridAutoColumns\tThe grid-auto-columns utilities like auto-cols-min\ngridAutoFlow\tThe grid-auto-flow utilities like grid-flow-dense\ngridAutoRows\tThe grid-auto-rows utilities like auto-rows-min\ngridColumn\tThe grid-column utilities like col-span-6\ngridColumnEnd\tThe grid-column-end utilities like col-end-7\ngridColumnStart\tThe grid-column-start utilities like col-start-7\ngridRow\tThe grid-row utilities like row-span-3\ngridRowEnd\tThe grid-row-end utilities like row-end-4\ngridRowStart\tThe grid-row-start utilities like row-start-4\ngridTemplateColumns\tThe grid-template-columns utilities like grid-cols-7\ngridTemplateRows\tThe grid-template-rows utilities like grid-rows-4\nheight\tThe height utilities like h-72\nhueRotate\tThe hue-rotate utilities like hue-rotate-30\nhyphens\tThe hyphens utilities like hyphens-manual\ninset\tThe inset utilities like end-44\ninvert\tThe invert utilities like invert-0\nisolation\tThe isolation utilities like isolate\njustifyContent\tThe justify-content utilities like justify-center\njustifyItems\tThe justify-items utilities like justify-items-end\njustifySelf\tThe justify-self utilities like justify-self-end\nletterSpacing\tThe letter-spacing utilities like tracking-normal\nlineClamp\tThe line-clamp utilities like line-clamp-4\nlineHeight\tThe line-height utilities like leading-9\nlistStyleImage\tThe list-style-image utilities like list-image-none\nlistStylePosition\tThe list-style-position utilities like list-inside\nlistStyleType\tThe list-style-type utilities like list-disc\nmargin\tThe margin utilities like me-28\nmaxHeight\tThe max-height utilities like max-h-40\nmaxWidth\tThe max-width utilities like max-w-6xl\nminHeight\tThe min-height utilities like min-h-screen\nminWidth\tThe min-width utilities like min-w-min\nmixBlendMode\tThe mix-blend-mode utilities like mix-blend-hard-light\nobjectFit\tThe object-fit utilities like object-fill\nobjectPosition\tThe object-position utilities like object-left-top\nopacity\tThe opacity utilities like opacity-50\norder\tThe order utilities like order-8\noutlineColor\tThe outline-color utilities like outline-green-800\noutlineOffset\tThe outline-offset utilities like outline-offset-2\noutlineStyle\tThe outline-style utilities like outline-dashed\noutlineWidth\tThe outline-width utilities like outline-2\noverflow\tThe overflow utilities like overflow-x-hidden\noverscrollBehavior\tThe overscroll-behavior utilities like overscroll-y-contain\npadding\tThe padding utilities like pe-28\nplaceContent\tThe place-content utilities like place-content-between\nplaceItems\tThe place-items utilities like place-items-center\nplaceSelf\tThe place-self utilities like place-self-end\nplaceholderColor\tThe placeholder color utilities like placeholder-red-600\nplaceholderOpacity\tThe placeholder color opacity utilities like placeholder-opacity-25\npointerEvents\tThe pointer-events utilities like pointer-events-none\nposition\tThe position utilities like absolute\npreflight\tTailwind's base/reset styles\nresize\tThe resize utilities like resize-y\nringColor\tThe ring-color utilities like ring-green-800\nringOffsetColor\tThe ring-offset-color utilities like ring-offset-green-800\nringOffsetWidth\tThe ring-offset-width utilities like ring-offset-2\nringOpacity\tThe ring-opacity utilities like ring-opacity-50\nringWidth\tThe ring-width utilities like ring-4\nrotate\tThe rotate utilities like rotate-6\nsaturate\tThe saturate utilities like saturate-100\nscale\tThe scale utilities like scale-x-95\nscrollBehavior\tThe scroll-behavior utilities like scroll-auto\nscrollMargin\tThe scroll-margin utilities like scroll-me-28\nscrollPadding\tThe scroll-padding utilities like scroll-pe-28\nscrollSnapAlign\tThe scroll-snap-align utilities like snap-end\nscrollSnapStop\tThe scroll-snap-stop utilities like snap-normal\nscrollSnapType\tThe scroll-snap-type utilities like snap-y\nsepia\tThe sepia utilities like sepia-0\nskew\tThe skew utilities like skew-x-12\nspace\tThe \"space-between\" utilities like space-x-4\nstroke\tThe stroke utilities like stroke-green-700\nstrokeWidth\tThe stroke-width utilities like stroke-1\ntableLayout\tThe table-layout utilities like table-auto\ntextAlign\tThe text-align utilities like text-right\ntextColor\tThe text-color utilities like text-green-800\ntextDecoration\tThe text-decoration utilities like overline\ntextDecorationColor\tThe text-decoration-color utilities like decoration-green-800\ntextDecorationStyle\tThe text-decoration-style utilities like decoration-dotted\ntextDecorationThickness\tThe text-decoration-thickness utilities like decoration-4\ntextIndent\tThe text-indent utilities like indent-28\ntextOpacity\tThe text-opacity utilities like text-opacity-50\ntextOverflow\tThe text-overflow utilities like overflow-ellipsis\ntextTransform\tThe text-transform utilities like lowercase\ntextUnderlineOffset\tThe text-underline-offset utilities like underline-offset-2\ntouchAction\tThe touch-action utilities like touch-pan-right\ntransform\tThe transform utility (for enabling transform features)\ntransformOrigin\tThe transform-origin utilities like origin-bottom-right\ntransitionDelay\tThe transition-delay utilities like delay-200\ntransitionDuration\tThe transition-duration utilities like duration-200\ntransitionProperty\tThe transition-property utilities like transition-colors\ntransitionTimingFunction\tThe transition-timing-function utilities like ease-in\ntranslate\tThe translate utilities like translate-x-full\nuserSelect\tThe user-select utilities like select-text\nverticalAlign\tThe vertical-align utilities like align-bottom\nvisibility\tThe visibility utilities like invisible\nwhitespace\tThe whitespace utilities like whitespace-pre\nwidth\tThe width utilities like w-1.5\nwillChange\tThe will-change utilities like will-change-scroll\nwordBreak\tThe word-break utilities like break-words\nzIndex\tThe z-index utilities like z-30\n​\nUsing multiple configurations\n\nFor projects that need to generate multiple CSS files using different Tailwind configurations, use the @config directive to specify which config file should be used for each CSS entry point:\n\nsite.css\nadmin.css\n@config \"./tailwind.site.config.js\";\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nLearn more about the @config directive in the Functions & Directives documentation.\n\n​\nReferencing in JavaScript\n\nIt can often be useful to reference your configuration values in your own client-side JavaScript — for example to access some of your theme values when dynamically applying inline styles in a React or Vue component.\n\nTo make this easy, Tailwind provides a resolveConfig helper you can use to generate a fully merged version of your configuration object:\n\nimport resolveConfig from 'tailwindcss/resolveConfig'\nimport tailwindConfig from './tailwind.config.js'\n\nconst fullConfig = resolveConfig(tailwindConfig)\n\nfullConfig.theme.width[4]\n// => '1rem'\n\nfullConfig.theme.screens.md\n// => '768px'\n\nfullConfig.theme.boxShadow['2xl']\n// => '0 25px 50px -12px rgba(0, 0, 0, 0.25)'\n\nNote that this will transitively pull in a lot of our build-time dependencies, resulting in bigger client-side bundle size. To avoid this, we recommend using a tool like babel-plugin-preval to generate a static version of your configuration at build-time.\n\n​\nTypeScript types\n\nWe ship first-party TypeScript types for the tailwind.config.js file which give you all sorts of useful IDE support, and makes it a lot easier to make changes to your configuration without referencing the documentation quite as much.\n\nConfiguration files generated with Tailwind CLI include the necessary type annotation by default, but to configure TypeScript types manually, just add the type annotation above your configuration object:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    // ...\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\nFunctions & Directives\nContent\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nCreating your configuration file\nUsing a different file name\nUsing ESM or TypeScript\nGenerating a PostCSS configuration file\nScaffolding the entire default configuration\nConfiguration options\nContent\nTheme\nPlugins\nPresets\nPrefix\nImportant\nSeparator\nCore Plugins\nUsing multiple configurations\nReferencing in JavaScript\nTypeScript types\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Functions & Directives - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/functions-and-directives",
    "html": "Core Concepts\n\nFunctions & Directives\n\nA reference for the custom functions and directives Tailwind exposes to your CSS.\n\n​\nDirectives\n\nDirectives are custom Tailwind-specific at-rules you can use in your CSS that offer special functionality for Tailwind CSS projects.\n\n​\n@tailwind\n\nUse the @tailwind directive to insert Tailwind’s base, components, utilities and variants styles into your CSS.\n\n/**\n * This injects Tailwind's base styles and any base styles registered by\n * plugins.\n */\n@tailwind base;\n\n/**\n * This injects Tailwind's component classes and any component classes\n * registered by plugins.\n */\n@tailwind components;\n\n/**\n * This injects Tailwind's utility classes and any utility classes registered\n * by plugins.\n */\n@tailwind utilities;\n\n/**\n * Use this directive to control where Tailwind injects the hover, focus,\n * responsive, dark mode, and other variants of each class.\n *\n * If omitted, Tailwind will append these classes to the very end of\n * your stylesheet by default.\n */\n@tailwind variants;\n​\n@layer\n\nUse the @layer directive to tell Tailwind which “bucket” a set of custom styles belong to. Valid layers are base, components, and utilities.\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  h1 {\n    @apply text-2xl;\n  }\n  h2 {\n    @apply text-xl;\n  }\n}\n\n@layer components {\n  .btn-blue {\n    @apply bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded;\n  }\n}\n\n@layer utilities {\n  .filter-none {\n    filter: none;\n  }\n  .filter-grayscale {\n    filter: grayscale(100%);\n  }\n}\n\nTailwind will automatically move the CSS within any @layer directive to the same place as the corresponding @tailwind rule, so you don’t have to worry about authoring your CSS in a specific order to avoid specificity issues.\n\nAny custom CSS added to a layer will only be included in the final build if that CSS is actually used in your HTML, just like all of the classes built in to Tailwind by default.\n\nWrapping any custom CSS with @layer also makes it possible to use modifiers with those rules, like hover: and focus: or responsive modifiers like md: and lg:.\n\n​\n@apply\n\nUse @apply to inline any existing utility classes into your own custom CSS.\n\nThis is useful when you need to write custom CSS (like to override the styles in a third-party library) but still want to work with your design tokens and use the same syntax you’re used to using in your HTML.\n\n.select2-dropdown {\n  @apply rounded-b-lg shadow-md;\n}\n.select2-search {\n  @apply border border-gray-300 rounded;\n}\n.select2-results__group {\n  @apply text-lg font-bold text-gray-900;\n}\n\nAny rules inlined with @apply will have !important removed by default to avoid specificity issues:\n\n/* Input */\n.foo {\n  color: blue !important;\n}\n\n.bar {\n  @apply foo;\n}\n\n/* Output */\n.foo {\n  color: blue !important;\n}\n\n.bar {\n  color: blue;\n}\n\nIf you’d like to @apply an existing class and make it !important, simply add !important to the end of the declaration:\n\n/* Input */\n.btn {\n  @apply font-bold py-2 px-4 rounded !important;\n}\n\n/* Output */\n.btn {\n  font-weight: 700 !important;\n  padding-top: .5rem !important;\n  padding-bottom: .5rem !important;\n  padding-right: 1rem !important;\n  padding-left: 1rem !important;\n  border-radius: .25rem !important;\n}\n\nNote that if you’re using Sass/SCSS, you’ll need to use Sass’ interpolation feature to get this to work:\n\n.btn {\n  @apply font-bold py-2 px-4 rounded #{!important};\n}\n​\nUsing @apply with per-component CSS\n\nComponent frameworks like Vue and Svelte support adding per-component styles within a <style> block that lives in each component file.\n\nIf you try to @apply a custom class you’ve defined in your global CSS in one of these per-component <style> blocks, you’ll get an error about the class not existing:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .card {\n    background-color: theme(colors.white);\n    border-radius: theme(borderRadius.lg);\n    padding: theme(spacing.6);\n    box-shadow: theme(boxShadow.xl);\n  }\n}\nCard.svelte\n<div>\n  <slot></slot>\n</div>\n\n<style>\n  div {\n    /* Won't work because this file and main.css are processed separately */\n    @apply card;\n  }\n</style>\n\nThis is because under-the-hood, frameworks like Vue and Svelte are processing every single <style> block independently, and running your PostCSS plugin chain against each one in isolation.\n\nThat means if you have 10 components that each have a <style> block, Tailwind is being run 10 separate times, and each run has zero knowledge about the other runs. Because of this, when you try to @apply card in Card.svelte it fails, because Tailwind has no idea that the card class exists since Svelte processed Card.svelte and main.css in total isolation from each other.\n\nThe solution to this problem is to define any custom styles you want to @apply in your components using the plugin system instead:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    plugin(function ({ addComponents, theme }) {\n      addComponents({\n        '.card': {\n          backgroundColor: theme('colors.white'),\n          borderRadius: theme('borderRadius.lg'),\n          padding: theme('spacing.6'),\n          boxShadow: theme('boxShadow.xl'),\n        }\n      })\n    })\n  ]\n}\n\nThis way any file processed by Tailwind that uses this config file will have access to those styles.\n\nHonestly though the best solution is to just not do weird stuff like this at all. Use Tailwind’s utilities directly in your markup the way they are intended to be used, and don’t abuse the @apply feature to do things like this and you will have a much better experience.\n\n​\n@config\n\nUse the @config directive to specify which config file Tailwind should use when compiling that CSS file. This is useful for projects that need to use different configuration files for different CSS entry points.\n\nsite.css\nadmin.css\n@config \"./tailwind.site.config.js\";\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nThe path you provide to the @config directive is relative to that CSS file, and will take precedence over a path defined in your PostCSS configuration or in the Tailwind CLI.\n\nNote that if you’re using postcss-import, your @import statements need to come before @config for things to work correctly, as postcss-import is strict about following the CSS spec which requires @import statements to precede any other rules in the file.\n\nDon’t put @config before your @import statements\n\nadmin.css\n@config \"./tailwind.admin.config.js\";\n\n@import \"tailwindcss/base\";\n@import \"./custom-base.css\";\n@import \"tailwindcss/components\";\n@import \"./custom-components.css\";\n@import \"tailwindcss/utilities\";\n\nPut your @import statements before the @config directive\n\nadmin.css\n@import \"tailwindcss/base\";\n@import \"./custom-base.css\";\n@import \"tailwindcss/components\";\n@import \"./custom-components.css\";\n@import \"tailwindcss/utilities\";\n\n@config \"./tailwind.admin.config.js\";\n​\nFunctions\n\nTailwind adds a few custom functions you can use in your CSS to access Tailwind-specific values. These functions are evaluated at build-time, and are replaced by static values in your final CSS.\n\n​\ntheme()\n\nUse the theme() function to access your Tailwind config values using dot notation.\n\n.content-area {\n  height: calc(100vh - theme(spacing.12));\n}\n\nIf you need to access a value that contains a dot (like the 2.5 value in the spacing scale), you can use square bracket notation:\n\n.content-area {\n  height: calc(100vh - theme(spacing[2.5]));\n}\n\nSince Tailwind uses a nested object syntax to define its default color palette, make sure to use dot notation to access the nested colors.\n\nDon’t use the dash syntax when accessing nested color values\n\n.btn-blue {\n  background-color: theme(colors.blue-500);\n}\n\nUse dot notation to access nested color values\n\n.btn-blue {\n  background-color: theme(colors.blue.500);\n}\n\nTo adjust the opacity of a color retrieved with theme, use a slash followed by the opacity value you want to use:\n\n.btn-blue {\n  background-color: theme(colors.blue.500 / 75%);\n}\n​\nscreen()\n\nThe screen function allows you to create media queries that reference your breakpoints by name instead of duplicating their values in your own CSS.\n\n@media screen(sm) {\n  /* ... */\n}\n\nThis will resolve to the underlying screen value at build-time, generating a regular media query that matches specified breakpoint:\n\n@media (min-width: 640px) {\n  /* ... */\n}\nAdding Custom Styles\nConfiguration\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nDirectives\n@tailwind\n@layer\n@apply\n@config\nFunctions\ntheme()\nscreen()\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Adding Custom Styles - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/adding-custom-styles",
    "html": "Core Concepts\n\nAdding Custom Styles\n\nBest practices for adding your own custom styles to Tailwind.\n\nOften the biggest challenge when working with a framework is figuring out what you’re supposed to do when there’s something you need that the framework doesn’t handle for you.\n\nTailwind has been designed from the ground up to be extensible and customizable, so that no matter what you’re building you never feel like you’re fighting the framework.\n\nThis guide covers topics like customizing your design tokens, how to break out of those constraints when necessary, adding your own custom CSS, and extending the framework with plugins.\n\n​\nCustomizing your theme\n\nIf you want to change things like your color palette, spacing scale, typography scale, or breakpoints, add your customizations to the theme section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      sm: '480px',\n      md: '768px',\n      lg: '976px',\n      xl: '1440px',\n    },\n    colors: {\n      'blue': '#1fb6ff',\n      'pink': '#ff49db',\n      'orange': '#ff7849',\n      'green': '#13ce66',\n      'gray-dark': '#273444',\n      'gray': '#8492a6',\n      'gray-light': '#d3dce6',\n    },\n    fontFamily: {\n      sans: ['Graphik', 'sans-serif'],\n      serif: ['Merriweather', 'serif'],\n    },\n    extend: {\n      spacing: {\n        '128': '32rem',\n        '144': '36rem',\n      },\n      borderRadius: {\n        '4xl': '2rem',\n      }\n    }\n  }\n}\n\nLearn more about customizing your theme in the Theme Configuration documentation.\n\n​\nUsing arbitrary values\n\nWhile you can usually build the bulk of a well-crafted design using a constrained set of design tokens, once in a while you need to break out of those constraints to get things pixel-perfect.\n\nWhen you find yourself really needing something like top: 117px to get a background image in just the right spot, use Tailwind’s square bracket notation to generate a class on the fly with any arbitrary value:\n\n<div class=\"top-[117px]\">\n  <!-- ... -->\n</div>\n\nThis is basically like inline styles, with the major benefit that you can combine it with interactive modifiers like hover and responsive modifiers like lg:\n\n<div class=\"top-[117px] lg:top-[344px]\">\n  <!-- ... -->\n</div>\n\nThis works for everything in the framework, including things like background colors, font sizes, pseudo-element content, and more:\n\n<div class=\"bg-[#bada55] text-[22px] before:content-['Festivus']\">\n  <!-- ... -->\n</div>\n\nIt’s even possible to use the theme function to reference the design tokens in your tailwind.config.js file:\n\n<div class=\"grid grid-cols-[fit-content(theme(spacing.32))]\">\n  <!-- ... -->\n</div>\n\nWhen using a CSS variable as an arbitrary value, wrapping your variable in var(...) isn’t needed — just providing the actual variable name is enough:\n\n<div class=\"bg-[--my-color]\">\n  <!-- ... -->\n</div>\n​\nArbitrary properties\n\nIf you ever need to use a CSS property that Tailwind doesn’t include a utility for out of the box, you can also use square bracket notation to write completely arbitrary CSS:\n\n<div class=\"[mask-type:luminance]\">\n  <!-- ... -->\n</div>\n\nThis is really like inline styles, but again with the benefit that you can use modifiers:\n\n<div class=\"[mask-type:luminance] hover:[mask-type:alpha]\">\n  <!-- ... -->\n</div>\n\nThis can be useful for things like CSS variables as well, especially when they need to change under different conditions:\n\n<div class=\"[--scroll-offset:56px] lg:[--scroll-offset:44px]\">\n  <!-- ... -->\n</div>\n​\nArbitrary variants\n\nArbitrary variants are like arbitrary values but for doing on-the-fly selector modification, like you can with built-in pseudo-class variants like hover:{utility} or responsive variants like md:{utility} but using square bracket notation directly in your HTML.\n\nHTML\nGenerated CSS\n<ul role=\"list\">\n  {#each items as item}\n    <li class=\"lg:[&:nth-child(3)]:hover:underline\">{item}</li>\n  {/each}\n</ul>\n\nLearn more in the arbitrary variants documentation.\n\n​\nHandling whitespace\n\nWhen an arbitrary value needs to contain a space, use an underscore (_) instead and Tailwind will automatically convert it to a space at build-time:\n\n<div class=\"grid grid-cols-[1fr_500px_2fr]\">\n  <!-- ... -->\n</div>\n\nIn situations where underscores are common but spaces are invalid, Tailwind will preserve the underscore instead of converting it to a space, for example in URLs:\n\n<div class=\"bg-[url('/what_a_rush.png')]\">\n  <!-- ... -->\n</div>\n\nIn the rare case that you actually need to use an underscore but it’s ambiguous because a space is valid as well, escape the underscore with a backslash and Tailwind won’t convert it to a space:\n\n<div class=\"before:content-['hello\\_world']\">\n  <!-- ... -->\n</div>\n\nIf you’re using something like JSX where the backslash is stripped from the rendered HTML, use String.raw() so the backslash isn’t treated as a JavaScript escape character:\n\n<div className={String.raw`before:content-['hello\\_world']`}>\n  <!-- ... -->\n</div>\n​\nResolving ambiguities\n\nMany utilities in Tailwind share a common namespace but map to different CSS properties. For example text-lg and text-black both share the text- namespace, but one is for font-size and the other is for color.\n\nWhen using arbitrary values, Tailwind can generally handle this ambiguity automatically based on the value you pass in:\n\n<!-- Will generate a font-size utility -->\n<div class=\"text-[22px]\">...</div>\n\n<!-- Will generate a color utility -->\n<div class=\"text-[#bada55]\">...</div>\n\nSometimes it really is ambiguous though, for example when using CSS variables:\n\n<div class=\"text-[var(--my-var)]\">...</div>\n\nIn these situations, you can “hint” the underlying type to Tailwind by adding a CSS data type before the value:\n\n<!-- Will generate a font-size utility -->\n<div class=\"text-[length:var(--my-var)]\">...</div>\n\n<!-- Will generate a color utility -->\n<div class=\"text-[color:var(--my-var)]\">...</div>\n​\nUsing CSS and @layer\n\nWhen you need to add truly custom CSS rules to a Tailwind project, the easiest approach is to just add the custom CSS to your stylesheet:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.my-custom-style {\n  /* ... */\n}\n\nFor more power, you can also use the @layer directive to add styles to Tailwind’s base, components, and utilities layers:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .my-custom-style {\n    /* ... */\n  }\n}\nWhy does Tailwind group styles into “layers”?\n\nThe @layer directive helps you control declaration order by automatically relocating your styles to the corresponding @tailwind directive, and also enables features like modifiers and tree-shaking for your own custom CSS.\n\n​\nAdding base styles\n\nIf you just want to set some defaults for the page (like the text color, background color, or font family), the easiest option is just adding some classes to the html or body elements:\n\n<!doctype html>\n<html lang=\"en\" class=\"text-gray-900 bg-gray-100 font-serif\">\n  <!-- ... -->\n</html>\n\nThis keeps your base styling decisions in your markup alongside all of your other styles, instead of hiding them in a separate file.\n\nIf you want to add your own default base styles for specific HTML elements, use the @layer directive to add those styles to Tailwind’s base layer:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  h1 {\n    @apply text-2xl;\n  }\n  h2 {\n    @apply text-xl;\n  }\n  /* ... */\n}\n\nUse the theme function or @apply directive when adding custom base styles if you want to refer to any of the values defined in your theme.\n\n​\nAdding component classes\n\nUse the components layer for any more complicated classes you want to add to your project that you’d still like to be able to override with utility classes.\n\nTraditionally these would be classes like card, btn, badge — that kind of thing.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .card {\n    background-color: theme('colors.white');\n    border-radius: theme('borderRadius.lg');\n    padding: theme('spacing.6');\n    box-shadow: theme('boxShadow.xl');\n  }\n  /* ... */\n}\n\nBy defining component classes in the components layer, you can still use utility classes to override them when necessary:\n\n<!-- Will look like a card, but with square corners -->\n<div class=\"card rounded-none\">\n  <!-- ... -->\n</div>\n\nUsing Tailwind you probably don’t need these types of classes as often as you think. Read our guide on Reusing Styles for our recommendations.\n\nThe components layer is also a good place to put custom styles for any third-party components you’re using:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .select2-dropdown {\n    @apply rounded-b-lg shadow-md;\n  }\n  .select2-search {\n    @apply border border-gray-300 rounded;\n  }\n  .select2-results__group {\n    @apply text-lg font-bold text-gray-900;\n  }\n  /* ... */\n}\n\nUse the theme function or @apply directive when adding custom component styles if you want to refer to any of the values defined in your theme.\n\n​\nAdding custom utilities\n\nAdd any of your own custom utility classes to Tailwind’s utilities layer:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer utilities {\n  .content-auto {\n    content-visibility: auto;\n  }\n}\n\nThis can be useful when there’s a CSS feature you’d like to use in your project that Tailwind doesn’t include utilities for out of the box.\n\n​\nUsing modifiers with custom CSS\n\nAny custom styles you add to Tailwind with @layer will automatically support Tailwind’s modifier syntax for handling things like hover states, responsive breakpoints, dark mode, and more.\n\nCSS\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer utilities {\n  .content-auto {\n    content-visibility: auto;\n  }\n}\nHTML\n<div class=\"lg:dark:content-auto\">\n  <!-- ... -->\n</div>\n\nLearn more about how these modifiers work in the Hover, Focus, and Other States documentation.\n\n​\nRemoving unused custom CSS\n\nAny custom styles you add to the base, components, or utilities layers will only be included in your compiled CSS if those styles are actually used in your HTML.\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  /* This won't be included in your compiled CSS unless you actually use it */\n  .card {\n    /* ... */\n  }\n}\n\nIf you want to add some custom CSS that should always be included, add it to your stylesheet without using the @layer directive:\n\nmain.css\n@tailwind base;\n@tailwind components;\n\n/* This will always be included in your compiled CSS */\n.card {\n  /* ... */\n}\n\n@tailwind utilities;\n\nMake sure to put your custom styles where they need to go to get the precedence behavior you want. In the example above, we’ve added the .card class before @tailwind utilities to make sure utilities can still override it.\n\n​\nUsing multiple CSS files\n\nIf you are writing a lot of CSS and organizing it into multiple files, make sure those files are combined into a single stylesheet before processing them with Tailwind, or you’ll see errors about using @layer without the corresponding @tailwind directive.\n\nThe easiest way to do this is using the postcss-import plugin:\n\npostcss.config.js\nmodule.exports = {\n\n  plugins: {\n\n    'postcss-import': {},\n\n    tailwindcss: {},\n\n    autoprefixer: {},\n\n  }\n\n}\n\n\nLearn more in our build-time imports documentation.\n\n​\nLayers and per-component CSS\n\nComponent frameworks like Vue and Svelte support adding per-component styles within a <style> block that lives in each component file.\n\nWhile you can use features like @apply and theme inside component styles like this, the @layer directive will not work and you’ll see an error about @layer being used without a matching @tailwind directive:\n\nDon’t use @layer in component styles\n\nCard.svelte\n<div>\n  <slot></slot>\n</div>\n\n<style>\n  /* Won't work because this file is processed in isolation */\n  @layer components {\n    div {\n      background-color: theme('colors.white');\n      border-radius: theme('borderRadius.lg');\n      padding: theme('spacing.6');\n      box-shadow: theme('boxShadow.xl');\n    }\n  }\n</style>\n\nThis is because under-the-hood, frameworks like Vue and Svelte are processing every single <style> block independently, and running your PostCSS plugin chain against each one in isolation.\n\nThat means if you have 10 components that each have a <style> block, Tailwind is being run 10 separate times, and each run has zero knowledge about the other runs. Because of this, Tailwind can’t take the styles you define in a @layer and move them to the corresponding @tailwind directive, because as far as Tailwind can tell there is no @tailwind directive to move it to.\n\nOne solution to this is to simply not use @layer inside your component styles:\n\nAdd your styles without using @layer\n\nCard.svelte\n<div>\n  <slot></slot>\n</div>\n\n<style>\n  div {\n    background-color: theme('colors.white');\n    border-radius: theme('borderRadius.lg');\n    padding: theme('spacing.6');\n    box-shadow: theme('boxShadow.xl');\n  }\n</style>\n\nYou lose the ability to control the precedence of your styles, but unfortunately that’s totally out of our control because of how these tools work.\n\nOur recommendation is that you just don’t use component styles like this at all and instead use Tailwind the way it’s intended to be used — as a single global stylesheet where you use the classes directly in your HTML:\n\nUse Tailwind’s utilities instead of component styles\n\nCard.svelte\n<div class=\"bg-white rounded-lg p-6 shadow-xl\">\n  <slot></slot>\n</div>\n​\nWriting plugins\n\nYou can also add custom styles to your project using Tailwind’s plugin system instead of using a CSS file:\n\ntailwind.config.js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    plugin(function ({ addBase, addComponents, addUtilities, theme }) {\n      addBase({\n        'h1': {\n          fontSize: theme('fontSize.2xl'),\n        },\n        'h2': {\n          fontSize: theme('fontSize.xl'),\n        },\n      })\n      addComponents({\n        '.card': {\n          backgroundColor: theme('colors.white'),\n          borderRadius: theme('borderRadius.lg'),\n          padding: theme('spacing.6'),\n          boxShadow: theme('boxShadow.xl'),\n        }\n      })\n      addUtilities({\n        '.content-auto': {\n          contentVisibility: 'auto',\n        }\n      })\n    })\n  ]\n}\n\nLearn more about writing your own plugins in the Plugins documentation.\n\nReusing Styles\nFunctions & Directives\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nCustomizing your theme\nUsing arbitrary values\nArbitrary properties\nArbitrary variants\nHandling whitespace\nResolving ambiguities\nUsing CSS and @layer\nAdding base styles\nAdding component classes\nAdding custom utilities\nUsing modifiers with custom CSS\nRemoving unused custom CSS\nUsing multiple CSS files\nLayers and per-component CSS\nWriting plugins\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Reusing Styles - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/reusing-styles",
    "html": "Core Concepts\n\nReusing Styles\n\nManaging duplication and creating reusable abstractions.\n\nTailwind encourages a utility-first workflow, where designs are implemented using only low-level utility classes. This is a powerful way to avoid premature abstraction and the pain points that come with it.\n\nBut of course as a project grows, you’ll inevitably find yourself repeating common utility combinations to recreate the same design in many different places.\n\nFor example, in the template below you can see the utility classes for each avatar image are repeated five separate times:\n\nContributors\n204\n+ 198 others\n<div>\n  <div class=\"flex items-center space-x-2 text-base\">\n    <h4 class=\"font-semibold text-slate-900\">Contributors</h4>\n    <span class=\"rounded-full bg-slate-100 px-2 py-1 text-xs font-semibold text-slate-700\">204</span>\n  </div>\n  <div class=\"mt-3 flex -space-x-2 overflow-hidden\">\n    <img class=\"inline-block h-12 w-12 rounded-full ring-2 ring-white\" src=\"https://images.unsplash.com/photo-1491528323818-fdd1faba62cc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\"/>\n    <img class=\"inline-block h-12 w-12 rounded-full ring-2 ring-white\" src=\"https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\"/>\n    <img class=\"inline-block h-12 w-12 rounded-full ring-2 ring-white\" src=\"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.25&w=256&h=256&q=80\" alt=\"\"/>\n    <img class=\"inline-block h-12 w-12 rounded-full ring-2 ring-white\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\"/>\n    <img class=\"inline-block h-12 w-12 rounded-full ring-2 ring-white\" src=\"https://images.unsplash.com/photo-1517365830460-955ce3ccd263?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\"/>\n  </div>\n  <div class=\"mt-3 text-sm font-medium\">\n    <a href=\"#\" class=\"text-blue-500\">+ 198 others</a>\n  </div>\n</div>\n\nDon’t panic! In this guide, you’ll learn about different strategies for reusing styles in your project, as well as best practices for when to employ each one.\n\n​\nUsing editor and language features\n\nA lot of the time, duplication like this isn’t even a real problem because it’s all together in one place, or doesn’t even actually exist because you’re iterating over an array of items and only writing the markup once.\n\nIf the styles you need to reuse only need to be reused within a single file, multi-cursor editing and loops are the simplest way to manage any duplication.\n\n​\nMulti-cursor editing\n\nWhen duplication is localized to a group of elements in a single file, the easiest way to deal with it to use multi-cursor editing to quickly select and edit the class list for each element at once:\n\nHome\nTeam\nProjects\nReports\n<nav class=\"flex justify-center space-x-4\">\n  <a href=\"/dashboard\" class=\"font-medium px-3 py-2 text-slate-700 rounded-lg hover:bg-slate-100 hover:text-slate-900\">Home</a>\n  <a href=\"/team\" class=\"font-medium px-3 py-2 text-slate-700 rounded-lg hover:bg-slate-100 hover:text-slate-900\">Team</a>\n  <a href=\"/projects\" class=\"font-medium px-3 py-2 text-slate-700 rounded-lg hover:bg-slate-100 hover:text-slate-900\">Projects</a>\n  <a href=\"/reports\" class=\"font-medium px-3 py-2 text-slate-700 rounded-lg hover:bg-slate-100 hover:text-slate-900\">Reports</a>\n</nav>\n\n\nYou’d be surprised at how often this ends up being the best solution. If you can quickly edit all of the duplicated class lists simultaneously, there’s no benefit to introducing any additional abstraction.\n\n​\nLoops\n\nBefore you assume you’re going to need to extract a component or create a custom class for something, make sure you’re actually using it more than once in your template.\n\nA lot of the time a design element that shows up more than once in the rendered page is only actually authored once because the actual markup is rendered in a loop.\n\nFor example, the duplicate avatars at the beginning of this guide would almost certainly be rendered in a loop in a real project:\n\nContributors\n204\n+ 198 others\n<div>\n  <div class=\"flex items-center space-x-2 text-base\">\n    <h4 class=\"font-semibold text-slate-900\">Contributors</h4>\n    <span class=\"rounded-full bg-slate-100 px-2 py-1 text-xs font-semibold text-slate-700\">204</span>\n  </div>\n  <div class=\"mt-3 flex -space-x-2 overflow-hidden\">\n    {#each contributors as user}\n      <img class=\"inline-block h-12 w-12 rounded-full ring-2 ring-white\" src=\"{user.avatarUrl}\" alt=\"{user.handle}\"/>\n    {/each}\n  </div>\n  <div class=\"mt-3 text-sm font-medium\">\n    <a href=\"#\" class=\"text-blue-500\">+ 198 others</a>\n  </div>\n</div>\n\nYou could even rewrite the navigation example using a loop or map if you preferred as well:\n\nHome\nTeam\nProjects\nReports\n<nav className=\"flex sm:justify-center space-x-4\">\n  {[\n    ['Home', '/dashboard'],\n    ['Team', '/team'],\n    ['Projects', '/projects'],\n    ['Reports', '/reports'],\n  ].map(([title, url]) => (\n    <a href={url} className=\"rounded-lg px-3 py-2 text-slate-700 font-medium hover:bg-slate-100 hover:text-slate-900\">{title}</a>\n  ))}\n</nav>\n\nWhen elements are rendered in a loop like this, the actual class list is only written once so there’s no actual duplication problem to solve.\n\n​\nExtracting components and partials\n\nIf you need to reuse some styles across multiple files, the best strategy is to create a component if you’re using a front-end framework like React, Svelte, or Vue, or a template partial if you’re using a templating language like Blade, ERB, Twig, or Nunjucks.\n\nPRIVATE VILLA\nRelaxing All-Inclusive Resort in Cancun\n$299 USD per night\nVacationCard.vue\n<template>\n  <div>\n    <img class=\"rounded\" :src=\"img\" :alt=\"imgAlt\">\n    <div class=\"mt-2\">\n      <div>\n        <div class=\"text-xs text-slate-600 uppercase font-bold tracking-wider\">{{ eyebrow }}</div>\n        <div class=\"font-bold text-slate-700 leading-snug\">\n          <a :href=\"url\" class=\"hover:underline\">{{ title }}</a>\n        </div>\n        <div class=\"mt-2 text-sm text-slate-600\">{{ pricing }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: ['img', 'imgAlt', 'eyebrow', 'title', 'pricing', 'url']\n  }\n</script>\n\nNow you can use this component in as many places as you like, while still having a single source of truth for the styles so they can easily be updated together in one place.\n\n​\nCompared to CSS abstractions\n\nUnless a component is a single HTML element, the information needed to define it can’t be captured in CSS alone. For anything even remotely complex, the HTML structure is just as important as the CSS.\n\nDon’t rely on CSS classes to extract complex components\n\nChitChat\n\nYou have a new message!\n\n<!-- Even with custom CSS, you still need to duplicate this HTML structure -->\n<div class=\"chat-notification\">\n  <div class=\"chat-notification-logo-wrapper\">\n    <img class=\"chat-notification-logo\" src=\"/img/logo.svg\" alt=\"ChitChat Logo\">\n  </div>\n  <div class=\"chat-notification-content\">\n    <h4 class=\"chat-notification-title\">ChitChat</h4>\n    <p class=\"chat-notification-message\">You have a new message!</p>\n  </div>\n</div>\n\n<style>\n  .chat-notification { /* ... */ }\n  .chat-notification-logo-wrapper { /* ... */ }\n  .chat-notification-logo { /* ... */ }\n  .chat-notification-content { /* ... */ }\n  .chat-notification-title { /* ... */ }\n  .chat-notification-message { /* ... */ }\n</style>\n\nEven if you create classes for the different elements in a component like this, you still have to duplicate the HTML every time you want to use this component. Sure you can update the font-size for every instance in a single place, but what if you need to turn the title into a link?\n\nComponents and template partials solve this problem much better than CSS-only abstractions because a component can encapsulate the HTML and the styles. Changing the font-size for every instance is just as easy as it is with CSS, but now you can turn all of the titles into links in a single place too.\n\nCreate a template partial or JavaScript component\n\nChitChat\n\nYou have a new message!\n\nNotification.jsx\nfunction Notification({ imageUrl, imageAlt, title, message }) {\n  return (\n    <div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4\">\n      <div className=\"shrink-0\">\n        <img className=\"h-12 w-12\" src={imageUrl.src} alt={imageAlt}>\n      </div>\n      <div>\n        <div className=\"text-xl font-medium text-black\">{title}</div>\n        <p className=\"text-slate-500\">{message}</p>\n      </div>\n    </div>\n  )\n}\n\nWhen you create components and template partials like this, there’s no reason to use anything other than utility classes because you already have a single source of truth for the styles.\n\n​\nExtracting classes with @apply\n\nIf you’re using a traditional templating language like ERB or Twig, creating a template partial for something as small as a button can feel like overkill compared to a simple CSS class like btn.\n\nWhile it’s highly recommended that you create proper template partials for more complex components, you can use Tailwind’s @apply directive to extract repeated utility patterns to custom CSS classes when a template partial feels heavy-handed.\n\nHere’s what a btn-primary class might look like using @apply to compose it from existing utilities:\n\nSave changes\nHTML\n<!-- Before extracting a custom class -->\n<button class=\"py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75\">\n  Save changes\n</button>\n\n<!-- After extracting a custom class -->\n<button class=\"btn-primary\">\n  Save changes\n</button>\nCSS\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .btn-primary {\n    @apply py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75;\n  }\n}\n\nLearn more about @apply and @layer in the Functions & Directives documentation.\n\n​\nAvoiding premature abstraction\n\nWhatever you do, don’t use @apply just to make things look “cleaner”. Yes, HTML templates littered with Tailwind classes are kind of ugly. Making changes in a project that has tons of custom CSS is worse.\n\nIf you start using @apply for everything, you are basically just writing CSS again and throwing away all of the workflow and maintainability advantages Tailwind gives you, for example:\n\nYou have to think up class names all the time — nothing will slow you down or drain your energy like coming up with a class name for something that doesn’t deserve to be named.\nYou have to jump between multiple files to make changes — which is a way bigger workflow killer than you’d think before co-locating everything together.\nChanging styles is scarier — CSS is global, are you sure you can change the min-width value in that class without breaking something in another part of the site?\nYour CSS bundle will be bigger — oof.\n\nIf you’re going to use @apply, use it for very small, highly reusable things like buttons and form controls — and even then only if you’re not using a framework like React where a component would be a better choice.\n\nDark Mode\nAdding Custom Styles\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nUsing editor and language features\nMulti-cursor editing\nLoops\nExtracting components and partials\nCompared to CSS abstractions\nExtracting classes with @apply\nAvoiding premature abstraction\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Responsive Design - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/responsive-design",
    "html": "Core Concepts\n\nResponsive Design\n\nUsing responsive utility variants to build adaptive user interfaces.\n\n​\nOverview\n\nEvery utility class in Tailwind can be applied conditionally at different breakpoints, which makes it a piece of cake to build complex responsive interfaces without ever leaving your HTML.\n\nThere are five breakpoints by default, inspired by common device resolutions:\n\nBreakpoint prefix\tMinimum width\tCSS\nsm\t640px\t@media (min-width: 640px) { ... }\nmd\t768px\t@media (min-width: 768px) { ... }\nlg\t1024px\t@media (min-width: 1024px) { ... }\nxl\t1280px\t@media (min-width: 1280px) { ... }\n2xl\t1536px\t@media (min-width: 1536px) { ... }\n\nTo add a utility but only have it take effect at a certain breakpoint, all you need to do is prefix the utility with the breakpoint name, followed by the : character:\n\n<!-- Width of 16 by default, 32 on medium screens, and 48 on large screens -->\n<img class=\"w-16 md:w-32 lg:w-48\" src=\"...\">\n\nThis works for every utility class in the framework, which means you can change literally anything at a given breakpoint — even things like letter spacing or cursor styles.\n\nHere’s a simple example of a marketing page component that uses a stacked layout on small screens, and a side-by-side layout on larger screens (resize your browser to see it in action):\n\n<div class=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n  <div class=\"md:flex\">\n    <div class=\"md:shrink-0\">\n      <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"/img/building.jpg\" alt=\"Modern building architecture\">\n    </div>\n    <div class=\"p-8\">\n      <div class=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold\">Company retreats</div>\n      <a href=\"#\" class=\"block mt-1 text-lg leading-tight font-medium text-black hover:underline\">Incredible accommodation for your team</a>\n      <p class=\"mt-2 text-slate-500\">Looking to take your team away on a retreat to enjoy awesome food and take in some sunshine? We have a list of places to do just that.</p>\n    </div>\n  </div>\n</div>\n\nHere’s how the example above works:\n\nBy default, the outer div is display: block, but by adding the md:flex utility, it becomes display: flex on medium screens and larger.\nWhen the parent is a flex container, we want to make sure the image never shrinks, so we’ve added md:shrink-0 to prevent shrinking on medium screens and larger. Technically we could have just used shrink-0 since it would do nothing on smaller screens, but since it only matters on md screens, it’s a good idea to make that clear in the class name.\nOn small screens the image is automatically full width by default. On medium screens and up, we’ve constrained the width to a fixed size and ensured the image is full height using md:h-full md:w-48.\n\nWe’ve only used one breakpoint in this example, but you could easily customize this component at other sizes using the sm, lg, xl, or 2xl responsive prefixes as well.\n\n​\nWorking mobile-first\n\nBy default, Tailwind uses a mobile-first breakpoint system, similar to what you might be used to in other frameworks like Bootstrap.\n\nWhat this means is that unprefixed utilities (like uppercase) take effect on all screen sizes, while prefixed utilities (like md:uppercase) only take effect at the specified breakpoint and above.\n\n​\nTargeting mobile screens\n\nWhere this approach surprises people most often is that to style something for mobile, you need to use the unprefixed version of a utility, not the sm: prefixed version. Don’t think of sm: as meaning “on small screens”, think of it as “at the small breakpoint“.\n\nDon’t use sm: to target mobile devices\n\n<!-- This will only center text on screens 640px and wider, not on small screens -->\n<div class=\"sm:text-center\"></div>\n\nUse unprefixed utilities to target mobile, and override them at larger breakpoints\n\n<!-- This will center text on mobile, and left align it on screens 640px and wider -->\n<div class=\"text-center sm:text-left\"></div>\n\nFor this reason, it’s often a good idea to implement the mobile layout for a design first, then layer on any changes that make sense for sm screens, followed by md screens, etc.\n\n​\nTargeting a breakpoint range\n\nBy default, styles applied by rules like md:flex will apply at that breakpoint and stay applied at larger breakpoints.\n\nIf you’d like to apply a utility only when a specific breakpoint range is active, stack a responsive modifier like md with a max-* modifier to limit that style to a specific range:\n\n<div class=\"md:max-xl:flex\">\n  <!-- ... -->\n</div>\n\nTailwind generates a corresponding max-* modifier for each breakpoint, so out of the box the following modifiers are available:\n\nModifier\tMedia query\nmax-sm\t@media not all and (min-width: 640px) { ... }\nmax-md\t@media not all and (min-width: 768px) { ... }\nmax-lg\t@media not all and (min-width: 1024px) { ... }\nmax-xl\t@media not all and (min-width: 1280px) { ... }\nmax-2xl\t@media not all and (min-width: 1536px) { ... }\n​\nTargeting a single breakpoint\n\nTo target a single breakpoint, target the range for that breakpoint by stacking a responsive modifier like md with the max-* modifier for the next breakpoint:\n\n<div class=\"md:max-lg:flex\">\n  <!-- ... -->\n</div>\n\nRead about targeting breakpoint ranges to learn more.\n\n​\nUsing custom breakpoints\n​\nCustomizing your theme\n\nYou can completely customize your breakpoints in your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    screens: {\n      'tablet': '640px',\n      // => @media (min-width: 640px) { ... }\n\n      'laptop': '1024px',\n      // => @media (min-width: 1024px) { ... }\n\n      'desktop': '1280px',\n      // => @media (min-width: 1280px) { ... }\n    },\n  }\n}\n\nLearn more in the customizing breakpoints documentation.\n\n​\nArbitrary values\n\nIf you need to use a one-off breakpoint that doesn’t make sense to include in your theme, use the min or max modifiers to generate a custom breakpoint on the fly using any arbitrary value.\n\n<div class=\"min-[320px]:text-center max-[600px]:bg-sky-300\">\n  <!-- ... -->\n</div>\n\nLearn more about arbitrary value support in the arbitrary values documentation.\n\nHover, Focus, and Other States\nDark Mode\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nOverview\nWorking mobile-first\nTargeting mobile screens\nTargeting a breakpoint range\nTargeting a single breakpoint\nUsing custom breakpoints\nCustomizing your theme\nArbitrary values\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Dark Mode - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/dark-mode",
    "html": "Core Concepts\n\nDark Mode\n\nUsing Tailwind CSS to style your site in dark mode.\n\n​\nBasic usage\n\nNow that dark mode is a first-class feature of many operating systems, it’s becoming more and more common to design a dark version of your website to go along with the default design.\n\nTo make this as easy as possible, Tailwind includes a dark variant that lets you style your site differently when dark mode is enabled:\n\nLight mode\n\nWrites Upside-Down\n\nThe Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n\nDark mode\n\nWrites Upside-Down\n\nThe Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n\n<div class=\"bg-white dark:bg-slate-800 rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl\">\n  <div>\n    <span class=\"inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg\">\n      <svg class=\"h-6 w-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"><!-- ... --></svg>\n    </span>\n  </div>\n  <h3 class=\"text-slate-900 dark:text-white mt-5 text-base font-medium tracking-tight\">Writes Upside-Down</h3>\n  <p class=\"text-slate-500 dark:text-slate-400 mt-2 text-sm\">\n    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n  </p>\n</div>\n\nBy default this uses the prefers-color-scheme CSS media feature, but you can also build sites that support toggling dark mode manually using the ‘class’ strategy.\n\n​\nToggling dark mode manually\n\nIf you want to support toggling dark mode manually instead of relying on the operating system preference, use the class strategy instead of the media strategy:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: 'class',\n  // ...\n}\n\nNow instead of dark:{class} classes being applied based on prefers-color-scheme, they will be applied whenever dark class is present earlier in the HTML tree.\n\n<!-- Dark mode not enabled -->\n<html>\n<body>\n  <!-- Will be white -->\n  <div class=\"bg-white dark:bg-black\">\n    <!-- ... -->\n  </div>\n</body>\n</html>\n\n<!-- Dark mode enabled -->\n<html class=\"dark\">\n<body>\n  <!-- Will be black -->\n  <div class=\"bg-white dark:bg-black\">\n    <!-- ... -->\n  </div>\n</body>\n</html>\n\nIf you’ve set a prefix in your Tailwind config, be sure to add that to the dark class. For example, if you have a prefix of tw-, you’ll need to use the tw-dark class to enable dark mode.\n\nHow you add the dark class to the html element is up to you, but a common approach is to use a bit of JS that reads a preference from somewhere (like localStorage) and updates the DOM accordingly.\n\n​\nSupporting system preference and manual selection\n\nThe class strategy can be used to support both the user’s system preference or a manually selected mode by using the Window.matchMedia() API.\n\nHere’s a simple example of how you can support light mode, dark mode, as well as respecting the operating system preference:\n\nspaghetti.js\n// On page load or when changing themes, best to add inline in `head` to avoid FOUC\nif (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n  document.documentElement.classList.add('dark')\n} else {\n  document.documentElement.classList.remove('dark')\n}\n\n// Whenever the user explicitly chooses light mode\nlocalStorage.theme = 'light'\n\n// Whenever the user explicitly chooses dark mode\nlocalStorage.theme = 'dark'\n\n// Whenever the user explicitly chooses to respect the OS preference\nlocalStorage.removeItem('theme')\n\nAgain you can manage this however you like, even storing the preference server-side in a database and rendering the class on the server — it’s totally up to you.\n\n​\nCustomizing the class name\n\nSome frameworks (like NativeScript) have their own approach to enabling dark mode and add a different class name when dark mode is active.\n\nYou can customize the dark mode selector name by setting darkMode to an array with your custom selector as the second item:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: ['class', '[data-mode=\"dark\"]'],\n  // ...\n}\nResponsive Design\nReusing Styles\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nBasic usage\nToggling dark mode manually\nSupporting system preference and manual selection\nCustomizing the class name\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Upgrade Guide - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/upgrade-guide",
    "html": "Getting Started\n\nUpgrade Guide\n\nUpgrading your Tailwind CSS projects from v2 to v3.\n\nTailwind CSS v3.0 is a major update to the framework with a brand new internal engine and as such includes a small number of breaking changes.\n\nWe take stability very seriously and have worked hard to make any breaking changes as painless as possible. For most projects, upgrading to Tailwind CSS v3.0 should take less than 30 minutes.\n\nTo learn more about what’s new in Tailwind CSS v3.0, read the Tailwind CSS v3.0 announcement on our blog.\n\n​\nUpgrade packages\n\nUpdate Tailwind, as well as PostCSS and autoprefixer, using npm:\n\nnpm install -D tailwindcss@latest postcss@latest autoprefixer@latest\n\nNote that Tailwind CSS v3.0 requires PostCSS 8, and no longer supports PostCSS 7. If you can’t upgrade to PostCSS 8, we recommend using Tailwind CLI instead of installing Tailwind as a PostCSS plugin.\n\nIf you are using nesting in your custom CSS (in combination with a PostCSS nesting plugin), you should also configure the tailwindcss/nesting plugin in your PostCSS configuration to ensure compatibility with Tailwind CSS v3.0.\n\n​\nOfficial plugins\n\nAll of our first-party plugins have been updated for compatibility with v3.0.\n\nIf you’re using any of our plugins, make sure to update them all to the latest version at the same time to avoid version constraint errors.\n\nnpm install -D tailwindcss@latest \\\n  @tailwindcss/typography@latest \\\n  @tailwindcss/forms@latest \\\n  @tailwindcss/aspect-ratio@latest \\\n  @tailwindcss/line-clamp@latest \\\n  postcss@latest \\\n  autoprefixer@latest\n​\nPlay CDN\n\nFor Tailwind CSS v3.0, the CSS-based CDN build we’ve offered in the past has been replaced by the new Play CDN, which gives you the full power of the new engine right in the browser with no build step.\n\nTo try it out, throw this <script> tag in your <head>:\n\n<!DOCTYPE html>\n\n<html lang=\"en\">\n\n  <head>\n\n    <meta charset=\"utf-8\">\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n    <title>Example</title>\n\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n\n  </head>\n\n  <body>\n\n    <!-- -->\n\n  </body>\n\n</html>\n\n\nThe Play CDN is designed for development purposes only — compiling your own static CSS build is a much better choice in production.\n\n​\nMigrating to the JIT engine\n\nThe new Just-in-Time engine we announced in March has replaced the classic engine in Tailwind CSS v3.0.\n\nThe new engine generates the styles you need for your project on-demand, and might necessitate some small changes to your project depending on how you have Tailwind configured.\n\nIf you were already opting in to mode: 'jit' in Tailwind CSS v2.x, you can safely remove that from your configuration in v3.0:\n\ntailwind.config.js\nmodule.exports = {\n\n  mode: 'jit',\n\n  // ...\n\n}\n\n​\nConfigure content sources\n\nSince Tailwind no longer uses PurgeCSS under the hood, we’ve renamed the purge option to content to better reflect what it’s for:\n\ntailwind.config.js\nmodule.exports = {\n\n  purge: [\n\n  content: [\n\n    // Example content paths...\n\n    './public/**/*.html',\n\n    './src/**/*.{js,jsx,ts,tsx,vue}',\n\n  ],\n\n  theme: {\n\n    // ...\n\n  }\n\n  // ...\n\n}\n\n\nIf you weren’t already using the purge option in your project, it’s crucial that you configure your template paths now or your compiled CSS will be empty.\n\nSince we’re not using PurgeCSS under the hood anymore, some of the advanced purge options have changed. See the new content configuration documentation for more information on advanced options.\n\n​\nRemove dark mode configuration\n\nThe dark mode feature is now enabled using the media strategy by default, so you can remove this key entirely from your tailwind.config.js file, unless you’re using the class strategy.\n\ntailwind.config.js\nmodule.exports = {\n\n  darkMode: 'media',\n\n  // ...\n\n}\n\n\nYou can also safely remove this key if it’s currently set to false:\n\ntailwind.config.js\nmodule.exports = {\n\n  darkMode: false,\n\n  // ...\n\n}\n\n​\nRemove variant configuration\n\nIn Tailwind CSS v3.0, every variant is automatically available for every utility by default, so you can remove the variants section from your tailwind.config.js file:\n\ntailwind.config.js\nmodule.exports = {\n\n  // ...\n\n  variants: {\n\n    extend: {\n\n      padding: ['hover'],\n\n    }\n\n  },\n\n}\n\n​\nReplace @variants with @layer\n\nSince all variants are now enabled by default, you no longer need to explicitly enable these for custom CSS using the @variants or @responsive directives.\n\nInstead, add any custom CSS to appropriate “layer” using the @layer directive:\n\n @variants hover, focus {\n\n @layer utilities {\n\n   .content-auto {\n\n     content-visibility: auto;\n\n   }\n\n }\n\n\nAny custom CSS added to one of Tailwind’s layers will automatically support variants.\n\nSee the documentation on adding custom styles using CSS and @layer for more information.\n\n​\nAutomatic transforms and filters\n\nIn Tailwind CSS v3.0, transform and filter utilities like scale-50 and brightness-75 will automatically take effect without needing to add the transform, filter, or backdrop-filter classes:\n\n<div class=\"transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm\">\n\n<div class=\"scale-50 grayscale backdrop-blur-sm\">\n\n\nWhile there’s no harm in leaving them in your HTML, they can safely be removed — with one exception. If you’re relying on transform to create a new stacking context, you may want to leave it, otherwise you may run into z-order issues. Alternatively, replace it with relative or isolate to force a new stacking context.\n\n​\nNew opacity modifier syntax\n\nThe new engine introduces a new syntax for changing the opacity of color utilities that we recommend migrating to from utilities like bg-opacity-{value}:\n\n<div class=\"bg-black bg-opacity-25\">\n\n<div class=\"bg-black/25\">\n\n\nThe old approach still works in all cases except when using a border-opacity-* utility with the default border class — in v3 you’ll need to explicitly specify your border color:\n\n<div class=\"border border-opacity-25\">\n\n<div class=\"border border-gray-200/25\">\n\n\nEvery other situation behaves the same, so aside from that change your projects will work exactly as they did before. We do recommend using the new syntax going forward though, and plan to disable utilities like border-opacity-* and bg-opacity-* by default in v4, though you will still be able to enable them if needed.\n\nThis new syntax works for all color utilities, even utilities that didn’t have any way to change the opacity in the past like from-red-500/75.\n\n​\nColor palette changes\n\nTailwind CSS v3.0 now includes every color from the extended color palette by default, including previously disabled colors like cyan, rose, fuchsia, and lime, and all five variations of gray.\n\n​\nRemoved color aliases\n\nIn v2.0, several of the default colors were actually aliases for the extended colors:\n\nv2 Default\tv2 Extended\ngreen\temerald\nyellow\tamber\npurple\tviolet\n\nIn v3.0, these colors use their extended names by default, so what was previously bg-green-500 is now bg-emerald-500, and bg-green-500 now refers to the green from the extended palette.\n\nIf you’re using these colors in your project, the simplest way to upgrade is to alias them back to their previous names in your tailwind.config.js file:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\n\n\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        green: colors.emerald,\n\n        yellow: colors.amber,\n\n        purple: colors.violet,\n\n      }\n\n    },\n\n  },\n\n  // ...\n\n}\n\n\nIf you are already using a custom color palette, this change doesn’t impact you at all.\n\n​\nRenamed gray scales\n\nAs part of enabling all of the extended colors by default, we’ve given the different gray shades shorter single-word names to make them more practical to use and make it less awkward for them to co-exist at the same time.\n\nv2 Default\tv2 Extended\tv3 Unified\nN/A\tblueGray\tslate\ngray\tcoolGray\tgray\nN/A\tgray\tzinc\nN/A\ttrueGray\tneutral\nN/A\twarmGray\tstone\n\nIf you were referencing any of the extended grays, you should update your references to the new names, for example:\n\ntailwind.config.js\nconst colors = require('tailwindcss/colors')\n\n\n\nmodule.exports = {\n\n  theme: {\n\n    extend: {\n\n      colors: {\n\n        gray: colors.trueGray,\n\n        gray: colors.neutral,\n\n      }\n\n    },\n\n  },\n\n  // ...\n\n}\n\n\nIf you weren’t referencing any of the grays from the extended color palette, this change doesn’t impact you at all.\n\n​\nClass name changes\n\nSome class names in Tailwind CSS v3.0 have changed to avoid naming collisions, improve the developer experience, or make it possible to support new features.\n\nWherever possible we have preserved the old name as well so many of these changes are non-breaking, but you’re encouraged to update to the new class names.\n\n​\noverflow-clip/ellipsis\n\nThose damn browser developers added a real overflow: clip property, so using overflow-clip for text-overflow: clip is a really bad idea now.\n\nWe’ve renamed overflow-clip to text-clip, and renamed overflow-ellipsis to text-ellipsis to avoid the naming collision:\n\n<div class=\"overflow-clip overflow-ellipsis\">\n\n<div class=\"text-clip text-ellipsis\">\n\n\nThis is extremely unlikely to affect anyone, as there are very few use-cases for text-clip and it’s only really included for the sake of completion.\n\n​\nflex-grow/shrink\n\nWe’ve added grow-* and shrink-* as aliases for flex-grow-* and flex-shrink-*:\n\n<div class=\"flex-grow-0 flex-shrink\">\n\n<div class=\"grow-0 shrink\">\n\n\nThe old class names will always work but you’re encouraged to update to the new ones.\n\n​\noutline-black/white\n\nSince browsers are finally starting to respect border radius when rendering outlines, we’ve added separate utilities for the outline-style, outline-color, outline-width and outline-offset properties.\n\nThis means that outline-white and outline-black now only set the outline color, whereas in v2 they set the color, width, style, and offset.\n\nIf you are using outline-white or outline-black in your project, you can bring back the old styles by adding the following custom CSS to your project:\n\n@layer utilities {\n  .outline-black {\n    outline: 2px dotted black;\n    outline-offset: 2px;\n  }\n\n  .outline-white {\n    outline: 2px dotted white;\n    outline-offset: 2px;\n  }\n}\n\nAlternatively, you can update any usage of them in your CSS with the following classes:\n\n<div class=\"outline-black\">\n\n<div class=\"outline-black outline-2 outline-dotted outline-offset-2\">\n\n\n\n<div class=\"outline-white\">\n\n<div class=\"outline-white outline-2 outline-dotted outline-offset-2\">\n\n​\ndecoration-clone/slice\n\nWe’ve added box-decoration-clone and box-decoration-slice as aliases for decoration-clone and decoration-slice to avoid confusion with all of the new text-decoration utilities that use the decoration- namespace:\n\n<div class=\"decoration-clone\"></div>\n\n<div class=\"box-decoration-clone\"></div>\n\n\n\n<div class=\"decoration-slice\"></div>\n\n<div class=\"box-decoration-slice\"></div>\n\n\nThe old class names will always work but you’re encouraged to update to the new ones.\n\n​\nOther minor changes\n\nTailwind CSS v3.0 necessitates a couple of other small breaking changes that are unlikely to affect many people, but have been captured here.\n\n​\nSeparator cannot be a dash\n\nThe dash (-) character cannot be used as a custom separator in v3.0 because of a parsing ambiguity it introduces in the engine.\n\nYou’ll have to switch to another character like _ instead:\n\ntailwind.config.js\nmodule.exports = {\n\n  // ...\n\n  separator: '-',\n\n  separator: '_',\n\n}\n\n​\nPrefix cannot be a function\n\nPrior to Tailwind CSS v3.0, it was possible to define your class prefix as a function:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  prefix(selector) {\n    // ...\n  },\n}\n\nThis isn’t possible in the new engine and we’ve had to remove support for this feature.\n\nInstead, use a static prefix that is the same for every class Tailwind generates:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // ...\n  prefix: 'tw-',\n}\n​\nFile modifier order reversed\n\nSuper minor change since v3.0.0-alpha.2 where the file modifier was introduced — if you were combining it with other modifiers like hover or focus, you’ll need to flip the modifier order:\n\n<input class=\"file:hover:bg-blue-600 ...\">\n\n<input class=\"hover:file:bg-blue-600 ...\">\n\n\nLearn more in the ordering stacked modifiers documentation.\n\n​\nFill and stroke use color palette\n\nThe fill-{color} and stroke-{color} utilities mirror your theme.colors key by default now. This isn’t a breaking change if you haven’t customized your color palette, but if you have, the fill-current and stroke-current classes may not work if you don’t have current included in your own custom color palette.\n\nAdd current to your custom color palette to resolve this:\n\ntailwind.config.js\nmodule.exports = {\n\n  // ...\n\n  theme: {\n\n    colors: {\n\n      current: 'currentColor',\n\n      // ...\n\n    }\n\n  }\n\n}\n\n​\nNegative values removed\n\nThe negative prefix in utilities like -mx-4 is a first class feature in Tailwind now, rather than something driven by your theme, so you can add - in front of any utility that support negative values and it will just work.\n\nThe negative values have been removed from the default theme, so if you were referencing them with theme(), you will see an error when trying to compile your CSS.\n\nUse the calc() function to update any affected code:\n\n.my-class {\n\n  top: theme('top.-4')\n\n  top: calc(theme('top.4') * -1)\n\n}\n\n​\nBase layer must be present\n\nIn Tailwind CSS v3.0, the @tailwind base directive must be present for utilities like transforms, filters, and shadows to work as expected.\n\nIf you were previously disabling Tailwind’s base styles by not including this directive, you should add it back and disable preflight in your corePlugins configuration instead:\n\nmain.css\n @tailwind base;\n\n @tailwind components;\n\n @tailwind utilities;\n\ntailwind.config.js\nmodule.exports = {\n\n  // ...\n\n  corePlugins: {\n\n    preflight: false,\n\n  },\n\n}\n\n\nThis will disable Tailwind’s global base styles without affecting utilities that rely on adding their own base styles to function correctly.\n\n​\nScreens layer has been renamed\n\nThe @tailwind screens layer has been renamed to @tailwind variants:\n\nmain.css\n /* ... */\n\n @tailwind screens;\n\n @tailwind variants;\n\n\nI think you are more likely to be attacked by a shark while working at your desk than you are to be affected by this change.\n\nBrowser Support\nUtility-First Fundamentals\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nUpgrade packages\nOfficial plugins\nPlay CDN\nMigrating to the JIT engine\nConfigure content sources\nRemove dark mode configuration\nRemove variant configuration\nReplace @variants with @layer\nAutomatic transforms and filters\nNew opacity modifier syntax\nColor palette changes\nRemoved color aliases\nRenamed gray scales\nClass name changes\noverflow-clip/ellipsis\nflex-grow/shrink\noutline-black/white\ndecoration-clone/slice\nOther minor changes\nSeparator cannot be a dash\nPrefix cannot be a function\nFile modifier order reversed\nFill and stroke use color palette\nNegative values removed\nBase layer must be present\nScreens layer has been renamed\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Handling Hover, Focus, and Other States - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/hover-focus-and-other-states",
    "html": "Core Concepts\n\nHandling Hover, Focus, and Other States\n\nUsing utilities to style elements on hover, focus, and more.\n\nEvery utility class in Tailwind can be applied conditionally by adding a modifier to the beginning of the class name that describes the condition you want to target.\n\nFor example, to apply the bg-sky-700 class on hover, use the hover:bg-sky-700 class:\n\nHover over this button to see the background color change\n\nSave changes\n<button class=\"bg-sky-500 hover:bg-sky-700 ...\">\n  Save changes\n</button>\nHow does this compare to traditional CSS?\n\nTailwind includes modifiers for just about everything you’ll ever need, including:\n\nPseudo-classes, like :hover, :focus, :first-child, and :required\nPseudo-elements, like ::before, ::after, ::placeholder, and ::selection\nMedia and feature queries, like responsive breakpoints, dark mode, and prefers-reduced-motion\nAttribute selectors, like [dir=\"rtl\"] and [open]\n\nThese modifiers can even be stacked to target more specific situations, for example changing the background color in dark mode, at the medium breakpoint, on hover:\n\n<button class=\"dark:md:hover:bg-fuchsia-600 ...\">\n  Save changes\n</button>\n\nIn this guide you’ll learn about every modifier available in the framework, how to use them with your own custom classes, and even how to create your own.\n\n​\nPseudo-classes\n​\nHover, focus, and active\n\nStyle elements on hover, focus, and active using the hover, focus, and active modifiers:\n\nTry interacting with this button to see the hover, focus, and active states\n\nSave changes\n<button class=\"bg-violet-500 hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300 ...\">\n  Save changes\n</button>\n\nTailwind also includes modifiers for other interactive states like :visited, :focus-within, :focus-visible, and more.\n\nSee the pseudo-class reference for a complete list of available pseudo-class modifiers.\n\n​\nFirst, last, odd, and even\n\nStyle an element when it is the first-child or last-child using the first and last modifiers:\n\nKristen Ramos\n\nkristen.ramos@example.com\n\nFloyd Miles\n\nfloyd.miles@example.com\n\nCourtney Henry\n\ncourtney.henry@example.com\n\nTed Fox\n\nted.fox@example.com\n\n<ul role=\"list\" class=\"p-6 divide-y divide-slate-200\">\n  {#each people as person}\n    <!-- Remove top/bottom padding when first/last child -->\n    <li class=\"flex py-4 first:pt-0 last:pb-0\">\n      <img class=\"h-10 w-10 rounded-full\" src=\"{person.imageUrl}\" alt=\"\" />\n      <div class=\"ml-3 overflow-hidden\">\n        <p class=\"text-sm font-medium text-slate-900\">{person.name}</p>\n        <p class=\"text-sm text-slate-500 truncate\">{person.email}</p>\n      </div>\n    </li>\n  {/each}\n</ul>\n\nYou can also style an element when it’s an odd or even child using the odd and even modifiers:\n\nName\tTitle\tEmail\nJane Cooper\tRegional Paradigm Technician\tjane.cooper@example.com\nCody Fisher\tProduct Directives Officer\tcody.fisher@example.com\nLeonard Krasner\tSenior Designer\tleonard.krasner@example.com\nEmily Selman\tVP, Hardware Engineering\temily.selman@example.com\nAnna Roberts\tChief Strategy Officer\tanna.roberts@example.com\n<table>\n  <!-- ... -->\n  <tbody>\n    {#each people as person}\n      <!-- Use a white background for odd rows, and slate-50 for even rows -->\n      <tr class=\"odd:bg-white even:bg-slate-50\">\n        <td>{person.name}</td>\n        <td>{person.title}</td>\n        <td>{person.email}</td>\n      </tr>\n    {/each}\n  </tbody>\n</table>\n\nTailwind also includes modifiers for other structural pseudo-classes like :only-child, :first-of-type, :empty, and more.\n\nSee the pseudo-class reference for a complete list of available pseudo-class modifiers.\n\n​\nForm states\n\nStyle form elements in different states using modifiers like required, invalid, and disabled:\n\nTry making the email address valid to see the styles change\n\nUsername\nEmail\nPassword\nSave changes\n<form>\n  <label class=\"block\">\n    <span class=\"block text-sm font-medium text-slate-700\">Username</span>\n    <!-- Using form state modifiers, the classes can be identical for every input -->\n    <input type=\"text\" value=\"tbone\" disabled class=\"mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400\n      focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500\n      disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none\n      invalid:border-pink-500 invalid:text-pink-600\n      focus:invalid:border-pink-500 focus:invalid:ring-pink-500\n    \"/>\n  </label>\n  <!-- ... -->\n</form>\n\nUsing modifiers for this sort of thing can reduce the amount of conditional logic in your templates, letting you use the same set of classes regardless of what state an input is in and letting the browser apply the right styles for you.\n\nTailwind also includes modifiers for other form states like :read-only, :indeterminate, :checked, and more.\n\nSee the pseudo-class reference for a complete list of available pseudo-class modifiers.\n\n​\nStyling based on parent state (group-{modifier})\n\nWhen you need to style an element based on the state of some parent element, mark the parent with the group class, and use group-* modifiers like group-hover to style the target element:\n\nHover over the card to see both text elements change color\n\nNew project\n\nCreate a new project from a variety of starting templates.\n\n<a href=\"#\" class=\"group block max-w-xs mx-auto rounded-lg p-6 bg-white ring-1 ring-slate-900/5 shadow-lg space-y-3 hover:bg-sky-500 hover:ring-sky-500\">\n  <div class=\"flex items-center space-x-3\">\n    <svg class=\"h-6 w-6 stroke-sky-500 group-hover:stroke-white\" fill=\"none\" viewBox=\"0 0 24 24\"><!-- ... --></svg>\n    <h3 class=\"text-slate-900 group-hover:text-white text-sm font-semibold\">New project</h3>\n  </div>\n  <p class=\"text-slate-500 group-hover:text-white text-sm\">Create a new project from a variety of starting templates.</p>\n</a>\n\nThis pattern works with every pseudo-class modifier, for example group-focus, group-active, or even group-odd.\n\n​\nDifferentiating nested groups\n\nWhen nesting groups, you can style something based on the state of a specific parent group by giving that parent a unique group name using a group/{name} class, and including that name in modifiers using classes like group-hover/{name}:\n\nLeslie Abbott\nCo-Founder / CEO\nHector Adams\nVP, Marketing\nBlake Alexander\nAccount Coordinator\n<ul role=\"list\">\n  {#each people as person}\n    <li class=\"group/item hover:bg-slate-100 ...\">\n      <img src=\"{person.imageUrl}\" alt=\"\" />\n      <div>\n        <a href=\"{person.url}\">{person.name}</a>\n        <p>{person.title}</p>\n      </div>\n      <a class=\"group/edit invisible hover:bg-slate-200 group-hover/item:visible ...\" href=\"tel:{person.phone}\">\n        <span class=\"group-hover/edit:text-gray-700 ...\">Call</span>\n        <svg class=\"group-hover/edit:translate-x-0.5 group-hover/edit:text-slate-500 ...\">\n          <!-- ... -->\n        </svg>\n      </a>\n    </li>\n  {/each}\n</ul>\n\nGroups can be named however you like and don’t need to be configured in any way — just name your groups directly in your markup and Tailwind will automatically generate the necessary CSS.\n\n​\nArbitrary groups\n\nYou can create one-off group-* modifiers on the fly by providing your own selector as an arbitrary value between square brackets:\n\nHTML\nGenerated CSS\n<div class=\"group is-published\">\n  <div class=\"hidden group-[.is-published]:block\">\n    Published\n  </div>\n</div>\n\nFor more control, you can use the & character to mark where .group should end up in the final selector relative to the selector you are passing in:\n\nHTML\nGenerated CSS\n<div class=\"group\">\n  <div class=\"group-[:nth-of-type(3)_&]:block\">\n    <!-- ... -->\n  </div>\n</div>\n​\nStyling based on sibling state (peer-{modifier})\n\nWhen you need to style an element based on the state of a sibling element, mark the sibling with the peer class, and use peer-* modifiers like peer-invalid to style the target element:\n\nTry making the email address valid to see the warning disappear\n\nEmail\n\nPlease provide a valid email address.\n\n<form>\n  <label class=\"block\">\n    <span class=\"block text-sm font-medium text-slate-700\">Email</span>\n    <input type=\"email\" class=\"peer ...\"/>\n    <p class=\"mt-2 invisible peer-invalid:visible text-pink-600 text-sm\">\n      Please provide a valid email address.\n    </p>\n  </label>\n</form>\n\nThis makes it possible to do all sorts of neat tricks, like floating labels for example without any JS.\n\nThis pattern works with every pseudo-class modifier, for example peer-focus, peer-required, and peer-disabled.\n\nIt’s important to note that the peer marker can only be used on previous siblings because of how the general sibling combinator works in CSS.\n\nWon’t work, only previous siblings can be marked as peers\n\n<label>\n  <span class=\"peer-invalid:text-red-500 ...\">Email</span>\n  <input type=\"email\" class=\"peer ...\"/>\n</label>\n​\nDifferentiating peers\n\nWhen using multiple peers, you can style something on the state of a specific peer by giving that peer a unique name using a peer/{name} class, and including that name in modifiers using classes like peer-checked/{name}:\n\nPublished status\nDraft Published\nDrafts are only visible to administrators.\n<fieldset>\n  <legend>Published status</legend>\n\n  <input id=\"draft\" class=\"peer/draft\" type=\"radio\" name=\"status\" checked />\n  <label for=\"draft\" class=\"peer-checked/draft:text-sky-500\">Draft</label>\n\n  <input id=\"published\" class=\"peer/published\" type=\"radio\" name=\"status\" />\n  <label for=\"published\" class=\"peer-checked/published:text-sky-500\">Published</label>\n\n  <div class=\"hidden peer-checked/draft:block\">Drafts are only visible to administrators.</div>\n  <div class=\"hidden peer-checked/published:block\">Your post will be publicly visible on your site.</div>\n</fieldset>\n\nPeers can be named however you like and don’t need to be configured in any way — just name your peers directly in your markup and Tailwind will automatically generate the necessary CSS.\n\n​\nArbitrary peers\n\nYou can create one-off peer-* modifiers on the fly by providing your own selector as an arbitrary value between square brackets:\n\nHTML\nGenerated CSS\n<form>\n  <label for=\"email\">Email:</label>\n  <input id=\"email\" name=\"email\" type=\"email\" class=\"is-dirty peer\" required />\n  <div class=\"peer-[.is-dirty]:peer-required:block hidden\">This field is required.</div>\n  <!-- ... -->\n</form>\n\nFor more control, you can use the & character to mark where .peer should end up in the final selector relative to the selector you are passing in:\n\nHTML\nGenerated CSS\n<div>\n  <input type=\"text\" class=\"peer\" />\n  <div class=\"hidden peer-[:nth-of-type(3)_&]:block\">\n    <!-- ... -->\n  </div>\n</div>\n​\nPseudo-elements\n​\nBefore and after\n\nStyle the ::before and ::after pseudo-elements using the before and after modifiers:\n\nEmail\n<label class=\"block\">\n  <span class=\"after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium text-slate-700\">\n    Email\n  </span>\n  <input type=\"email\" name=\"email\" class=\"mt-1 px-3 py-2 bg-white border shadow-sm border-slate-300 placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-sky-500 block w-full rounded-md sm:text-sm focus:ring-1\" placeholder=\"you@example.com\" />\n</label>\n\nWhen using these modifiers, Tailwind will automatically add content: '' by default so you don’t have to specify it unless you want a different value:\n\nWhen you look annoyed all the time, people think that you're busy.\n<blockquote class=\"text-2xl font-semibold italic text-center text-slate-900\">\n  When you look\n  <span class=\"before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-pink-500 relative inline-block\">\n    <span class=\"relative text-white\">annoyed</span>\n  </span>\n  all the time, people think that you're busy.\n</blockquote>\n\nIt’s worth noting that you don’t really need ::before and ::after pseudo-elements for most things in Tailwind projects — it’s usually simpler to just use a real HTML element.\n\nFor example, here’s the same design from above but using a <span> instead of the ::before pseudo-element, which is a little easier to read and is actually less code:\n\n<blockquote class=\"text-2xl font-semibold italic text-center text-slate-900\">\n\n  When you look\n\n  <span class=\"relative\">\n\n    <span class=\"block absolute -inset-1 -skew-y-3 bg-pink-500\" aria-hidden=\"true\"></span>\n\n    <span class=\"relative text-white\">annoyed</span>\n\n  </span>\n\n  all the time, people think that you're busy.\n\n</blockquote>\n\n\nSave before and after for situations where it’s important that the content of the pseudo-element is not actually in the DOM and can’t be selected by the user.\n\nNote that if you’ve disabled our preflight base styles, the content property will not be set to an empty string by default, and you will need to include content-[''] any time you use the before and after modifiers.\n\nIf you’ve disabled preflight make sure to set the content manually\n\n<div class=\"before:content-[''] before:block ...\">\n  <!-- ... -->\n</div>\n​\nPlaceholder text\n\nStyle the placeholder text of any input or textarea using the placeholder modifier:\n\nSearch\n<label class=\"relative block\">\n  <span class=\"sr-only\">Search</span>\n  <span class=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n    <svg class=\"h-5 w-5 fill-slate-300\" viewBox=\"0 0 20 20\"><!-- ... --></svg>\n  </span>\n  <input class=\"placeholder:italic placeholder:text-slate-400 block bg-white w-full border border-slate-300 rounded-md py-2 pl-9 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm\" placeholder=\"Search for anything...\" type=\"text\" name=\"search\"/>\n</label>\n​\nFile input buttons\n\nStyle the button in file inputs using the file modifier:\n\nChoose profile photo\n<form class=\"flex items-center space-x-6\">\n  <div class=\"shrink-0\">\n    <img class=\"h-16 w-16 object-cover rounded-full\" src=\"https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1361&q=80\" alt=\"Current profile photo\" />\n  </div>\n  <label class=\"block\">\n    <span class=\"sr-only\">Choose profile photo</span>\n    <input type=\"file\" class=\"block w-full text-sm text-slate-500\n      file:mr-4 file:py-2 file:px-4\n      file:rounded-full file:border-0\n      file:text-sm file:font-semibold\n      file:bg-violet-50 file:text-violet-700\n      hover:file:bg-violet-100\n    \"/>\n  </label>\n</form>\n\nNote that Tailwind’s border reset is not applied to file input buttons. This means that to add a border to a file input button, you need to explicitly set the border-style using a class like file:border-solid alongside any border-width utility:\n\n<input type=\"file\" class=\"file:border file:border-solid ...\" />\n​\nList markers\n\nStyle the counters or bullets in lists using the marker modifier:\n\nIngredients\n5 cups chopped Porcini mushrooms\n1/2 cup of olive oil\n3lb of celery\n<ul role=\"list\" class=\"marker:text-sky-400 list-disc pl-5 space-y-3 text-slate-400\">\n  <li>5 cups chopped Porcini mushrooms</li>\n  <li>1/2 cup of olive oil</li>\n  <li>3lb of celery</li>\n</ul>\n\nWe’ve designed the marker modifier to be inheritable, so although you can use it directly on an <li> element, you can also use it on a parent to avoid repeating yourself.\n\n​\nHighlighted text\n\nStyle the active text selection using the selection modifier:\n\nTry selecting some of this text with your mouse\n\nSo I started to walk into the water. I won't lie to you boys, I was terrified. But I pressed on, and as I made my way past the breakers a strange calm came over me. I don't know if it was divine intervention or the kinship of all living things but I tell you Jerry at that moment, I was a marine biologist.\n\n<div class=\"selection:bg-fuchsia-300 selection:text-fuchsia-900\">\n  <p>\n    So I started to walk into the water. I won't lie to you boys, I was\n    terrified. But I pressed on, and as I made my way past the breakers\n    a strange calm came over me. I don't know if it was divine intervention\n    or the kinship of all living things but I tell you Jerry at that moment,\n    I <em>was</em> a marine biologist.\n  </p>\n</div>\n\nWe’ve designed the selection modifier to be inheritable, so you can add it anywhere in the tree and it will be applied to all descendant elements.\n\nThis makes it easy to set the selection color to match your brand across your entire site:\n\n<html>\n<head>\n  <!-- ... -->\n</head>\n<body class=\"selection:bg-pink-300\">\n  <!-- ... -->\n</body>\n</html>\n​\nFirst-line and first-letter\n\nStyle the first line in a block of content using the first-line modifier, and the first letter using the first-letter modifier:\n\nWell, let me tell you something, funny boy. Y'know that little stamp, the one that says \"New York Public Library\"? Well that may not mean anything to you, but that means a lot to me. One whole hell of a lot.\n\nSure, go ahead, laugh if you want to. I've seen your type before: Flashy, making the scene, flaunting convention. Yeah, I know what you're thinking. What's this guy making such a big stink about old library books? Well, let me give you a hint, junior.\n\n<p class=\"first-line:uppercase first-line:tracking-widest\n  first-letter:text-7xl first-letter:font-bold first-letter:text-white\n  first-letter:mr-3 first-letter:float-left\n\">\n  Well, let me tell you something, funny boy. Y'know that little stamp, the one\n  that says \"New York Public Library\"? Well that may not mean anything to you,\n  but that means a lot to me. One whole hell of a lot.\n</p>\n​\nDialog backdrops\n\nStyle the backdrop of a native <dialog> element using the backdrop modifier:\n\n<dialog class=\"backdrop:bg-gray-50\">\n  <form method=\"dialog\">\n    <!-- ... -->\n  </form>\n</dialog>\n\nIf you’re using native <dialog> elements in your project, you may also want to read about styling open/closed states using the open modifier.\n\n​\nMedia and feature queries\n​\nResponsive breakpoints\n\nTo style an element at a specific breakpoint, use responsive modifiers like md and lg.\n\nFor example, this will render a 3-column grid on mobile, a 4-column grid on medium-width screens, and a 6-column grid on large-width screens:\n\n<div class=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-6\">\n  <!-- ... -->\n</div>\n\nCheck out the Responsive Design documentation for an in-depth look at how these features work.\n\n​\nPrefers color scheme\n\nThe prefers-color-scheme media query tells you whether the user prefers a light theme or dark theme, and is usually configured at the operating system level.\n\nUse utilities with no modifier to target light mode, and use the dark modifier to provide overrides for dark mode:\n\nLight mode\n\nWrites Upside-Down\n\nThe Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n\nDark mode\n\nWrites Upside-Down\n\nThe Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n\n<div class=\"bg-white dark:bg-slate-900 rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl\">\n  <div>\n    <span class=\"inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg\">\n      <svg class=\"h-6 w-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\"><!-- ... --></svg>\n    </span>\n  </div>\n  <h3 class=\"text-slate-900 dark:text-white mt-5 text-base font-medium tracking-tight\">Writes Upside-Down</h3>\n  <p class=\"text-slate-500 dark:text-slate-400 mt-2 text-sm\">\n    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n  </p>\n</div>\n\nCheck out the Dark Mode documentation for an in-depth look at how this feature works.\n\n​\nPrefers reduced motion\n\nThe prefers-reduced-motion media query tells you if the user has requested that you minimize non-essential motion.\n\nUse the motion-reduce modifier to conditionally add styles when the user has requested reduced motion:\n\nTry emulating `prefers-reduced-motion: reduce` in your developer tools to hide the spinner\n\nProcessing...\n<button type=\"button\" class=\"bg-indigo-500 ...\" disabled>\n  <svg class=\"motion-reduce:hidden animate-spin ...\" viewBox=\"0 0 24 24\"><!-- ... --></svg>\n  Processing...\n</button>\n\nTailwind also includes a motion-safe modifier that only adds styles when the user has not requested reduced motion. This can be useful when using the motion-reduce helper would mean having to “undo” a lot of styles:\n\n<!-- Using `motion-reduce` can mean lots of \"undoing\" styles -->\n<button class=\"hover:-translate-y-0.5 transition motion-reduce:hover:translate-y-0 motion-reduce:transition-none ...\">\n  Save changes\n</button>\n\n<!-- Using `motion-safe` is less code in these situations -->\n<button class=\"motion-safe:hover:-translate-x-0.5 motion-safe:transition ...\">\n  Save changes\n</button>\n​\nPrefers contrast\n\nThe prefers-contrast media query tells you if the user has requested more or less contrast.\n\nUse the contrast-more modifier to conditionally add styles when the user has requested more contrast:\n\nTry emulating `prefers-contrast: more` in your developer tools to see the changes\n\nSocial Security Number\n\nWe need this to steal your identity.\n\n<form>\n  <label class=\"block\">\n    <span class=\"block text-sm font-medium text-slate-700\">Social Security Number</span>\n    <input class=\"border-slate-200 placeholder-slate-400 contrast-more:border-slate-400 contrast-more:placeholder-slate-500\"/>\n    <p class=\"mt-2 opacity-10 contrast-more:opacity-100 text-slate-600 text-sm\">\n      We need this to steal your identity.\n    </p>\n  </label>\n</form>\n\nTailwind also includes a contrast-less modifier you can use to conditionally add styles when the user has requested less contrast.\n\n​\nViewport orientation\n\nUse the portrait and landscape modifiers to conditionally add styles when the viewport is in a specific orientation:\n\n<div>\n  <div class=\"portrait:hidden\">\n    <!-- ... -->\n  </div>\n  <div class=\"landscape:hidden\">\n    <p>\n      This experience is designed to be viewed in landscape. Please rotate your\n      device to view the site.\n    </p>\n  </div>\n</div>\n​\nPrint styles\n\nUse the print modifier to conditionally add styles that only apply when the document is being printed:\n\n<div>\n  <article class=\"print:hidden\">\n    <h1>My Secret Pizza Recipe</h1>\n    <p>This recipe is a secret, and must not be shared with anyone</p>\n    <!-- ... -->\n  </article>\n  <div class=\"hidden print:block\">\n    Are you seriously trying to print this? It's secret!\n  </div>\n</div>\n​\nSupports rules\n\nUse the supports-[...] modifier to style things based on whether a certain feature is supported in the user’s browser.\n\n<div class=\"flex supports-[display:grid]:grid ...\">\n  <!-- ... -->\n</div>\n\nUnder the hood the supports-[...] modifier generates @supports rules and takes anything you’d use with @supports (...) between the square brackets, like a property/value pair, and even expressions using and and or.\n\nFor terseness, if you only need to check if a property is supported (and not a specific value), you can just specify the property name:\n\n<div class=\"bg-black/75 supports-[backdrop-filter]:bg-black/25 supports-[backdrop-filter]:backdrop-blur ...\">\n  <!-- ... -->\n</div>\n\nYou can configure shortcuts for common @supports rules you’re using in your project in the theme.supports section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    supports: {\n      grid: 'display: grid',\n    },\n  },\n}\n\nYou can then use these custom supports-* modifiers in your project:\n\n<div class=\"supports-grid:grid\">\n  <!-- ... -->\n</div>\n​\nAttribute selectors\n​\nARIA states\n\nUse the aria-* modifier to conditionally style things based on ARIA attributes.\n\nFor example, to apply the bg-sky-700 class when the aria-checked attribute is set to true, use the aria-checked:bg-sky-700 class:\n\n<div aria-checked=\"true\" class=\"bg-gray-600 aria-checked:bg-sky-700\">\n  <!-- ... -->\n</div>\n\nBy default we’ve included modifiers for the most common boolean ARIA attributes:\n\nModifier\tCSS\naria-checked\t&[aria-checked=“true”]\naria-disabled\t&[aria-disabled=“true”]\naria-expanded\t&[aria-expanded=“true”]\naria-hidden\t&[aria-hidden=“true”]\naria-pressed\t&[aria-pressed=“true”]\naria-readonly\t&[aria-readonly=“true”]\naria-required\t&[aria-required=“true”]\naria-selected\t&[aria-selected=“true”]\n\nYou can customize which aria-* modifiers are available by editing theme.aria or theme.extend.aria in your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    extend: {\n      aria: {\n        asc: 'sort=\"ascending\"',\n        desc: 'sort=\"descending\"',\n      },\n    },\n  },\n};\n\nIf you need to use a one-off aria modifier that doesn’t make sense to include in your theme, or for more complex ARIA attributes that take specific values, use square brackets to generate a property on the fly using any arbitrary value.\n\nInvoice #\n\tClient\tAmount\n#100\tPendant Publishing\t$2,000.00\n#101\tKruger Industrial Smoothing\t$545.00\n#102\tJ. Peterman\t$10,000.25\nHTML\nGenerated CSS\n<table>\n  <thead>\n    <tr>\n      <th\n        aria-sort=\"ascending\"\n        class=\"aria-[sort=ascending]:bg-[url('/img/down-arrow.svg')] aria-[sort=descending]:bg-[url('/img/up-arrow.svg')]\"\n      >\n        Invoice #\n      </th>\n      <!-- ... -->\n    </tr>\n  </thead>\n  <!-- ... -->\n</table>\n\nARIA state modifiers can also target parent and sibling elements using the group-aria-* and peer-aria-* modifiers:\n\nHTML\nGenerated CSS\n<table>\n  <thead>\n    <tr>\n    <th aria-sort=\"ascending\" class=\"group\">\n      Invoice #\n      <svg class=\"group-aria-[sort=ascending]:rotate-0 group-aria-[sort=descending]:rotate-180\"><!-- ... --></svg>\n    </th>\n    <!-- ... -->\n    </tr>\n  </thead>\n  <!-- ... -->\n</table>\n​\nData attributes\n\nUse the data-* modifier to conditionally apply styles based on data attributes.\n\nSince there are no standard data-* attributes by definition, by default we only support arbitrary values out of the box, for example:\n\n<!-- Will apply -->\n<div data-size=\"large\" class=\"data-[size=large]:p-8\">\n  <!-- ... -->\n</div>\n\n<!-- Will not apply -->\n<div data-size=\"medium\" class=\"data-[size=large]:p-8\">\n  <!-- ... -->\n</div>\n\nYou can configure shortcuts for common data attribute selectors you’re using in your project in the theme.data section of your tailwind.config.js file:\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  theme: {\n    data: {\n      checked: 'ui~=\"checked\"',\n    },\n  },\n}\n\nYou can then use these custom data-* modifiers in your project:\n\n<div data-ui=\"checked active\" class=\"data-checked:underline\">\n  <!-- ... -->\n</div>\n​\nRTL support\n\nUse the rtl and ltr modifiers to conditionally add styles in right-to-left and left-to-right modes respectively when building multi-directional layouts:\n\nLeft-to-right\n\nTom Cook\n\nDirector of Operations\n\nRight-to-left\n\nتامر كرم\n\nالرئيس التنفيذي\n\n<div class=\"group flex items-center\">\n\n  <img class=\"shrink-0 h-12 w-12 rounded-full\" src=\"...\" alt=\"\" />\n\n  <div class=\"ltr:ml-3 rtl:mr-3\">\n\n    <p class=\"text-sm font-medium text-slate-300 group-hover:text-white\">...</p>\n\n    <p class=\"text-sm font-medium text-slate-500 group-hover:text-slate-300\">...</p>\n\n  </div>\n\n</div>\n\n\nNote that the ltr modifier will not take effect unless the dir attribute is explicitly set to ltr, so if you are building a multi-directional site make sure to always set a direction, not just in rtl mode.\n\nAlways set the direction, even if left-to-right is your default\n\n<html dir=\"ltr\">\n  <!-- ... -->\n</html>\n\nRemember, these modifiers are only useful if you are building a site that needs to support both left-to-right and right-to-left layouts. If you’re building a site that only needs to support a single direction, you don’t need these modifiers — just apply the styles that make sense for your content.\n\n​\nOpen/closed state\n\nUse the open modifier to conditionally add styles when a <details> or <dialog> element is in an open state:\n\nTry toggling the disclosure to see the styles change\n\nWhy do they call it Ovaltine?\n\nThe mug is round. The jar is round. They should call it Roundtine.\n\n<div class=\"max-w-lg mx-auto p-8\">\n\n  <details class=\"open:bg-white dark:open:bg-slate-900 open:ring-1 open:ring-black/5 dark:open:ring-white/10 open:shadow-lg p-6 rounded-lg\" open>\n\n    <summary class=\"text-sm leading-6 text-slate-900 dark:text-white font-semibold select-none\">\n\n      Why do they call it Ovaltine?\n\n    </summary>\n\n    <div class=\"mt-3 text-sm leading-6 text-slate-600 dark:text-slate-400\">\n\n      <p>The mug is round. The jar is round. They should call it Roundtine.</p>\n\n    </div>\n\n  </details>\n\n</div>\n\n​\nCustom modifiers\n​\nUsing arbitrary variants\n\nJust like arbitrary values let you use custom values with your utility classes, arbitrary variants let you write custom selector modifiers directly in your HTML.\n\nArbitrary variants are just format strings that represent the selector, wrapped in square brackets. For example, this arbitrary modifier selects an element only when it is the third child:\n\nHTML\nGenerated CSS\n<ul role=\"list\">\n  {#each items as item}\n    <li class=\"[&:nth-child(3)]:underline\">{item}</li>\n  {/each}\n</ul>\n\nThe format string is the same as what you’d use with the addVariant plugin API, with the & representing the selector being modified.\n\nArbitrary variants can be stacked with built-in modifiers or with each other, just like the rest of the modifiers in Tailwind:\n\nHTML\nGenerated CSS\n<ul role=\"list\">\n  {#each items as item}\n    <li class=\"lg:[&:nth-child(3)]:hover:underline\">{item}</li>\n  {/each}\n</ul>\n\nIf you need spaces in your selector, you can use an underscore. For example, this arbitrary modifier selects all p elements within the element where you’ve added the class:\n\nHTML\nGenerated CSS\n<div class=\"[&_p]:mt-4\">\n  <p>Lorem ipsum...</p>\n  <ul>\n    <li>\n      <p>Lorem ipsum...</p>\n    </li>\n    <!-- ... -->\n  </ul>\n</div>\n\nYou can also use at-rules like @media or @supports in arbitrary variants:\n\nHTML\nGenerated CSS\n<div class=\"flex [@supports(display:grid)]:grid\">\n  <!-- ... -->\n</div>\n\nWith at-rule custom modifiers the & placeholder isn’t necessary, just like when nesting with a preprocessor.\n\nYou can even combine at-rules and regular selector modifiers by including the selector modifier within curly braces after the at-rule:\n\nHTML\nGenerated CSS\n<button type=\"button\" class=\"[@media(any-hover:hover){&:hover}]:opacity-100\">\n  <!-- ... -->\n</button>\n​\nCreating a plugin\n\nIf you find yourself using the same arbitrary modifier multiple times in your project, it might be worth extracting it to a plugin using the addVariant API:\n\ntailwind.config.js\nlet plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    plugin(function ({ addVariant }) {\n      // Add a `third` variant, ie. `third:pb-0`\n      addVariant('third', '&:nth-child(3)')\n    })\n  ]\n}\n\nLearn more in the adding variant plugins documentation.\n\n​\nAdvanced topics\n​\nUsing with your own classes\n\nAll of Tailwind’s modifiers are available to use with your own custom classes as long as you’ve defined them in one of Tailwind’s layers or added them using a plugin:\n\nmain.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer utilities {\n  .content-auto {\n    content-visibility: auto;\n  }\n}\nHTML\n<div class=\"lg:content-auto\">\n  <!-- ... -->\n</div>\n​\nOrdering stacked modifiers\n\nWhen stacking modifiers, they are applied from the inside-out, like nested function calls:\n\n// These modifiers:\n'dark:group-hover:focus:opacity-100'\n\n// ...are applied like this:\ndark(groupHover(focus('opacity-100')))\n\nFor the most part this doesn’t actually matter, but there are a few situations where the order you use actually generates meaningfully different CSS.\n\nFor example, if you have darkMode configured to class, combining the dark and group-hover modifiers generates a different result depending on the order you use:\n\n/* dark:group-hover:opacity-100 */\n.dark .group:hover .dark\\:group-hover\\:opacity-100 {\n  opacity: 1;\n}\n\n/* group-hover:dark:opacity-100 */\n.group:hover .dark .group-hover\\:dark\\:opacity-100 {\n  opacity: 1;\n}\n\nIn the first example, the dark element needs to be a parent of the group element, but in the second example it’s reversed.\n\nAnother place this is important is when using modifiers like prose-headings that are included with the official typography plugin:\n\n/* prose-headings:hover:underline */\n.prose-headings\\:hover\\:underline:hover :is(:where(h1, h2, h3, h4, th)) {\n  text-decoration: underline;\n}\n\n/* hover:prose-headings:underline */\n.hover\\:prose-headings\\:underline :is(:where(h1, h2, h3, h4, th)):hover {\n  text-decoration: underline;\n}\n\nIn the first example, every single heading is underlined when you hover over the article itself, whereas in the second example each heading is only underlined when you hover over that heading.\n\n​\nAppendix\n​\nQuick reference\n\nA quick reference table of every single modifier included in Tailwind by default.\n\nModifier\tCSS\nhover\t&:hover\nfocus\t&:focus\nfocus-within\t&:focus-within\nfocus-visible\t&:focus-visible\nactive\t&:active\nvisited\t&:visited\ntarget\t&:target\nfirst\t&:first-child\nlast\t&:last-child\nonly\t&:only-child\nodd\t&:nth-child(odd)\neven\t&:nth-child(even)\nfirst-of-type\t&:first-of-type\nlast-of-type\t&:last-of-type\nonly-of-type\t&:only-of-type\nempty\t&:empty\ndisabled\t&:disabled\nenabled\t&:enabled\nchecked\t&:checked\nindeterminate\t&:indeterminate\ndefault\t&:default\nrequired\t&:required\nvalid\t&:valid\ninvalid\t&:invalid\nin-range\t&:in-range\nout-of-range\t&:out-of-range\nplaceholder-shown\t&:placeholder-shown\nautofill\t&:autofill\nread-only\t&:read-only\nbefore\t&::before\nafter\t&::after\nfirst-letter\t&::first-letter\nfirst-line\t&::first-line\nmarker\t&::marker\nselection\t&::selection\nfile\t&::file-selector-button\nbackdrop\t&::backdrop\nplaceholder\t&::placeholder\nsm\t@media (min-width: 640px)\nmd\t@media (min-width: 768px)\nlg\t@media (min-width: 1024px)\nxl\t@media (min-width: 1280px)\n2xl\t@media (min-width: 1536px)\nmin-[…]\t@media (min-width: …)\nmax-sm\t@media not all and (min-width: 640px)\nmax-md\t@media not all and (min-width: 768px)\nmax-lg\t@media not all and (min-width: 1024px)\nmax-xl\t@media not all and (min-width: 1280px)\nmax-2xl\t@media not all and (min-width: 1536px)\nmax-[…]\t@media (max-width: …)\ndark\t@media (prefers-color-scheme: dark)\nportrait\t@media (orientation: portrait)\nlandscape\t@media (orientation: landscape)\nmotion-safe\t@media (prefers-reduced-motion: no-preference)\nmotion-reduce\t@media (prefers-reduced-motion: reduce)\ncontrast-more\t@media (prefers-contrast: more)\ncontrast-less\t@media (prefers-contrast: less)\nprint\t@media print\nsupports-[…]\t@supports (…)\naria-checked\t&[aria-checked=“true”]\naria-disabled\t&[aria-disabled=“true”]\naria-expanded\t&[aria-expanded=“true”]\naria-hidden\t&[aria-hidden=“true”]\naria-pressed\t&[aria-pressed=“true”]\naria-readonly\t&[aria-readonly=“true”]\naria-required\t&[aria-required=“true”]\naria-selected\t&[aria-selected=“true”]\naria-[…]\t&[aria-…]\ndata-[…]\t&[data-…]\nrtl\t[dir=“rtl”] &\nltr\t[dir=“ltr”] &\nopen\t&[open]\n​\nPseudo-class reference\n\nThis is a comprehensive list of examples for all the pseudo-class modifiers included in Tailwind to complement the pseudo-classes documentation at the beginning of this guide.\n\n​\nhover (:hover)\n\nStyle an element when the user hovers over it with the mouse cursor using the hover modifier:\n\n<div class=\"bg-black hover:bg-white ...\">\n  <!-- ... -->\n</div>\n​\nfocus (:focus)\n\nStyle an element when it has focus using the focus modifier:\n\n<input class=\"border-gray-300 focus:border-blue-400 ...\" />\n​\nfocus-within (:focus-within)\n\nStyle an element when it or one of its descendants has focus using the focus-within modifier:\n\n<div class=\"focus-within:shadow-lg ...\">\n  <input type=\"text\" />\n</div>\n​\nfocus-visible (:focus-visible)\n\nStyle an element when it has been focused using the keyboard using the focus-visible modifier:\n\n<button class=\"focus:outline-none focus-visible:ring ...\">\n  Submit\n</button>\n​\nactive (:active)\n\nStyle an element when it is being pressed using the active modifier:\n\n<button class=\"bg-blue-500 active:bg-blue-600 ...\">\n  Submit\n</button>\n​\nvisited (:visited)\n\nStyle a link when it has already been visited using the visited modifier:\n\n<a href=\"https://seinfeldquotes.com\" class=\"text-blue-600 visited:text-purple-600 ...\">\n  Inspiration\n</a>\n​\ntarget (:target)\n\nStyle an element if its ID matches the current URL fragment using the target modifier:\n\n<div id=\"about\" class=\"target:shadow-lg ...\">\n  <!-- ... -->\n</div>\n​\nfirst (:first-child)\n\nStyle an element if it’s the first child using the first modifier:\n\n<ul>\n  {#each people as person}\n    <li class=\"py-4 first:pt-0 ...\">\n      <!-- ... -->\n    </li>\n  {/each}\n</ul>\n​\nlast (:last-child)\n\nStyle an element if it’s the last child using the last modifier:\n\n<ul>\n  {#each people as person}\n    <li class=\"py-4 last:pb-0 ...\">\n      <!-- ... -->\n    </li>\n  {/each}\n</ul>\n​\nonly (:only-child)\n\nStyle an element if it’s the only child using the only modifier:\n\n<ul>\n  {#each people as person}\n    <li class=\"py-4 only:py-0 ...\">\n      <!-- ... -->\n    </li>\n  {/each}\n</ul>\n​\nodd (:nth-child(odd))\n\nStyle an element if it’s an oddly numbered child using the odd modifier:\n\n<table>\n  {#each people as person}\n    <tr class=\"bg-white odd:bg-gray-100 ...\">\n      <!-- ... -->\n    </tr>\n  {/each}\n</table>\n​\neven (:nth-child(even))\n\nStyle an element if it’s an evenly numbered child using the even modifier:\n\n<table>\n  {#each people as person}\n    <tr class=\"bg-white even:bg-gray-100 ...\">\n      <!-- ... -->\n    </tr>\n  {/each}\n</table>\n​\nfirst-of-type (:first-of-type)\n\nStyle an element if it’s the first child of its type using the first-of-type modifier:\n\n<nav>\n  <img src=\"/logo.svg\" alt=\"Vandelay Industries\" />\n  {#each links as link}\n    <a href=\"#\" class=\"ml-2 first-of-type:ml-6 ...\">\n      <!-- ... -->\n    </a>\n  {/each}\n</table>\n​\nlast-of-type (:last-of-type)\n\nStyle an element if it’s the last child of its type using the last-of-type modifier:\n\n<nav>\n  <img src=\"/logo.svg\" alt=\"Vandelay Industries\" />\n  {#each links as link}\n    <a href=\"#\" class=\"mr-2 last-of-type:mr-6 ...\">\n      <!-- ... -->\n    </a>\n  {/each}\n  <button>More</button>\n</table>\n​\nonly-of-type (:only-of-type)\n\nStyle an element if it’s the only child of its type using the only-of-type modifier:\n\n<nav>\n  <img src=\"/logo.svg\" alt=\"Vandelay Industries\" />\n  {#each links as link}\n    <a href=\"#\" class=\"mx-2 only-of-type:mx-6 ...\">\n      <!-- ... -->\n    </a>\n  {/each}\n  <button>More</button>\n</table>\n​\nempty (:empty)\n\nStyle an element if it has no content using the empty modifier:\n\n<ul>\n  {#each people as person}\n    <li class=\"empty:hidden ...\">{person.hobby}</li>\n  {/each}\n</ul>\n​\ndisabled (:disabled)\n\nStyle an input when it’s disabled using the disabled modifier:\n\n<input class=\"disabled:opacity-75 ...\" />\n​\nenabled (:enabled)\n\nStyle an input when it’s enabled using the enabled modifier, most helpful when you only want to apply another style when an element is not disabled:\n\n<input class=\"enabled:hover:border-gray-400 disabled:opacity-75 ...\" />\n​\nchecked (:checked)\n\nStyle a checkbox or radio button when it’s checked using the checked modifier:\n\n<input type=\"checkbox\" class=\"appearance-none checked:bg-blue-500 ...\" />\n​\nindeterminate (:indeterminate)\n\nStyle a checkbox or radio button in an indeterminate state using the indeterminate modifier:\n\n<input type=\"checkbox\" class=\"appearance-none indeterminate:bg-gray-300 ...\" />\n​\ndefault (:default)\n\nStyle an option, checkbox or radio button that was the default value when the page initially loaded using the default modifier:\n\n<input type=\"checkbox\" class=\"default:ring-2 ...\" />\n​\nrequired (:required)\n\nStyle an input when it’s required using the required modifier:\n\n<input class=\"required:border-red-500 ...\" />\n​\nvalid (:valid)\n\nStyle an input when it’s valid using the valid modifier:\n\n<input class=\"valid:border-green-500 ...\" />\n​\ninvalid (:invalid)\n\nStyle an input when it’s invalid using the invalid modifier:\n\n<input class=\"invalid:border-red-500 ...\" />\n​\nin-range (:in-range)\n\nStyle an input when it’s value is within a specified range limit using the in-range modifier:\n\n<input min=\"1\" max=\"5\" class=\"in-range:border-green-500 ...\" />\n​\nout-of-range (:out-of-range)\n\nStyle an input when it’s value is outside of a specified range limit using the out-of-range modifier:\n\n<input min=\"1\" max=\"5\" class=\"out-of-range:border-red-500 ...\" />\n​\nplaceholder-shown (:placeholder-shown)\n\nStyle an input when the placeholder is shown using the placeholder-shown modifier:\n\n<input class=\"placeholder-shown:border-gray-500 ...\" placeholder=\"you@example.com\" />\n​\nautofill (:autofill)\n\nStyle an input when it has been autofilled by the browser using the autofill modifier:\n\n<input class=\"autofill:bg-yellow-200 ...\" />\n​\nread-only (:read-only)\n\nStyle an input when it is read-only using the read-only modifier:\n\n<input class=\"read-only:bg-gray-100 ...\" />\nUtility-First Fundamentals\nResponsive Design\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nPseudo-classes\nHover, focus, and active\nFirst, last, odd, and even\nForm states\nStyling based on parent state\nStyling based on sibling state\nPseudo-elements\nBefore and after\nPlaceholder text\nFile input buttons\nList markers\nHighlighted text\nFirst-line and first-letter\nDialog backdrops\nMedia and feature queries\nResponsive breakpoints\nPrefers color scheme\nPrefers reduced motion\nPrefers contrast\nViewport orientation\nPrint styles\nSupports rules\nAttribute selectors\nARIA states\nData attributes\nRTL support\nOpen/closed state\nCustom modifiers\nUsing arbitrary variants\nCreating a plugin\nAdvanced topics\nUsing with your own classes\nOrdering stacked modifiers\nAppendix\nQuick reference\nPseudo-class reference\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Utility-First Fundamentals - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/utility-first",
    "html": "Core Concepts\n\nUtility-First Fundamentals\n\nBuilding complex components from a constrained set of primitive utilities.\n\n​\nOverview\n\nTraditionally, whenever you need to style something on the web, you write CSS.\n\nUsing a traditional approach where custom designs require custom CSS\n\nChitChat\n\nYou have a new message!\n\n<div class=\"chat-notification\">\n  <div class=\"chat-notification-logo-wrapper\">\n    <img class=\"chat-notification-logo\" src=\"/img/logo.svg\" alt=\"ChitChat Logo\">\n  </div>\n  <div class=\"chat-notification-content\">\n    <h4 class=\"chat-notification-title\">ChitChat</h4>\n    <p class=\"chat-notification-message\">You have a new message!</p>\n  </div>\n</div>\n\n<style>\n  .chat-notification {\n    display: flex;\n    max-width: 24rem;\n    margin: 0 auto;\n    padding: 1.5rem;\n    border-radius: 0.5rem;\n    background-color: #fff;\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  }\n  .chat-notification-logo-wrapper {\n    flex-shrink: 0;\n  }\n  .chat-notification-logo {\n    height: 3rem;\n    width: 3rem;\n  }\n  .chat-notification-content {\n    margin-left: 1.5rem;\n    padding-top: 0.25rem;\n  }\n  .chat-notification-title {\n    color: #1a202c;\n    font-size: 1.25rem;\n    line-height: 1.25;\n  }\n  .chat-notification-message {\n    color: #718096;\n    font-size: 1rem;\n    line-height: 1.5;\n  }\n</style>\n\nWith Tailwind, you style elements by applying pre-existing classes directly in your HTML.\n\nUsing utility classes to build custom designs without writing CSS\n\nChitChat\n\nYou have a new message!\n\n<div class=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-lg flex items-center space-x-4\">\n  <div class=\"shrink-0\">\n    <img class=\"h-12 w-12\" src=\"/img/logo.svg\" alt=\"ChitChat Logo\">\n  </div>\n  <div>\n    <div class=\"text-xl font-medium text-black\">ChitChat</div>\n    <p class=\"text-slate-500\">You have a new message!</p>\n  </div>\n</div>\n\nIn the example above, we’ve used:\n\nTailwind’s flexbox and padding utilities (flex, shrink-0, and p-6) to control the overall card layout\nThe max-width and margin utilities (max-w-sm and mx-auto) to constrain the card width and center it horizontally\nThe background color, border radius, and box-shadow utilities (bg-white, rounded-xl, and shadow-lg) to style the card’s appearance\nThe width and height utilities (w-12 and h-12) to size the logo image\nThe space-between utilities (space-x-4) to handle the spacing between the logo and the text\nThe font size, text color, and font-weight utilities (text-xl, text-black, font-medium, etc.) to style the card text\n\nThis approach allows us to implement a completely custom component design without writing a single line of custom CSS.\n\nNow I know what you’re thinking, “this is an atrocity, what a horrible mess!” and you’re right, it’s kind of ugly. In fact it’s just about impossible to think this is a good idea the first time you see it — you have to actually try it.\n\nBut once you’ve actually built something this way, you’ll quickly notice some really important benefits:\n\nYou aren’t wasting energy inventing class names. No more adding silly class names like sidebar-inner-wrapper just to be able to style something, and no more agonizing over the perfect abstract name for something that’s really just a flex container.\nYour CSS stops growing. Using a traditional approach, your CSS files get bigger every time you add a new feature. With utilities, everything is reusable so you rarely need to write new CSS.\nMaking changes feels safer. CSS is global and you never know what you’re breaking when you make a change. Classes in your HTML are local, so you can change them without worrying about something else breaking.\n\nWhen you realize how productive you can be working exclusively in HTML with predefined utility classes, working any other way will feel like torture.\n\n​\nWhy not just use inline styles?\n\nA common reaction to this approach is wondering, “isn’t this just inline styles?” and in some ways it is — you’re applying styles directly to elements instead of assigning them a class name and then styling that class.\n\nBut using utility classes has a few important advantages over inline styles:\n\nDesigning with constraints. Using inline styles, every value is a magic number. With utilities, you’re choosing styles from a predefined design system, which makes it much easier to build visually consistent UIs.\nResponsive design. You can’t use media queries in inline styles, but you can use Tailwind’s responsive utilities to build fully responsive interfaces easily.\nHover, focus, and other states. Inline styles can’t target states like hover or focus, but Tailwind’s state variants make it easy to style those states with utility classes.\n\nThis component is fully responsive and includes a button with hover and focus styles, and is built entirely with utility classes:\n\nErin Lindford\n\nProduct Engineer\n\nMessage\n<div class=\"py-8 px-8 max-w-sm mx-auto bg-white rounded-xl shadow-lg space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6\">\n  <img class=\"block mx-auto h-24 rounded-full sm:mx-0 sm:shrink-0\" src=\"/img/erin-lindford.jpg\" alt=\"Woman's Face\" />\n  <div class=\"text-center space-y-2 sm:text-left\">\n    <div class=\"space-y-0.5\">\n      <p class=\"text-lg text-black font-semibold\">\n        Erin Lindford\n      </p>\n      <p class=\"text-slate-500 font-medium\">\n        Product Engineer\n      </p>\n    </div>\n    <button class=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Message</button>\n  </div>\n</div>\n​\nMaintainability concerns\n\nThe biggest maintainability concern when using a utility-first approach is managing commonly repeated utility combinations.\n\nThis is easily solved by extracting components and partials, and using editor and language features like multi-cursor editing and simple loops.\n\n<!-- PrimaryButton.vue -->\n<template>\n  <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n    <slot/>\n  </button>\n</template>\n\nAside from that, maintaining a utility-first CSS project turns out to be a lot easier than maintaining a large CSS codebase, simply because HTML is so much easier to maintain than CSS. Large companies like GitHub, Netflix, Heroku, Kickstarter, Twitch, Segment, and more are using this approach with great success.\n\nIf you’d like to hear about others’ experiences with this approach, check out the following resources:\n\nBy The Numbers: A Year and a Half with Atomic CSS by John Polacek\nNo, Utility Classes Aren’t the Same As Inline Styles by Sarah Dayan of Algolia\nDiana Mounter on using utility classes at GitHub, a podcast interview\n\nFor even more, check out The Case for Atomic/Utility-First CSS, curated by John Polacek.\n\nUpgrade Guide\nHover, Focus, and Other States\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nOverview\nWhy not just use inline styles?\nMaintainability concerns\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Browser Support - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/browser-support",
    "html": "Getting Started\n\nBrowser Support\n\nUnderstanding which browsers Tailwind supports and how to manage vendor prefixes.\n\nIn general, Tailwind CSS v3.0 is designed for and tested on the latest stable versions of Chrome, Firefox, Edge, and Safari. It does not support any version of IE, including IE 11.\n\nWhile most of the features in Tailwind CSS will work in all modern browsers, Tailwind also includes APIs for several bleeding-edge features that aren’t yet supported by all browsers, for example the :focus-visible pseudo-class and backdrop-filter utilities.\n\nSince Tailwind is such a low-level framework, it’s easy to avoid these features if you can’t use them by simply not using the utility or modifier that’s not supported, much like how you just wouldn’t use those CSS features in your CSS.\n\nThe Can I Use database is a great resource when you’re unsure about the support for an unfamiliar CSS feature.\n\n​\nVendor Prefixes\n\nMany CSS properties require vendor prefixes to be understood by browsers, for example background-clip: text needs the -webkit prefix to work in most browsers:\n\n.bg-clip-text {\n  -webkit-background-clip: text;\n  background-clip: text;\n}\n\nIf you’re using the Tailwind CLI tool, vendor prefixes like this will be added automatically.\n\nIf not, we recommend that you use Autoprefixer, which is a PostCSS plugin that automatically adds any necessary vendor prefixes based on the browsers you tell it you need to support.\n\nTo use it, install it via npm:\n\nnpm install -D autoprefixer\n\nThen add it to the very end of your plugin list in your PostCSS configuration:\n\nmodule.exports = {\n  plugins: [\n    require('tailwindcss'),\n    require('autoprefixer'),\n  ]\n}\n\nTo learn more about specifying which browsers you need to support, check out Browserslist which is the standard way to define target browsers in front-end tooling.\n\nOptimizing for Production\nUpgrade Guide\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nVendor Prefixes\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Optimizing for Production - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/optimizing-for-production",
    "html": "Getting Started\n\nOptimizing for Production\n\nGetting the most performance out of Tailwind CSS projects.\n\nTailwind CSS is incredibly performance focused and aims to produce the smallest CSS file possible by only generating the CSS you are actually using in your project.\n\nCombined with minification and network compression, this usually leads to CSS files that are less than 10kB, even for large projects. For example, Netflix uses Tailwind for Netflix Top 10 and the entire website delivers only 6.5kB of CSS over the network.\n\nWith CSS files this small, you don’t have to worry about complex solutions like code-splitting your CSS for each page, and can instead just ship a single small CSS file that’s downloaded once and cached until you redeploy your site.\n\nFor the smallest possible production build, we recommend minifying your CSS with a tool like cssnano, and compressing your CSS with Brotli.\n\nIf you’re using Tailwind CLI, you can minify your CSS by adding the --minify flag:\n\nnpx tailwindcss -o build.css --minify\n\nIf you’ve installed Tailwind as a PostCSS plugin, add cssnano to the end of your plugin list:\n\npostcss.config.js\nmodule.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n    ...(process.env.NODE_ENV === 'production' ? { cssnano: {} } : {})\n  }\n}\n\nIf you’re using a framework, check the documentation as this is often handled for you in production automatically and you don’t even need to configure it."
  },
  {
    "title": "Using with Preprocessors - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/using-with-preprocessors",
    "html": "Getting Started\n\nUsing with Preprocessors\n\nA guide to using Tailwind with common CSS preprocessors like Sass, Less, and Stylus.\n\nSince Tailwind is a PostCSS plugin, there’s nothing stopping you from using it with Sass, Less, Stylus, or other preprocessors, just like you can with other PostCSS plugins like Autoprefixer.\n\nIt’s important to note that you don’t need to use a preprocessor with Tailwind — you typically write very little CSS on a Tailwind project anyways so using a preprocessor just isn’t as beneficial as it would be in a project where you write a lot of custom CSS.\n\nThis guide only exists as a reference for people who need to integrate Tailwind with a preprocessor for reasons outside of their control, not because it is a recommended practice.\n\n​\nUsing PostCSS as your preprocessor\n\nIf you’re using Tailwind for a brand new project and don’t need to integrate it with any existing Sass/Less/Stylus stylesheets, you should highly consider relying on other PostCSS plugins to add the preprocessor features you use instead of using a separate preprocessor.\n\nThis has a few benefits:\n\nYour builds will be faster. Since your CSS doesn’t have to be parsed and processed by multiple tools, your CSS will compile much quicker using only PostCSS.\nNo quirks or workarounds. Because Tailwind adds some new non-standard keywords to CSS (like @tailwind, @apply, theme(), etc.), you often have to write your CSS in annoying, unintuitive ways to get a preprocessor to give you the expected output. Working exclusively with PostCSS avoids this.\n\nFor a fairly comprehensive list of available PostCSS plugins see the PostCSS GitHub repository, but here are a few important ones we use on our own projects and can recommend.\n\n​\nBuild-time imports\n\nOne of the most useful features preprocessors offer is the ability to organize your CSS into multiple files and combine them at build time by processing @import statements in advance, instead of in the browser.\n\nThe canonical plugin for handling this with PostCSS is postcss-import.\n\nTo use it, install the plugin via npm:\n\nnpm install -D postcss-import\n\nThen add it as the very first plugin in your PostCSS configuration:\n\n// postcss.config.js\nmodule.exports = {\n  plugins: {\n    'postcss-import': {},\n    tailwindcss: {},\n    autoprefixer: {},\n  }\n}\n\nOne important thing to note about postcss-import is that it strictly adheres to the CSS spec and disallows @import statements anywhere except at the very top of a file.\n\nWon’t work, @import statements must come first\n\n/* components.css */\n\n.btn {\n  padding: theme('spacing.4') theme('spacing.2');\n  /* ... */\n}\n\n/* Will not work */\n@import \"./components/card\";\n\nThe easiest solution to this problem is to never mix regular CSS and imports in the same file. Instead, create one main entry-point file for your imports, and keep all of your actual CSS in separate files.\n\nUse separate files for imports and actual CSS\n\n/* components.css */\n@import \"./components/buttons.css\";\n@import \"./components/card.css\";\n/* components/buttons.css */\n.btn {\n  padding: theme('spacing.4') theme('spacing.2');\n  /* ... */\n}\n/* components/card.css */\n.card {\n  padding: theme('spacing.4');\n  /* ... */\n}\n\nThe place you are most likely to run into this situation is in your main CSS file that includes your @tailwind declarations.\n\nWon’t work, @import statements must come first\n\n@tailwind base;\n@import \"./custom-base-styles.css\";\n\n@tailwind components;\n@import \"./custom-components.css\";\n\n@tailwind utilities;\n@import \"./custom-utilities.css\";\n\nYou can solve this by creating separate files for each @tailwind declaration, and then importing those files in your main stylesheet. To make this easy, we provide separate files for each @tailwind declaration out of the box that you can import directly from node_modules.\n\nThe postcss-import plugin is smart enough to look for files in the node_modules folder automatically, so you don’t need to provide the entire path — \"tailwindcss/base\" for example is enough.\n\nImport our provided CSS files\n\n@import \"tailwindcss/base\";\n@import \"./custom-base-styles.css\";\n\n@import \"tailwindcss/components\";\n@import \"./custom-components.css\";\n\n@import \"tailwindcss/utilities\";\n@import \"./custom-utilities.css\";\n​\nNesting\n\nTo add support for nested declarations, we recommend our bundled tailwindcss/nesting plugin, which is a PostCSS plugin that wraps postcss-nested or postcss-nesting and acts as a compatibility layer to make sure your nesting plugin of choice properly understands Tailwind’s custom syntax like @apply and @screen.\n\nIt’s included directly in the tailwindcss package itself, so to use it all you need to do is add it to your PostCSS configuration, somewhere before Tailwind:\n\n// postcss.config.js\nmodule.exports = {\n  plugins: {\n    'postcss-import': {},\n    'tailwindcss/nesting': {},\n    tailwindcss: {},\n    autoprefixer: {},\n  }\n}\n\nBy default, it uses the postcss-nested plugin under the hood, which uses a Sass-like syntax and is the plugin that powers nesting support in the Tailwind CSS plugin API.\n\nIf you’d rather use postcss-nesting (which is based on the work-in-progress CSS Nesting specification), first install the plugin:\n\nnpm install -D postcss-nesting\n\nThen pass the plugin itself as an argument to tailwindcss/nesting in your PostCSS configuration:\n\n// postcss.config.js\nmodule.exports = {\n  plugins: {\n    'postcss-import': {},\n    'tailwindcss/nesting': 'postcss-nesting',\n    tailwindcss: {},\n    autoprefixer: {},\n  }\n}\n\nThis can also be helpful if for whatever reason you need to use a very specific version of postcss-nested and want to override the version we bundle with tailwindcss/nesting itself.\n\nNote that if you are using postcss-preset-env in your project, you should make sure to disable nesting and let tailwindcss/nesting handle it for you instead:\n\n// postcss.config.js\nmodule.exports = {\n  plugins: {\n    'postcss-import': {},\n    'tailwindcss/nesting': 'postcss-nesting',\n    tailwindcss: {},\n    'postcss-preset-env': {\n      features: { 'nesting-rules': false },\n    },\n  }\n}\n​\nVariables\n\nThese days CSS variables (officially known as custom properties) have really good browser support, so you don’t need a preprocessor to use variables at all.\n\n:root {\n  --theme-color: #52b3d0;\n}\n\n/* ... */\n\n.btn {\n  background-color: var(--theme-color);\n  /* ... */\n}\n\nWe use CSS variables extensively within Tailwind itself, so if you can use Tailwind, you can use native CSS variables.\n\nYou may also find that most of the things you’ve used variables for in the past can be replaced with Tailwind’s theme() function, which gives you access to all of your design tokens from your tailwind.config.js file directly in your CSS:\n\n.btn {\n  background-color: theme('colors.blue.500');\n  padding: theme('spacing.2') theme('spacing.4');\n  /* ... */\n}\n\nLearn more about the theme() function in our functions and directives documentation;\n\n​\nVendor prefixes\n\nFor automatically managing vendor prefixes in your CSS, you should use Autoprefixer.\n\nTo use it, install it via npm:\n\nnpm install -D autoprefixer\n\nThen add it to the very end of your plugin list in your PostCSS configuration:\n\nmodule.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  }\n}\n​\nUsing Sass, Less, or Stylus\n\nFor the best development experience, we highly recommended that you use PostCSS exclusively, and that you don’t use preprocessors like Sass or Less in your Tailwind projects.\n\nTo use Tailwind with a preprocessing tool like Sass, Less, or Stylus, you’ll need to add an additional build step to your project that lets you run your preprocessed CSS through PostCSS. If you’re using Autoprefixer in your project, you already have something like this set up.\n\nSee our documentation on installing Tailwind as a PostCSS plugin to learn more about integrating Tailwind into your existing build process.\n\nThe most important thing to understand about using Tailwind with a preprocessor is that preprocessors like Sass, Less, and Stylus run separately, before Tailwind. This means that you can’t feed output from Tailwind’s theme() function into a Sass color function for example, because the theme() function isn’t actually evaluated until your Sass has been compiled to CSS and fed into PostCSS.\n\nWon’t work, Sass is processed first\n\n.alert {\n  background-color: darken(theme('colors.red.500'), 10%);\n}\n\nAside from that, each preprocessor has its own quirk or two when used with Tailwind, which are outlined with workarounds below.\n\n​\nSass\n\nWhen using Tailwind with Sass, using !important with @apply requires you to use interpolation to compile properly.\n\nWon’t work, Sass complains about !important\n\n.alert {\n  @apply bg-red-500 !important;\n}\n\nUse interpolation as a workaround\n\n.alert {\n  @apply bg-red-500 #{!important};\n}\n​\nLess\n\nWhen using Tailwind with Less, you cannot nest Tailwind’s @screen directive.\n\nWon’t work, Less doesn’t realise it’s a media query\n\n.card {\n  @apply rounded-none;\n\n  @screen sm {\n    @apply rounded-lg;\n  }\n}\n\nInstead, use a regular media query along with the theme() function to reference your screen sizes, or simply don’t nest your @screen directives.\n\nUse a regular media query and theme()\n\n.card {\n  @apply rounded-none;\n\n  @media (min-width: theme('screens.sm')) {\n    @apply rounded-lg;\n  }\n}\n\nUse the @screen directive at the top-level\n\n.card {\n  @apply rounded-none;\n}\n@screen sm {\n  .card {\n    @apply rounded-lg;\n  }\n}\n​\nStylus\n\nWhen using Tailwind with Stylus, you can’t use Tailwind’s @apply feature without wrapping the entire CSS rule in @css so that Stylus treats it as literal CSS:\n\nWon’t work, Stylus complains about @apply\n\n.card {\n  @apply rounded-lg bg-white p-4\n}\n\nUse @css to avoid processing as Stylus\n\n@css {\n  .card {\n    @apply rounded-lg bg-white p-4\n  }\n}\n\nThis comes with a significant cost however, which is that you cannot use any Stylus features inside a @css block.\n\nAnother option is to use the theme() function instead of @apply, and write out the actual CSS properties in long form:\n\nUse theme() instead of @apply\n\n.card {\n  border-radius: theme('borderRadius.lg');\n  background-color: theme('colors.white');\n  padding: theme('spacing.4');\n}\n\nIn addition to this, Stylus doesn’t support nesting the @screen directive (just like Less).\n\nWon’t work, Stylus doesn’t realise it’s a media query\n\n.card {\n  border-radius: 0;\n\n  @screen sm {\n    border-radius: theme('borderRadius.lg');\n  }\n}\n\nInstead, use a regular media query along with the theme() function to reference your screen sizes, or simply don’t nest your @screen directives.\n\nUse a regular media query and theme()\n\n.card {\n  border-radius: 0;\n\n  @media (min-width: theme('screens.sm')) {\n    border-radius: theme('borderRadius.lg');\n  }\n}\n\nUse the @screen directive at the top-level\n\n.card {\n  border-radius: 0;\n}\n@screen sm {\n  .card {\n    border-radius: theme('borderRadius.lg');\n  }\n}\nEditor Setup\nOptimizing for Production\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nUsing PostCSS as your preprocessor\nBuild-time imports\nNesting\nVariables\nVendor prefixes\nUsing Sass, Less, or Stylus\nSass\nLess\nStylus\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Editor Setup - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/editor-setup",
    "html": "Getting Started\n\nEditor Setup\n\nPlugins and configuration settings that can improve the developer experience when working with Tailwind CSS.\n\n​\nSyntax support\n\nTailwind CSS uses a lot of custom CSS at-rules like @tailwind, @apply, and @screen, and in many editors this can trigger warnings or errors where these rules aren’t recognized.\n\nThe solution to this is almost always to install a plugin for your editor/IDE for PostCSS language support instead of regular CSS.\n\nIf you’re using VS Code, our official Tailwind CSS IntelliSense plugin includes a dedicated Tailwind CSS language mode that has support for all of the custom at-rules and functions Tailwind uses.\n\nIn some cases, you may need to disable native CSS linting/validations if your editor is very strict about the syntax it expects in your CSS files.\n\n​\nIntelliSense for VS Code\n\nThe official Tailwind CSS IntelliSense extension for Visual Studio Code enhances the Tailwind development experience by providing users with advanced features such as autocomplete, syntax highlighting, and linting.\n\nAutocomplete. Intelligent suggestions for class names, as well as CSS functions and directives.\nLinting. Highlights errors and potential bugs in both your CSS and your markup.\nHover Previews. See the complete CSS for a Tailwind class name by hovering over it.\nSyntax Highlighting. Provides syntax definitions so that Tailwind features are highlighted correctly.\n\nCheck out the project on GitHub to learn more, or add it to Visual Studio Code to get started now.\n\n​\nAutomatic class sorting with Prettier\n\nWe maintain an official Prettier plugin for Tailwind CSS that automatically sorts your classes following our recommended class order.\n\nIt works seamlessly with custom Tailwind configurations, and because it’s just a Prettier plugin, it works anywhere Prettier works — including every popular editor and IDE, and of course on the command line.\n\n<!-- Before -->\n<button class=\"text-white px-4 sm:px-8 py-2 sm:py-3 bg-sky-700 hover:bg-sky-800\">...</button>\n\n<!-- After -->\n<button class=\"bg-sky-700 px-4 py-2 text-white hover:bg-sky-800 sm:px-8 sm:py-3\">...</button>\n\nCheck out the plugin on GitHub to learn more and get started.\n\n​\nJetBrains IDEs\n\nJetBrains IDEs like WebStorm, PhpStorm, and others include support for intelligent Tailwind CSS completions in your HTML and when using @apply.\n\nLearn more about Tailwind CSS support in JetBrains IDEs →\n\nInstallation\nUsing with Preprocessors\n\nCopyright © 2023 Tailwind Labs Inc.\n\nTrademark Policy\n\nOn this page\nSyntax support\nIntelliSense for VS Code\nAutomatic class sorting with Prettier\nJetBrains IDEs\n\nFrom the creators of Tailwind CSS\n\nMake your ideas look awesome, without relying on a designer.\n\n“This is the survival kit I wish I had when I started building apps.”\nDerrick Reimer, SavvyCal"
  },
  {
    "title": "Installation - Tailwind CSS",
    "url": "https://tailwindcss.com/docs/installation",
    "html": "Tailwind CSS works by scanning all of your HTML files, JavaScript components, and any other templates for class names, generating the corresponding styles and then writing them to a static CSS file.\n\nIt's fast, flexible, and reliable — with zero-runtime.\n\nInstallation\nTailwind CLI\nUsing PostCSS\nFramework Guides\nPlay CDN\nInstalling Tailwind CLI\n\nThe simplest and fastest way to get up and running with Tailwind CSS from scratch is with the Tailwind CLI tool. The CLI is also available as a standalone executable if you want to use it without installing Node.js.\n\nInstall Tailwind CSS\n\nInstall tailwindcss via npm, and create your tailwind.config.js file.\n\nTerminal\nnpm install -D tailwindcss\nnpx tailwindcss init\nConfigure your template paths\n\nAdd the paths to all of your template files in your tailwind.config.js file.\n\ntailwind.config.js\n/** @type {import('tailwindcss').Config} */\n\nmodule.exports = {\n\n  content: [\"./src/**/*.{html,js}\"],\n\n  theme: {\n\n    extend: {},\n\n  },\n\n  plugins: [],\n\n}\n\nAdd the Tailwind directives to your CSS\n\nAdd the @tailwind directives for each of Tailwind’s layers to your main CSS file.\n\nsrc/input.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\nStart the Tailwind CLI build process\n\nRun the CLI tool to scan your template files for classes and build your CSS.\n\nTerminal\nnpx tailwindcss -i ./src/input.css -o ./dist/output.css --watch\nStart using Tailwind in your HTML\n\nAdd your compiled CSS file to the <head> and start using Tailwind’s utility classes to style your content.\n\nsrc/index.html\n<!doctype html>\n\n<html>\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <link href=\"/dist/output.css\" rel=\"stylesheet\">\n\n</head>\n\n<body>\n\n  <h1 class=\"text-3xl font-bold underline\">\n\n    Hello world!\n\n  </h1>\n\n</body>\n\n</html>\n\nWhat to read next\n\nGet familiar with some of the core concepts that make Tailwind CSS different from writing traditional CSS.\n\nUtility-First Fundamentals\n\nUsing a utility-first workflow to build complex components from a constrained set of primitive utilities.\n\nResponsive Design\n\nBuild fully responsive user interfaces that adapt to any screen size using responsive modifiers.\n\nHover, Focus & Other States\n\nStyle elements in interactive states like hover, focus, and more using conditional modifiers.\n\nDark Mode\n\nOptimize your site for dark mode directly in your HTML using the dark mode modifier.\n\nReusing Styles\n\nManage duplication and keep your projects maintainable by creating reusable abstractions.\n\nCustomizing the Framework\n\nCustomize the framework to match your brand and extend it with your own custom styles."
  }
]
