[
  {
    "title": "useUrlSearchParams | VueUse",
    "url": "https://vueuse.org/core/useUrlSearchParams/?foo=bar&vueuse=awesome#VPContent",
    "html": "useUrlSearchParams\n​\nCategory\nBrowser\nExport Size\n1.59 kB\nLast Changed\nlast year\n\nReactive URLSearchParams\n\nDemo\n​\n\nsource\n\nfoo=bar\nvueuse=awesome\nUsage\n​\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('history')\n\nconsole.log(params.foo) // 'bar'\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `?foo=bar&vueuse=awesome`\nHash Mode\n​\n\nWhen using with hash mode route, specify the mode to hash\n\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `#/your/route?foo=bar&vueuse=awesome`\nHash Params\n​\n\nWhen using with history mode route, but want to use hash as params, specify the mode to hash-params\n\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash-params')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `/your/route#foo=bar&vueuse=awesome`\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nlstoeferle\nsun0day\n专业逮虾户aa\nMarius\nPatrick Stillhart\nodex21\nMichel EDIGHOFFER\nAlex Kozack\nChangelog\n​\nv9.2.0 on 9/5/2022\n7b288 - feat: add write option (#2165)\nv9.1.1 on 8/23/2022\n42300 - fix(useURLSearchParams): avoid referencing to global location (#2066)\nv8.7.0 on 6/16/2022\n1ef51 - fix: preserve history state when updating query (#1661)"
  },
  {
    "title": "useCloned | VueUse",
    "url": "https://vueuse.org/core/useCloned/#VPContent",
    "html": "useCloned\n​\nCategory\nUtilities\nExport Size\n499 B\nLast Changed\n6 months ago\n\nReactive clone of a ref. By default, it use JSON.parse(JSON.stringify()) to do the clone.\n\nDemo\n​\n\nsource\n\nreset\nUsage\n​\nts\nimport { useCloned } from '@vueuse/core'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned } = useCloned(original)\n\noriginal.value.key = 'some new value'\n\nconsole.log(cloned.value.key) // 'some new value'\nManual cloning\n​\nts\nimport { useCloned } from '@vueuse/core'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned, sync } = useCloned(original, { manual: true })\n\noriginal.value.key = 'manual'\n\nconsole.log(cloned.value.key) // 'value'\n\nsync()\n\nconsole.log(cloned.value.key)// 'manual'\nCustom Clone Function\n​\n\nUsing klona for example:\n\nts\nimport { useCloned } from '@vueuse/core'\nimport { klona } from 'klona'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned, sync } = useCloned(original, { clone: klona })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJeff Yang (楊德誠)\nAkkapon Chainarong\nEduardo Wesley\nMikhailov Nikita\nChangelog\n​\nv10.2.0 on 6/16/2023\n6d630 - fix: check for getter function to watch (#3142)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.2.0 on 9/5/2022\n369e1 - feat(useVModel): support clone option (#2022)\n0a0a1 - feat: new function (#2045)"
  },
  {
    "title": "useTimestamp | VueUse",
    "url": "https://vueuse.org/core/useTimestamp/#VPContent",
    "html": "useTimestamp\n​\nCategory\nAnimation\nExport Size\n817 B\nLast Changed\nlast year\n\nReactive current timestamp\n\nDemo\n​\n\nsource\n\nTimestamp: 1701206238338\nUsage\n​\njs\nimport { useTimestamp } from '@vueuse/core'\n\nconst timestamp = useTimestamp({ offset: 0 })\njs\nconst { timestamp, pause, resume } = useTimestamp({ controls: true })\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseTimestamp v-slot=\"{ timestamp, pause, resume }\">\n  Current Time: {{ timestamp }}\n  <button @click=\"pause()\">Pause</button>\n  <button @click=\"resume()\">Resume</button>\n</UseTimestamp>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nsun0day\nWaleed Khaled\nsun0day\nJelf\nScott Bedard\nShinigami\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.3.0 on 9/26/2022\n33dbc - feat: optional callback for useInterval, useTimeout & useTimestamp (#2240)\nv8.9.3 on 7/14/2022\n98985 - fix!: rename type TimestampOptions to UseTimestampOptions (#1892)"
  },
  {
    "title": "templateRef | VueUse",
    "url": "https://vueuse.org/core/templateRef/#VPContent",
    "html": "templateRef\n​\nCategory\nComponent\nExport Size\n270 B\nLast Changed\nlast year\n\nShorthand for binding ref to template element.\n\nUsage\n​\nvue\n<script lang=\"ts\">\nimport { templateRef } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = templateRef('target')\n\n    // no need to return the `target`, it will bind to the ref magically\n  },\n}\n</script>\n\n<template>\n  <div ref=\"target\" />\n</template>\nWith JSX/TSX\n​\ntsx\nimport { templateRef } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = templateRef<HTMLElement | null>('target', null)\n\n    // use string ref\n    return () => <div ref=\"target\"></div>\n  },\n}\n<script setup>\n​\n\nThere is no need for this when using with <script setup> since all the variables will be exposed to the template. It will be exactly the same as ref.\n\nvue\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\nconst target = ref<HTMLElement | null>(null)\n</script>\n\n<template>\n  <div ref=\"target\" />\n</template>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nHollis Wu\nlikeswinds\nAlex Kozack\nzhong666\nChangelog\n​\nv9.3.0 on 9/26/2022\ncd798 - fix: add Component type (#2203)"
  },
  {
    "title": "useRafFn | VueUse",
    "url": "https://vueuse.org/core/useRafFn/#VPContent",
    "html": "useRafFn\n​\nCategory\nAnimation\nExport Size\n342 B\nLast Changed\n2 months ago\n\nCall function on every requestAnimationFrame. With controls of pausing and resuming.\n\nDemo\n​\n\nsource\n\nCount: 8\npauseresume\nUsage\n​\njs\nimport { ref } from 'vue'\nimport { useRafFn } from '@vueuse/core'\n\nconst count = ref(0)\n\nconst { pause, resume } = useRafFn(() => {\n  count.value++\n  console.log(count.value)\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nmax.lee\nHayk Khachatryan\nDan Rose\nEnzo Innocenzi\nJelf\nhe yifan\nAlex Kozack\nJacob Clevenger\nScott Bedard\nAntério Vieira\nChangelog\n​\nv10.5.0 on 10/7/2023\n8e4c0 - feat: option fpsLimit (#3459)\nv10.2.1 on 6/28/2023\ncf6eb - fix: set initial delta to zero (#3150)\nv9.12.0 on 1/29/2023\n39183 - feat(useRafFn, useIntervalFn, useTimeoutFn): make status readonly (#2685)\nv9.7.0 on 12/16/2022\n692d0 - feat: add delta and timestamp (#2493)\nv8.9.3 on 7/14/2022\nc3dd7 - fix!: rename type RafFnOptions to UseRafFnOptions (#1887)"
  },
  {
    "title": "useSpeechSynthesis | VueUse",
    "url": "https://vueuse.org/core/useSpeechSynthesis/#VPContent",
    "html": "useSpeechSynthesis\n​\nCategory\nSensors\nExport Size\n724 B\nLast Changed\n2 months ago\n\nReactive SpeechSynthesis.\n\nCan I use?\n\nDemo\n​\n\nsource\n\nSpoken Text\nLanguage\nSelect Language\n\n\nPitch\n\n\nRate\nSpeakPauseStop\nUsage\n​\nts\nimport { useSpeechSynthesis } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isPlaying,\n  status,\n  voiceInfo,\n  utterance,\n  error,\n  stop,\n\n  toggle,\n  speak,\n} = useSpeechSynthesis()\nOptions\n​\n\nThe following shows the default values of the options, they will be directly passed to SpeechSynthesis API.\n\nts\nuseSpeechSynthesis({\n  lang: 'en-US',\n  pitch: 1,\n  rate: 1,\n  volume: 1,\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsibbng\nJelf\nwheat\nKirill Shestmintsev\n糠帅傅\nzwkkwz1\n云游君\nChangelog\n​\nv10.3.0 on 7/30/2023\nac88f - feat: add reactivity for pitch and rate (#3205)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv9.13.0 on 2/18/2023\n820e2 - feat: add stop function (#2774)\nv9.0.0-beta.1 on 7/20/2022\na524b - fix: remove duplicated onend, fix demo (#1941)\nv9.0.0-beta.0 on 7/17/2022\ndb61f - fix: rename type Status to UseSpeechSynthesisStatus\nv8.9.3 on 7/14/2022\n011af - refactor!: remove voiceInfo, allow voice as ref (#1882)\n42516 - fix!: rename type SpeechSynthesisOptions to UseSpeechSynthesisOptions (#1890)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useDevicePixelRatio | VueUse",
    "url": "https://vueuse.org/core/useDevicePixelRatio/#VPContent",
    "html": "useDevicePixelRatio\n​\nCategory\nSensors\nExport Size\n294 B\nLast Changed\n2 months ago\n\nReactively track window.devicePixelRatio\n\nNOTE: there is no event listener for window.devicePixelRatio change. So this function uses Testing media queries programmatically (window.matchMedia) applying the same mechanism as described in this example.\n\nDemo\n​\n\nsource\n\nDevice Pixel Ratio:\npixelRatio: 1\n\nZoom in and out (or move the window to a screen with a different scaling factor) to see the value changes\nUsage\n​\njs\nimport { useDevicePixelRatio } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const { pixelRatio } = useDevicePixelRatio()\n\n    return { pixelRatio }\n  },\n}\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDevicePixelRatio v-slot=\"{ pixelRatio }\">\n  Pixel Ratio: {{ pixelRatio }}\n</UseDevicePixelRatio>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nWaleed Khaled\nwheat\nvaakian X\nShinigami\nAlex Kozack\nKonstantin Barabanov\nChangelog\n​\nv9.13.0 on 2/18/2023\n83feb - fix: remove unnecessary cleanup (#2325)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.2.0 on 9/5/2022\neb054 - fix: more efficient mechanism (#2044)"
  },
  {
    "title": "onStartTyping | VueUse",
    "url": "https://vueuse.org/core/onStartTyping/#VPContent",
    "html": "onStartTyping\n​\nCategory\nSensors\nExport Size\n704 B\nLast Changed\n8 months ago\n\nFires when users start typing on non-editable elements.\n\nDemo\n​\n\nsource\n\nType anything\nUsage\n​\nhtml\n<input ref=\"input\" type=\"text\" placeholder=\"Start typing to focus\" />\nts\nimport { onStartTyping } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const input = ref(null)\n\n    onStartTyping(() => {\n      if (!input.value.active)\n        input.value.focus()\n    })\n\n    return {\n      input,\n    }\n  },\n}\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nmeenie-net\n丶远方\nAlex Kozack\nNurettin Kaya\nAntério Vieira\nSeifeldin Mahjoub\nChangelog\n​\nv10.0.0-beta.3 on 4/13/2023\ne9ab3 - fix: fix char ascii (#2932)"
  },
  {
    "title": "useUrlSearchParams | VueUse",
    "url": "https://vueuse.org/core/useurlsearchparams/?foo=bar&vueuse=awesome#VPContent",
    "html": "useUrlSearchParams\n​\nCategory\nBrowser\nExport Size\n1.59 kB\nLast Changed\nlast year\n\nReactive URLSearchParams\n\nDemo\n​\n\nsource\n\nfoo=bar\nvueuse=awesome\nUsage\n​\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('history')\n\nconsole.log(params.foo) // 'bar'\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `?foo=bar&vueuse=awesome`\nHash Mode\n​\n\nWhen using with hash mode route, specify the mode to hash\n\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `#/your/route?foo=bar&vueuse=awesome`\nHash Params\n​\n\nWhen using with history mode route, but want to use hash as params, specify the mode to hash-params\n\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash-params')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `/your/route#foo=bar&vueuse=awesome`\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nlstoeferle\nsun0day\n专业逮虾户aa\nMarius\nPatrick Stillhart\nodex21\nMichel EDIGHOFFER\nAlex Kozack\nChangelog\n​\nv9.2.0 on 9/5/2022\n7b288 - feat: add write option (#2165)\nv9.1.1 on 8/23/2022\n42300 - fix(useURLSearchParams): avoid referencing to global location (#2066)\nv8.7.0 on 6/16/2022\n1ef51 - fix: preserve history state when updating query (#1661)"
  },
  {
    "title": "useFileSystemAccess | VueUse",
    "url": "https://vueuse.org/core/useFileSystemAccess/#VPContent",
    "html": "useFileSystemAccess\n​\nCategory\nBrowser\nExport Size\n878 B\nLast Changed\n2 months ago\n\nCreate and read and write local files with FileSystemAccessAPI\n\nDemo\n​\n\nsource\n\nOpen\nNew file\nSave\nSave as\nDataType\nText\nArrayBuffer\nBlob\nisSupported: true\nfileName: ''\nfileMIME: ''\nfileSize: 0\nfileLastModified: 0\n\nUsage\n​\nts\nimport { useFileSystemAccess } from '@vueuse/core'\n\nconst { isSupported, data, file, fileName, fileMIME, fileSize, fileLastModified, create, open, save, saveAs, updateData } = useFileSystemAccess()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\n171H\nCarlos Gamez\nwheat\nChangelog\n​\nv10.4.0 on 8/25/2023\na9c8b - fix: make options to be optional (#3320)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useMouseInElement | VueUse",
    "url": "https://vueuse.org/core/useMouseInElement/#VPContent",
    "html": "useMouseInElement\n​\nCategory\nElements\nExport Size\n1.12 kB\nLast Changed\n3 weeks ago\n\nReactive mouse position related to an element\n\nDemo\n​\n\nsource\n\nHover me\nx: 0\ny: 0\nsourceType: null\nelementX: -976\nelementY: -408\nelementPositionX: 976\nelementPositionY: 408\nelementHeight: 160\nelementWidth: 160\nisOutside: true\n\nUsage\n​\nhtml\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useMouseInElement } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = ref(null)\n\n    const { x, y, isOutside } = useMouseInElement(target)\n\n    return { x, y, isOutside }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseMouseInElement v-slot=\"{ elementX, elementY, isOutside }\">\n  x: {{ elementX }}\n  y: {{ elementY }}\n  Is Outside: {{ isOutside }}\n</UseMouseInElement>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nAymoc\nMikhailov Nikita\nvaakian X\nJelf\nIvan Agafonov\nShinigami\nAlex Kozack\nctholho\nNurettin Kaya\nAntério Vieira\nChangelog\n​\nv10.6.0 on 11/9/2023\n7c88d - fix: optimize outside computation (#3380)\nv9.12.0 on 1/29/2023\n54f4e - fix: check if mouse out of window (#2458)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.3 on 7/14/2022\n4d2c8 - fix(useMouse)!: rename type MouseOptions to UseMouseOptions (#1877)\nv8.6.0 on 5/31/2022\nebd60 - fix isOutside is true for detached elements (#1614) (#1615)"
  },
  {
    "title": "useElementVisibility | VueUse",
    "url": "https://vueuse.org/core/useElementVisibility/#VPContent",
    "html": "useElementVisibility\n​\nCategory\nElements\nExport Size\n692 B\nLast Changed\n2 months ago\n\nTracks the visibility of an element within the viewport.\n\nDemo\n​\n\nsource\n\nInfo on the right bottom corner\nTarget Element (scroll down)\nElement inside the viewport\nUsage\n​\nhtml\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useElementVisibility } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = ref(null)\n    const targetIsVisible = useElementVisibility(target)\n\n    return {\n      target,\n      targetIsVisible,\n    }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseElementVisibility v-slot=\"{ isVisible }\">\n  Is Visible: {{ isVisible }}\n</UseElementVisibility>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vElementVisibility } from '@vueuse/components'\n\nconst target = ref(null)\nconst isVisible = ref(false)\n\nfunction onElementVisibility(state) {\n  isVisible.value = state\n}\n</script>\n\n<template>\n  <div v-element-visibility=\"onElementVisibility\">\n    {{ isVisible ? 'inside' : 'outside' }}\n  </div>\n\n  <!-- with options -->\n  <div ref=\"target\">\n    <div v-element-visibility=\"[onElementVisibility, { scrollTarget: target }]\">\n      {{ isVisible ? 'inside' : 'outside' }}\n    </div>\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nScott Bedard\nwheat\nAmr Bashir\nerikwu\nCurt Grimes\nvaakian X\nsun0day\n三咲智子\nJelf\nwebfansplz\nAllenYu\nAry Raditya\nChung, Lian\nCarlos Yanes\nAlex Kozack\nChangelog\n​\nv10.4.0 on 8/25/2023\n429ed - fix: adjust threshold to 0 to fix visibility issue with large element (#3308)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv10.0.0-beta.2 on 3/28/2023\n74b00 - fix!: use useIntersectionObserver instead of scroll event handler (#2551)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.2.0 on 9/5/2022\nde5a9 - feat: support watch the real element (#2169)\nv8.9.3 on 7/14/2022\n86df7 - fix!: rename type VisibilityScrollTargetOptions to UseElementVisibilityOptions (#1863)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useTimeoutPoll | VueUse",
    "url": "https://vueuse.org/core/useTimeoutPoll/",
    "html": "useTimeoutPoll\n​\nCategory\nUtilities\nExport Size\n407 B\nLast Changed\n5 months ago\n\nUse timeout to poll something. It's will trigger callback after last task is done.\n\nDemo\n​\n\nsource\n\nCount: 0\nisActive: false\npauseresume\nUsage\n​\nts\nimport { useTimeoutPoll } from '@vueuse/core'\n\nconst count = ref(0)\n\nasync function fetchData() {\n  await new Promise(resolve => setTimeout(resolve, 1000))\n  count.value++\n}\n\n// Only trigger after last fetch is done\nconst { isActive, pause, resume } = useTimeoutPoll(fetchData, 1000)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nDavid Vallejo\njiadesen\nsun0day\nJelf\nWenlu Wang\nChangelog\n​\nv10.2.1 on 6/28/2023\n7a897 - fix: unexpected immediate execution (#3159)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.0.0-beta.1 on 7/20/2022\n4ca70 - fix(useTimeoutFn,useTimeout)!: rename type TimeoutOptions to UseTimeoutOptions and TimeoutFnOptions to UseTimeoutFnOptions (#1944)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useSupported | VueUse",
    "url": "https://vueuse.org/core/useSupported/",
    "html": "useSupported\n​\nCategory\nUtilities\nExport Size\n194 B\nLast Changed\n8 months ago\n\nSSR compatibility isSupported\n\nUsage\n​\nts\nimport { useSupported } from '@vueuse/core'\n\nconst isSupported = useSupported(() => navigator && 'getBattery' in navigator)\n\nif (isSupported.value) {\n  // do something\n  navigator.getBattery\n}\nSource\n​\n\nSource • Docs\n\nContributors\n​\nFernando Fernández\nJelf\nChangelog\n​\nv10.0.0-beta.2 on 3/28/2023\n55a32 - feat: support tracking reactivity for the callback function (#2904)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useDebouncedRefHistory | VueUse",
    "url": "https://vueuse.org/core/useDebouncedRefHistory/#VPContent",
    "html": "useDebouncedRefHistory\n​\nCategory\nState\nExport Size\n1.7 kB\nLast Changed\n8 months ago\nRelated\nuseRefHistory\nuseThrottledRefHistory\n\nShorthand for useRefHistory with debounced filter.\n\nDemo\n​\n\nsource\n\nCount: 0\nIncrementDecrement/UndoRedo\nDelay (in ms):\n\n\n\nHistory (limited to 10 records for demo)\n2023-11-28 22:17:15{ value: 0 }\nUsage\n​\n\nThis function takes a snapshot of your counter after 1000ms when the value of it starts to change.\n\nts\nimport { ref } from 'vue'\nimport { useDebouncedRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useDebouncedRefHistory(counter, { deep: true, debounce: 1000 })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nRoman Harmyder\nwheat\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useSessionStorage | VueUse",
    "url": "https://vueuse.org/core/useSessionStorage/#VPContent",
    "html": "useSessionStorage\n​\nCategory\nState\nExport Size\n2.03 kB\nLast Changed\n8 months ago\nRelated\nuseStorage\n\nReactive SessionStorage.\n\nUsage\n​\n\nPlease refer to useStorage\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nntnyq\nJelf\nShinigami\nPig Fang\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.3 on 7/14/2022\n499f6 - fix(useStorage)!: rename type StorageOptions to UseStorageOptions (#1867)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useStepper | VueUse",
    "url": "https://vueuse.org/core/useStepper/",
    "html": "useStepper\n​\nCategory\nUtilities\nExport Size\n433 B\nLast Changed\nlast year\n\nProvides helpers for building a multi-step wizard interface.\n\nDemo\n​\n\nsource\n\nUser information\nBilling address\nTerms\nPayment\nUser information\nFirst name:\nLast name:\nNext\nForm\n{\n  \"firstName\": \"Jon\",\n  \"lastName\": \"\",\n  \"billingAddress\": \"\",\n  \"contractAccepted\": false,\n  \"carbonOffsetting\": false,\n  \"payment\": \"credit-card\"\n}\nWizard\n{\n  \"steps\": {\n    \"user-information\": {\n      \"title\": \"User information\"\n    },\n    \"billing-address\": {\n      \"title\": \"Billing address\"\n    },\n    \"terms\": {\n      \"title\": \"Terms\"\n    },\n    \"payment\": {\n      \"title\": \"Payment\"\n    }\n  },\n  \"stepNames\": [\n    \"user-information\",\n    \"billing-address\",\n    \"terms\",\n    \"payment\"\n  ],\n  \"index\": 0,\n  \"current\": {\n    \"title\": \"User information\"\n  },\n  \"next\": \"billing-address\",\n  \"isFirst\": true,\n  \"isLast\": false\n}\nUsage\n​\nSteps as array\n​\njs\nimport { useStepper } from '@vueuse/core'\n\nconst {\n  steps,\n  stepNames,\n  index,\n  current,\n  next,\n  previous,\n  isFirst,\n  isLast,\n  goTo,\n  goToNext,\n  goToPrevious,\n  goBackTo,\n  isNext,\n  isPrevious,\n  isCurrent,\n  isBefore,\n  isAfter,\n} = useStepper([\n  'billing-address',\n  'terms',\n  'payment',\n])\n\n// Access the step through `current`\nconsole.log(current.value) // 'billing-address'\nSteps as object\n​\njs\nimport { useStepper } from '@vueuse/core'\n\nconst {\n  steps,\n  stepNames,\n  index,\n  current,\n  next,\n  previous,\n  isFirst,\n  isLast,\n  goTo,\n  goToNext,\n  goToPrevious,\n  goBackTo,\n  isNext,\n  isPrevious,\n  isCurrent,\n  isBefore,\n  isAfter,\n} = useStepper({\n  'user-information': {\n    title: 'User information',\n  },\n  'billing-address': {\n    title: 'Billing address',\n  },\n  'terms': {\n    title: 'Terms',\n  },\n  'payment': {\n    title: 'Payment',\n  },\n})\n\n// Access the step object through `current`\nconsole.log(current.value.title) // 'User information'\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelle Roorda\nOstap Brehin\nsun0day\nEnzo Innocenzi\nChangelog\n​\nv8.9.0 on 7/6/2022\n6b016 - feat: new function (#1754)"
  },
  {
    "title": "usePrevious | VueUse",
    "url": "https://vueuse.org/core/usePrevious/",
    "html": "usePrevious\n​\nCategory\nUtilities\nExport Size\n260 B\nLast Changed\n8 months ago\n\nHolds the previous value of a ref.\n\nUsage\n​\nts\nimport { ref } from 'vue'\nimport { usePrevious } from '@vueuse/core'\n\nconst counter = ref('Hello')\nconst previous = usePrevious(counter)\n\nconsole.log(previous.value) // undefined\n\ncounter.value = 'World'\n\nconsole.log(previous.value) // Hello\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv9.12.0 on 1/29/2023\ne101f - feat: new function"
  },
  {
    "title": "useMemoize | VueUse",
    "url": "https://vueuse.org/core/useMemoize/",
    "html": "useMemoize\n​\nCategory\nUtilities\nExport Size\n403 B\nLast Changed\n8 months ago\n\nCache results of functions depending on arguments and keep it reactive. It can also be used for asynchronous functions and will reuse existing promises to avoid fetching the same data at the same time.\n\nTIP\n\nThe results are not cleared automatically. Call clear() in case you no longer need the results or use own caching mechanism to avoid memory leaks.\n\nUsage\n​\nTypeScript\nts\nimport { useMemoize } from '@vueuse/core'\nconst getUser = useMemoize(\n  async (userId: number): Promise<UserData> =>\n    axios.get(`users/${userId}`).then(({ data }) => data),\n)\nconst user1 = await getUser(1) // Request users/1\nconst user2 = await getUser(2) // Request users/2\n// ...\nconst user1 = await getUser(1) // Retrieve from cache\n// ...\nconst user1 = await getUser.load(1) // Request users/1\n// ...\ngetUser.delete(1) // Delete cache from user 1\ngetUser.clear() // Clear full cache\n\nCombine with computed or asyncComputed to achieve reactivity:\n\nts\nconst user1 = asyncComputed(() => getUser(1))\n// ...\nawait getUser.load(1) // Will also update user1\nResolving cache key\n​\n\nThe key for caching is determined by the arguments given to the function and will be serialized by default with JSON.stringify. This will allow equal objects to receive the same cache key. In case you want to customize the key you can pass getKey\n\nTypeScript\nts\nconst getUser = useMemoize(\n  async (userId: number, headers: AxiosRequestHeaders): Promise<UserData> =>\n    axios.get(`users/${userId}`, { headers }).then(({ data }) => data),\n  {\n    // Use only userId to get/set cache and ignore headers\n    getKey: (userId, headers) => userId,\n  },\n)\n\nWARNING\n\nFor Vue 2 the key has to be a string or number\n\nCustomize cache mechanism\n​\n\nBy default, the results are cached within a Map (normal object for Vue 2). You can implement your own mechanism by passing cache as options with following structure:\n\nTypeScript\nts\nexport interface MemoizeCache<Key, Value> {\n  /**\n   * Get value for key\n   */\n  get(key: Key): Value | undefined\n  /**\n   * Set value for key\n   */\n  set(key: Key, value: Value): void\n  /**\n   * Return flag if key exists\n   */\n  has(key: Key): boolean\n  /**\n   * Delete value for key\n   */\n  delete(key: Key): void\n  /**\n   * Clear cache\n   */\n  clear(): void\n}\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nMikhailov Nikita\nJelf\nfreakzlike\nChangelog\n​\nv9.2.0 on 9/5/2022\n06ad0 - fix: allow number in getKey (#2074)\nv8.9.3 on 7/14/2022\n5ef88 - fix!: rename type UseMemoizedFn to UseMemoizeReturn and new type UseMemoizeOptions (#1872)"
  },
  {
    "title": "useOffsetPagination | VueUse",
    "url": "https://vueuse.org/core/useOffsetPagination/",
    "html": "useOffsetPagination\n​\nCategory\nUtilities\nExport Size\n650 B\nLast Changed\n4 months ago\n\nReactive offset pagination.\n\nDemo\n​\n\nsource\n\ntotal:\n80\npageCount:\n8\ncurrentPageSize:\n10\ncurrentPage:\n1\nisFirstPage:\ntrue\nisLastPage:\nfalse\nprev12345678next\nid\tname\nUsage\n​\nTypeScript\nts\nimport { useOffsetPagination } from '@vueuse/core'\nfunction fetchData({\n  currentPage,\n  currentPageSize,\n}: {\n  currentPage: number\n  currentPageSize: number\n}) {\n  fetch(currentPage, currentPageSize).then((responseData) => {\n    data.value = responseData\n  })\n}\nconst {\n  currentPage,\n  currentPageSize,\n  pageCount,\n  isFirstPage,\n  isLastPage,\n  prev,\n  next,\n} = useOffsetPagination({\n  total: database.value.length,\n  page: 1,\n  pageSize: 10,\n  onPageChange: fetchData,\n  onPageSizeChange: fetchData,\n})\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseOffsetPagination\n  v-slot=\"{\n    currentPage,\n    currentPageSize,\n    next,\n    prev,\n    pageCount,\n    isFirstPage,\n    isLastPage\n  }\"\n  :total=\"database.length\"\n  @page-change=\"fetchData\"\n  @page-size-change=\"fetchData\"\n>\n  <div class=\"gap-x-4 gap-y-2 grid-cols-2 inline-grid items-center\">\n    <div opacity=\"50\">\n      total:\n    </div>\n    <div>{{ database.length }}</div>\n    <div opacity=\"50\">\n      pageCount:\n    </div>\n    <div>{{ pageCount }}</div>\n    <div opacity=\"50\">\n      currentPageSize:\n    </div>\n    <div>{{ currentPageSize }}</div>\n    <div opacity=\"50\">\n      currentPage:\n    </div>\n    <div>{{ currentPage }}</div>\n    <div opacity=\"50\">\n      isFirstPage:\n    </div>\n    <div>{{ isFirstPage }}</div>\n    <div opacity=\"50\">\n      isLastPage:\n    </div>\n    <div>{{ isLastPage }}</div>\n  </div>\n  <div>\n    <button :disabled=\"isFirstPage\" @click=\"prev\">\n      prev\n    </button>\n    <button :disabled=\"isLastPage\" @click=\"next\">\n      next\n    </button>\n  </div>\n</UseOffsetPagination>\n\nComponent event supported props event callback and event listener.\n\nevent listener:\n\nhtml\n<UseOffsetPagination\n  v-slot=\"{\n    currentPage,\n    currentPageSize,\n    next,\n    prev,\n    pageCount,\n    isFirstPage,\n    isLastPage\n  }\"\n  :total=\"database.length\"\n  @page-change=\"fetchData\"\n  @page-size-change=\"fetchData\"\n  @page-count-change=\"onPageCountChange\"\n>\n  <!-- your code -->\n</UseOffsetPagination>\n\nor props event callback:\n\nhtml\n<UseOffsetPagination\n  v-slot=\"{\n    currentPage,\n    currentPageSize,\n    next,\n    prev,\n    pageCount,\n    isFirstPage,\n    isLastPage\n  }\"\n  :total=\"database.length\"\n  :on-page-change=\"fetchData\"\n  :on-page-size-change=\"fetchData\"\n  :on-page-count-change=\"onPageCountChange\"\n>\n  <!-- your code -->\n</UseOffsetPagination>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nLJX\nvaakian X\nJD Solanki\nCurt Grimes\nwebfansplz\n三咲智子\nJelf\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.1.0 on 8/4/2022\nb6503 - fix: min value for pageCount should be 1 (#2001)\nv9.0.0-beta.1 on 7/20/2022\n85c5f - fix: incorrectly currentPageSize value (#1949)\nv8.9.2 on 7/12/2022\n27125 - feat(math)!: move useClamp to @vueuse/math (#1810)"
  },
  {
    "title": "useEventBus | VueUse",
    "url": "https://vueuse.org/core/useEventBus/",
    "html": "useEventBus\n​\nCategory\nUtilities\nExport Size\n332 B\nLast Changed\n2 months ago\n\nA basic event bus.\n\nDemo\n​\n\nsource\n\nNews channel:\nBroadcast\nTelevision:\n--- no signal ---\nUsage\n​\nTypeScript\nts\nimport { useEventBus } from '@vueuse/core'\nconst bus = useEventBus<string>('news')\nfunction listener(event: string) {\n  console.log(`news: ${event}`)\n}\n// listen to an event\nconst unsubscribe = bus.on(listener)\n// fire an event\nbus.emit('The Tokyo Olympics has begun')\n// unregister the listener\nunsubscribe()\n// or\nbus.off(listener)\n// clearing all listeners\nbus.reset()\n\nListeners registered inside of components setup will be unregistered automatically when the component gets unmounted.\n\nTypeScript\n​\n\nUsing EventBusKey is the key to bind the event type to the key, similar to Vue's InjectionKey util.\n\nTypeScript\nts\n// fooKey.ts\nimport type { EventBusKey } from '@vueuse/core'\nexport const fooKey: EventBusKey<{ name: foo }> = Symbol('symbol-key')\nts\nimport { useEventBus } from '@vueuse/core'\n\nimport { fooKey } from './fooKey'\n\nconst bus = useEventBus(fooKey)\n\nbus.on((e) => {\n  // `e` will be `{ name: foo }`\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nTuiMao233\njahnli\n丶远方\nHaoqun Jiang\nsun0day\nwebfansplz\nJairo Blatt\nChangelog\n​\nv10.0.0-beta.0 on 3/14/2023\ndd514 - fix(useEventBus,createEventHook)!: dedupe registration of the same function (#2748)\n37ec7 - fix: use ts-ignore instead of ts-expect-error for version-specifc errors (#2802)"
  },
  {
    "title": "useCycleList | VueUse",
    "url": "https://vueuse.org/core/useCycleList/",
    "html": "useCycleList\n​\nCategory\nUtilities\nExport Size\n463 B\nLast Changed\n7 months ago\n\nCycle through a list of items.\n\nLearn how to use useCycleList to create an image carousel with this FREE video lesson from Vue School!\nDemo\n​\n\nsource\n\nDog\nPrevNext\nUsage\n​\nts\nimport { useCycleList } from '@vueuse/core'\n\nconst { state, next, prev } = useCycleList([\n  'Dog',\n  'Cat',\n  'Lizard',\n  'Shark',\n  'Whale',\n  'Dolphin',\n  'Octopus',\n  'Seal',\n])\n\nconsole.log(state.value) // 'Dog'\n\nprev()\n\nconsole.log(state.value) // 'Seal'\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nxiaofan\nHelio S. Junior\nWaleed Khaled\nJelf\nmarkthree\nlsdsjy\nChangelog\n​\nv10.1.0 on 4/22/2023\n659b2 - fix: correctly wrap list with ref (#2988)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.0 on 3/14/2023\nb65c2 - feat: allow receiving reactive list (#2864)\nv9.1.0 on 8/4/2022\nfa2f6 - feat: support MaybeRef for initialValue (#2025)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useCloned | VueUse",
    "url": "https://vueuse.org/core/usecloned/",
    "html": "useCloned\n​\nCategory\nUtilities\nExport Size\n499 B\nLast Changed\n5 months ago\n\nReactive clone of a ref. By default, it use JSON.parse(JSON.stringify()) to do the clone.\n\nDemo\n​\n\nsource\n\nreset\nUsage\n​\nts\nimport { useCloned } from '@vueuse/core'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned } = useCloned(original)\n\noriginal.value.key = 'some new value'\n\nconsole.log(cloned.value.key) // 'some new value'\nManual cloning\n​\nts\nimport { useCloned } from '@vueuse/core'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned, sync } = useCloned(original, { manual: true })\n\noriginal.value.key = 'manual'\n\nconsole.log(cloned.value.key) // 'value'\n\nsync()\n\nconsole.log(cloned.value.key)// 'manual'\nCustom Clone Function\n​\n\nUsing klona for example:\n\nts\nimport { useCloned } from '@vueuse/core'\nimport { klona } from 'klona'\n\nconst original = ref({ key: 'value' })\n\nconst { cloned, sync } = useCloned(original, { clone: klona })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJeff Yang (楊德誠)\nAkkapon Chainarong\nEduardo Wesley\nMikhailov Nikita\nChangelog\n​\nv10.2.0 on 6/16/2023\n6d630 - fix: check for getter function to watch (#3142)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.2.0 on 9/5/2022\n369e1 - feat(useVModel): support clone option (#2022)\n0a0a1 - feat: new function (#2045)"
  },
  {
    "title": "useConfirmDialog | VueUse",
    "url": "https://vueuse.org/core/useConfirmDialog/",
    "html": "useConfirmDialog\n​\nCategory\nUtilities\nExport Size\n418 B\nLast Changed\n2 months ago\n\nCreates event hooks to support modals and confirmation dialog chains.\n\nFunctions can be used on the template, and hooks are a handy skeleton for the business logic of modals dialog or other actions that require user confirmation.\n\nDemo\n​\n\nsource\n\nClick to Show Modal Dialog\nFunctions and hooks\n​\nreveal() - triggers onReveal hook and sets revealed.value to true. Returns promise that resolves by confirm() or cancel().\nconfirm() - sets isRevealed.value to false and triggers onConfirm hook.\ncancel() - sets isRevealed.value to false and triggers onCancel hook.\nBasic Usage\n​\nUsing hooks\n​\nhtml\n<script setup>\nimport { useConfirmDialog } from '@vueuse/core'\n\nconst {\n  isRevealed,\n  reveal,\n  confirm,\n  cancel,\n  onReveal,\n  onConfirm,\n  onCancel,\n} = useConfirmDialog()\n</script>\n\n<template>\n  <button @click=\"reveal\">Reveal Modal</button>\n\n  <teleport to=\"body\">\n    <div v-if=\"isRevealed\" class=\"modal-bg\">\n      <div class=\"modal\">\n        <h2>Confirm?</h2>\n        <button @click=\"confirm\">Yes</button>\n        <button @click=\"cancel\">Cancel</button>\n      </div>\n    </div>\n  </teleport>\n</template>\nPromise\n​\n\nIf you prefer working with promises:\n\nhtml\n<script setup>\nimport { useConfirmDialog } from '@vueuse/core'\n\nconst {\n  isRevealed,\n  reveal,\n  confirm,\n  cancel,\n} = useConfirmDialog()\n\nconst openDialog = async () => {\n  const { data, isCanceled } = await reveal()\n  if (!isCanceled) {\n    console.log(data)\n  }\n}\n</script>\n\n<template>\n  <button @click=\"openDialog\">Show Modal</button>\n\n  <teleport to=\"body\">\n    <div v-if=\"isRevealed\" class=\"modal-layout\">\n      <div class=\"modal\">\n        <h2>Confirm?</h2>\n        <button @click=\"confirm(true)\">Yes</button>\n        <button @click=\"confirm(false)\">No</button>\n      </div>\n    </div>\n  </teleport>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nRoman Harmyder\n糠帅傅\nWaleed Khaled\n丶远方\nRyan Wu\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useCached | VueUse",
    "url": "https://vueuse.org/core/useCached/",
    "html": "useCached\n​\nCategory\nUtilities\nExport Size\n169 B\nLast Changed\n2 years ago\n\nCache a ref with a custom comparator.\n\nDemo\n​\n\nsource\n\nValue: 42\nExtra: 0\nCached Value: 42\nCached Extra: 0\nTemp Value: \nLocal Extra: \nSync\nUsage\n​\nTypeScript\nts\nimport { useCached } from '@vueuse/core'\ninterface Data {\n  value: number\n  extra: number\n}\nconst source = ref<Data>({ value: 42, extra: 0 })\nconst cached = useCached(source, (a, b) => a.value === b.value)\nsource.value = {\n  value: 42,\n  extra: 1,\n}\nconsole.log(cached.value) // { value: 42, extra: 0 }\nsource.value = {\n  value: 43,\n  extra: 1,\n}\nconsole.log(cached.value) // { value: 43, extra: 1 }\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nlvjiaxuan\nWenlu Wang\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useBase64 | VueUse",
    "url": "https://vueuse.org/core/useBase64/",
    "html": "useBase64\n​\nCategory\nUtilities\nExport Size\n769 B\nLast Changed\n8 months ago\n\nReactive base64 transforming. Supports plain text, buffer, files, canvas, objects, maps, sets and images.\n\nDemo\n​\n\nsource\n\nText Input\nBase64\nBuffer Input\nnew ArrayBuffer(1024)\nBase64\nFile Input\nBase64\nImage Input\nBase64\nUsage\n​\nTypeScript\nts\nimport { Ref, ref } from 'vue'\nimport { useBase64 } from '@vueuse/core'\nconst text = ref('')\nconst { base64 } = useBase64(text)\n\nIf you use object, array, map or set you can provide serializer in options. Otherwise, your data will be serialized by default serializer. Objects and arrays will be transformed in string by JSON.stringify. Map and set will be transformed in object and array respectively before stringify.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nMikhailov Nikita\nwheat\njelf\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.8.0 on 7/6/2022\n1fd34 - feat: accept objects (#1706)"
  },
  {
    "title": "useAsyncQueue | VueUse",
    "url": "https://vueuse.org/core/useAsyncQueue/",
    "html": "useAsyncQueue\n​\nCategory\nUtilities\nExport Size\n511 B\nLast Changed\n3 months ago\n\nExecutes each asynchronous task sequentially and passes the current task result to the next task\n\nDemo\n​\n\nsource\n\nactiveIndex: 1\nresult: [ { \"state\": \"fulfilled\", \"data\": 1000 }, { \"state\": \"fulfilled\", \"data\": 2000 } ]\nUsage\n​\nTypeScript\nts\nimport { useAsyncQueue } from '@vueuse/core'\nfunction p1() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000)\n    }, 10)\n  })\n}\nfunction p2(result: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1000 + result)\n    }, 20)\n  })\n}\nconst { activeIndex, result } = useAsyncQueue([p1, p2])\nconsole.log(activeIndex.value) // current pending task index\nconsole.log(result) // the tasks result\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nethansnow2012\ncross-origin\nOkoro Redemption\ndonotloveshampo\nYugang Cao\nwebfansplz\nChangelog\n​\nv10.4.0 on 8/25/2023\n22e26 - feat: support in infinite tasks in typescript (#3333)\nv10.2.0 on 6/16/2023\n7da7c - feat: add options.signal parameter (#3033)"
  },
  {
    "title": "useTimeAgo | VueUse",
    "url": "https://vueuse.org/core/useTimeAgo/",
    "html": "useTimeAgo\n​\nCategory\nTime\nExport Size\n1.63 kB\nLast Changed\n2 months ago\n\nReactive time ago. Automatically update the time ago string when the time changes.\n\nDemo\n​\n\nsource\n\njust now\n0ms\nUsage\n​\njs\nimport { useTimeAgo } from '@vueuse/core'\n\nconst timeAgo = useTimeAgo(new Date(2021, 0, 1))\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseTimeAgo v-slot=\"{ timeAgo }\" :time=\"new Date(2021, 0, 1)\">\n  Time Ago: {{ timeAgo }}\n</UseTimeAgo>\nNon-Reactivity Usage\n​\n\nIn case you don't need the reactivity, you can use the formatTimeAgo function to get the formatted string instead of a Ref.\n\njs\nimport { formatTimeAgo } from '@vueuse/core'\n\nconst timeAgo = formatTimeAgo(new Date(2021, 0, 1)) // string\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nWORMSS\nvaakian X\nDemian\nJoaquín Sánchez\nConnor 'Birb' McCormick\n836334258\nsun0day\nazaleta\nvaakian X\nJelf\nwheat\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.9.0 on 12/23/2022\nbb0fd - fix(formatTimeAgo): typo foramtTimeAgo -> formatTimeAgo (#2568)\nv9.8.0 on 12/20/2022\nf40a0 - fix: rounding unit fallback\n9293c - feat: non-reactive version formatTimeAgo\nv9.7.0 on 12/16/2022\n324de - feat: custom units, number rounding\na7dc6 - feat: add floor and ceil value calculation (#2543)\n0c333 - fix: add showSecond prop to component (#2547)\nv9.3.0 on 9/26/2022\n553f0 - feat: new showSecond option (#2209)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "createUnrefFn | VueUse",
    "url": "https://vueuse.org/core/createUnrefFn/",
    "html": "createUnrefFn\n​\nCategory\nUtilities\nExport Size\n166 B\nLast Changed\n8 months ago\nRelated\nreactify\n\nMake a plain function accepting ref and raw values as arguments. Returns the same value the unconverted function returns, with proper typing.\n\nTIP\n\nMake sure you're using the right tool for the job. Using reactify might be more pertinent in some cases where you want to evaluate the function on each changes of it's arguments.\n\nUsage\n​\nts\nimport { ref } from 'vue'\nimport { createUnrefFn } from '@vueuse/core'\n\nconst url = ref('https://httpbin.org/post')\nconst data = ref({ foo: 'bar' })\n\nfunction post(url, data) {\n  return fetch(url, { data })\n}\nconst unrefPost = createUnrefFn(post)\n\npost(url, data) /* ❌ Will throw an error because the arguments are refs */\nunrefPost(url, data) /* ✔️ Will Work because the arguments will be auto unref */\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nStanley Horwood\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "computedAsync | VueUse",
    "url": "https://vueuse.org/core/computedAsync/",
    "html": "computedAsync\n​\nCategory\nReactivity\nExport Size\n358 B\nLast Changed\n9 months ago\nAlias\nasyncComputed\n\nComputed for async functions\n\nUsage\n​\njs\nimport { ref } from 'vue'\nimport { computedAsync } from '@vueuse/core'\n\nconst name = ref('jack')\n\nconst userInfo = computedAsync(\n  async () => {\n    return await mockLookUp(name.value)\n  },\n  null, // initial state\n)\nEvaluation State\n​\n\nYou will need to pass a ref to track if the async function is evaluating.\n\njs\nimport { ref } from 'vue'\nimport { computedAsync } from '@vueuse/core'\n\nconst evaluating = ref(false)\n\nconst userInfo = computedAsync(\n  async () => { /* your logic */ },\n  null,\n  evaluating,\n)\nonCancel\n​\n\nWhen the computed source changed before the previous async function gets resolved, you may want to cancel the previous one. Here is an example showing how to incorporate with the fetch API.\n\njs\nconst packageName = ref('@vueuse/core')\n\nconst downloads = computedAsync(async (onCancel) => {\n  const abortController = new AbortController()\n\n  onCancel(() => abortController.abort())\n\n  return await fetch(\n    `https://api.npmjs.org/downloads/point/last-week/${packageName.value}`,\n    { signal: abortController.signal },\n  )\n    .then(response => response.ok ? response.json() : { downloads: '—' })\n    .then(result => result.downloads)\n}, 0)\nLazy\n​\n\nBy default, computedAsync will start resolving immediately on creation, specify lazy: true to make it start resolving on the first accessing.\n\njs\nimport { ref } from 'vue'\nimport { computedAsync } from '@vueuse/core'\n\nconst evaluating = ref(false)\n\nconst userInfo = computedAsync(\n  async () => { /* your logic */ },\n  null,\n  { lazy: true, evaluating },\n)\nCaveats\n​\n\nJust like Vue's built-in computed function, computedAsync does dependency tracking and is automatically re-evaluated when dependencies change. Note however that only dependency referenced in the first call stack are considered for this. In other words: Dependencies that are accessed asynchronously will not trigger re-evaluation of the async computed value.\n\nAs opposed to Vue's built-in computed function, re-evaluation of the async computed value is triggered whenever dependencies are changing, regardless of whether its result is currently being tracked or not.\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nxiankaiqun\nIcey Wu\nsun0day\nYugang Cao\nBodo Graumann\nChangelog\n​\nv10.0.0-beta.0 on 3/14/2023\n23c9d - feat!: set shallow defalut to true (#2621)\nv9.11.0 on 1/17/2023\na0656 - feat: introduce shadow option (#2616)"
  },
  {
    "title": "useVModels | VueUse",
    "url": "https://vueuse.org/core/useVModels/",
    "html": "useVModels\n​\nCategory\nComponent\nExport Size\n567 B\nLast Changed\n2 months ago\nRelated\nuseVModel\n\nShorthand for props v-model binding. Think it like toRefs(props) but changes will also trigger emit.\n\nUsage\n​\njs\nimport { useVModels } from '@vueuse/core'\n\nexport default {\n  props: {\n    foo: String,\n    bar: Number,\n  },\n  setup(props, { emit }) {\n    const { foo, bar } = useVModels(props, emit)\n\n    console.log(foo.value) // props.foo\n    foo.value = 'foo' // emit('update:foo', 'foo')\n  },\n}\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nMikhailov Nikita\nJelf\nsondh0127\nWilliam T. Kirby\nAlex Kozack\nordago\nEmīls Gulbis\nChangelog\n​\nv10.5.0 on 10/7/2023\n51f01 - fix: type error with passive: true (#3362)\nv8.9.3 on 7/14/2022\n71550 - fix(useVModel)!: rename type VModelOptions to UseVModelOptions (#1894)"
  },
  {
    "title": "useSorted | VueUse",
    "url": "https://vueuse.org/core/useSorted/",
    "html": "useSorted\n​\nCategory\nArray\nExport Size\n366 B\nLast Changed\n2 months ago\n\nreactive sort array\n\nDemo\n​\n\nsource\n\ninput:\nrandom\noutput: [ \"13\", \"17\", \"41\", \"49\", \"53\", \"59\", \"67\", \"72\", \"81\", \"98\", \"99\" ]\nobject property sort:\ninput:\n[ { \"name\": \"John\", \"age\": 40 }, { \"name\": \"Jane\", \"age\": 20 }, { \"name\": \"Joe\", \"age\": 30 }, { \"name\": \"Jenny\", \"age\": 22 } ]\noutput:\n[ { \"name\": \"Jane\", \"age\": 20 }, { \"name\": \"Jenny\", \"age\": 22 }, { \"name\": \"Joe\", \"age\": 30 }, { \"name\": \"John\", \"age\": 40 } ]\nUsage\n​\nts\nimport { useSorted } from '@vueuse/core'\n\n// general sort\nconst source = [10, 3, 5, 7, 2, 1, 8, 6, 9, 4]\nconst sorted = useSorted(source)\nconsole.log(sorted.value) // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nconsole.log(source) // [10, 3, 5, 7, 2, 1, 8, 6, 9, 4]\n\n// object sort\nconst objArr = [{\n  name: 'John',\n  age: 40,\n}, {\n  name: 'Jane',\n  age: 20,\n}, {\n  name: 'Joe',\n  age: 30,\n}, {\n  name: 'Jenny',\n  age: 22,\n}]\nconst objSorted = useSorted(objArr, (a, b) => a.age - b.age)\ndirty mode\n​\n\ndirty mode will change the source array.\n\nts\nconst source = ref([10, 3, 5, 7, 2, 1, 8, 6, 9, 4])\nconst sorted = useSorted(source, (a, b) => a - b, {\n  dirty: true,\n})\nconsole.log(source)// output: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nKasper Seweryn\nJelf\nChangelog\n​\nv10.3.0 on 7/30/2023\n33a12 - feat: accept getter function as source (#3249)\nv9.3.1 on 10/17/2022\nfeaa1 - feat: new function (#1799)"
  },
  {
    "title": "useVModel | VueUse",
    "url": "https://vueuse.org/core/useVModel/",
    "html": "useVModel\n​\nCategory\nComponent\nExport Size\n533 B\nLast Changed\n4 months ago\nRelated\nuseVModels\n\nShorthand for v-model binding, props + emit -> ref\n\nUsage\n​\njs\nimport { useVModel } from '@vueuse/core'\n\nexport default {\n  setup(props, { emit }) {\n    const data = useVModel(props, 'data', emit)\n\n    console.log(data.value) // props.data\n    data.value = 'foo' // emit('update:data', 'foo')\n  },\n}\n<script setup>\n​\nvue\n<script lang=\"ts\" setup>\nimport { useVModel } from '@vueuse/core'\n\nconst props = defineProps<{\n  modelValue: string\n}>()\nconst emit = defineEmits(['update:modelValue'])\n\nconst data = useVModel(props, 'modelValue', emit)\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nwebfansplz\nmotian\nobjectisundefined\nAlex Liu\n白雾三语\nEduardo Wesley\nRoman Meshcheryakov\n久染\nchaii3\nTmk\nwheat\nsondh0127\nZenthae\nEduardo San Martin Morote\nlstoeferle\nAlex Kozack\nHomyee King\nPrabu Rangki\nLeonidas Arvanitis\nyangger\nChangelog\n​\nv10.4.0 on 8/25/2023\n48f4c - fix: clone set to true triggered infinite loop (#3097)\nv10.2.0 on 6/16/2023\n7d788 - feat: improve types overload (#3055)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.1 on 3/23/2023\nf8a53 - feat: add shouldEmit hook (#2836)\nv9.2.0 on 9/5/2022\n369e1 - feat: support clone option (#2022)\nv8.9.3 on 7/14/2022\n10f5a - fix: fix compact with 2.7, fix #1745 (#1898)\n71550 - fix!: rename type VModelOptions to UseVModelOptions (#1894)\nv8.9.2 on 7/12/2022\n53319 - feat: compact with 2.7, fix #1745 (#1798)"
  },
  {
    "title": "useVirtualList | VueUse",
    "url": "https://vueuse.org/core/useVirtualList/",
    "html": "useVirtualList\n​\nCategory\nComponent\nExport Size\n1.8 kB\nLast Changed\n2 months ago\n\nWARNING\n\nConsider using vue-virtual-scroller instead, if you are looking for more features.\n\nCreate virtual lists with ease. Virtual lists (sometimes called virtual scrollers) allow you to render a large number of items performantly. They only render the minimum number of DOM nodes necessary to show the items within the container element by using the wrapper element to emulate the container element's full height.\n\nDemo\n​\n\nsource\n\nJump to index\nGo\nFilter list by size\nRow 0\n(small)\nRow 1\n(large)\nRow 2\n(small)\nRow 3\n(large)\nRow 4\n(small)\nRow 5\n(large)\nRow 6\n(small)\nRow 7\n(large)\nRow 8\n(small)\nRow 9\n(large)\nRow 10\n(small)\nRow 11\n(large)\nRow 12\n(small)\nRow 13\n(large)\nRow 14\n(small)\nUsage\n​\nSimple list\n​\ntypescript\nimport { useVirtualList } from '@vueuse/core'\n\nconst { list, containerProps, wrapperProps } = useVirtualList(\n  Array.from(Array(99999).keys()),\n  {\n    // Keep `itemHeight` in sync with the item's row.\n    itemHeight: 22,\n  },\n)\nConfig\n​\nState\tType\tDescription\nitemHeight\tnumber\tensure that the total height of the wrapper element is calculated correctly.*\nitemWidth\tnumber\tensure that the total width of the wrapper element is calculated correctly.*\noverscan\tnumber\tnumber of pre-rendered DOM nodes. Prevents whitespace between items if you scroll very quickly.\n\n* The itemHeight or itemWidth must be kept in sync with the height of each row rendered. If you are seeing extra whitespace or jitter when scrolling to the bottom of the list, ensure the itemHeight or itemWidth is the same height as the row.\n\nReactive list\n​\ntypescript\nimport { useVirtualList, useToggle } from '@vueuse/core'\nimport { computed } from 'vue'\n\nconst [isEven, toggle] = useToggle()\nconst allItems = Array.from(Array(99999).keys())\nconst filteredList = computed(() => allItems.filter(i => isEven.value ? i % 2 === 0 : i % 2 === 1))\n\nconst { list, containerProps, wrapperProps } = useVirtualList(\n  filteredList,\n  {\n    itemHeight: 22,\n  },\n)\nhtml\n<template>\n  <p>Showing {{ isEven ? 'even' : 'odd' }} items</p>\n  <button @click=\"toggle\">Toggle Even/Odd</button>\n  <div v-bind=\"containerProps\" style=\"height: 300px\">\n    <div v-bind=\"wrapperProps\">\n      <div v-for=\"item in list\" :key=\"item.index\" style=\"height: 22px\">\n        Row: {{ item.data }}\n      </div>\n    </div>\n  </div>\n</template>\nHorizontal list\n​\ntypescript\nimport { useVirtualList } from '@vueuse/core'\n\nconst allItems = Array.from(Array(99999).keys())\n\nconst { list, containerProps, wrapperProps } = useVirtualList(\n  allItems,\n  {\n    itemWidth: 200,\n  },\n)\nhtml\n<template>\n  <div v-bind=\"containerProps\" style=\"height: 300px\">\n    <div v-bind=\"wrapperProps\">\n      <div v-for=\"item in list\" :key=\"item.index\" style=\"width: 200px\">\n        Row: {{ item.data }}\n      </div>\n    </div>\n  </div>\n</template>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseVirtualList :list=\"list\" :options=\"options\" height=\"300px\">\n  <template #=\"props\">\n    <!-- you can get current item of list here -->\n    <div style=\"height: 22px\">Row {{ props.data }}</div>\n  </template>\n</UseVirtualList>\n\nTo scroll to a specific element, the component exposes scrollTo(index: number) => void.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nkarukenert\nRuben Laguna\nMinh Anh Nguyen\nvaakian X\nNikola Begedin\nEric Skaliks\nvaakian X\nMaxim Brynze\nJelf\nJessica Sachs\nChe Guevara\nChangelog\n​\nv10.6.1 on 11/13/2023\n3d6b9 - fix: .style can be undefined\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\n25f6e - fix: List sometimes missing elements (#2477)\nv9.10.0 on 1/3/2023\n9f495 - feat(useVirutalList): expose scrollTo in component (#2397)\nv9.4.0 on 10/25/2022\nbceda - feat: horizontal list (#2310)"
  },
  {
    "title": "useTemplateRefsList | VueUse",
    "url": "https://vueuse.org/core/useTemplateRefsList/",
    "html": "useTemplateRefsList\n​\nCategory\nComponent\nExport Size\n177 B\nLast Changed\n2 years ago\n\nShorthand for binding refs to template elements and components inside v-for.\n\nWARNING\n\nThis function only works for Vue 3\n\nDemo\n​\n\nsource\n\n12345\nIncDec\nOpen the console to see the output\nUsage\n​\nhtml\n<template>\n  <div v-for=\"i of 5\" :key=\"i\" :ref=\"refs.set\"></div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onUpdated } from 'vue'\nimport { useTemplateRefsList } from '@vueuse/core'\n\nconst refs = useTemplateRefsList<HTMLDivElement>()\n\nonUpdated(() => {\n  console.log(refs)\n})\n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nbjym\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useMounted | VueUse",
    "url": "https://vueuse.org/core/useMounted/",
    "html": "useMounted\n​\nCategory\nComponent\nExport Size\n156 B\nLast Changed\n2 months ago\n\nMounted state in ref.\n\nDemo\n​\n\nsource\n\nmounted\nUsage\n​\njs\nimport { useMounted } from '@vueuse/core'\n\nconst isMounted = useMounted()\n\nWhich is essentially a shorthand of:\n\nts\nconst isMounted = ref(false)\n\nonMounted(() => {\n  isMounted.value = true\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0-beta.3 on 4/13/2023\n1aab1 - fix: check for the current instance"
  },
  {
    "title": "useCurrentElement | VueUse",
    "url": "https://vueuse.org/core/useCurrentElement/",
    "html": "useCurrentElement\n​\nCategory\nComponent\nExport Size\n355 B\nLast Changed\nlast year\n\nGet the DOM element of current component as a ref.\n\nDemo\n​\n\nsource\n\nOpen your console.log to see the element\nUsage\n​\nts\nimport { useCurrentElement } from '@vueuse/core'\n\nconst el = useCurrentElement() // ComputedRef<Element>\nCaveats\n​\n\nThis functions uses $el under the hood.\n\nValue of the ref will be undefined until the component is mounted.\n\nFor components with a single root element, it will point to that element.\nFor components with text root, it will point to the text node.\nFor components with multiple root nodes, it will be the placeholder DOM node that Vue uses to keep track of the component's position in the DOM.\n\nIt's recommend to only use this function for components with a single root element.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nvaakian X\nAnthony Fu\nChangelog\n​\nv9.1.1 on 8/23/2022\nc534e - fix(useActiveElement): use computedWithControl instead of counter ref (#2093)"
  },
  {
    "title": "unrefElement | VueUse",
    "url": "https://vueuse.org/core/unrefElement/",
    "html": "unrefElement\n​\nCategory\nComponent\nExport Size\n165 B\nLast Changed\n8 months ago\n\nRetrieves the underlying DOM element from a Vue ref or component instance\n\nUsage\n​\nhtml\n<template>\n  <div ref=\"div\"/>\n  <HelloWorld ref=\"hello\"/>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { unrefElement } from '@vueuse/core'\n\nconst div = ref() // will be bound to the <div> element\nconst hello = ref() // will be bound to the HelloWorld Component\n\nonMounted(() => {\n  console.log(unrefElement(div)) // the <div> element\n  console.log(unrefElement(hello)) // the root element of the HelloWorld Component\n})\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nHenrik Kampshoff\nNebula\nJulian Meinking\nJelf\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.4 on 6/18/2022\n3d846 - fix: revert #1657\nv8.7.0 on 6/16/2022\n050da - fix: don't return the Vue instance when $el is null/undefined (#1657)"
  },
  {
    "title": "templateRef | VueUse",
    "url": "https://vueuse.org/core/templateref/",
    "html": "templateRef\n​\nCategory\nComponent\nExport Size\n270 B\nLast Changed\nlast year\n\nShorthand for binding ref to template element.\n\nUsage\n​\nvue\n<script lang=\"ts\">\nimport { templateRef } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = templateRef('target')\n\n    // no need to return the `target`, it will bind to the ref magically\n  },\n}\n</script>\n\n<template>\n  <div ref=\"target\" />\n</template>\nWith JSX/TSX\n​\ntsx\nimport { templateRef } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = templateRef<HTMLElement | null>('target', null)\n\n    // use string ref\n    return () => <div ref=\"target\"></div>\n  },\n}\n<script setup>\n​\n\nThere is no need for this when using with <script setup> since all the variables will be exposed to the template. It will be exactly the same as ref.\n\nvue\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\nconst target = ref<HTMLElement | null>(null)\n</script>\n\n<template>\n  <div ref=\"target\" />\n</template>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nHollis Wu\nlikeswinds\nAlex Kozack\nzhong666\nChangelog\n​\nv9.3.0 on 9/26/2022\ncd798 - fix: add Component type (#2203)"
  },
  {
    "title": "createTemplatePromise | VueUse",
    "url": "https://vueuse.org/core/createTemplatePromise/",
    "html": "createTemplatePromise\n​\nCategory\nComponent\nExport Size\n497 B\nLast Changed\n2 months ago\n\nTemplate as Promise. Useful for constructing custom Dialogs, Modals, Toasts, etc.\n\nWARNING\n\nThis function only works for Vue 3\n\nDemo\n​\n\nsource\n\nOpen 1\nOpen 2\nOpen 1 & 2\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { createTemplatePromise } from '@vueuse/core'\n\nconst TemplatePromise = createTemplatePromise<ReturnType>()\n\nasync function open() {\n  const result = await TemplatePromise.start()\n  // button is clicked, result is 'ok'\n}\n</script>\n\n<template>\n  <TemplatePromise v-slot=\"{ promise, resolve, reject, args }\">\n    <!-- your UI -->\n    <button @click=\"resolve('ok')\">OK</button>\n  </TemplatePromise>\n</template>\nFeatures\n​\nProgrammatic - call your UI as a promise\nTemplate - use Vue template to render, not a new DSL\nTypeScript - full type safety via generic type\nRenderless - you take full control of the UI\nTransition - use support Vue transition\n\nThis function is migrated from vue-template-promise\n\nUsage\n​\n\ncreateTemplatePromise returns a Vue Component that you can directly use in your template with <script setup>\n\nTypeScript\nts\nimport { createTemplatePromise } from '@vueuse/core'\nconst TemplatePromise = createTemplatePromise()\nconst MyPromise = createTemplatePromise<boolean>() // with generic type\n\nIn template, use v-slot to access the promise and resolve functions.\n\nhtml\n<template>\n  <TemplatePromise v-slot=\"{ promise, resolve, reject, args }\">\n    <!-- you can have anything -->\n    <button @click=\"resolve('ok')\">OK</button>\n  </TemplatePromise>\n  <MyPromise v-slot=\"{ promise, resolve, reject, args }\">\n    <!-- another one -->\n  </MyPromise>\n</template>\n\nThe slot will not be rendered initially (similar to v-if=\"false\"), until you call the start method from the component.\n\nts\nconst result = await TemplatePromise.start()\n\nOnce resolve or reject is called in the template, the promise will be resolved or rejected, returning the value you passed in. Once resolved, the slot will be removed automatically.\n\nPassing Arguments\n​\n\nYou can pass arguments to the start with arguments.\n\nTypeScript\nts\nimport { createTemplatePromise } from '@vueuse/core'\nconst TemplatePromise = createTemplatePromise<boolean, [string, number]>()\nts\nconst result = await TemplatePromise.start('hello', 123) // Pr\n\nAnd in the template slot, you can access the arguments via args property.\n\nhtml\n<template>\n  <TemplatePromise v-slot=\"{ args, resolve }\">\n    <div>{{ args[0] }}</div> <!-- hello -->\n    <div>{{ args[1] }}</div> <!-- 123 -->\n    <button @click=\"resolve(true)\">OK</button>\n  </TemplatePromise>\n</template>\nTransition\n​\n\nYou can use transition to animate the slot.\n\nhtml\n<script setup lang=\"ts\">\nconst TemplatePromise = createTemplatePromise<ReturnType>({\n  transition: {\n    name: 'fade',\n    appear: true,\n  },\n})\n</script>\n\n<template>\n  <TemplatePromise v-slot=\"{ resolve }\">\n    <!-- your UI -->\n    <button @click=\"resolve('ok')\">OK</button>\n  </TemplatePromise>\n</template>\n\n<style scoped>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n\nLearn more about Vue Transition.\n\nMotivation\n​\n\nThe common approach to call a dialog or a model programmatically would be like this:\n\nts\nconst dialog = useDialog()\nconst result = await dialog.open({\n  title: 'Hello',\n  content: 'World',\n})\n\nThis would work by sending these information to the top-level component and let it render the dialog. However, it limits the flexibility you could express in the UI. For example, you could want the title to be red, or have extra buttons, etc. You would end up with a lot of options like:\n\nts\nconst result = await dialog.open({\n  title: 'Hello',\n  titleClass: 'text-red',\n  content: 'World',\n  contentClass: 'text-blue text-sm',\n  buttons: [\n    { text: 'OK', class: 'bg-red', onClick: () => {} },\n    { text: 'Cancel', class: 'bg-blue', onClick: () => {} },\n  ],\n  // ...\n})\n\nEven this is not flexible enough. If you want more, you might end up with manual render function.\n\nts\nconst result = await dialog.open({\n  title: 'Hello',\n  contentSlot: () => h(MyComponent, { content }),\n})\n\nThis is like reinventing a new DSL in the script to express the UI template.\n\nSo this function allows expressing the UI in templates instead of scripts, where it is supposed to be, while still being able to be manipulated programmatically.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nHaoqun Jiang\nBruce\nChangelog\n​\nv10.1.1 on 5/2/2023\nfc8cf - fix: temporarily work around the type error in vue 3.3 (#3042)\nv10.0.0-beta.5 on 4/13/2023\n13169 - feat: new function (#2957)"
  },
  {
    "title": "computedInject | VueUse",
    "url": "https://vueuse.org/core/computedInject/",
    "html": "computedInject\n​\nCategory\nComponent\nExport Size\n183 B\nLast Changed\nlast year\n\nCombine computed and inject\n\nDemo\n​\n\nsource\n\nArray\n[\n  {\n    \"key\": 1,\n    \"value\": \"1\"\n  },\n  {\n    \"key\": 2,\n    \"value\": \"2\"\n  },\n  {\n    \"key\": 3,\n    \"value\": \"3\"\n  }\n]\nComputed Array\n[\n  {\n    \"key\": 0,\n    \"value\": \"all\"\n  },\n  {\n    \"key\": 1,\n    \"value\": \"1\"\n  },\n  {\n    \"key\": 2,\n    \"value\": \"2\"\n  },\n  {\n    \"key\": 3,\n    \"value\": \"3\"\n  }\n]\nUsage\n​\n\nIn Provider Component\n\nTypeScript\nts\nimport type { InjectionKey, Ref } from 'vue'\nimport { provide, ref } from 'vue'\ninterface Item {\n  key: number\n  value: string\n}\nexport const ArrayKey: InjectionKey<Ref<Item[]>> = Symbol('symbol-key')\nconst array = ref([\n  { key: 1, value: '1' },\n  { key: 2, value: '2' },\n  { key: 3, value: '3' },\n])\nprovide(ArrayKey, array)\n\nIn Receiver Component\n\nts\nimport { computedInject } from '@vueuse/core'\n\nimport { ArrayKey } from './provider'\n\nconst computedArray = computedInject(ArrayKey, (source) => {\n  const arr = [...source.value]\n  arr.unshift({ key: 0, value: 'all' })\n  return arr\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nwheat\nMinatoHikari\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "createReusableTemplate | VueUse",
    "url": "https://vueuse.org/core/createReusableTemplate/",
    "html": "createReusableTemplate\n​\nCategory\nComponent\nExport Size\n738 B\nLast Changed\n4 months ago\n\nDefine and reuse template inside the component scope.\n\nMotivation\n​\n\nIt's common to have the need to reuse some part of the template. For example:\n\nhtml\n<template>\n  <dialog v-if=\"showInDialog\">\n    <!-- something complex -->\n  </dialog>\n  <div v-else>\n    <!-- something complex -->\n  </div>\n</template>\n\nWe'd like to reuse our code as much as possible. So normally we might need to extract those duplicated parts into a component. However, in a separated component you lose the ability to access the local bindings. Defining props and emits for them can be tedious sometime.\n\nSo this function is made to provide a way for defining and reusing templates inside the component scope.\n\nUsage\n​\n\nIn the previous example, we could refactor it to:\n\nhtml\n<script setup>\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n</script>\n\n<template>\n  <DefineTemplate>\n    <!-- something complex -->\n  </DefineTemplate>\n\n  <dialog v-if=\"showInDialog\">\n    <ReuseTemplate />\n  </dialog>\n  <div v-else>\n    <ReuseTemplate />\n  </div>\n</template>\n<DefineTemplate> will register the template and renders nothing.\n<ReuseTemplate> will render the template provided by <DefineTemplate>.\n<DefineTemplate> must be used before <ReuseTemplate>.\n\nNote: It's recommended to extract as separate components whenever possible. Abusing this function might lead to bad practices for your codebase.\n\nOptions API\n​\n\nWhen using with Options API, you will need to define createReusableTemplate outside of the component setup and pass to the components option in order to use them in the template.\n\nhtml\n<script>\nimport { defineComponent } from 'vue'\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n\nexport default defineComponent({\n  components: {\n    DefineTemplate,\n    ReuseTemplate,\n  },\n  setup() {\n    // ...\n  },\n})\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ data, msg, anything }\">\n    <div>{{ data }} passed from usage</div>\n  </DefineTemplate>\n\n  <ReuseTemplate :data=\"data\" msg=\"The first usage\" />\n</template>\nPassing Data\n​\n\nYou can also pass data to the template using slots:\n\nUse v-slot=\"...\" to access the data on <DefineTemplate>\nDirectly bind the data on <ReuseTemplate> to pass them to the template\nhtml\n<script setup>\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ data, msg, anything }\">\n    <div>{{ data }} passed from usage</div>\n  </DefineTemplate>\n\n  <ReuseTemplate :data=\"data\" msg=\"The first usage\" />\n  <ReuseTemplate :data=\"anotherData\" msg=\"The second usage\" />\n  <ReuseTemplate v-bind=\"{ data: something, msg: 'The third' }\" />\n</template>\nTypeScript Support\n​\n\ncreateReusableTemplate accepts a generic type to provide type support for the data passed to the template:\n\nhtml\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\n// Comes with pair of `DefineTemplate` and `ReuseTemplate`\nconst [DefineFoo, ReuseFoo] = createReusableTemplate<{ msg: string }>()\n\n// You can create multiple reusable templates\nconst [DefineBar, ReuseBar] = createReusableTemplate<{ items: string[] }>()\n</script>\n\n<template>\n  <DefineFoo v-slot=\"{ msg }\">\n    <!-- `msg` is typed as `string` -->\n    <div>Hello {{ msg.toUpperCase() }}</div>\n  </DefineFoo>\n\n  <ReuseFoo msg=\"World\" />\n\n  <!-- @ts-expect-error Type Error! -->\n  <ReuseFoo :msg=\"1\" />\n</template>\n\nOptionally, if you are not a fan of array destructuring, the following usages are also legal:\n\nhtml\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst {\n  define: DefineFoo,\n  reuse: ReuseFoo,\n} = createReusableTemplate<{ msg: string }>()\n</script>\n\n<template>\n  <DefineFoo v-slot=\"{ msg }\">\n    <div>Hello {{ msg.toUpperCase() }}</div>\n  </DefineFoo>\n\n  <ReuseFoo msg=\"World\" />\n</template>\nhtml\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst TemplateFoo = createReusableTemplate<{ msg: string }>()\n</script>\n\n<template>\n  <TemplateFoo.define v-slot=\"{ msg }\">\n    <div>Hello {{ msg.toUpperCase() }}</div>\n  </TemplateFoo.define>\n\n  <TemplateFoo.reuse msg=\"World\" />\n</template>\n\nWARNING\n\nDot notation is not supported in Vue 2.\n\nWARNING\n\nPassing boolean props without v-bind is not supported. See the Caveats section for more details.\n\nPassing Slots\n​\n\nIt's also possible to pass slots back from <ReuseTemplate>. You can access the slots on <DefineTemplate> from $slots:\n\nhtml\n<script setup>\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate()\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ $slots, otherProp }\">\n    <div some-layout>\n      <!-- To render the slot -->\n      <component :is=\"$slots.default\" />\n    </div>\n  </DefineTemplate>\n\n  <ReuseTemplate>\n    <div>Some content</div>\n  </ReuseTemplate>\n  <ReuseTemplate>\n    <div>Another content</div>\n  </ReuseTemplate>\n</template>\n\nWARNING\n\nPassing slots does not work in Vue 2.\n\nCaveats\n​\nBoolean props\n​\n\nAs opposed to Vue's behavior, props defined as boolean that were passed without v-bind or absent will be resolved into an empty string or undefined respectively:\n\nhtml\n<script setup lang=\"ts\">\nimport { createReusableTemplate } from '@vueuse/core'\n\nconst [DefineTemplate, ReuseTemplate] = createReusableTemplate<{\n  value?: boolean\n}>()\n</script>\n\n<template>\n  <DefineTemplate v-slot=\"{ value }\">\n    {{ typeof value }}: {{ value }}\n  </DefineTemplate>\n\n  <ReuseTemplate :value=\"true\" />\n  <!-- boolean: true -->\n\n  <ReuseTemplate :value=\"false\" />\n  <!-- boolean: false -->\n\n  <ReuseTemplate value />\n  <!-- string: -->\n\n  <ReuseTemplate />\n  <!-- undefined: -->\n</template>\nReferences\n​\n\nThis function is migrated from vue-reuse-template.\n\nExisting Vue discussions/issues about reusing template:\n\nDiscussion on Reusing Templates\n\nAlternative Approaches:\n\nVue Macros - namedTemplate\nunplugin-@vueuse/core\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nKasper Seweryn\n小的的 DeDe\nMaik Kowol\ncoderwei\nJean-Baptiste AUBRÉE\nAndrej Hýll\nChangelog\n​\nv10.3.0 on 7/30/2023\na32ae - feat: inherit attrs (#3226)\nd79e1 - fix: camelize props (#3253)\nv10.1.1 on 5/2/2023\nb3323 - fix: improve hmr support\nv10.0.0-beta.5 on 4/13/2023\n13169 - feat(createTemplatePromise): new function (#2957)\nbd53c - feat: new function (#2961)"
  },
  {
    "title": "useTimestamp | VueUse",
    "url": "https://vueuse.org/core/usetimestamp/",
    "html": "useTimestamp\n​\nCategory\nAnimation\nExport Size\n817 B\nLast Changed\nlast year\n\nReactive current timestamp\n\nDemo\n​\n\nsource\n\nTimestamp: 1701206224633\nUsage\n​\njs\nimport { useTimestamp } from '@vueuse/core'\n\nconst timestamp = useTimestamp({ offset: 0 })\njs\nconst { timestamp, pause, resume } = useTimestamp({ controls: true })\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseTimestamp v-slot=\"{ timestamp, pause, resume }\">\n  Current Time: {{ timestamp }}\n  <button @click=\"pause()\">Pause</button>\n  <button @click=\"resume()\">Resume</button>\n</UseTimestamp>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nsun0day\nWaleed Khaled\nsun0day\nJelf\nScott Bedard\nShinigami\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.3.0 on 9/26/2022\n33dbc - feat: optional callback for useInterval, useTimeout & useTimestamp (#2240)\nv8.9.3 on 7/14/2022\n98985 - fix!: rename type TimestampOptions to UseTimestampOptions (#1892)"
  },
  {
    "title": "useTransition | VueUse",
    "url": "https://vueuse.org/core/useTransition/",
    "html": "useTransition\n​\nCategory\nAnimation\nExport Size\n1.15 kB\nLast Changed\n2 months ago\n\nTransition between values\n\nDemo\n​\n\nsource\n\nTransition\n\nCubic bezier curve: 0.00\n\nCustom function: 0.00\n\nVector: [0.00, 0.00]\n\nUsage\n​\n\nDefine a numeric source value to follow, and when changed the output will transition to the new value. If the source changes while a transition is in progress, a new transition will begin from where the previous one was interrupted.\n\njs\nimport { ref } from 'vue'\nimport { TransitionPresets, useTransition } from '@vueuse/core'\n\nconst source = ref(0)\n\nconst output = useTransition(source, {\n  duration: 1000,\n  transition: TransitionPresets.easeInOutCubic,\n})\n\nTo synchronize transitions, use an array of numbers. As an example, here is how we could transition between colors.\n\njs\nconst source = ref([0, 0, 0])\n\nconst output = useTransition(source)\n\nconst color = computed(() => {\n  const [r, g, b] = output.value\n  return `rgb(${r}, ${g}, ${b})`\n})\n\nTransition easing can be customized using cubic bezier curves. Transitions defined this way work the same as CSS easing functions.\n\njs\nuseTransition(source, {\n  transition: [0.75, 0, 0.25, 1],\n})\n\nThe following transitions are available via the TransitionPresets constant.\n\nlinear\neaseInSine\neaseOutSine\neaseInOutSine\neaseInQuad\neaseOutQuad\neaseInOutQuad\neaseInCubic\neaseOutCubic\neaseInOutCubic\neaseInQuart\neaseOutQuart\neaseInOutQuart\neaseInQuint\neaseOutQuint\neaseInOutQuint\neaseInExpo\neaseOutExpo\neaseInOutExpo\neaseInCirc\neaseOutCirc\neaseInOutCirc\neaseInBack\neaseOutBack\neaseInOutBack\n\nFor more complex transitions, a custom function can be provided.\n\njs\nfunction easeOutElastic(n) {\n  return n === 0\n    ? 0\n    : n === 1\n      ? 1\n      : (2 ** (-10 * n)) * Math.sin((n * 10 - 0.75) * ((2 * Math.PI) / 3)) + 1\n}\n\nuseTransition(source, {\n  transition: easeOutElastic,\n})\n\nTo control when a transition starts, set a delay value. To choreograph behavior around a transition, define onStarted or onFinished callbacks.\n\njs\nuseTransition(source, {\n  delay: 1000,\n  onStarted() {\n    // called after the transition starts\n  },\n  onFinished() {\n    // called after the transition ends\n  },\n})\n\nTo temporarily stop transitioning, define a boolean disabled property. Be aware, this is not the same a duration of 0. Disabled transitions track the source value synchronously. They do not respect a delay, and do not fire onStarted or onFinished callbacks.\n\nFor more control, transitions can be executed manually by using executeTransition. This function returns a promise that resolves upon completion. Manual transitions can be cancelled by defining an abort function that returns a truthy value.\n\njs\nimport { executeTransition } from '@vueuse/core'\n\nawait executeTransition(source, from, to, {\n  duration: 1000,\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nScott Bedard\nzhiyuanzmj\nAlexey Istomin\nhuodoushigemi\nJelf\nwheat\nAlex Kozack\nChangelog\n​\nv10.1.0 on 4/22/2023\n8b330 - fix: fix regression with non-linear transition functions (#2973)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.1 on 3/23/2023\n5944e - feat: support MaybeComputedRef (#2871)\nv10.0.0-beta.0 on 3/14/2023\n08c21 - feat(useSwipe, usePointerSwipe, useTransition): improve tree-shaking (#2863)\n526d5 - feat: expose transition utility for manual control (#2743)\nv9.6.0 on 11/22/2022\n0a49e - fix: call pause() to stop useRafFn when disabling (#2360)\nv9.1.0 on 8/4/2022\ncc865 - fix: improve type of TransitionPresets\nv8.9.3 on 7/14/2022\n35f33 - fix!: rename type TransitionOptions to UseTransitionOptions (#1893)"
  },
  {
    "title": "useRafFn | VueUse",
    "url": "https://vueuse.org/core/useraffn/",
    "html": "useRafFn\n​\nCategory\nAnimation\nExport Size\n342 B\nLast Changed\n2 months ago\n\nCall function on every requestAnimationFrame. With controls of pausing and resuming.\n\nDemo\n​\n\nsource\n\nCount: 5\npauseresume\nUsage\n​\njs\nimport { ref } from 'vue'\nimport { useRafFn } from '@vueuse/core'\n\nconst count = ref(0)\n\nconst { pause, resume } = useRafFn(() => {\n  count.value++\n  console.log(count.value)\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nmax.lee\nHayk Khachatryan\nDan Rose\nEnzo Innocenzi\nJelf\nhe yifan\nAlex Kozack\nJacob Clevenger\nScott Bedard\nAntério Vieira\nChangelog\n​\nv10.5.0 on 10/7/2023\n8e4c0 - feat: option fpsLimit (#3459)\nv10.2.1 on 6/28/2023\ncf6eb - fix: set initial delta to zero (#3150)\nv9.12.0 on 1/29/2023\n39183 - feat(useRafFn, useIntervalFn, useTimeoutFn): make status readonly (#2685)\nv9.7.0 on 12/16/2022\n692d0 - feat: add delta and timestamp (#2493)\nv8.9.3 on 7/14/2022\nc3dd7 - fix!: rename type RafFnOptions to UseRafFnOptions (#1887)"
  },
  {
    "title": "useAnimate | VueUse",
    "url": "https://vueuse.org/core/useAnimate/",
    "html": "useAnimate\n​\nCategory\nAnimation\nExport Size\n1.56 kB\nLast Changed\n4 months ago\n\nReactive Web Animations API.\n\nDemo\n​\n\nsource\n\nVueUse useAnimate\n\npausereversefinishcancel\nstartTime: 1876.8\ncurrentTime: 233.30000000000007\nplaybackRate: 1\nplayState: 'running'\nreplaceState: 'active'\npending: false\n\nUsage\n​\nBasic Usage\n​\n\nThe useAnimate function will return the animate and its control function.\n\nhtml\n<template>\n  <span ref=\"el\" style=\"display:inline-block\">useAnimate</span>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useAnimate } from '@vueuse/core'\n\nconst el = ref()\nconst {\n  isSupported,\n  animate,\n\n  // actions\n  play,\n  pause,\n  reverse,\n  finish,\n  cancel,\n\n  // states\n  pending,\n  playState,\n  replaceState,\n  startTime,\n  currentTime,\n  timeline,\n  playbackRate,\n} = useAnimate(el, { transform: 'rotate(360deg)' }, 1000)\n</script>\nCustom Keyframes\n​\n\nEither an array of keyframe objects, or a keyframe object, or a ref. See Keyframe Formats for more details.\n\nts\nconst keyframes = { transform: 'rotate(360deg)' }\n// Or\nconst keyframes = [\n  { transform: 'rotate(0deg)' },\n  { transform: 'rotate(360deg)' },\n]\n// Or\nconst keyframes = ref([\n  { clipPath: 'circle(20% at 0% 30%)' },\n  { clipPath: 'circle(20% at 50% 80%)' },\n  { clipPath: 'circle(20% at 100% 30%)' },\n])\n\nuseAnimate(el, keyframes, 1000)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\njack zhang\nqiang\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\nbcf5d - feat: new function (#2109)"
  },
  {
    "title": "useNow | VueUse",
    "url": "https://vueuse.org/core/useNow/",
    "html": "useNow\n​\nCategory\nAnimation\nExport Size\n788 B\nLast Changed\n2 years ago\n\nReactive current Date instance.\n\nDemo\n​\n\nsource\n\nNow: Tue Nov 28 2023 22:17:03 GMT+0100 (Central European Standard Time)\nUsage\n​\njs\nimport { useNow } from '@vueuse/core'\n\nconst now = useNow()\njs\nconst { now, pause, resume } = useNow({ controls: true })\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseNow v-slot=\"{ now, pause, resume }\">\n  Now: {{ now }}\n  <button @click=\"pause()\">Pause</button>\n  <button @click=\"resume()\">Resume</button>\n</UseNow>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nsun0day\nShinigami\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useWebSocket | VueUse",
    "url": "https://vueuse.org/core/useWebSocket/",
    "html": "useWebSocket\n​\nCategory\nNetwork\nExport Size\n1.34 kB\nLast Changed\n3 weeks ago\n\nReactive WebSocket client.\n\nUsage\n​\njs\nimport { useWebSocket } from '@vueuse/core'\n\nconst { status, data, send, open, close } = useWebSocket('ws://websocketurl')\n\nSee the Type Declarations for more options.\n\nImmediate\n​\n\nAuto-connect (enabled by default).\n\nThis will call open() automatically for you and you don't need to call it by yourself.\n\nIf url is provided as a ref, this also controls whether a connection is re-established when its value is changed (or whether you need to call open() again for the change to take effect).\n\nAuto-close\n​\n\nAuto-close-connection (enabled by default).\n\nThis will call close() automatically when the beforeunload event is triggered or the associated effect scope is stopped.\n\nAuto-reconnection\n​\n\nReconnect on errors automatically (disabled by default).\n\njs\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  autoReconnect: true,\n})\n\nOr with more controls over its behavior:\n\njs\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  autoReconnect: {\n    retries: 3,\n    delay: 1000,\n    onFailed() {\n      alert('Failed to connect WebSocket after 3 retries')\n    },\n  },\n})\n\nExplicitly calling close() won't trigger the auto reconnection.\n\nHeartbeat\n​\n\nIt's common practice to send a small message (heartbeat) for every given time passed to keep the connection active. In this function we provide a convenient helper to do it:\n\njs\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  heartbeat: true,\n})\n\nOr with more controls:\n\njs\nconst { status, data, close } = useWebSocket('ws://websocketurl', {\n  heartbeat: {\n    message: 'ping',\n    interval: 1000,\n    pongTimeout: 1000,\n  },\n})\nSub-protocols\n​\n\nList of one or more subprotocols to use, in this case soap and wamp.\n\njs\nimport { useWebSocket } from '@vueuse/core'\n\nconst { status, data, send, open, close } = useWebSocket('ws://websocketurl', {\n  protocols: ['soap'], // ['soap', 'wamp']\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nIvan Demidov\nShinigami\nDan Rose\nAntério Vieira\nEvan\nVanweiping\nalipay404\nshanyi-front\n丶远方\nFernando Fernández\nJohann Kellerman\nDan Rose\ncn.shperry\nazaleta\nMikhailov Nikita\nJelf\nErnest\nRoland Doda\nShangbu Li\nwebfansplz\nJan-Henrik Damaschke\nJoacim de la Motte\nAlex Kozack\niGalaxyz\nChangelog\n​\nv10.6.0 on 11/9/2023\n9b014 - fix: webworker support (#3469)\nv10.5.0 on 10/7/2023\nc3a69 - fix: ssr support (#3370)\nv10.4.0 on 8/25/2023\naea27 - fix(useWebsocket): reset pongTimeout on close (#3324)\n93372 - fix(useWebsocket): pongTimeout auto-reconnect no work (#3321)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv9.12.0 on 1/29/2023\n13924 - feat: allow undefined ref for url (#2473)\nv9.5.0 on 11/9/2022\n65f43 - fix: don't hide pong setTimeout reference (#2206)\n86013 - feat(useWebsocket): url to be ref/computed (#2367)\nv9.4.0 on 10/25/2022\nd4c32 - fix: don't reconnect WebSocket if close issued between retries (#2330)\nv9.2.0 on 9/5/2022\n4c1f7 - feat: enhence heartbeat (#2170)\nv9.0.0-beta.1 on 7/20/2022\na5d76 - fix: set initial status as CLOSED (#1960)\nv8.9.3 on 7/14/2022\nb461f - fix!: rename type WebSocketOptions to UseWebSocketOptions and WebSocketResult to UseWebSocketReturn (#1895)"
  },
  {
    "title": "useEventSource | VueUse",
    "url": "https://vueuse.org/core/useEventSource/",
    "html": "useEventSource\n​\nCategory\nNetwork\nExport Size\n679 B\nLast Changed\n7 months ago\n\nAn EventSource or Server-Sent-Events instance opens a persistent connection to an HTTP server, which sends events in text/event-stream format.\n\nUsage\n​\njs\nimport { useEventSource } from '@vueuse/core'\n\nconst { status, data, error, close } = useEventSource('https://event-source-url')\nState\tType\tDescription\nstatus\tRef<string>\tA read-only value representing the state of the connection. Possible values are CONNECTING (0), OPEN (1), or CLOSED (2)\ndata\tRef<string | null>\tReference to the latest data received via the EventSource, can be watched to respond to incoming messages\neventSource\tRef<EventSource | null>\tReference to the current EventSource instance\nMethod\tSignature\tDescription\nclose\t() => void\tCloses the EventSource connection gracefully.\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nMichael J. Roberts\n丶远方\nJelf\nShinigami\n江麻妞\nShinigami\nAlex Kozack\nJohnson Chen\nCharles\nChangelog\n​\nv10.1.1 on 5/2/2023\n790bc - feat: allow optional string | URL type for url arg (#3035)\nv8.9.3 on 7/14/2022\na5192 - fix!: return type should be UseEventSourceReturn (#1864)"
  },
  {
    "title": "useFetch | VueUse",
    "url": "https://vueuse.org/core/useFetch/",
    "html": "useFetch\n​\nCategory\nNetwork\nExport Size\n2.42 kB\nLast Changed\n3 weeks ago\n\nReactive Fetch API provides the ability to abort requests, intercept requests before they are fired, automatically refetch requests when the url changes, and create your own useFetch with predefined options.\n\nLearn useFetch with this FREE video lesson from Vue School!\n\nTIP\n\nWhen using with Nuxt 3, this functions will NOT be auto imported in favor of Nuxt's built-in useFetch(). Use explicit import if you want to use the function from VueUse.\n\nDemo\n​\n\nsource\n\nThe following URLs can be used to test different features of useFetch\nNormal Request: https://httpbin.org/get\nAbort Request: https://httpbin.org/delay/10\nResponse Error: http://httpbin.org/status/500\nExecuteRefetch OffAbort\nisFinished: false\nisFetching: true\ncanAbort: true\nstatusCode: null\nerror: null\ndata: null\n\nUsage\n​\nBasic Usage\n​\n\nThe useFetch function can be used by simply providing a url. The url can be either a string or a ref. The data object will contain the result of the request, the error object will contain any errors, and the isFetching object will indicate if the request is loading.\n\nts\nimport { useFetch } from '@vueuse/core'\n\nconst { isFetching, error, data } = useFetch(url)\nAsynchronous Usage\n​\n\nuseFetch can also be awaited just like a normal fetch. Note that whenever a component is asynchronous, whatever component that uses it must wrap the component in a <Suspense> tag. You can read more about the suspense api in the Offical Vue 3 Docs\n\nts\nimport { useFetch } from '@vueuse/core'\n\nconst { isFetching, error, data } = await useFetch(url)\nRefetching on URL change\n​\n\nUsing a ref for the url parameter will allow the useFetch function to automatically trigger another request when the url is changed.\n\nts\nconst url = ref('https://my-api.com/user/1')\n\nconst { data } = useFetch(url, { refetch: true })\n\nurl.value = 'https://my-api.com/user/2' // Will trigger another request\nPrevent request from firing immediately\n​\n\nSetting the immediate option to false will prevent the request from firing until the execute function is called.\n\nts\nconst { execute } = useFetch(url, { immediate: false })\n\nexecute()\nAborting a request\n​\n\nA request can be aborted by using the abort function from the useFetch function. The canAbort property indicates if the request can be aborted.\n\nts\nconst { abort, canAbort } = useFetch(url)\n\nsetTimeout(() => {\n  if (canAbort.value)\n    abort()\n}, 100)\n\nA request can also be aborted automatically by using timeout property. It will call abort function when the given timeout is reached.\n\nts\nconst { data } = useFetch(url, { timeout: 100 })\nIntercepting a request\n​\n\nThe beforeFetch option can intercept a request before it is sent and modify the request options and url.\n\nts\nconst { data } = useFetch(url, {\n  async beforeFetch({ url, options, cancel }) {\n    const myToken = await getMyToken()\n\n    if (!myToken)\n      cancel()\n\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${myToken}`,\n    }\n\n    return {\n      options,\n    }\n  },\n})\n\nThe afterFetch option can intercept the response data before it is updated.\n\nts\nconst { data } = useFetch(url, {\n  afterFetch(ctx) {\n    if (ctx.data.title === 'HxH')\n      ctx.data.title = 'Hunter x Hunter' // Modifies the response data\n\n    return ctx\n  },\n})\n\nThe onFetchError option can intercept the response data and error before it is updated when updateDataOnError is set to true.\n\nts\nconst { data } = useFetch(url, {\n  updateDataOnError: true,\n  onFetchError(ctx) {\n    // ctx.data can be null when 5xx response\n    if (ctx.data === null)\n      ctx.data = { title: 'Hunter x Hunter' } // Modifies the response data\n\n    ctx.error = new Error('Custom Error') // Modifies the error\n    return ctx\n  },\n})\n\nconsole.log(data.value) // { title: 'Hunter x Hunter' }\nSetting the request method and return type\n​\n\nThe request method and return type can be set by adding the appropriate methods to the end of useFetch\n\nts\n// Request will be sent with GET method and data will be parsed as JSON\nconst { data } = useFetch(url).get().json()\n\n// Request will be sent with POST method and data will be parsed as text\nconst { data } = useFetch(url).post().text()\n\n// Or set the method using the options\n\n// Request will be sent with GET method and data will be parsed as blob\nconst { data } = useFetch(url, { method: 'GET' }, { refetch: true }).blob()\nCreating a Custom Instance\n​\n\nThe createFetch function will return a useFetch function with whatever pre-configured options that are provided to it. This is useful for interacting with API's throughout an application that uses the same base URL or needs Authorization headers.\n\nts\nconst useMyFetch = createFetch({\n  baseUrl: 'https://my-api.com',\n  options: {\n    async beforeFetch({ options }) {\n      const myToken = await getMyToken()\n      options.headers.Authorization = `Bearer ${myToken}`\n\n      return { options }\n    },\n  },\n  fetchOptions: {\n    mode: 'cors',\n  },\n})\n\nconst { isFetching, error, data } = useMyFetch('users')\n\nIf you want to control the behavior of beforeFetch, afterFetch, onFetchError between the pre-configured instance and newly spawned instance. You can provide a combination option to toggle between overwrite or chaining.\n\nts\nconst useMyFetch = createFetch({\n  baseUrl: 'https://my-api.com',\n  combination: 'overwrite',\n  options: {\n    // beforeFetch in pre-configured instance will only run when the newly spawned instance do not pass beforeFetch\n    async beforeFetch({ options }) {\n      const myToken = await getMyToken()\n      options.headers.Authorization = `Bearer ${myToken}`\n\n      return { options }\n    },\n  },\n})\n\n// use useMyFetch beforeFetch\nconst { isFetching, error, data } = useMyFetch('users')\n\n// use custom beforeFetch\nconst { isFetching, error, data } = useMyFetch('users', {\n  async beforeFetch({ url, options, cancel }) {\n    const myToken = await getMyToken()\n\n    if (!myToken)\n      cancel()\n\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${myToken}`,\n    }\n\n    return {\n      options,\n    }\n  },\n})\nEvents\n​\n\nThe onFetchResponse and onFetchError will fire on fetch request responses and errors respectively.\n\nts\nconst { onFetchResponse, onFetchError } = useFetch(url)\n\nonFetchResponse((response) => {\n  console.log(response.status)\n})\n\nonFetchError((error) => {\n  console.error(error.message)\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nJelf\nIsmail Gjevori\n丶远方\nKaKa\nToby Zerner\nJay214\nwebfansplz\nMartijn Weghorst\nKaKa\nqiang\nRAX7\nPrzemek Brzosko\nabitwhy\nsun0day\nYoung\nsun0day\nCurt Grimes\nYvan Zhu\nice\nAntonio Román\nGlandos\nunknown_\nbtea\nShinigami\nKaKa\nArda Soytürk\nChangelog\n​\nv10.6.0 on 11/9/2023\n75ca2 - fix: don't set isFetching to false when a request is aborted because of a refetch (#3479)\nv10.4.0 on 8/25/2023\n945ca - feat: introduce updateDataOnError option (#3092)\nv10.3.0 on 7/30/2023\nb7e3d - fix: generated payloadType on execute (#3251)\nv10.1.1 on 5/2/2023\nd051f - fix: combineCallbacks does not merge options (#3015)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.0 on 3/14/2023\n78cfb - feat: update data on success (#2711)\nfff45 - fix: abort before updating state (#2805)\nv9.13.0 on 2/18/2023\ncd9d6 - feat: cancel previous request on refetch (#2750)\nc2bc6 - fix: check if it's object for isFetchOptions\nv9.9.0 on 12/23/2022\n000fd - fix: doesn't work with formData payload (#2440)\nv9.5.0 on 11/9/2022\n934a8 - feat: support sending the custom request to an absolute URL regardless baseURL (#2210)\na8496 - feat: allow configure lifecycle handler behavior (#2333)\nv9.3.1 on 10/17/2022\n45750 - fix: fix incorrect chainCallbacks behavior (#2231)\nv9.0.1 on 7/29/2022\n0f791 - fix: broken callbacks when RequestInit and UseFetchOptions are both passed in (#2013)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.9.0 on 7/6/2022\n08830 - feat: chain callbacks from createFetch and useFetch (#1545)\nv8.7.0 on 6/16/2022\n8f541 - fix: ssr compactible for headersToObject"
  },
  {
    "title": "useUserMedia | VueUse",
    "url": "https://vueuse.org/core/useUserMedia/",
    "html": "useUserMedia\n​\nCategory\nSensors\nExport Size\n569 B\nLast Changed\n8 months ago\nRelated\nuseDevicesList\nuseDisplayMedia\nusePermission\n\nReactive mediaDevices.getUserMedia streaming.\n\nDemo\n​\n\nsource\n\nStart\nUsage\n​\njs\nimport { useUserMedia } from '@vueuse/core'\n\nconst { stream, start } = useUserMedia()\n\nstart()\nts\nconst video = document.getElementById('video')\n\nwatchEffect(() => {\n  // preview on a video element\n  video.srcObject = stream.value\n})\nDevices\n​\njs\nimport { useDevicesList, useUserMedia } from '@vueuse/core'\n\nconst {\n  videoInputs: cameras,\n  audioInputs: microphones,\n} = useDevicesList({\n  requestPermissions: true,\n})\nconst currentCamera = computed(() => cameras.value[0]?.deviceId)\nconst currentMicrophone = computed(() => microphones.value[0]?.deviceId)\n\nconst { stream } = useUserMedia({\n  constraints: {\n    video: { deviceId: currentCamera },\n    audio: { deviceId: currentMicrophone, }\n  }\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nMartin\nJelf\nwheat\nShinigami\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.3 on 4/13/2023\n85468 - fix!: remove deprecated apis\nv10.0.0-beta.0 on 3/14/2023\n8f2a3 - feat!: add constraints - remove deviceIds (#2032)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useTextSelection | VueUse",
    "url": "https://vueuse.org/core/useTextSelection/",
    "html": "useTextSelection\n​\nCategory\nSensors\nExport Size\n681 B\nLast Changed\n4 months ago\n\nReactively track user text selection based on Window.getSelection.\n\nDemo\n​\n\nsource\n\nYou can select any text on the page.\n\nSelected Text:\nNo selected\n\nSelected rects:\n[]\n\nUsage\n​\nhtml\n<template>\n  <p>{{state.text}}</p>\n</template>\n\n<script setup lang=\"ts\">\n  import { useTextSelection } from '@vueuse/core'\n  const state = useTextSelection()\n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nLehoczky Zoltán\nwheat\nJelf\nwebfansplz\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useSwipe | VueUse",
    "url": "https://vueuse.org/core/useSwipe/",
    "html": "useSwipe\n​\nCategory\nSensors\nExport Size\n996 B\nLast Changed\n4 months ago\n\nReactive swipe detection based on TouchEvents.\n\nDemo\n​\n\nsource\n\nReset\n\nSwipe right\n\nDirection: none\nlengthX: 0 | lengthY: 0\n\nUsage\n​\nhtml\n<template>\n  <div ref=\"el\">\n    Swipe here\n  </div>\n</template>\n\n<script>\n  setup() {\n    const el = ref(null)\n    const { isSwiping, direction } = useSwipe(el)\n\n    return { el, isSwiping, direction }\n  } \n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nAmirreza Zarkesh\nlstoeferle\nAlexey Istomin\nJelf\n云游君\nShinigami\nAlex Kozack\nChangelog\n​\nv10.1.0 on 4/22/2023\naf3ca - fix: ignore multiple touches (#2996)\n995aa - fix: ignore multiple touches (#2994)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv10.0.0-beta.0 on 3/14/2023\nf285c - fix!: use literal for swipe direction instead of enum\n08c21 - feat(useSwipe, usePointerSwipe, useTransition): improve tree-shaking (#2863)\nv8.9.3 on 7/14/2022\nd7052 - fix!: rename type SwipeOptions to UseSwipeOptions and SwipeReturn to UseSwipeReturn (#1891)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useSpeechSynthesis | VueUse",
    "url": "https://vueuse.org/core/usespeechsynthesis/",
    "html": "useSpeechSynthesis\n​\nCategory\nSensors\nExport Size\n724 B\nLast Changed\n2 months ago\n\nReactive SpeechSynthesis.\n\nCan I use?\n\nDemo\n​\n\nsource\n\nSpoken Text\nLanguage\nSelect Language\n\n\nPitch\n\n\nRate\nSpeakPauseStop\nUsage\n​\nts\nimport { useSpeechSynthesis } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isPlaying,\n  status,\n  voiceInfo,\n  utterance,\n  error,\n  stop,\n\n  toggle,\n  speak,\n} = useSpeechSynthesis()\nOptions\n​\n\nThe following shows the default values of the options, they will be directly passed to SpeechSynthesis API.\n\nts\nuseSpeechSynthesis({\n  lang: 'en-US',\n  pitch: 1,\n  rate: 1,\n  volume: 1,\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsibbng\nJelf\nwheat\nKirill Shestmintsev\n糠帅傅\nzwkkwz1\n云游君\nChangelog\n​\nv10.3.0 on 7/30/2023\nac88f - feat: add reactivity for pitch and rate (#3205)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv9.13.0 on 2/18/2023\n820e2 - feat: add stop function (#2774)\nv9.0.0-beta.1 on 7/20/2022\na524b - fix: remove duplicated onend, fix demo (#1941)\nv9.0.0-beta.0 on 7/17/2022\ndb61f - fix: rename type Status to UseSpeechSynthesisStatus\nv8.9.3 on 7/14/2022\n011af - refactor!: remove voiceInfo, allow voice as ref (#1882)\n42516 - fix!: rename type SpeechSynthesisOptions to UseSpeechSynthesisOptions (#1890)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useParallax | VueUse",
    "url": "https://vueuse.org/core/useParallax/",
    "html": "useParallax\n​\nCategory\nSensors\nExport Size\n1.5 kB\nLast Changed\nlast year\n\nCreate parallax effect easily. It uses useDeviceOrientation and fallback to useMouse if orientation is not supported.\n\nDemo\n​\n\nsource\n\nroll: 0.5\ntilt: -0.5\nsource: mouse\n\nCredit of images to Jarom Vogel\nUsage\n​\nhtml\n<div ref='container'>\n</div>\njs\nimport { useParallax } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const container = ref(null)\n    const { tilt, roll, source } = useParallax(container)\n\n    return {\n      container,\n    }\n  },\n}\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nJelf\nwheat\nChangelog\n​\nv8.9.3 on 7/14/2022\ne4b5b - fix!: rename type ParallaxOptions to UseParallaxOptions and ParallaxReturn to UseParallaxReturn (#1885)"
  },
  {
    "title": "useSpeechRecognition | VueUse",
    "url": "https://vueuse.org/core/useSpeechRecognition/",
    "html": "useSpeechRecognition\n​\nCategory\nSensors\nExport Size\n694 B\nLast Changed\n8 months ago\n\nReactive SpeechRecognition.\n\nCan I use?\n\nDemo\n​\n\nsource\n\nEnglish (US)\nFrench\nSpanish\nPress and talk\nUsage\n​\nts\nimport { useSpeechRecognition } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isListening,\n  isFinal,\n  result,\n  start,\n  stop,\n} = useSpeechRecognition()\nOptions\n​\n\nThe following shows the default values of the options, they will be directly passed to SpeechRecognition API.\n\nts\nuseSpeechRecognition({\n  lang: 'en-US',\n  interimResults: true,\n  continuous: true,\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nMark Noonan\nvaakian X\nwheat\nJoe Maylor\nShinigami\nAlex Kozack\nEGGSY\nAntério Vieira\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv8.9.3 on 7/14/2022\n36f33 - fix!: rename type SpeechRecognitionOptions to UseSpeechRecognitionOptions (#1889)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useScrollLock | VueUse",
    "url": "https://vueuse.org/core/useScrollLock/",
    "html": "useScrollLock\n​\nCategory\nSensors\nExport Size\n915 B\nLast Changed\n3 weeks ago\n\nLock scrolling of the element.\n\nDemo\n​\n\nsource\n\nTopLeft\nBottomLeft\nTopRight\nBottomRight\nScroll Me\nisLocked false\nLock\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { useScrollLock } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst isLocked = useScrollLock(el)\n\nisLocked.value = true // lock\nisLocked.value = false // unlock\n</script>\n\n<template>\n  <div ref=\"el\"></div>\n</template>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { vScrollLock } from '@vueuse/components'\nconst data = ref([1, 2, 3, 4, 5, 6])\nconst isLocked = ref(false)\nconst toggleLock = useToggle(isLocked)\n</script>\n\n<template>\n  <div v-scroll-lock=\"isLocked\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n  <button @click=\"toggleLock()\">\n    Toggle lock state\n  </button>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nAyaka Rizumu\nDoctorwu\nZhaolin Liang\nValery\nDominik Pschenitschni\nRobin Scholz\nJelf\nwheat\nChangelog\n​\nv10.6.0 on 11/9/2023\n03866 - fix(onScrollLock): cache the el initial overflow value (#3527)\nv10.4.0 on 8/25/2023\n8acdb - fix: support using window or document (#3319)\nv10.2.0 on 6/16/2023\ncdc28 - fix: fix scrollable children check (#3065)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\n7e590 - fix: detect parent with overflow auto (#2699)\nv9.10.0 on 1/3/2023\nc9a9a - fix: fix iOS touchmove bug (#2362)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "usePointerSwipe | VueUse",
    "url": "https://vueuse.org/core/usePointerSwipe/",
    "html": "usePointerSwipe\n​\nCategory\nSensors\nExport Size\n1.04 kB\nLast Changed\n8 months ago\n\nReactive swipe detection based on PointerEvents.\n\nDemo\n​\n\nsource\n\nReset\n\nSwipe\n\nUsage\n​\nhtml\n<script setup>\nimport { ref } from 'vue'\nimport { usePointerSwipe } from '@vueuse/core'\n\nconst el = ref(null)\nconst { isSwiping, direction } = usePointerSwipe(el)\n</script>\n\n<template>\n  <div ref=\"el\">\n    Swipe here\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJeffrey Li\nAlexey Istomin\n丶远方\nCurt Grimes\nsun0day\nJelf\nwheat\nMinatoHikari\nIlya Komichev\nlstoeferle\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv10.0.0-beta.0 on 3/14/2023\nf285c - fix(useSwipe)!: use literal for swipe direction instead of enum\n08c21 - feat(useSwipe, usePointerSwipe, useTransition): improve tree-shaking (#2863)\nv9.5.0 on 11/9/2022\n862d1 - fix: handle secondary clicks properly (#2379)\nv8.9.3 on 7/14/2022\n81ff5 - fix!: rename type PointerSwipeOptions to UsePointerSwipeOptions and PointerSwipeReturn to UsePointerSwipeReturn (#1886)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useScroll | VueUse",
    "url": "https://vueuse.org/core/useScroll/",
    "html": "useScroll\n​\nCategory\nSensors\nExport Size\n1.53 kB\nLast Changed\n2 weeks ago\n\nReactive scroll position and state.\n\nDemo\n​\n\nsource\n\nTopLeft\nBottomLeft\nTopRight\nBottomRight\nScroll Me\nX Position\nY Position\nSmooth scrolling\nisScrolling\nfalse\nTop Arrived\ntrue\nRight Arrived\nfalse\nBottom Arrived\nfalse\nLeft Arrived\ntrue\nScrolling Up\nfalse\nScrolling Right\nfalse\nScrolling Down\nfalse\nScrolling Left\nfalse\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { useScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst { x, y, isScrolling, arrivedState, directions } = useScroll(el)\n</script>\n\n<template>\n  <div ref=\"el\"></div>\n</template>\nWith offsets\n​\njs\nconst { x, y, isScrolling, arrivedState, directions } = useScroll(el, {\n  offset: { top: 30, bottom: 30, right: 30, left: 30 },\n})\nSetting scroll position\n​\n\nSet the x and y values to make the element scroll to that position.\n\nvue\n<script setup lang=\"ts\">\nimport { useScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst { x, y } = useScroll(el)\n</script>\n\n<template>\n  <div ref=\"el\" />\n  <button @click=\"x += 10\">\n    Scroll right 10px\n  </button>\n  <button @click=\"y += 10\">\n    Scroll down 10px\n  </button>\n</template>\nSmooth scrolling\n​\n\nSet behavior: smooth to enable smooth scrolling. The behavior option defaults to auto, which means no smooth scrolling. See the behavior option on window.scrollTo() for more information.\n\nTypeScript\nts\nimport { useScroll } from '@vueuse/core'\nconst el = ref<HTMLElement | null>(null)\nconst { x, y } = useScroll(el, { behavior: 'smooth' })\n// Or as a `ref`:\nconst smooth = ref(false)\nconst behavior = computed(() => (smooth.value ? 'smooth' : 'auto'))\nconst { x, y } = useScroll(el, { behavior })\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport type { UseScrollReturn } from '@vueuse/core'\nimport { vScroll } from '@vueuse/components'\n\nconst data = ref([1, 2, 3, 4, 5, 6])\n\nfunction onScroll(state: UseScrollReturn) {\n  console.log(state) // {x, y, isScrolling, arrivedState, directions}\n}\n</script>\n\n<template>\n  <div v-scroll=\"onScroll\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n\n  <!-- with options -->\n  <div v-scroll=\"[onScroll, { 'throttle' : 10 }]\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nCurt Grimes\nPoet\nNico Prat\nMinatoHikari\nVladimir\nAlanYu\nScott Bedard\nChristian Martinez\nkongmoumou\n丶远方\nholtergram\nAyaka Rizumu\n云游君\nbtea\nThierry Michel\nPavel Yankovski\nBobakanoosh\nJoseph Fitz Hughes\nChangelog\n​\nv10.6.1 on 11/13/2023\ne9742 - fix: can not read properties of null (reading document) (#3544)\nv10.6.0 on 11/9/2023\n86bd8 - fix: trigger once onMounted to get correct inital arrivedStates values (#3384)\nv10.4.0 on 8/25/2023\nc1b29 - fix: evade edge case when window or document is Proxy (#3280)\nv10.3.0 on 7/30/2023\ndde41 - fix: support configurable window (#3229)\nv10.2.0 on 6/16/2023\n8855f - fix: support window in setArrivedState (#3086)\nv10.1.1 on 5/2/2023\na88fe - fix(useInfiniteScroll): re-measure arrived states when async infinite scroll resolves (#3030)\nv10.0.0-beta.4 on 4/13/2023\n23b9a - fix: add support for row-reverse and column-reverse (#2577)\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\nf8872 - feat: support scrollend event (#2716)\nv9.5.0 on 11/9/2022\n9cd92 - fix: the expected result cannot be returned after setting the throttle parameter (#2390)\nv9.3.0 on 9/26/2022\n324ff - feat: support setting scroll position and toggling smooth scrolling (#1996)\nv9.1.1 on 8/23/2022\n53a20 - fix: account for rounding errors when calculating arrivedState (#2051)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\n3a6b9 - fix: compatibility for mobile (#1663)"
  },
  {
    "title": "usePointer | VueUse",
    "url": "https://vueuse.org/core/usePointer/",
    "html": "usePointer\n​\nCategory\nSensors\nExport Size\n1.14 kB\nLast Changed\n2 months ago\n\nReactive pointer state.\n\nDemo\n​\n\nsource\n\n{\n  \"x\": 0,\n  \"y\": 0,\n  \"pointerId\": 0,\n  \"pressure\": 0,\n  \"tiltX\": 0,\n  \"tiltY\": 0,\n  \"width\": 0,\n  \"height\": 0,\n  \"twist\": 0,\n  \"pointerType\": null,\n  \"isInside\": false\n}\nBasic Usage\n​\njs\nimport { usePointer } from '@vueuse/core'\n\nconst { x, y, pressure, pointerType } = usePointer()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nBy default, the component will track the pointer on window\n\nhtml\n<UsePointer v-slot=\"{ x, y }\">\n  x: {{ x }}\n  y: {{ y }}\n</UsePointer>\n\nTo track local position in the element, set target=\"self\":\n\nhtml\n<UsePointer target=\"self\" v-slot=\"{ x, y }\">\n  x: {{ x }}\n  y: {{ y }}\n</UsePointer>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\ncunzaizhuyi\n丶远方\nvaakian X\nJelf\nzz\nChangelog\n​\nv10.3.0 on 7/30/2023\nee425 - fix: add pointerup event for pressure field (#3217)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "usePointerLock | VueUse",
    "url": "https://vueuse.org/core/usePointerLock/",
    "html": "usePointerLock\n​\nCategory\nSensors\nExport Size\n1.36 kB\nLast Changed\n11 months ago\n\nReactive pointer lock.\n\nDemo\n​\n\nsource\n\nBasic Usage\n​\njs\nimport { usePointerLock } from '@vueuse/core'\n\nconst { isSupported, lock, unlock, element, triggerElement } = usePointerLock()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePointerLock v-slot=\"{ lock }\">\n  <canvas />\n  <button @click=\"lock\">\n    Lock Pointer on Canvas\n  </button>\n</UsePointerLock>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nSergey Danilchenko\nChangelog\n​\nv9.11.0 on 1/17/2023\nae69f - feat: new function (#2590)"
  },
  {
    "title": "usePageLeave | VueUse",
    "url": "https://vueuse.org/core/usePageLeave/",
    "html": "usePageLeave\n​\nCategory\nSensors\nExport Size\n576 B\nLast Changed\n2 years ago\n\nReactive state to show whether the mouse leaves the page.\n\nDemo\n​\n\nsource\n\n{\n  \"isLeft\": false\n}\nUsage\n​\njs\nimport { usePageLeave } from '@vueuse/core'\n\nconst isLeft = usePageLeave()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePageLeave v-slot=\"{ isLeft }\">\n  Has Left Page: {{ isLeft }}\n</UsePageLeave>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nlxhyl\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useOnline | VueUse",
    "url": "https://vueuse.org/core/useOnline/",
    "html": "useOnline\n​\nCategory\nSensors\nExport Size\n830 B\nLast Changed\n2 years ago\n\nReactive online state. A wrapper of useNetwork\n\nDemo\n​\n\nsource\n\nDisconnect your network to see changes\nStatus: Online\nUsage\n​\njs\nimport { useOnline } from '@vueuse/core'\n\nconst online = useOnline()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseOnline v-slot=\"{ isOnline }\">\n  Is Online: {{ isOnline }}\n</UseOnline>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nMike Jules\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useNavigatorLanguage | VueUse",
    "url": "https://vueuse.org/core/useNavigatorLanguage/",
    "html": "useNavigatorLanguage\n​\nCategory\nSensors\nExport Size\n632 B\nLast Changed\n8 months ago\n\nReactive navigator.language.\n\nDemo\n​\n\nsource\n\nSupported: true\n\nNavigator Language:\nen-US\nUsage\n​\nTypeScript\nts\nimport { defineComponent, ref } from 'vue'\nimport { useNavigatorLanguage } from '@vueuse/core'\nexport default defineComponent({\n  setup() {\n    const { language } = useNavigatorLanguage()\n    watch(language, () => {\n      // Listen to the value changing\n    })\n    return {\n      language,\n    }\n  },\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nJelf\nWuLianN\nMichael J. Roberts\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useMousePressed | VueUse",
    "url": "https://vueuse.org/core/useMousePressed/",
    "html": "useMousePressed\n​\nCategory\nSensors\nExport Size\n679 B\nLast Changed\n2 months ago\n\nReactive mouse pressing state. Triggered by mousedown touchstart on target element and released by mouseup mouseleave touchend touchcancel on window.\n\nDemo\n​\n\nsource\n\npressed: false\nsourceType: null\n\nTracking on Entire page\nBasic Usage\n​\njs\nimport { useMousePressed } from '@vueuse/core'\n\nconst { pressed } = useMousePressed()\n\nTouching is enabled by default. To make it only detects mouse changes, set touch to false\n\njs\nconst { pressed } = useMousePressed({ touch: false })\n\nTo only capture mousedown and touchstart on specific element, you can specify target by passing a ref of the element.\n\nhtml\n<template>\n  <div ref=\"el\">\n    Only clicking on this element will trigger the update.\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useMousePressed } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n\n    const { pressed } = useMousePressed({ target: el })\n\n    return {\n      el,\n      pressed,\n    }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseMousePressed v-slot=\"{ pressed }\">\n  Is Pressed: {{ pressed }}\n</UseMousePressed>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\n丶远方\nJonas Schade\nRAX7\nByMykel\nvaakian X\nMinatoHikari\nMarshall Thompson\nShinigami\nAlex Kozack\nChangelog\n​\nv10.5.0 on 10/7/2023\nd5c81 - feat: add capture option (#3392)\nv10.1.0 on 4/22/2023\n4bb5b - feat(useMouse): support custom event extractor (#2991)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useNetwork | VueUse",
    "url": "https://vueuse.org/core/useNetwork/",
    "html": "useNetwork\n​\nCategory\nSensors\nExport Size\n814 B\nLast Changed\nlast year\n\nReactive Network status. The Network Information API provides information about the system's connection in terms of general connection type (e.g., 'wifi', 'cellular', etc.). This can be used to select high definition content or low definition content based on the user's connection. The entire API consists of the addition of the NetworkInformation interface and a single property to the Navigator interface: Navigator.connection.\n\nDemo\n​\n\nsource\n\nisSupported: true\nisOnline: true\nsaveData: false\nonlineAt: 1701206216470\ndownlink: 10\neffectiveType: '4g'\nrtt: 0\n\nUsage\n​\njs\nimport { useNetwork } from '@vueuse/core'\n\nconst { isOnline, offlineAt, downlink, downlinkMax, effectiveType, saveData, type } = useNetwork()\n\nconsole.log(isOnline.value)\n\nTo use as an object, wrap it with reactive()\n\njs\nimport { reactive } from 'vue'\n\nconst network = reactive(useNetwork())\n\nconsole.log(network.isOnline)\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseNetwork v-slot=\"{ isOnline, type }\">\n  Is Online: {{ isOnline }}\n  Type: {{ type }}\n</UseNetwork>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\n丶远方\nvaakian X\nKirk Lin\nLexpeartha\nwebfansplz\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useMouse | VueUse",
    "url": "https://vueuse.org/core/useMouse/",
    "html": "useMouse\n​\nCategory\nSensors\nExport Size\n825 B\nLast Changed\n2 months ago\n\nReactive mouse position\n\nDemo\n​\n\nsource\n\nBasic Usage\n\nx: 0\ny: 0\nsourceType: null\n\n\nExtractor Usage\n\nx: 0\ny: 0\nsourceType: null\n\nBasic Usage\n​\njs\nimport { useMouse } from '@vueuse/core'\n\nconst { x, y, sourceType } = useMouse()\n\nTouch is enabled by default. To only detect mouse changes, set touch to false. The dragover event is used to track mouse position while dragging.\n\njs\nconst { x, y } = useMouse({ touch: false })\nCustom Extractor\n​\n\nIt's also possible to provide a custom extractor function to get the position from the event.\n\nTypeScript\nts\nimport type { UseMouseEventExtractor } from '@vueuse/core'\nimport { useMouse, useParentElement } from '@vueuse/core'\nconst parentEl = useParentElement()\nconst extractor: UseMouseEventExtractor = (event) =>\n  event instanceof Touch ? null : [event.offsetX, event.offsetY]\nconst { x, y, sourceType } = useMouse({ target: parentEl, type: extractor })\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseMouse v-slot=\"{ x, y }\">\n  x: {{ x }}\n  y: {{ y }}\n</UseMouse>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nkarukenert\nCats Juice\n丶远方\nRAX7\nFrançois Lévesque\nvaakian X\nSergey Danilchenko\nlzdFeiFei\nScott Bedard\nMarshall Thompson\nShinigami\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv10.4.0 on 8/25/2023\nc2f64 - fix: position won't be changed on page scroll when type is page, closes #2922 (#3244)\nv10.1.0 on 4/22/2023\n4bb5b - feat: support custom event extractor (#2991)\nv10.0.0-beta.4 on 4/13/2023\n39d18 - feat: support type: screen (#2467)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.10.0 on 1/3/2023\n0c39d - feat: support for movement detection (#2589)\nv8.9.3 on 7/14/2022\n4d2c8 - fix!: rename type MouseOptions to UseMouseOptions (#1877)"
  },
  {
    "title": "useKeyModifier | VueUse",
    "url": "https://vueuse.org/core/useKeyModifier/",
    "html": "useKeyModifier\n​\nCategory\nSensors\nExport Size\n587 B\nLast Changed\nlast year\n\nReactive Modifier State. Tracks state of any of the supported modifiers - see Browser Compatibility notes.\n\nLearn useKeyModifier with this FREE video lesson from Vue School!\nDemo\n​\n\nsource\n\ncapsLock\nnumLock\nscrollLock\nshift\ncontrol\nalt\nUsage\n​\nts\nimport { useKeyModifier } from '@vueuse/core'\n\nconst capsLockState = useKeyModifier('CapsLock')\n\nconsole.log(capsLockState.value)\nEvents\n​\n\nYou can customize which events will prompt the state to update. By default, these are mouseup, mousedown, keyup, keydown. To customize these events:\n\nts\nimport { useKeyModifier } from '@vueuse/core'\n\nconst capsLockState = useKeyModifier('CapsLock', { events: ['mouseup', 'mousedown'] })\n\nconsole.log(capsLockState) // null\n\n// Caps Lock turned on with key press\nconsole.log(capsLockState) // null\n\n// Mouse button clicked\nconsole.log(capsLockState) // true\nInitial State\n​\n\nBy default, the returned ref will be Ref<null> until the first event is received. You can explicitly pass the initial state to it via:\n\nts\nconst capsLockState1 = useKeyModifier('CapsLock') // Ref<boolean | null>\nconst capsLockState2 = useKeyModifier('CapsLock', { initial: false }) // Ref<boolean>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nJoe Maylor\nChangelog\n​\nv8.9.3 on 7/14/2022\n584a0 - fix!: rename type ModifierOptions to UseModifierOptions (#1871)"
  },
  {
    "title": "useMagicKeys | VueUse",
    "url": "https://vueuse.org/core/useMagicKeys/",
    "html": "useMagicKeys\n​\nCategory\nSensors\nExport Size\n1.02 kB\nLast Changed\n2 months ago\n\nReactive keys pressed state, with magical keys combination support.\n\nThis function uses Proxy\n\nIt is NOT supported by IE 11 or below.\n\nDemo\n​\n\nsource\n\nPress the following keys to test out\nV\nu\ne\nU\ns\ne\nShift\nVue\nUse\nKeys Pressed\nUsage\n​\njs\nimport { useMagicKeys } from '@vueuse/core'\n\nconst { shift, space, a /* keys you want to monitor */ } = useMagicKeys()\n\nwatch(space, (v) => {\n  if (v)\n    console.log('space has been pressed')\n})\n\nwatchEffect(() => {\n  if (shift.value && a.value)\n    console.log('Shift + A have been pressed')\n})\n\nCheck out all the possible keycodes.\n\nCombinations\n​\n\nYou can magically use combinations (shortcuts/hotkeys) by connecting keys with + or _.\n\nts\nimport { useMagicKeys } from '@vueuse/core'\n\nconst keys = useMagicKeys()\nconst shiftCtrlA = keys['Shift+Ctrl+A']\n\nwatch(shiftCtrlA, (v) => {\n  if (v)\n    console.log('Shift + Ctrl + A have been pressed')\n})\nts\nimport { useMagicKeys } from '@vueuse/core'\n\nconst { Ctrl_A_B, space, alt_s /* ... */ } = useMagicKeys()\n\nwatch(Ctrl_A_B, (v) => {\n  if (v)\n    console.log('Control+A+B have been pressed')\n})\n\nYou can also use whenever function to make it shorter\n\nts\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst keys = useMagicKeys()\n\nwhenever(keys.shift_space, () => {\n  console.log('Shift+Space have been pressed')\n})\nCurrent Pressed keys\n​\n\nA special property current is provided to representing all the keys been pressed currently.\n\nts\nimport { useMagicKeys } from '@vueuse/core'\n\nconst { current } = useMagicKeys()\n\nconsole.log(current) // Set { 'control', 'a' }\n\nwhenever(\n  () => current.has('a') && !current.has('b'),\n  () => console.log('A is pressed but not B'),\n)\nKey Aliasing\n​\nts\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst { shift_cool } = useMagicKeys({\n  aliasMap: {\n    cool: 'space',\n  },\n})\n\nwhenever(shift_cool, () => console.log('Shift + Space have been pressed'))\n\nBy default, we have some preconfigured alias for common practices.\n\nConditionally Disable\n​\n\nYou might have some <input /> elements in your apps, and you don't want to trigger the magic keys handling when users focused on those inputs. There is an example of using useActiveElement and logicAnd to do that.\n\nts\nimport { useActiveElement, useMagicKeys, whenever } from '@vueuse/core'\nimport { logicAnd } from '@vueuse/math'\n\nconst activeElement = useActiveElement()\nconst notUsingInput = computed(() =>\n  activeElement.value?.tagName !== 'INPUT'\n  && activeElement.value?.tagName !== 'TEXTAREA',)\n\nconst { tab } = useMagicKeys()\n\nwhenever(logicAnd(tab, notUsingInput), () => {\n  console.log('Tab has been pressed outside of inputs!')\n})\nCustom Event Handler\n​\nts\nimport { useMagicKeys, whenever } from '@vueuse/core'\n\nconst { ctrl_s } = useMagicKeys({\n  passive: false,\n  onEventFired(e) {\n    if (e.ctrlKey && e.key === 's' && e.type === 'keydown')\n      e.preventDefault()\n  },\n})\n\nwhenever(ctrl_s, () => console.log('Ctrl+S have been pressed'))\n\n⚠️ This usage is NOT recommended, please use with caution.\n\nReactive Mode\n​\n\nBy default, the values of useMagicKeys() are Ref<boolean>. If you want to use the object in the template, you can set it to reactive mode.\n\nts\nconst keys = useMagicKeys({ reactive: true })\nhtml\n<template>\n  <div v-if=\"keys.shift\">\n    You are holding the Shift key!\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nThiago Silveira\n丶远方\nHartmut\nJelf\nmatrixbirds\nlavolpecheprogramma\nKasper Seweryn\nThomas Gerbet\nzzw\nwebfansplz\nCiro Lo Sapio\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.7.0 on 12/16/2022\n21d24 - fix: also clear 'current' on @focus|@blur (#2515)\nv8.9.3 on 7/14/2022\n6cefd - fix!: rename type MagicKeys to UseMagicKeysReturn (#1873)\nv8.9.2 on 7/12/2022\n9a718 - fix: fix setting properties of undefined value (#1856)\nv8.9.1 on 7/8/2022\n3c85d - fix: only clean up used keys, close #1793\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.9.0 on 7/6/2022\n82510 - fix: reset refs on target blur (#1755)\n5e76f - fix!: store key instead of keyCode in current (#1506)\nv8.7.0 on 6/16/2022\nd79e0 - fix: getModifierState is not function error in Chrome (#1654)"
  },
  {
    "title": "useInfiniteScroll | VueUse",
    "url": "https://vueuse.org/core/useInfiniteScroll/",
    "html": "useInfiniteScroll\n​\nCategory\nSensors\nExport Size\n1.98 kB\nLast Changed\n3 months ago\n\nInfinite scrolling of the element.\n\nDemo\n​\n\nsource\n\n1\n2\n3\n4\n5\n6\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useInfiniteScroll } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\nconst data = ref([1, 2, 3, 4, 5, 6])\n\nuseInfiniteScroll(\n  el,\n  () => {\n    // load more\n    data.value.push(...moreData)\n  },\n  { distance: 10 }\n)\n</script>\n\n<template>\n  <div ref=\"el\">\n    <div v-for=\"item in data\">\n      {{ item }}\n    </div>\n  </div>\n</template>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vInfiniteScroll } from '@vueuse/components'\n\nconst data = ref([1, 2, 3, 4, 5, 6])\n\nfunction onLoadMore() {\n  const length = data.value.length + 1\n  data.value.push(...Array.from({ length: 5 }, (_, i) => length + i))\n}\n</script>\n\n<template>\n  <div v-infinite-scroll=\"onLoadMore\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n\n  <!-- with options -->\n  <div v-infinite-scroll=\"[onLoadMore, { 'distance' : 10 }]\">\n    <div v-for=\"item in data\" :key=\"item\">\n      {{ item }}\n    </div>\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nToni Engelhardt\nerikwu\nwonderl17\nScott Bedard\nSarwan Nizamani\nHawtim\nsand4rt\nEnzo Innocenzi\nwheat\nMelih Altıntaş\nChangelog\n​\nv10.3.0 on 7/30/2023\n5ce61 - fix: improve visibility check (#3212)\nv10.2.1 on 6/28/2023\na4dfa - fix: prevent infinite load when v-show set false (#3143)\nv10.1.1 on 5/2/2023\na88fe - fix: re-measure arrived states when async infinite scroll resolves (#3030)\nv10.0.0-beta.5 on 4/13/2023\nd3a2b - fix!: improve loading strategies, close #1701, close #1685\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.4 on 7/17/2022\n6c8fb - fix: add direction types (#1929)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.6.0 on 5/31/2022\n5a1b9 - feat: new options (#1354)"
  },
  {
    "title": "useFocus | VueUse",
    "url": "https://vueuse.org/core/useFocus/",
    "html": "useFocus\n​\nCategory\nSensors\nExport Size\n605 B\nLast Changed\n4 months ago\n\nReactive utility to track or set the focus state of a DOM element. State changes to reflect whether the target element is the focused element. Setting reactive value from the outside will trigger focus and blur events for true and false values respectively.\n\nDemo\n​\n\nsource\n\nParagraph that can be focused\n\nButton that can be focused\nThe input control has focus\nFocus textFocus inputFocus button\nBasic Usage\n​\nts\nimport { useFocus } from '@vueuse/core'\n\nconst target = ref()\nconst { focused } = useFocus(target)\n\nwatch(focused, (focused) => {\n  if (focused)\n    console.log('input element has been focused')\n  else console.log('input element has lost focus')\n})\nSetting initial focus\n​\n\nTo focus the element on its first render one can provide the initialValue option as true. This will trigger a focus event on the target element.\n\nts\nimport { useFocus } from '@vueuse/core'\n\nconst target = ref()\nconst { focused } = useFocus(target, { initialValue: true })\nChange focus state\n​\n\nChanges of the focused reactive ref will automatically trigger focus and blur events for true and false values respectively. You can utilize this behavior to focus the target element as a result of another action (e.g. when a button click as shown below).\n\nhtml\n<template>\n  <div>\n    <button type=\"button\" @click=\"focused = true\">Click me to focus input below</button>\n    <input ref=\"input\" type=\"text\">\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useFocus } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const input = ref()\n    const { focused } = useFocus(input)\n\n    return {\n      input,\n      focused,\n    }\n  }\n}\n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nWilliam T. Kirby\nMax\nWaleed Khaled\nJelf\nByMykel\nLevi Bucsis\nwebfansplz\nJakub Freisler\nChangelog\n​\nv10.3.0 on 7/30/2023\n80329 - feat: support :focus-visible (#3254)\nv9.13.0 on 2/18/2023\n7cd88 - fix: listen focus and blur to the targetElement (#2631)"
  },
  {
    "title": "useIdle | VueUse",
    "url": "https://vueuse.org/core/useIdle/",
    "html": "useIdle\n​\nCategory\nSensors\nExport Size\n977 B\nLast Changed\n8 months ago\n\nTracks whether the user is being inactive.\n\nDemo\n​\n\nsource\n\nFor demonstration purpose, the idle timeout is set to 5s in this demo (default 1min).\nIdle: false\nInactive: 0s\nUsage\n​\njs\nimport { useIdle } from '@vueuse/core'\n\nconst { idle, lastActive } = useIdle(5 * 60 * 1000) // 5 min\n\nconsole.log(idle.value) // true or false\n\nProgramatically resetting:\n\njs\nimport { watch } from 'vue'\nimport { useCounter, useIdle } from '@vueuse/core'\n\nconst { inc, count } = useCounter()\n\nconst { idle, lastActive, reset } = useIdle(5 * 60 * 1000) // 5 min\n\nwatch(idle, (idleValue) => {\n  if (idleValue) {\n    inc()\n    console.log(`Triggered ${count.value} times`)\n    reset() // restarts the idle timer. Does not change lastActive value\n  }\n})\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseIdle v-slot=\"{ idle }\" :timeout=\"5 * 60 * 1000\">\n  Is Idle: {{ idle }}\n</UseIdle>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nIntaek H\nnahvego\nHawtim\nvaakian X\nJelf\nDan Mindru\nbtea\nShinigami\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv10.0.0-beta.1 on 3/23/2023\nf4d35 - feat: add reset capability (#2880)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.3 on 7/14/2022\n4ff55 - fix!: rename type IdleOptions to UseIdleOptions (#1869)"
  },
  {
    "title": "useGeolocation | VueUse",
    "url": "https://vueuse.org/core/useGeolocation/",
    "html": "useGeolocation\n​\nCategory\nSensors\nExport Size\n526 B\nLast Changed\n4 months ago\n\nReactive Geolocation API. It allows the user to provide their location to web applications if they so desire. For privacy reasons, the user is asked for permission to report location information.\n\nDemo\n​\n\nsource\n\n{\n  \"coords\": {\n    \"accuracy\": 0,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"altitude\": null,\n    \"altitudeAccuracy\": null,\n    \"heading\": null,\n    \"speed\": null\n  },\n  \"locatedAt\": null,\n  \"error\": \"User denied Geolocation\"\n}\nPause watchStart watch\nUsage\n​\njs\nimport { useGeolocation } from '@vueuse/core'\n\nconst { coords, locatedAt, error, resume, pause } = useGeolocation()\nState\tType\tDescription\ncoords\tCoordinates\tinformation about the position retrieved like the latitude and longitude\nlocatedAt\tDate\tThe time of the last geolocation call\nerror\tstring\tAn error message in case geolocation API fails.\nresume\tfunction\tControl function to resume updating geolocation\npause\tfunction\tControl function to pause updating geolocation\nConfig\n​\n\nuseGeolocation function takes PositionOptions object as an optional parameter.\n\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseGeolocation v-slot=\"{ coords: { latitude, longitude } }\">\n  Latitude: {{ latitude }}\n  Longitude: {{ longitude }}\n</UseGeolocation>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nJelf\n丶远方\nvaakian X\nEnric Bisbe Gil\nEgor Startsev\nMichael J. Roberts\nShinigami\nwheat\nAlex Kozack\nSanxiaozhizi\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.7.0 on 12/16/2022\n161fd - fix: Implement immediate option (#2472)\nv9.5.0 on 11/9/2022\n2c4fd - feat: pause and resume controls (#2376)\nv8.9.3 on 7/14/2022\n48f79 - fix!: rename type GeolocationOptions to UseGeolocationOptions (#1868)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useFps | VueUse",
    "url": "https://vueuse.org/core/useFps/",
    "html": "useFps\n​\nCategory\nSensors\nExport Size\n458 B\nLast Changed\n2 years ago\n\nReactive FPS (frames per second).\n\nDemo\n​\n\nsource\n\nFPS: 37\nUsage\n​\njs\nimport { useFps } from '@vueuse/core'\n\nconst fps = useFps()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\njelf\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useFocusWithin | VueUse",
    "url": "https://vueuse.org/core/useFocusWithin/",
    "html": "useFocusWithin\n​\nCategory\nSensors\nExport Size\n769 B\nLast Changed\n8 months ago\n\nReactive utility to track if an element or one of its decendants has focus. It is meant to match the behavior of the :focus-within CSS pseudo-class. A common use case would be on a form element to see if any of its inputs currently have focus.\n\nDemo\n​\n\nsource\n\nFocus in form: false\nBasic Usage\n​\nhtml\n<template>\n  <form ref=\"target\">\n    <input type=\"text\" placeholder=\"First Name\">\n    <input type=\"text\" placeholder=\"Last Name\">\n    <input type=\"text\" placeholder=\"Email\">\n    <input type=\"text\" placeholder=\"Password\">\n  </form>\n</template>\n\n<script>\nimport { useFocusWithin } from '@vueuse/core'\n\nconst target = ref();\nconst { focused } = useFocusWithin(target)\n\nwatch(focused, focused => {\n  if (focused) console.log('Target contains the focused element')\n  else console.log('Target does NOT contain the focused element')\n})\n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nMikhailov Nikita\nBoris Moiseev\nJelf\nWilliam T. Kirby\nChangelog\n​\nv10.0.0-beta.3 on 4/13/2023\ne75a5 - feat: update deps\nv9.2.0 on 9/5/2022\n3316e - fix: change focused typing to ComputedRef (#2073)\nv8.9.3 on 7/14/2022\n1b871 - fix!: rename type FocusWithinReturn to UseFocusWithinReturn (#1866)"
  },
  {
    "title": "useElementHover | VueUse",
    "url": "https://vueuse.org/core/useElementHover/",
    "html": "useElementHover\n​\nCategory\nSensors\nExport Size\n598 B\nLast Changed\n8 months ago\n\nReactive element's hover state.\n\nDemo\n​\n\nsource\n\nHover me\nUsage\n​\nvue\n<script setup>\nimport { useElementHover } from '@vueuse/core'\n\nconst myHoverableElement = ref()\nconst isHovered = useElementHover(myHoverableElement)\n</script>\n\n<template>\n  <button ref=\"myHoverableElement\">\n    {{ isHovered }}\n  </button>\n</template>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vElementHover } from '@vueuse/components'\n\nconst isHovered = ref(false)\nfunction onHover(state: boolean) {\n  isHovered.value = state\n}\n</script>\n\n<template>\n  <button v-element-hover=\"onHover\">\n    {{ isHovered ? 'Thank you!' : 'Hover me' }}\n  </button>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nJelf\ngeekreal\ncx33\nJoe Maylor\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv10.0.0-beta.0 on 3/14/2023\nc86f2 - fix: window is not defined (#2793)\nv9.13.0 on 2/18/2023\n23283 - feat: give hook delay properties (#2741)\nv9.1.1 on 8/23/2022\nd9c0c - fix: support set el ref type (#2079)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useElementByPoint | VueUse",
    "url": "https://vueuse.org/core/useElementByPoint/",
    "html": "useElementByPoint\n​\nCategory\nSensors\nExport Size\n953 B\nLast Changed\n3 weeks ago\n\nReactive element by point.\n\nDemo\n​\n\nsource\n\nX\nY\nUsage\n​\nts\nimport { useElementByPoint, useMouse } from '@vueuse/core'\n\nconst { x, y } = useMouse({ type: 'client' })\nconst { element } = useElementByPoint({ x, y })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nwheat\nvaakian X\nBaboonKing\nChangelog\n​\nv10.2.0 on 6/16/2023\n31b66 - feat: new multiple and interval options (#3089)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.11.0 on 1/17/2023\nc3639 - fix: make document configurable (#2614)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useDisplayMedia | VueUse",
    "url": "https://vueuse.org/core/useDisplayMedia/",
    "html": "useDisplayMedia\n​\nCategory\nSensors\nExport Size\n476 B\nLast Changed\n2 months ago\nRelated\nuseUserMedia\n\nReactive mediaDevices.getDisplayMedia streaming.\n\nDemo\n​\n\nsource\n\nStart sharing my screen\nUsage\n​\nts\nimport { useDisplayMedia } from '@vueuse/core'\n\nconst { stream, start } = useDisplayMedia()\n\n// start streaming\n\nstart()\nts\nconst video = document.getElementById('video')\n\nwatchEffect(() => {\n  // preview on a video element\n  video.srcObject = stream.value\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nwheat\nAbderrahim SOUBAI-ELIDRISI\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useDevicesList | VueUse",
    "url": "https://vueuse.org/core/useDevicesList/",
    "html": "useDevicesList\n​\nCategory\nSensors\nExport Size\n1.09 kB\nLast Changed\n8 months ago\nRelated\nuseUserMedia\n\nReactive enumerateDevices listing available input/output devices.\n\nDemo\n​\n\nsource\n\nCAMERA (0)\nMICROPHONES (0)\nSPEAKERS (0)\nUsage\n​\njs\nimport { useDevicesList } from '@vueuse/core'\n\nconst {\n  devices,\n  videoInputs: cameras,\n  audioInputs: microphones,\n  audioOutputs: speakers,\n} = useDevicesList()\nComponent\n​\nhtml\n<UseDevicesList v-slot=\"{ videoInputs, audioInputs, audioOutputs }\">\n  Cameras: {{ videoInputs }}\n  Microphones: {{ audioInputs }}\n  Speakers: {{ audioOutputs }}\n</UseDevicesList>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nFélix Zapata\nvaakian X\nvaakian X\nJelf\nAndras Serfozo\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.2 on 3/28/2023\n0823d - fix: show devices for Firefox (#2798)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useDevicePixelRatio | VueUse",
    "url": "https://vueuse.org/core/usedevicepixelratio/",
    "html": "useDevicePixelRatio\n​\nCategory\nSensors\nExport Size\n294 B\nLast Changed\n2 months ago\n\nReactively track window.devicePixelRatio\n\nNOTE: there is no event listener for window.devicePixelRatio change. So this function uses Testing media queries programmatically (window.matchMedia) applying the same mechanism as described in this example.\n\nDemo\n​\n\nsource\n\nDevice Pixel Ratio:\npixelRatio: 1\n\nZoom in and out (or move the window to a screen with a different scaling factor) to see the value changes\nUsage\n​\njs\nimport { useDevicePixelRatio } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const { pixelRatio } = useDevicePixelRatio()\n\n    return { pixelRatio }\n  },\n}\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDevicePixelRatio v-slot=\"{ pixelRatio }\">\n  Pixel Ratio: {{ pixelRatio }}\n</UseDevicePixelRatio>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nWaleed Khaled\nwheat\nvaakian X\nShinigami\nAlex Kozack\nKonstantin Barabanov\nChangelog\n​\nv9.13.0 on 2/18/2023\n83feb - fix: remove unnecessary cleanup (#2325)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.2.0 on 9/5/2022\neb054 - fix: more efficient mechanism (#2044)"
  },
  {
    "title": "useDeviceOrientation | VueUse",
    "url": "https://vueuse.org/core/useDeviceOrientation/",
    "html": "useDeviceOrientation\n​\nCategory\nSensors\nExport Size\n672 B\nLast Changed\nlast year\n\nReactive DeviceOrientationEvent. Provide web developers with information from the physical orientation of the device running the web page.\n\nDemo\n​\n\nsource\n\nisSupported: true\nisAbsolute: false\nalpha: null\nbeta: null\ngamma: null\n\nUsage\n​\njs\nimport { useDeviceOrientation } from '@vueuse/core'\n\nconst {\n  isAbsolute,\n  alpha,\n  beta,\n  gamma,\n} = useDeviceOrientation()\nState\tType\tDescription\nisAbsolute\tboolean\tA boolean that indicates whether or not the device is providing orientation data absolutely.\nalpha\tnumber\tA number representing the motion of the device around the z axis, express in degrees with values ranging from 0 to 360.\nbeta\tnumber\tA number representing the motion of the device around the x axis, express in degrees with values ranging from -180 to 180.\ngamma\tnumber\tA number representing the motion of the device around the y axis, express in degrees with values ranging from -90 to 90.\n\nYou can find more information about the state on the MDN.\n\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDeviceOrientation v-slot=\"{ alpha, beta, gamma }\">\n  Alpha: {{ alpha }}\n  Beta: {{ beta }}\n  Gamma: {{ gamma }}\n</UseDeviceOrientation>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nvaakian X\nJelf\nShinigami\nwheat\nAlex Kozack\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useDeviceMotion | VueUse",
    "url": "https://vueuse.org/core/useDeviceMotion/",
    "html": "useDeviceMotion\n​\nCategory\nSensors\nExport Size\n703 B\nLast Changed\n2 years ago\n\nReactive DeviceMotionEvent. Provide web developers with information about the speed of changes for the device's position and orientation.\n\nDemo\n​\n\nsource\n\nDevice Motion:\n{\n  \"acceleration\": {},\n  \"accelerationIncludingGravity\": {},\n  \"rotationRate\": {},\n  \"interval\": 16\n}\nUsage\n​\njs\nimport { useDeviceMotion } from '@vueuse/core'\n\nconst {\n  acceleration,\n  accelerationIncludingGravity,\n  rotationRate,\n  interval,\n} = useDeviceMotion()\nState\tType\tDescription\nacceleration\tobject\tAn object giving the acceleration of the device on the three axis X, Y and Z.\naccelerationIncludingGravity\tobject\tAn object giving the acceleration of the device on the three axis X, Y and Z with the effect of gravity.\nrotationRate\tobject\tAn object giving the rate of change of the device's orientation on the three orientation axis alpha, beta and gamma.\ninterval\tNumber\tA number representing the interval of time, in milliseconds, at which data is obtained from the device..\n\nYou can find more information about the state on the MDN.\n\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDeviceMotion v-slot=\"{ acceleration }\">\n  Acceleration: {{ acceleration }}\n</UseDeviceMotion>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nvaakian X\nShinigami\nwheat\nAlex Kozack\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "onStartTyping | VueUse",
    "url": "https://vueuse.org/core/onstarttyping/",
    "html": "onStartTyping\n​\nCategory\nSensors\nExport Size\n704 B\nLast Changed\n8 months ago\n\nFires when users start typing on non-editable elements.\n\nDemo\n​\n\nsource\n\nType anything\nUsage\n​\nhtml\n<input ref=\"input\" type=\"text\" placeholder=\"Start typing to focus\" />\nts\nimport { onStartTyping } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const input = ref(null)\n\n    onStartTyping(() => {\n      if (!input.value.active)\n        input.value.focus()\n    })\n\n    return {\n      input,\n    }\n  },\n}\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nmeenie-net\n丶远方\nAlex Kozack\nNurettin Kaya\nAntério Vieira\nSeifeldin Mahjoub\nChangelog\n​\nv10.0.0-beta.3 on 4/13/2023\ne9ab3 - fix: fix char ascii (#2932)"
  },
  {
    "title": "useBattery | VueUse",
    "url": "https://vueuse.org/core/useBattery/",
    "html": "useBattery\n​\nCategory\nSensors\nExport Size\n743 B\nLast Changed\n2 months ago\n\nReactive Battery Status API, more often referred to as the Battery API, provides information about the system's battery charge level and lets you be notified by events that are sent when the battery level or charging status change. This can be used to adjust your app's resource usage to reduce battery drain when the battery is low, or to save changes before the battery runs out in order to prevent data loss.\n\nDemo\n​\n\nsource\n\nisSupported: true\ncharging: true\nchargingTime: 3000\ndischargingTime: 0\nlevel: 0.84\n\nUsage\n​\njs\nimport { useBattery } from '@vueuse/core'\n\nconst { charging, chargingTime, dischargingTime, level } = useBattery()\nState\tType\tDescription\ncharging\tBoolean\tIf the device is currently charging.\nchargingTime\tNumber\tThe number of seconds until the device becomes fully charged.\ndischargingTime\tNumber\tThe number of seconds before the device becomes fully discharged.\nlevel\tNumber\tA number between 0 and 1 representing the current charge level.\nUse-cases\n​\n\nOur applications normally are not empathetic to battery level, we can make a few adjustments to our applications that will be more friendly to low battery users.\n\nTrigger a special \"dark-mode\" battery saver theme settings.\nStop auto playing videos in news feeds.\nDisable some background workers that are not critical.\nLimit network calls and reduce CPU/Memory consumption.\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseBattery v-slot=\"{ charging }\">\n  Is Charging: {{ charging }}\n</UseBattery>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nvaakian X\nJelf\nPiet Althoff\nShinigami\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "onLongPress | VueUse",
    "url": "https://vueuse.org/core/onLongPress/",
    "html": "onLongPress\n​\nCategory\nSensors\nExport Size\n675 B\nLast Changed\n3 weeks ago\n\nListen for a long press on an element.\n\nFunction provides modifiers in options\n\nstop\nonce\nprevent\ncapture\nself\nDemo\n​\n\nsource\n\nLong Pressed: false\n\nPress long (500ms)Press long (1000ms)Reset\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { onLongPress } from '@vueuse/core'\n\nconst htmlRefHook = ref<HTMLElement | null>(null)\nconst longPressedHook = ref(false)\n\nconst onLongPressCallbackHook = (e: PointerEvent) => {\n  longPressedHook.value = true\n}\nconst resetHook = () => {\n  longPressedHook.value = false\n}\n\nonLongPress(\n  htmlRefHook,\n  onLongPressCallbackHook,\n  { modifiers: { prevent: true } }\n)\n</script>\n\n<template>\n  <p>Long Pressed: {{ longPressedHook }}</p>\n\n  <button ref=\"htmlRefHook\" class=\"ml-2 button small\">\n    Press long\n  </button>\n\n  <button class=\"ml-2 button small\" @click=\"resetHook\">\n    Reset\n  </button>\n</template>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { OnLongPress } from '@vueuse/components'\n\nconst longPressedComponent = ref(false)\n\nconst onLongPressCallbackComponent = (e: PointerEvent) => {\n  longPressedComponent.value = true\n}\nconst resetComponent = () => {\n  longPressedComponent.value = false\n}\n</script>\n\n<template>\n  <p>Long Pressed: {{ longPressedComponent }}</p>\n\n  <OnLongPress\n    as=\"button\"\n    class=\"ml-2 button small\"\n    @trigger=\"onLongPressCallbackComponent\"\n  >\n    Press long\n  </OnLongPress>\n\n  <button class=\"ml-2 button small\" @click=\"resetComponent\">\n    Reset\n  </button>\n</template>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vOnLongPress } from '@vueuse/components'\n\nconst longPressedDirective = ref(false)\n\nconst onLongPressCallbackDirective = (e: PointerEvent) => {\n  longPressedDirective.value = true\n}\nconst resetDirective = () => {\n  longPressedDirective.value = false\n}\n</script>\n\n<template>\n  <p>Long Pressed: {{ longPressedDirective }}</p>\n\n  <button v-on-long-press.prevent=\"onLongPressCallbackDirective\" class=\"ml-2 button small\">\n    Press long\n  </button>\n\n  <button\n    v-on-long-press=\"[onLongPressCallbackDirective, {delay: 1000, modifiers: { stop: true }}]\"\n    class=\"ml-2button small\"\n  >\n    Press long (with options)\n  </button>\n\n  <button class=\"ml-2 button small\" @click=\"resetDirective\">\n    Reset\n  </button>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nLee Crosby\n丶远方\nvaakian X\nsun0day\nYugang Cao\nMikhailov Nikita\n三咲智子\nwheat\nAllenYu\n余小磊\nChangelog\n​\nv10.6.0 on 11/9/2023\n8eb0b - feat(onLongClick): return stop function (#3506)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.8.0 on 7/6/2022\nf0472 - feat: added modifiers (#1719)"
  },
  {
    "title": "onKeyStroke | VueUse",
    "url": "https://vueuse.org/core/onKeyStroke/",
    "html": "onKeyStroke\n​\nCategory\nSensors\nExport Size\n651 B\nLast Changed\n3 weeks ago\n\nListen for keyboard keystrokes.\n\nDemo\n​\n\nsource\n\nUse the arrow keys or w a s d keys to control the movement of the ball.\n\nRepeated events are ignored on the key `d` or `->`.\n\nUsage\n​\njs\nimport { onKeyStroke } from '@vueuse/core'\n\nonKeyStroke('ArrowDown', (e) => {\n  e.preventDefault()\n})\n\nSee this table for all key codes.\n\nListen To Multiple Keys\n​\njs\nimport { onKeyStroke } from '@vueuse/core'\n\nonKeyStroke(['s', 'S', 'ArrowDown'], (e) => {\n  e.preventDefault()\n})\n\n// listen to all keys by [true / skip the keyDefine]\nonKeyStroke(true, (e) => {\n  e.preventDefault()\n})\nonKeyStroke((e) => {\n  e.preventDefault()\n})\nCustom Event Target\n​\njs\nonKeyStroke('A', (e) => {\n  console.log('Key A pressed on document')\n}, { target: document })\nIgnore Repeated Events\n​\n\nThe callback will trigger only once when pressing A and hold down.\n\njs\nimport { onKeyStroke } from '@vueuse/core'\n\n// use `autoRepeat` option\nonKeyStroke('A', (e) => {\n  console.log('Key A pressed')\n}, { dedupe: true })\n\nReference: KeyboardEvent.repeat\n\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { vOnKeyStroke } from '@vueuse/components'\nfunction onUpdate(e: KeyboardEvent) {\n  // impl...\n}\n</script>\n\n<template>\n  <input v-on-key-stroke:c,v=\"onUpdate\" type=\"text\">\n  <!-- with options -->\n  <input v-on-key-stroke:c,v=\"[onUpdate, { eventName: 'keyup' }]\" type=\"text\">\n</template>\nCustom Keyboard Event\n​\njs\nonKeyStroke('Shift', (e) => {\n  console.log('Shift key up')\n}, { eventName: 'keyup' })\n\nOr\n\njs\nonKeyUp('Shift', () => console.log('Shift key up'))\nShorthands\n​\nonKeyDown - alias for onKeyStroke(key, handler, {eventName: 'keydown'})\nonKeyPressed - alias for onKeyStroke(key, handler, {eventName: 'keypress'})\nonKeyUp - alias for onKeyStroke(key, handler, {eventName: 'keyup'})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nAnonimus Programus\nyn\nDavid Hewson\nlainbo\njack zhang\nvaakian X\nvaakian X\nazaleta\nCurt Grimes\nJelf\nleovoon\nArpit\nIvan Que\nAlex Kozack\nyang\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\n22ca5 - feat: support ignoring repeated stroke (#2652)\nv9.10.0 on 1/3/2023\n28614 - fix: make target ref nullable (#2579)\nv9.3.0 on 9/26/2022\n86c12 - feat: support capture all handler (#2197)\nv8.9.2 on 7/12/2022\n57ed5 - fix!: rename type KeyStrokeOptions to OnKeyStrokeOptions (#1807)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useWebWorker | VueUse",
    "url": "https://vueuse.org/core/useWebWorker/",
    "html": "useWebWorker\n​\nCategory\nBrowser\nExport Size\n322 B\nLast Changed\n6 months ago\nRelated\nuseWebWorkerFn\n\nSimple Web Workers registration and communication.\n\nUsage\n​\njs\nimport { useWebWorker } from '@vueuse/core'\n\nconst { data, post, terminate, worker } = useWebWorker('/path/to/worker.js')\nState\tType\tDescription\ndata\tRef<any>\tReference to the latest data received via the worker, can be watched to respond to incoming messages\nworker\tShallowRef<Worker | undefined>\tReference to the instance of the WebWorker\nMethod\tSignature\tDescription\npost\t(message: any, transfer: Transferable[]): void\n`(message: any, options?: StructuredSerializeOptions\tundefined): void`\nterminate\t() => void\tStops and terminates the worker.\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nYasser Lahbibi\nDarknessChaser\nYoung\nkarma\nShinigami\nMario Kolli\nShinigami\nwheat\nAlex Kozack\nuserquin\nChangelog\n​\nv10.2.0 on 6/16/2023\n5988f - fix: add web worker transferable option (#3123)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv9.4.0 on 10/25/2022\nc8849 - feat: support overloads (#2259)"
  },
  {
    "title": "useWebWorkerFn | VueUse",
    "url": "https://vueuse.org/core/useWebWorkerFn/",
    "html": "useWebWorkerFn\n​\nCategory\nBrowser\nExport Size\n749 B\nLast Changed\n2 months ago\nRelated\nuseWebWorker\n\nRun expensive functions without blocking the UI, using a simple syntax that makes use of Promise. A port of alewin/useWorker.\n\nDemo\n​\n\nsource\n\nCurrent Time: 2023-11-28 22:16:47 888\n\nThis is a demo showing sort for large array (5 million numbers) with or w/o WebWorker.\nClock stops when UI blocking happens.\nSort in Main ThreadSort in Worker\nUsage\n​\nBasic example\n​\njs\nimport { useWebWorkerFn } from '@vueuse/core'\n\nconst { workerFn } = useWebWorkerFn(() => {\n  // some heavy works to do in web worker\n})\nWith dependencies\n​\nts\nimport { useWebWorkerFn } from '@vueuse/core'\n\nconst { workerFn, workerStatus, workerTerminate } = useWebWorkerFn(\n  dates => dates.sort(dateFns.compareAsc),\n  {\n    timeout: 50000,\n    dependencies: [\n      'https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.30.1/date_fns.js', // dateFns\n    ],\n  },\n)\nWeb Worker\n​\n\nBefore you start using this function, we suggest you read the Web Worker documentation.\n\nCredit\n​\n\nThis function is a Vue port of https://github.com/alewin/useWorker by Alessio Koci, with the help of @Donskelle to migration.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nFabian\nwheat\nsibbng\nAntério Vieira\nLuvoy\nHawtim\n烽宁\nJelf\n不见月\nShinigami\nAlex Kozack\nRichard Musiol\nChangelog\n​\nv10.4.0 on 8/25/2023\n34206 - fix(useWebWorker): prevent error event bubbling (#3141)\nv8.9.3 on 7/14/2022\n52467 - fix!: rename type WebWorkerOptions to UseWebWorkerOptions (#1896)"
  },
  {
    "title": "useWebNotification | VueUse",
    "url": "https://vueuse.org/core/useWebNotification/",
    "html": "useWebNotification\n​\nCategory\nBrowser\nExport Size\n964 B\nLast Changed\n2 months ago\n\nReactive Notification\n\nThe Web Notification interface of the Notifications API is used to configure and display desktop notifications to the user.\n\nDemo\n​\n\nsource\n\nSupported: true\n\nShow Notification\nUsage\n​\nts\nconst {\n  isSupported,\n  notification,\n  show,\n  close,\n  onClick,\n  onShow,\n  onError,\n  onClose,\n} = useWebNotification({\n  title: 'Hello, VueUse world!',\n  dir: 'auto',\n  lang: 'en',\n  renotify: true,\n  tag: 'test',\n})\n\nif (isSupported.value)\n  show()\n\nThis composable also utilizes the createEventHook utility from '@vueuse/shared`:\n\nTypeScript\nts\nonClick((evt: Event) => {\n  // Do something with the notification on:click event...\n})\nonShow((evt: Event) => {\n  // Do something with the notification on:show event...\n})\nonError((evt: Event) => {\n  // Do something with the notification on:error event...\n})\nonClose((evt: Event) => {\n  // Do something with the notification on:close event...\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nSampson Crowley\nMichael J. Roberts\n丶远方\nWuLianN\ndonotloveshampo\nMichael J. Roberts\nChangelog\n​\nv10.5.0 on 10/7/2023\n2f2b4 - fix: condition check on permission (#3422)\nv10.4.0 on 8/25/2023\na1753 - feat: add requestPermissions option, return permissionGranted and ensurePermissions (#3325)\nv10.0.0-beta.0 on 3/14/2023\nbcd2a - fix!: should be exposed as EventHooksOn (#2821)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "onClickOutside | VueUse",
    "url": "https://vueuse.org/core/onClickOutside/",
    "html": "onClickOutside\n​\nCategory\nSensors\nExport Size\n893 B\nLast Changed\n3 weeks ago\n\nListen for clicks outside of an element. Useful for modal or dropdown.\n\nDemo\n​\n\nsource\n\nOpen ModalToggle Dropdown\nUsage\n​\nhtml\n<template>\n  <div ref=\"target\">\n    Hello world\n  </div>\n  <div>\n    Outside element\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = ref(null)\n\n    onClickOutside(target, (event) => console.log(event))\n\n    return { target }\n  }\n}\n</script>\n\nThis function uses Event.composedPath() which is NOT supported by IE 11, Edge 18 and below. If you are targeting these browsers, we recommend you to include this code snippet on your project.\n\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<OnClickOutside @trigger=\"count++\" :options=\"{ ignore: [/* ... */] }\">\n  <div>\n    Click Outside of Me\n  </div>\n</OnClickOutside>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vOnClickOutside } from '@vueuse/components'\n\nconst modal = ref(false)\nfunction closeModal() {\n  modal.value = false\n}\n\n</script>\n\n<template>\n  <button @click=\"modal = true\">\n    Open Modal\n  </button>\n  <div v-if=\"modal\" v-on-click-outside=\"closeModal\">\n    Hello World\n  </div>\n</template>\n\nYou can also set the handler as an array to set the configuration items of the instruction.\n\nhtml\n<script setup>\nimport { ref } from 'vue'\nimport { vOnClickOutside } from '@vueuse/components'\n\nconst modal = ref(false)\n\nconst ignoreElRef = ref()\n\nconst onClickOutsideHandler = [\n  (ev) => {\n    console.log(ev)\n    modal.value = false\n  },\n  { ignore: [ignoreElRef] }\n]\n\n</script>\n\n<template>\n  <button @click=\"modal = true\">\n    Open Modal\n  </button>\n\n  <div ref=\"ignoreElRef\">\n    click outside ignore element\n  </div>\n\n  <div v-if=\"modal\" v-on-click-outside=\"onClickOutsideHandler\">\n    Hello World\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsibbng\nwheat\nDoctorwu\nRory King\n糠帅傅\nChestnut\nvaakian X\nFiad\nYoung\nGavin\nwebfansplz\nJelf\nJserWang\nAlex Kozack\nChangelog\n​\nv10.6.0 on 11/9/2023\n69851 - fix: adjust shouldListen handling timing (#3503)\nv10.3.0 on 7/30/2023\n9091e - fix: fix outside click on html element in ios (#3252)\nv10.2.0 on 6/16/2023\n2c66e - fix: ensure focus on iframe captured in firefox (#3066)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.8.0 on 12/20/2022\n7b3db - feat: allow selector strings for ignore list (#2439)\n12e21 - fix: apply ignore list on keyboard clicks (#2438)\nv9.6.0 on 11/22/2022\nff96d - fix: call handler if click event is fired by a keypress (#2426)\nv9.5.0 on 11/9/2022\nf78c4 - fix: access correct document (#2404)\nc913b - feat: support options in component (#2391)\nv9.3.0 on 9/26/2022\n5a976 - feat: add bubble modifier to directive (#2183)\na3742 - fix: put ignore logic on pointerdown event (#2198)\nv9.0.0-beta.1 on 7/20/2022\n6b1ff - fix: fix handler type (#1961)\nv8.9.2 on 7/12/2022\n70160 - feat: add detectIframe option (#1795)\nv8.7.0 on 6/16/2022\n1988e - fix: avoid calling safari workaround on right click (#1673)"
  },
  {
    "title": "useWakeLock | VueUse",
    "url": "https://vueuse.org/core/useWakeLock/",
    "html": "useWakeLock\n​\nCategory\nBrowser\nExport Size\n727 B\nLast Changed\n8 months ago\n\nReactive Screen Wake Lock API. Provides a way to prevent devices from dimming or locking the screen when an application needs to keep running.\n\nDemo\n​\n\nsource\n\nIs Supported: true\nIs Active: false\nON\nUsage\n​\njs\nimport { useWakeLock } from '@vueuse/core'\n\nconst { isSupported, isActive, request, release } = useWakeLock()\n\nIf request is called, isActive will be true, and if release is called, or other tab is displayed, or the window is minimized,isActive will be false.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nvuff\nHannesOberreiter\nwheat\nkoheing\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useVibrate | VueUse",
    "url": "https://vueuse.org/core/useVibrate/",
    "html": "useVibrate\n​\nCategory\nBrowser\nExport Size\n671 B\nLast Changed\n8 months ago\n\nReactive Vibration API\n\nMost modern mobile devices include vibration hardware, which lets software code provides physical feedback to the user by causing the device to shake.\n\nThe Vibration API offers Web apps the ability to access this hardware, if it exists, and does nothing if the device doesn't support it.\n\nUsage\n​\n\nVibration is described as a pattern of on-off pulses, which may be of varying lengths.\n\nThe pattern may consist of either a single integer describing the number of milliseconds to vibrate, or an array of integers describing a pattern of vibrations and pauses.\n\nts\nimport { useVibrate } from '@vueuse/core'\n\n// This vibrates the device for 300 ms\n// then pauses for 100 ms before vibrating the device again for another 300 ms:\nconst { vibrate, stop, isSupported } = useVibrate({ pattern: [300, 100, 300] })\n\n// Start the vibration, it will automatically stop when the pattern is complete:\nvibrate()\n\n// But if you want to stop it, you can:\nstop()\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nMangokk\nMichael J. Roberts\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useUrlSearchParams | VueUse",
    "url": "https://vueuse.org/core/useUrlSearchParams/?foo=bar&vueuse=awesome",
    "html": "useUrlSearchParams\n​\nCategory\nBrowser\nExport Size\n1.59 kB\nLast Changed\nlast year\n\nReactive URLSearchParams\n\nDemo\n​\n\nsource\n\nfoo=bar\nvueuse=awesome\nUsage\n​\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('history')\n\nconsole.log(params.foo) // 'bar'\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `?foo=bar&vueuse=awesome`\nHash Mode\n​\n\nWhen using with hash mode route, specify the mode to hash\n\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `#/your/route?foo=bar&vueuse=awesome`\nHash Params\n​\n\nWhen using with history mode route, but want to use hash as params, specify the mode to hash-params\n\njs\nimport { useUrlSearchParams } from '@vueuse/core'\n\nconst params = useUrlSearchParams('hash-params')\n\nparams.foo = 'bar'\nparams.vueuse = 'awesome'\n// url updated to `/your/route#foo=bar&vueuse=awesome`\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nlstoeferle\nsun0day\n专业逮虾户aa\nMarius\nPatrick Stillhart\nodex21\nMichel EDIGHOFFER\nAlex Kozack\nChangelog\n​\nv9.2.0 on 9/5/2022\n7b288 - feat: add write option (#2165)\nv9.1.1 on 8/23/2022\n42300 - fix(useURLSearchParams): avoid referencing to global location (#2066)\nv8.7.0 on 6/16/2022\n1ef51 - fix: preserve history state when updating query (#1661)"
  },
  {
    "title": "useTitle | VueUse",
    "url": "https://vueuse.org/core/useTitle/",
    "html": "useTitle\n​\nCategory\nBrowser\nExport Size\n903 B\nLast Changed\n8 months ago\n\nReactive document title.\n\nTIP\n\nWhen using with Nuxt 3, this function will NOT be auto imported in favor of Nuxt's built-in useTitle(). Use explicit import if you want to use the function from VueUse.\n\nDemo\n​\n\nsource\n\nTitle\nUsage\n​\njs\nimport { useTitle } from '@vueuse/core'\n\nconst title = useTitle()\nconsole.log(title.value) // print current title\ntitle.value = 'Hello' // change current title\n\nSet initial title immediately:\n\njs\nconst title = useTitle('New Title')\n\nPass a ref and the title will be updated when the source ref changes:\n\njs\nimport { useTitle } from '@vueuse/core'\n\nconst messages = ref(0)\n\nconst title = computed(() => {\n  return !messages.value ? 'No message' : `${messages.value} new messages`\n})\n\nuseTitle(title) // document title will match with the ref \"title\"\n\nPass an optional template tag Vue Meta Title Template to update the title to be injected into this template:\n\njs\nconst title = useTitle('New Title', { titleTemplate: '%s | My Awesome Website' })\n\nWARNING\n\nobserve is incompatible with titleTemplate.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAlex Kozack\nAntério Vieira\nClemDee\nEugen Istoc\nLevi (Nguyễn Lương Huy)\nPreetesh Jain\nMichael Roberts\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv9.3.1 on 10/17/2022\n8c1ba - fix: prevent observe and titleTemplate been specified at the same time (#2049)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useTextDirection | VueUse",
    "url": "https://vueuse.org/core/useTextDirection/",
    "html": "useTextDirection\n​\nCategory\nBrowser\nExport Size\n821 B\nLast Changed\nlast year\n\nReactive dir of the element's text.\n\nDemo\n​\n\nsource\n\nThis paragraph is in English and correctly goes left to right.\n\nLTRClick to change the direction\nUsage\n​\nts\nimport { useTextDirection } from '@vueuse/core'\n\nconst dir = useTextDirection() // Ref<'ltr' | 'rtl' | 'auto'>\n\nBy default, it returns rlt direction when dir rtl is applied to the html tag, for example:\n\nhtml\n<!--ltr-->\n<html> ... </html>\n\n<!--rtl-->\n<html dir=\"rtl\"> ... </html>\nOptions\n​\nts\nimport { useTextDirection } from '@vueuse/core'\n\nconst mode = useTextDirection({\n  selector: 'body'\n}) // Ref<'ltr' | 'rtl' | 'auto'>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\niChengbo\nNestor Vera\nChangelog\n​\nv9.0.0-beta.2 on 7/24/2022\n085be - feat: new function (#1678)"
  },
  {
    "title": "useStyleTag | VueUse",
    "url": "https://vueuse.org/core/useStyleTag/",
    "html": "useStyleTag\n​\nCategory\nBrowser\nExport Size\n474 B\nLast Changed\n3 weeks ago\n\nInject reactive style element in head.\n\nDemo\n​\n\nsource\n\nEdit CSS:\nLoadUnload\n\nID: vueuse_styletag_1\n\nLoaded: true\n\nUsage\n​\nBasic usage\n​\n\nProvide a CSS string, then useStyleTag will automatically generate an id and inject it in <head>.\n\njs\nimport { useStyleTag } from '@vueuse/core'\n\nconst {\n  id,\n  css,\n  load,\n  unload,\n  isLoaded,\n} = useStyleTag('.foo { margin-top: 32px; }')\n\n// Later you can modify styles\ncss.value = '.foo { margin-top: 64px; }'\n\nThis code will be injected to <head>:\n\nhtml\n<style id=\"vueuse_styletag_1\">\n.foo { margin-top: 64px; }\n</style>\nCustom ID\n​\n\nIf you need to define your own id, you can pass id as first argument.\n\njs\nimport { useStyleTag } from '@vueuse/core'\n\nuseStyleTag('.foo { margin-top: 32px; }', { id: 'custom-id' })\nhtml\n<!-- injected to <head> -->\n<style id=\"custom-id\">\n.foo { margin-top: 32px; }\n</style>\nMedia query\n​\n\nYou can pass media attributes as last argument within object.\n\njs\nuseStyleTag('.foo { margin-top: 32px; }', { media: 'print' })\nhtml\n<!-- injected to <head> -->\n<style id=\"vueuse_styletag_1\" media=\"print\">\n.foo { margin-top: 32px; }\n</style>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nsibbng\nAnthony Fu\nJames Wragg\nmrayi\nJelf\nChangelog\n​\nv9.7.0 on 12/16/2022\ncfcc2 - fix: allow multiline CSS (#2476)\nv9.6.0 on 11/22/2022\n94413 - fix: allow use of existing node (#2442)\nv8.9.3 on 7/14/2022\n71df6 - fix: fix hydration mismatch issue (#1918)"
  },
  {
    "title": "useTextareaAutosize | VueUse",
    "url": "https://vueuse.org/core/useTextareaAutosize/",
    "html": "useTextareaAutosize\n​\nCategory\nBrowser\nExport Size\n869 B\nLast Changed\n6 months ago\n\nAutomatically update the height of a textarea depending on the content.\n\nDemo\n​\n\nsource\n\nType, the textarea will grow:\nUsage\n​\nvue\n<script setup lang=\"ts\">\nconst { textarea, input } = useTextareaAutosize()\n</script>\n\n<template>\n  <textarea\n    ref=\"textarea\"\n    v-model=\"input\"\n    class=\"resize-none\"\n    placeholder=\"What's on your mind?\"\n  />\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nleex\nJD Solanki\nDominik Pschenitschni\nJelf\nEnzo Innocenzi\nChangelog\n​\nv10.2.0 on 6/16/2023\n1b0ec - fix: autosize error when changing input asynchronously (#3118)\nv10.0.0-beta.0 on 3/14/2023\na3e95 - feat: added styleTarget option to style other element (#2312)\nv9.7.0 on 12/16/2022\nea497 - fix: reference\nebd48 - fix: support changes of element width (#2541)\nv8.9.0 on 7/6/2022\n4c378 - feat: new function (#1756)"
  },
  {
    "title": "useShare | VueUse",
    "url": "https://vueuse.org/core/useShare/",
    "html": "useShare\n​\nCategory\nBrowser\nExport Size\n546 B\nLast Changed\n8 months ago\n\nReactive Web Share API. The Browser provides features that can share content in text or file.\n\nThe share method has to be called following a user gesture like a button click. It can’t simply be called on page load for example. That’s in place to help prevent abuse.\n\nDemo\n​\n\nsource\n\nWeb share is not supported in your browser\nUsage\n​\njs\nimport { useShare } from '@vueuse/core'\n\nconst { share, isSupported } = useShare()\n\nfunction startShare() {\n  share({\n    title: 'Hello',\n    text: 'Hello my friend!',\n    url: location.href,\n  })\n}\nPassing a source ref\n​\n\nYou can pass a ref to it, changes from the source ref will be reflected to your sharing options.\n\njs\nimport { ref } from 'vue'\n\nconst shareOptions = ref < ShareOptions > ({ text: 'foo' })\nconst { share, isSupported } = useShare(shareOptions)\n\nshareOptions.value.text = 'bar'\n\nshare()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nJelf\n三咲智子 Kevin Deng\nShinigami\nJoão Eudes Lima\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.3 on 7/14/2022\n106d6 - fix!: rename type ShareOptions to UseShareOptions (#1888)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useScriptTag | VueUse",
    "url": "https://vueuse.org/core/useScriptTag/",
    "html": "useScriptTag\n​\nCategory\nBrowser\nExport Size\n676 B\nLast Changed\n8 months ago\n\nCreates a script tag, with support for automatically unloading (deleting) the script tag on unmount.\n\nIf a script tag already exists for the given URL, useScriptTag() will not create another script tag, but keep in mind that depending on how you use it, useScriptTag() might have already loaded then unloaded that particular JS file from a previous call of useScriptTag().\n\nUsage\n​\nTypeScript\nts\nimport { useScriptTag } from '@vueuse/core'\nuseScriptTag(\n  'https://player.twitch.tv/js/embed/v1.js',\n  // on script tag loaded.\n  (el: HTMLScriptElement) => {\n    // do something\n  },\n)\n\nThe script will be automatically loaded when the component is mounted and removed when the component is unmounted.\n\nConfiguration\n​\n\nSet manual: true to have manual control over the timing to load the script.\n\nts\nimport { useScriptTag } from '@vueuse/core'\n\nconst { scriptTag, load, unload } = useScriptTag(\n  'https://player.twitch.tv/js/embed/v1.js',\n  () => {\n    // do something\n  },\n  { manual: true },\n)\n\n// manual controls\nawait load()\nawait unload()\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nDenis Blazhkun\nCraig Riley\nDavid B Ludlow\nLevi (Nguyễn Lương Huy)\nTomáš Livora\nwebfansplz\nPreston Alvarado\nShinigami\nAlex Kozack\nYaël GUILLOUX\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.0 on 8/4/2022\n8f2b7 - fix: normalize src arg (#2030)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useScreenSafeArea | VueUse",
    "url": "https://vueuse.org/core/useScreenSafeArea/",
    "html": "useScreenSafeArea\n​\nCategory\nBrowser\nExport Size\n1.5 kB\nLast Changed\n2 years ago\n\nReactive env(safe-area-inset-*)\n\nDemo\n​\n\nsource\n\ntop:\nright:\nbottom:\nleft:\nUsage\n​\n\nIn order to make the page to be fully rendered in the screen, the additional attribute viewport-fit=cover within viewport meta tag must be set firstly, the viewport meta tag may look like this:\n\nhtml\n<meta name='viewport' content='initial-scale=1, viewport-fit=cover'>\n\nThen we could use useScreenSafeArea in the component as shown below:\n\nts\nimport { useScreenSafeArea } from '@vueuse/core'\n\nconst {\n  top,\n  right,\n  bottom,\n  left,\n} = useScreenSafeArea()\n\nFor further details, you may refer to this documentation: Designing Websites for iPhone X\n\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseScreenSafeArea top right bottom left>content</UseScreenSafeArea>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nAyaka Rizumu\nJelf\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useScreenOrientation | VueUse",
    "url": "https://vueuse.org/core/useScreenOrientation/",
    "html": "useScreenOrientation\n​\nCategory\nBrowser\nExport Size\n704 B\nLast Changed\n3 months ago\n\nReactive Screen Orientation API. It provides web developers with information about the user's current screen orientation.\n\nDemo\n​\n\nsource\n\nFor best results, please use a mobile or tablet device (or use your browser's native inspector to simulate an orientation change)\nisSupported: true\nOrientation Type: landscape-primary\nOrientation Angle: 0\nUsage\n​\nts\nimport { useScreenOrientation } from '@vueuse/core'\n\nconst {\n  isSupported,\n  orientation,\n  angle,\n  lockOrientation,\n  unlockOrientation,\n} = useScreenOrientation()\n\nTo lock the orientation, you can pass an OrientationLockType to the lockOrientation function:\n\nts\nimport { useScreenOrientation } from '@vueuse/core'\n\nconst {\n  isSupported,\n  orientation,\n  angle,\n  lockOrientation,\n  unlockOrientation,\n} = useScreenOrientation()\n\nlockOrientation('portrait-primary')\n\nand then unlock again, with the following:\n\nts\nunlockOrientation()\n\nAccepted orientation types are one of \"landscape-primary\", \"landscape-secondary\", \"portrait-primary\", \"portrait-secondary\", \"any\", \"landscape\", \"natural\" and \"portrait\".\n\nScreen Orientation API MDN\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nMichael J. Roberts\nJunaYa\nJelf\nNicolas Hedger\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "usePreferredReducedMotion | VueUse",
    "url": "https://vueuse.org/core/usePreferredReducedMotion/",
    "html": "usePreferredReducedMotion\n​\nCategory\nBrowser\nExport Size\n557 B\nLast Changed\nlast year\n\nReactive prefers-reduced-motion media query.\n\nDemo\n​\n\nsource\n\nPreferred Motion:\nno-preference\nUsage\n​\njs\nimport { usePreferredReducedMotion } from '@vueuse/core'\n\nconst preferredMotion = usePreferredReducedMotion()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePreferredReducedMotion v-slot=\"{ motion }\">\n  Preferred Reduced Motion: {{ motion }}\n</UsePreferredReducedMotion>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nvaakian X\nZhao\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.1.0 on 8/4/2022\ne808b - feat: new function (#2039)"
  },
  {
    "title": "usePreferredLanguages | VueUse",
    "url": "https://vueuse.org/core/usePreferredLanguages/",
    "html": "usePreferredLanguages\n​\nCategory\nBrowser\nExport Size\n537 B\nLast Changed\n2 years ago\n\nReactive Navigator Languages. It provides web developers with information about the user's preferred languages. For example, this may be useful to adjust the language of the user interface based on the user's preferred languages in order to provide better experience.\n\nDemo\n​\n\nsource\n\nPreferred Languages:\nen-US\nUsage\n​\njs\nimport { usePreferredLanguages } from '@vueuse/core'\n\nconst languages = usePreferredLanguages()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePreferredLanguages v-slot=\"{ languages }\">\n  Preferred Languages: {{ languages }}\n</UsePreferredLanguages>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nvaakian X\nwheat\nAlex Kozack\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "usePreferredDark | VueUse",
    "url": "https://vueuse.org/core/usePreferredDark/",
    "html": "usePreferredDark\n​\nCategory\nBrowser\nExport Size\n536 B\nLast Changed\n2 years ago\nRelated\nuseColorMode\nuseDark\n\nReactive dark theme preference.\n\nDemo\n​\n\nsource\n\nPrefers Dark:\ntrue\nUsage\n​\njs\nimport { usePreferredDark } from '@vueuse/core'\n\nconst isDark = usePreferredDark()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePreferredDark v-slot=\"{ prefersDark }\">\n  Prefers Dark: {{ prefersDark }}\n</UsePreferredDark>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "usePreferredColorScheme | VueUse",
    "url": "https://vueuse.org/core/usePreferredColorScheme/",
    "html": "usePreferredColorScheme\n​\nCategory\nBrowser\nExport Size\n570 B\nLast Changed\n2 years ago\n\nReactive prefers-color-scheme media query.\n\nDemo\n​\n\nsource\n\nPreferred Color Scheme:\ndark\nUsage\n​\njs\nimport { usePreferredColorScheme } from '@vueuse/core'\n\nconst preferredColor = usePreferredColorScheme()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePreferredColorScheme v-slot=\"{ colorScheme }\">\n  Preferred Color Scheme: {{ colorScheme }}\n</UsePreferredColorScheme>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nvaakian X\nwheat\nAlex Kozack\nLe Minh Tri\nAntério Vieira\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "usePreferredContrast | VueUse",
    "url": "https://vueuse.org/core/usePreferredContrast/",
    "html": "usePreferredContrast\n​\nCategory\nBrowser\nExport Size\n583 B\nLast Changed\nlast year\n\nReactive prefers-contrast media query.\n\nDemo\n​\n\nsource\n\nPreferred contrast:\nno-preference\nUsage\n​\njs\nimport { usePreferredContrast } from '@vueuse/core'\n\nconst preferredContrast = usePreferredContrast()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UsePreferredContrast v-slot=\"{ contrast }\">\n  Preferred Contrast: {{ contrast }}\n</UsePreferredContrast>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nvaakian X\nZhao\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.1.1 on 8/23/2022\n6db05 - feat: new function (#2040)"
  },
  {
    "title": "usePermission | VueUse",
    "url": "https://vueuse.org/core/usePermission/",
    "html": "usePermission\n​\nCategory\nBrowser\nExport Size\n759 B\nLast Changed\nlast year\nRelated\nuseUserMedia\n\nReactive Permissions API. The Permissions API provides the tools to allow developers to implement a better user experience as far as permissions are concerned.\n\nDemo\n​\n\nsource\n\naccelerometer: prompt\naccessibilityEvents: prompt\nambientLightSensor: prompt\nbackgroundSync: prompt\ncamera: prompt\nclipboardRead: prompt\nclipboardWrite: prompt\ngyroscope: prompt\nmagnetometer: prompt\nmicrophone: prompt\nnotifications: prompt\npaymentHandler: prompt\npersistentStorage: prompt\npush: prompt\nspeaker: prompt\n\nUsage\n​\njs\nimport { usePermission } from '@vueuse/core'\n\nconst microphoneAccess = usePermission('microphone')\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nJelf\nGuille\nAlex Kozack\nNurettin Kaya\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "usePerformanceObserver | VueUse",
    "url": "https://vueuse.org/core/usePerformanceObserver/",
    "html": "usePerformanceObserver\n​\nCategory\nBrowser\nExport Size\n536 B\nLast Changed\n9 months ago\n\nObserve performance metrics.\n\nDemo\n​\n\nsource\n\nrefresh\n[]\nUsage\n​\nTypeScript\nts\nimport { usePerformanceObserver } from '@vueuse/core'\nconst entrys = ref<PerformanceEntry[]>([])\nusePerformanceObserver(\n  {\n    entryTypes: ['paint'],\n  },\n  (list) => {\n    entrys.value = list.getEntries()\n  },\n)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\ngeekreal\nChangelog\n​\nv10.0.0-beta.0 on 3/14/2023\n21536 - feat: new function (#2736)"
  },
  {
    "title": "useObjectUrl | VueUse",
    "url": "https://vueuse.org/core/useObjectUrl/",
    "html": "useObjectUrl\n​\nCategory\nBrowser\nExport Size\n278 B\nLast Changed\n4 months ago\n\nReactive URL representing an object.\n\nCreates an URL for the provided File, Blob, or MediaSource via URL.createObjectURL() and automatically releases the URL via URL.revokeObjectURL() when the source changes or the component is unmounted.\n\nDemo\n​\n\nsource\n\nSelect file:\nObject URL:\nnone\nUsage\n​\nhtml\n<script setup>\nimport { useObjectUrl } from '@vueuse/core'\nimport { shallowRef } from 'vue'\n\nconst file = shallowRef()\nconst url = useObjectUrl(file)\n\nconst onFileChange = (event) => {\n  file.value = event.target.files[0]\n}\n</script>\n\n<template>\n  <input type=\"file\" @change=\"onFileChange\" />\n\n  <a :href=\"url\">Open file</a>\n</template>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<template>\n  <UseObjectUrl v-slot=\"url\" :object=\"file\">\n    <a :href=\"url\">Open file</a>\n  </UseObjectUrl>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAndrew Ferreira\nvaakian X\nBaboonKing\nMichael Hüneburg\nChangelog\n​\nv10.3.0 on 7/30/2023\nd3f7e - fix: improve parameter type (#3239)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.0 on 7/6/2022\n6ccd0 - feat: new function (#1763)"
  },
  {
    "title": "useMemory | VueUse",
    "url": "https://vueuse.org/core/useMemory/",
    "html": "useMemory\n​\nCategory\nBrowser\nExport Size\n524 B\nLast Changed\nlast year\n\nReactive Memory Info.\n\nDemo\n​\n\nsource\n\nYour browser does not support performance memory API\nUsage\n​\nts\nimport { useMemory } from '@vueuse/core'\n\nconst { isSupported, memory } = useMemory()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nwebfansplz\nChangelog\n​\nv9.0.0-beta.1 on 7/20/2022\n4bc0f - fix(useIntervalFn)!: rename type IntervalFnOptions to UseIntervalFnOptions (#1943)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.0 on 7/6/2022\n6f7cd - fix!: rename type MemoryOptions to UseMemoryOptions (#1605)"
  },
  {
    "title": "useMediaControls | VueUse",
    "url": "https://vueuse.org/core/useMediaControls/",
    "html": "useMediaControls\n​\nCategory\nBrowser\nExport Size\n2.41 kB\nLast Changed\n2 months ago\n\nReactive media controls for both audio and video elements\n\nDemo\n​\n\nsource\n\n00:00\n00:00 / 14:48\nOff\nEnglish\nFrench\nEnter Picture in Picture\nLoop\n2x\n1x\ncurrentTime: 0\nduration: 888.035\nwaiting: false\nseeking: false\nended: false\nstalled: false\nbuffered: []\nplaying: false\nrate: 1\nvolume: 1\nmuted: false\ntracks:\n  - id: 0\n    label: 'English'\n    kind: 'subtitles'\n    language: 'en'\n    mode: 'showing'\n  - id: 1\n    label: 'French'\n    kind: 'subtitles'\n    language: 'fr'\n    mode: 'disabled'\n    activeCues: null\n    cues: null\nselectedTrack: 0\nsupportsPictureInPicture: true\nisPictureInPicture: false\n\nUsage\n​\nBasic Usage\n​\nhtml\n<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue'\nimport { useMediaControls } from '@vueuse/core'\n\nconst video = ref()\nconst { playing, currentTime, duration, volume } = useMediaControls(video, { \n  src: 'video.mp4',\n})\n\n// Change initial media properties\nonMounted(() => {\n  volume.value = 0.5\n  currentTime.value = 60\n})\n</script>\n\n<template>\n  <video ref=\"video\" />\n  <button @click=\"playing = !playing\">Play / Pause</button>\n  <span>{{ currentTime }} / {{ duration }}</span>\n</template>\nProviding Captions, Subtitles, etc...\n​\n\nYou can provide captions, subtitles, etc in the tracks options of the useMediaControls function. The function will return an array of tracks along with two functions for controlling them, enableTrack, disableTrack, and selectedTrack. Using these you can manage the currently selected track. selectedTrack will be -1 if there is no selected track.\n\nhtml\n<script setup lang=\"ts\">\nimport { useMediaControls } from '@vueuse/core'\nimport { ref } from 'vue'\n  const video = ref()\n  const {\n    tracks,\n    enableTrack\n  } = useMediaControls(video, {\n    src: 'video.mp4',\n    tracks: [\n      {\n        default: true,\n        src: './subtitles.vtt',\n        kind: 'subtitles',\n        label: 'English',\n        srcLang: 'en',\n      },\n    ]\n  })\n</script>\n\n<template>\n  <video ref=\"video\" />\n  <button v-for=\"track in tracks\" :key=\"track.id\" @click=\"enableTrack(track)\">\n    {{ track.label }}\n  </button>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAlex Kozack\nwheat\nFernando Fernández\nJustin Halsall\nwebfansplz\n丶远方\nBryce\nCommanderRoot\njelf\nrimday\nShinigami\nChangelog\n​\nv10.2.0 on 6/16/2023\n0b253 - fix: better representation for \"waiting\" value (#3072)\nv10.1.0 on 4/22/2023\nb20aa - fix: apply state when target ref changes (#2999)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.12.0 on 1/29/2023\n4ef27 - fix: ended status not updating (#2680)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useMediaQuery | VueUse",
    "url": "https://vueuse.org/core/useMediaQuery/",
    "html": "useMediaQuery\n​\nCategory\nBrowser\nExport Size\n505 B\nLast Changed\n4 months ago\n\nReactive Media Query. Once you've created a MediaQueryList object, you can check the result of the query or receive notifications when the result changes.\n\nDemo\n​\n\nsource\n\nisLargeScreen: true\nprefersDark: true\n\nUsage\n​\njs\nimport { useMediaQuery } from '@vueuse/core'\n\nconst isLargeScreen = useMediaQuery('(min-width: 1024px)')\nconst isPreferredDark = useMediaQuery('(prefers-color-scheme: dark)')\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nIndrek Ardel\nZhousg\nYoung\nJelf\nDominik Freier\nwebfansplz\nEureka\nkarma\nAlex Kozack\nJacob Clevenger\nChangelog\n​\nv10.3.0 on 7/30/2023\nf3969 - fix: only add/remove event listeners on query change (#3236)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv10.0.0-beta.3 on 4/13/2023\n4e7b0 - fix(useWindowSize)!: use media query instead of orientationchange listener (#2919)\nv9.3.0 on 9/26/2022\n33098 - feat: allow query to be a ref (#2178)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.8.1 on 7/6/2022\n60f9a - fix: check if window.matchMedia is a function (#1765)\nv8.8.0 on 7/6/2022\n5a64c - fix: strict isSupported check"
  },
  {
    "title": "useGamepad | VueUse",
    "url": "https://vueuse.org/core/useGamepad/",
    "html": "useGamepad\n​\nCategory\nBrowser\nExport Size\n1.25 kB\nLast Changed\n6 months ago\n\nProvides reactive bindings for the Gamepad API.\n\nDemo\n​\n\nsource\n\nGamepad is not supported on this device.\nIt seems your device does not support the Gamepad API. Check here for a list supported devices.\nUsage\n​\n\nDue to how the Gamepad API works, you must interact with the page using the gamepad before it will be detected.\n\nhtml\n<script setup>\nimport { computed } from 'vue'\nimport { useGamepad } from '@vueuse/core'\n\nconst { isSupported, gamepads } = useGamepad()\nconst gamepad = computed(() => gamepads.find(g => g.mapping === 'standard'))\n</script>\n\n<template>\n  <span>\n    {{ gamepad.id }}\n  <span>\n</template>\nGamepad Updates\n​\n\nCurrently the Gamepad API does not have event support to update the state of the gamepad. To update the gamepad state, requestAnimationFrame is used to poll for gamepad changes. You can control this polling by using the pause and resume functions provided by useGamepad\n\nts\nimport { useGamepad } from '@vueuse/core'\n\nconst { pause, resume, gamepads } = useGamepad()\n\npause()\n\n// gamepads object will not update\n\nresume()\n\n// gamepads object will update on user input\nGamepad Connect & Disconnect Events\n​\n\nThe onConnected and onDisconnected events will trigger when a gamepad is connected or disconnected.\n\nts\nconst { gamepads, onConnected, onDisconnected } = useGamepad()\n\nonConnected((index) => {\n  console.log(`${gamepads.value[index].id} connected`)\n})\n\nonDisconnected((index) => {\n  console.log(`${index} disconnected`)\n})\nVibration\n​\n\nThe Gamepad Haptics API is sparse, so check the compatibility table before using.\n\nts\nimport { computed } from 'vue'\n\nconst supportsVibration = computed(() => gamepad.hapticActuators.length > 0)\nfunction vibrate() {\n  if (supportsVibration.value) {\n    const actuator = gamepad.hapticActuators[0]\n    actuator.playEffect('dual-rumble', {\n      startDelay: 0,\n      duration: 1000,\n      weakMagnitude: 1,\n      strongMagnitude: 1,\n    })\n  }\n}\nMappings\n​\n\nTo make the Gamepad API easier to use, we provide mappings to map a controller to a controllers button layout.\n\nXbox360 Controller\n​\nhtml\n<script setup>\nimport { mapGamepadToXbox360Controller } from '@vueuse/core'\n\nconst controller = mapGamepadToXbox360Controller(gamepad)\n</script>\n\n<template>\n  <span>{{ controller.buttons.a.pressed }}</span>\n  <span>{{ controller.buttons.b.pressed }}</span>\n  <span>{{ controller.buttons.x.pressed }}</span>\n  <span>{{ controller.buttons.y.pressed }}</span>\n</template>\n\nCurrently there are only mappings for the Xbox 360 controller. If you have controller you want to add mappings for, feel free to open a PR for more controller mappings!\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nJelf\n丶远方\n三咲智子\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useImage | VueUse",
    "url": "https://vueuse.org/core/useImage/",
    "html": "useImage\n​\nCategory\nBrowser\nExport Size\n1.39 kB\nLast Changed\n2 months ago\n\nReactive load an image in the browser, you can wait the result to display it or show a fallback.\n\nDemo\n​\n\nsource\n\nLoading...\nChangeCreate Error\nUsage\n​\nhtml\n<script setup>\nimport { useImage } from '@vueuse/core'\n\nconst avatarUrl = 'https://place.dog/300/200'\nconst { isLoading } = useImage({ src: avatarUrl })\n</script>\n\n<template>\n  <span v-if=\"isLoading\">Loading</span>\n  <img v-else :src=\"avatarUrl\">\n</template>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<template>\n  <UseImage src=\"https://place.dog/300/200\">\n    <template #loading>\n      Loading..\n    </template>\n\n    <template #error>\n      Failed\n    </template>\n  </UseImage>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nRiley Gelwicks\nbtea\nFrançois M\nvaakian X\nLúcio Rubens\nChangelog\n​\nv10.2.0 on 6/16/2023\n04d32 - feat: support referrerPolicy option (#3132)\nv10.1.1 on 5/2/2023\nc110a - feat: support more image properties (#3021)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n24ede - fix(useAsyncState)!: rename type AsyncStateOptions to UseAsyncStateOptions (#1809)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\nf4b37 - feat: new function (#1460)"
  },
  {
    "title": "useFullscreen | VueUse",
    "url": "https://vueuse.org/core/useFullscreen/",
    "html": "useFullscreen\n​\nCategory\nBrowser\nExport Size\n1.05 kB\nLast Changed\n2 months ago\n\nReactive Fullscreen API. It adds methods to present a specific Element (and its descendants) in full-screen mode, and to exit full-screen mode once it is no longer needed. This makes it possible to present desired content—such as an online game—using the user's entire screen, removing all browser user interface elements and other applications from the screen until full-screen mode is shut off.\n\nDemo\n​\n\nsource\n\nGo Fullscreen\nUsage\n​\njs\nimport { useFullscreen } from '@vueuse/core'\n\nconst { isFullscreen, enter, exit, toggle } = useFullscreen()\n\nFullscreen specified element. Some platforms (like iOS's Safari) only allow fullscreen on video elements.\n\nTypeScript\nts\nconst el = ref<HTMLElement | null>(null)\nconst { isFullscreen, enter, exit, toggle } = useFullscreen(el)\nhtml\n<video ref='el'>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseFullscreen v-slot=\"{ toggle }\">\n  <video />\n  <button @click=\"toggle\">\n    Go Fullscreen\n  </button>\n</UseFullscreen>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nFernando Fernández\nwheat\nAntério Vieira\ntawen\nzaqvil\nYvan Zhu\nvaakian X\nJelf\nwebfansplz\nShinigami\nAlex Kozack\nChangelog\n​\nv10.2.1 on 6/28/2023\n14edb - fix: skip exiting when not in fullscreen mode (#3144)\nv10.1.0 on 4/22/2023\n4a7a1 - fix: isFullscreen handling for mutliple fullscreen elements (#3000)\nv10.0.0-beta.3 on 4/13/2023\n2e467 - fix!: better cross-platform compatibility (#2915)\nv10.0.0-beta.0 on 3/14/2023\n9d394 - fix: handle Safari iOS (#2822)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useFileSystemAccess | VueUse",
    "url": "https://vueuse.org/core/usefilesystemaccess/",
    "html": "useFileSystemAccess\n​\nCategory\nBrowser\nExport Size\n878 B\nLast Changed\n2 months ago\n\nCreate and read and write local files with FileSystemAccessAPI\n\nDemo\n​\n\nsource\n\nOpen\nNew file\nSave\nSave as\nDataType\nText\nArrayBuffer\nBlob\nisSupported: true\nfileName: ''\nfileMIME: ''\nfileSize: 0\nfileLastModified: 0\n\nUsage\n​\nts\nimport { useFileSystemAccess } from '@vueuse/core'\n\nconst { isSupported, data, file, fileName, fileMIME, fileSize, fileLastModified, create, open, save, saveAs, updateData } = useFileSystemAccess()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\n171H\nCarlos Gamez\nwheat\nChangelog\n​\nv10.4.0 on 8/25/2023\na9c8b - fix: make options to be optional (#3320)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useFileDialog | VueUse",
    "url": "https://vueuse.org/core/useFileDialog/",
    "html": "useFileDialog\n​\nCategory\nBrowser\nExport Size\n707 B\nLast Changed\n3 weeks ago\n\nOpen file dialog with ease.\n\nDemo\n​\n\nsource\n\nChoose filesReset\nUsage\n​\nTypeScript\nts\nimport { useFileDialog } from '@vueuse/core'\nconst { files, open, reset, onChange } = useFileDialog({\n  accept: 'image/*', // Set to accept only image files\n  directory: true, // Select directories instead of files if set true\n})\nonChange((files) => {\n  /** do something with files */\n})\nhtml\n<template>\n  <button type=\"button\" @click=\"open\">Choose file</button>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nhuiliangShen\nSandra Rodgers\nDamian Głowala\nzaqvil\n丶远方\n1SZX1\nZHAO Jinxiang\nMax\nAnthony Fu\nRobert Soriano\nChangelog\n​\nv10.6.0 on 11/9/2023\ncefca - feat: add directory parameters (#3513)\nv10.2.0 on 6/16/2023\n6d847 - feat: add a parameter reset (#3059)\nv10.0.0-beta.1 on 3/23/2023\n5e697 - feat: add listener for file change events (#2893)\nv9.2.0 on 9/5/2022\nc463a - fix: choose file not work on mobile (#2080)\nv8.9.4 on 7/17/2022\n46192 - fix: explict UseFileDialogReturn type (#1927)\nv8.9.1 on 7/8/2022\n58a45 - fix: SSR compatible, close #1788\nv8.9.0 on 7/6/2022\n44526 - feat: new function (#1218)"
  },
  {
    "title": "useFavicon | VueUse",
    "url": "https://vueuse.org/core/useFavicon/",
    "html": "useFavicon\n​\nCategory\nBrowser\nExport Size\n362 B\nLast Changed\n2 months ago\n\nReactive favicon\n\nDemo\n​\n\nsource\n\nChange favicon to\nVueVueUse\nUsage\n​\njs\nimport { useFavicon } from '@vueuse/core'\n\nconst icon = useFavicon()\n\nicon.value = 'dark.png' // change current icon\nPassing a source ref\n​\n\nYou can pass a ref to it, changes from of the source ref will be reflected to your favicon automatically.\n\njs\nimport { computed } from 'vue'\nimport { useFavicon, usePreferredDark } from '@vueuse/core'\n\nconst isDark = usePreferredDark()\nconst favicon = computed(() => isDark.value ? 'dark.png' : 'light.png')\n\nuseFavicon(favicon)\n\nWhen a source ref is passed, the return ref will be identical to the source ref\n\nts\nconst source = ref('icon.png')\nconst icon = useFavicon(source)\n\nconsole.log(icon === source) // true\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nbabu-ch\nazaleta\nMikhailov Nikita\nJelf\nAlex Kozack\nChangelog\n​\nv10.5.0 on 10/7/2023\nd1fcc - feat: Add link tag if it doesn't exist (#3444)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n10e98 - feat(toRef)!: rename resolveRef to toRef\nv9.2.0 on 9/5/2022\ndf718 - fix: improve type overload (#2123)\nv9.1.0 on 8/4/2022\n06e26 - fix: writable return type (#2036)\nv8.9.3 on 7/14/2022\n99e07 - fix!: rename type FaviconOptions to UseFaviconOptions (#1865)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useEyeDropper | VueUse",
    "url": "https://vueuse.org/core/useEyeDropper/",
    "html": "useEyeDropper\n​\nCategory\nBrowser\nExport Size\n314 B\nLast Changed\n2 months ago\n\nReactive EyeDropper API\n\nDemo\n​\n\nsource\n\nisSupported: true\nsRGBHex:\nOpen Eye Dropper\nUsage\n​\nts\nimport { useEyeDropper } from '@vueuse/core'\n\nconst { isSupported, open, sRGBHex } = useEyeDropper()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseEyeDropper v-slot=\"{ isSupported, sRGBHex, open }\">\n  <button :disabled=\"!isSupported\" @click=\"open\">\n    sRGBHex: {{ sRGBHex }}\n  </button>\n</UseEyeDropper>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nvaakian X\nwheat\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useDark | VueUse",
    "url": "https://vueuse.org/core/useDark/",
    "html": "useDark\n​\nCategory\nBrowser\nExport Size\n3.03 kB\nLast Changed\n7 months ago\nRelated\nuseColorMode\nusePreferredDark\nuseStorage\n\nReactive dark mode with auto data persistence.\n\nLearn useDark with this FREE video lesson from Vue School!\nDemo\n​\n\nsource\n\nDark\nBasic Usage\n​\njs\nimport { useDark, useToggle } from '@vueuse/core'\n\nconst isDark = useDark()\nconst toggleDark = useToggle(isDark)\nBehavior\n​\n\nuseDark combines with usePreferredDark and useStorage On start up, it reads the value from localStorage/sessionStorage (the key is configurable) to see if there is a user configured color scheme, if not, it will use users' system preferences. When you change the isDark ref, it will update the corresponding element's attribute and then store the preference to storage (default key: vueuse-color-scheme) for persistence.\n\nPlease note useDark only handles the DOM attribute changes for you to apply proper selector in your CSS. It does NOT handle the actual style, theme or CSS for you.\n\nConfiguration\n​\n\nBy default, it uses Tailwind CSS favored dark mode, which enables dark mode when class dark is applied to the html tag, for example:\n\nhtml\n<!--light-->\n<html> ... </html>\n\n<!--dark-->\n<html class=\"dark\"> ... </html>\n\nStill, you can also customize it to make it work with most CSS frameworks.\n\nFor example:\n\nts\nconst isDark = useDark({\n  selector: 'body',\n  attribute: 'color-scheme',\n  valueDark: 'dark',\n  valueLight: 'light',\n})\n\nwill work like\n\nhtml\n<!--light-->\n<html>\n  <body color-scheme=\"light\"> ... </body>\n</html>\n\n<!--dark-->\n<html>\n  <body color-scheme=\"dark\"> ... </body>\n</html>\n\nIf the configuration above still does not fit your needs, you can use theonChanged option to take full control over how you handle updates.\n\nTypeScript\nts\nconst isDark = useDark({\n  onChanged(dark: boolean) {\n    // update the dom, call the API or something\n  },\n})\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDark v-slot=\"{ isDark, toggleDark }\">\n  <button @click=\"toggleDark()\">\n    Is Dark: {{ isDark }}\n  </button>\n</UseDark>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nWaleed Khaled\nDaniel Weaver\nvaakian X\nKevin Cole\nvaakian X\n云游君\nMehran Mirshekaran\nMáximo Mussini\nPig Fang\nAlex Kozack\nordago\nLe Minh Tri\nChangelog\n​\nv10.1.0 on 4/22/2023\na1bef - feat(useColorMode): expose state to the ref, deprecated emitAuto (#2980)\nv10.0.0-beta.2 on 3/28/2023\nd6d35 - feat: passthrough default handler from useColorSchema (#2866)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useCssVar | VueUse",
    "url": "https://vueuse.org/core/useCssVar/",
    "html": "useCssVar\n​\nCategory\nBrowser\nExport Size\n820 B\nLast Changed\n6 months ago\n\nManipulate CSS variables\n\nDemo\n​\n\nsource\n\nSample text, #7fa998\nChange Color\nSample text, --color: #7fa998\nChange Color Variable\nUsage\n​\njs\nimport { useCssVar } from '@vueuse/core'\n\nconst el = ref(null)\nconst color1 = useCssVar('--color', el)\n\nconst elv = ref(null)\nconst key = ref('--color')\nconst colorVal = useCssVar(key, elv)\n\nconst someEl = ref(null)\nconst color2 = useCssVar('--color', someEl, { initialValue: '#eee' })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nAntério Vieira\nWaleed Khaled\n木荣\nJD Solanki\nbtea\nAlex Kozack\nChangelog\n​\nv10.2.0 on 6/16/2023\n9d34a - fix: observe changes based on element class list (#3131)\nv10.0.2 on 4/14/2023\n7d001 - fix: module reference, close #2972\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.0 on 3/14/2023\nae6e1 - feat: introduce observe option (#2800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.8.0 on 7/6/2022\n31417 - fix: remove spaces at both ends (#1741)\nv8.6.0 on 5/31/2022\nbbb83 - feat: support initialValue (#1619)"
  },
  {
    "title": "useColorMode | VueUse",
    "url": "https://vueuse.org/core/useColorMode/",
    "html": "useColorMode\n​\nCategory\nBrowser\nExport Size\n2.89 kB\nLast Changed\n2 months ago\nRelated\nuseDark\nusePreferredDark\nuseStorage\n\nReactive color mode (dark / light / customs) with auto data persistence.\n\nDemo\n​\n\nsource\n\nAuto← Click to change the color mode\nBasic Usage\n​\njs\nimport { useColorMode } from '@vueuse/core'\n\nconst mode = useColorMode() // Ref<'dark' | 'light'>\n\nBy default, it will match with users' browser preference using usePreferredDark (a.k.a auto mode). When reading the ref, it will by default return the current color mode (dark, light or your custom modes). The auto mode can be included in the returned modes by enabling the emitAuto option. When writing to the ref, it will trigger DOM updates and persist the color mode to local storage (or your custom storage). You can pass auto to set back to auto mode.\n\nts\nmode.value // 'dark' | 'light'\n\nmode.value = 'dark' // change to dark mode and persist\n\nmode.value = 'auto' // change to auto mode\nConfig\n​\njs\nimport { useColorMode } from '@vueuse/core'\n\nconst mode = useColorMode({\n  attribute: 'theme',\n  modes: {\n    // custom colors\n    dim: 'dim',\n    cafe: 'cafe',\n  },\n}) // Ref<'dark' | 'light' | 'dim' | 'cafe'>\nAdvanced Usage\n​\n\nYou can also explicit access to the system preference and storaged user override mode.\n\njs\nimport { useColorMode } from '@vueuse/core'\n\nconst { system, store } = useColorMode()\n\nsystem.value // 'dark' | 'light'\nstore.value // 'dark' | 'light' | 'auto'\n\nconst myColorMode = computed(() => store.value === 'auto' ? system.value : store.value)\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseColorMode v-slot=\"{ mode }\">\n  <button @click=\"mode = mode === 'dark' ? 'light' : 'dark'\">\n    Mode {{ mode }}\n  </button>\n</UseColorMode>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nWaleed Khaled\nDominik Freier\nwheat\nJason Liang\nYang\n丶远方\nntnyq\nvaakian X\nsun0day\nvaakian X\nJelf\nAndreas Weber\nAndrej Hýll\nChangelog\n​\nv10.2.0 on 6/16/2023\n78a3a - feat: disableTransition support pseudo-elements (#3129)\nv10.1.0 on 4/22/2023\na1bef - feat: expose state to the ref, deprecated emitAuto (#2980)\nadbbb - fix: element ref support, close #3003\nv10.0.0-beta.4 on 4/13/2023\n5c82c - fix!: enable disableTransition by default\nd150c - feat: expose system and store ref, close #2023\n02ccc - feat: support passing element as selector (#2760)\nv10.0.0-beta.0 on 3/14/2023\n320ab - feat(useDark, useColorMode): introduce disableTransition option\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.0.1 on 7/29/2022\n98f8b - fix: when emitAuto is true, onChanged does not trigger when preferredMode changed (#2004)\nv9.0.0-beta.2 on 7/24/2022\nfcaf9 - feat: new initialValue option\nv8.9.3 on 7/14/2022\n499f6 - fix(useStorage)!: rename type StorageOptions to UseStorageOptions (#1867)\nv8.9.0 on 7/6/2022\n092cb - fix: resolve auto to preferred mode internally (#1766)\nv8.8.0 on 7/6/2022\nd67d9 - feat: add option to return auto mode (#1627)"
  },
  {
    "title": "useEventListener | VueUse",
    "url": "https://vueuse.org/core/useEventListener/",
    "html": "useEventListener\n​\nCategory\nBrowser\nExport Size\n467 B\nLast Changed\n3 months ago\n\nUse EventListener with ease. Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n\nUsage\n​\njs\nimport { useEventListener } from '@vueuse/core'\n\nuseEventListener(document, 'visibilitychange', (evt) => {\n  console.log(evt)\n})\n\nYou can also pass a ref as the event target, useEventListener will unregister the previous event and register the new one when you change the target.\n\nTypeScript\nts\nimport { useEventListener } from '@vueuse/core'\nconst element = ref<HTMLDivElement>()\nuseEventListener(element, 'keydown', (e) => {\n  console.log(e.key)\n})\nhtml\n<template>\n  <div v-if=\"cond\" ref=\"element\">Div1</div>\n  <div v-else ref=\"element\">Div2</div>\n</template>\n\nYou can also call the returned to unregister the listener.\n\nts\nimport { useEventListener } from '@vueuse/core'\n\nconst cleanup = useEventListener(document, 'keydown', (e) => {\n  console.log(e.key)\n})\n\ncleanup() // This will unregister the listener.\n\nNote if your components also run in SSR (Server Side Rendering), you might get errors (like document is not defined) because DOM APIs like document and window are not available in Node.js. To avoid that you can put the logic inside onMounted hook.\n\nts\n// onMounted will only be called in the client side, so it guarantees the DOM APIs are available.\nonMounted(() => {\n  useEventListener(document, 'keydown', (e) => {\n    console.log(e.key)\n  })\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nJulien Le Coupanec\nMichael J. Roberts\nJames Garbutt\nvaakian X\nsun0day\nAlejandro Arevalo\nJelf\nAlex Kozack\nlstoeferle\nAntério Vieira\nChangelog\n​\nv10.4.1 on 8/28/2023\n3ef59 - fix: immutable options on removal, close #2825 (#3346)\nv10.3.0 on 7/30/2023\n4f414 - fix: improved useEventListener overload (#3246)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\n103d6 - feat: support reactive options\nv9.10.0 on 1/3/2023\n07f20 - feat(useActiveElement): support shadow roots (#2592)\nv9.5.0 on 11/9/2022\nab0ee - feat: accept multiple events or listeners (#2180)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useClipboardItems | VueUse",
    "url": "https://vueuse.org/core/useClipboardItems/",
    "html": "useClipboardItems\n​\nCategory\nBrowser\nExport Size\nLast Changed\n3 weeks ago\nRelated\nuseClipboard\n\nReactive Clipboard API. Provides the ability to respond to clipboard commands (cut, copy, and paste) as well as to asynchronously read from and write to the system clipboard. Access to the contents of the clipboard is gated behind the Permissions API. Without user permission, reading or altering the clipboard contents is not permitted.\n\nDemo\n​\n\nsource\n\nClipboard Permission: read prompt | write prompt\n\nCurrent copied: none\n\nCopy\nDifference from useClipboard\n​\n\nuseClipboard is a \"text-only\" function, while useClipboardItems is a ClipboardItem based function. You can use useClipboardItems to copy any content supported by ClipboardItem.\n\nUsage\n​\njs\nimport { useClipboardItems } from '@vueuse/core'\n\nconst mime = 'text/html'\nconst source = ref([\n  new ClipboardItem({\n    [mime]: new Blob(['\\'<b>HTML content</b>\\'', { type: mime }]),\n  })\n])\n\nconst { content, copy, copied, isSupported } = useClipboardItems({ source })\nhtml\n<div v-if=\"isSupported\">\n  <button @click='copy(source)'>\n    <!-- by default, `copied` will be reset in 1.5s -->\n    <span v-if='!copied'>Copy</span>\n    <span v-else>Copied!</span>\n  </button>\n  <p>\n    Current copied: <code>{{ text || 'none' }}</code>\n  </p>\n</div>\n<p v-else>\n  Your browser does not support Clipboard API\n</p>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nChangelog\n​\nv10.6.0 on 11/9/2023\n1aa50 - feat: new function (#3477)"
  },
  {
    "title": "useClipboard | VueUse",
    "url": "https://vueuse.org/core/useClipboard/",
    "html": "useClipboard\n​\nCategory\nBrowser\nExport Size\n1.02 kB\nLast Changed\n3 weeks ago\nRelated\nuseClipboardItems\n\nReactive Clipboard API. Provides the ability to respond to clipboard commands (cut, copy, and paste) as well as to asynchronously read from and write to the system clipboard. Access to the contents of the clipboard is gated behind the Permissions API. Without user permission, reading or altering the clipboard contents is not permitted.\n\nLearn how to reactively save text to the clipboard with this FREE video lesson from Vue School!\nDemo\n​\n\nsource\n\nClipboard Permission: read prompt | write prompt\n\nCurrent copied: none\n\nCopy\nUsage\n​\njs\nimport { useClipboard } from '@vueuse/core'\n\nconst source = ref('Hello')\nconst { text, copy, copied, isSupported } = useClipboard({ source })\nhtml\n<div v-if=\"isSupported\">\n    <button @click='copy(source)'>\n      <!-- by default, `copied` will be reset in 1.5s -->\n      <span v-if='!copied'>Copy</span>\n      <span v-else>Copied!</span>\n    </button>\n    <p>\n      Current copied: <code>{{ text || 'none' }}</code>\n    </p>\n  </div>\n  <p v-else>\n    Your browser does not support Clipboard API\n  </p>\n\nSet legacy: true to keep the ability to copy if Clipboard API is not available. It will handle copy with execCommand as fallback.\n\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseClipboard source=\"copy me\" v-slot=\"{ copy, copied }\">\n  <button @click=\"copy()\">\n    {{ copied ? 'Copied' : 'Copy' }}\n  </button>\n</UseClipboard>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nSanxiaozhizi\nAlexzvn\nCat1007\n丶远方\nOlusola Olawale\nLumdzeehol\nLumdzeehol\nCurt Grimes\nwheat\n洪布斯\nkarma\nShinigami\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv10.6.0 on 11/9/2023\n71b46 - feat: UseClipboard component (#3359)\n37e86 - fix: use legacy way when without permission (#3379)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.4.0 on 10/25/2022\n5ec65 - feat: support legacy copy (#2336)\nv8.9.3 on 7/14/2022\n16856 - fix!: rename type ClipboardOptions to UseClipboardOptions and ClipboardReturn to UseClipboardReturn (#1861)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useBrowserLocation | VueUse",
    "url": "https://vueuse.org/core/useBrowserLocation/",
    "html": "useBrowserLocation\n​\nCategory\nBrowser\nExport Size\n952 B\nLast Changed\n2 months ago\n\nReactive browser location\n\nNOTE: If you're using Vue Router, use useRoute provided by Vue Router instead.\n\nDemo\n​\n\nsource\n\nInput and hash will be changed:\ntrigger: 'load'\nstate: null\nlength: 4\norigin: 'https://vueuse.org'\nhash: ''\nhost: 'vueuse.org'\nhostname: 'vueuse.org'\nhref: 'https://vueuse.org/core/useBrowserLocation/'\npathname: '/core/useBrowserLocation/'\nport: ''\nprotocol: 'https:'\nsearch: ''\n\nUsage\n​\njs\nimport { useBrowserLocation } from '@vueuse/core'\n\nconst location = useBrowserLocation()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseBrowserLocation v-slot=\"{ location }\">\n  Browser Location: {{ location }}\n</UseBrowserLocation>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n三咲智子 Kevin Deng\nvaakian X\nMike\nEureka\nShinigami\nwheat\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv10.0.0-beta.0 on 3/14/2023\na860c - feat: two-way binding (#2168)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useBroadcastChannel | VueUse",
    "url": "https://vueuse.org/core/useBroadcastChannel/",
    "html": "useBroadcastChannel\n​\nCategory\nBrowser\nExport Size\n476 B\nLast Changed\n8 months ago\n\nReactive BroadcastChannel API.\n\nCloses a broadcast channel automatically component unmounted.\n\nDemo\n​\n\nsource\n\nSupported: true\n\nPlease open this page in at least two tabs\n\nSend Message\nUsage\n​\n\nThe BroadcastChannel interface represents a named channel that any browsing context of a given origin can subscribe to. It allows communication between different documents (in different windows, tabs, frames, or iframes) of the same origin.\n\nMessages are broadcasted via a message event fired at all BroadcastChannel objects listening to the channel.\n\njs\nimport { ref } from 'vue'\nimport { useBroadcastChannel } from '@vueuse/core'\n\nconst {\n  isSupported,\n  channel,\n  post,\n  close,\n  error,\n  isClosed,\n} = useBroadcastChannel({ name: 'vueuse-demo-channel' })\n\nconst message = ref('')\n\nmessage.value = 'Hello, VueUse World!'\n\n// Post the message to the broadcast channel:\npost(message.value)\n\n// Option to close the channel if you wish:\nclose()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nJelf\nCaptain\nMichael J. Roberts\nChangelog\n​\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useBluetooth | VueUse",
    "url": "https://vueuse.org/core/useBluetooth/",
    "html": "useBluetooth\n​\nCategory\nBrowser\nExport Size\n596 B\nLast Changed\n2 months ago\n\nReactive Web Bluetooth API. Provides the ability to connect and interact with Bluetooth Low Energy peripherals.\n\nThe Web Bluetooth API lets websites discover and communicate with devices over the Bluetooth 4 wireless standard using the Generic Attribute Profile (GATT).\n\nN.B. It is currently partially implemented in Android M, Chrome OS, Mac, and Windows 10. For a full overview of browser compatibility please see Web Bluetooth API Browser Compatibility\n\nN.B. There are a number of caveats to be aware of with the web bluetooth API specification. Please refer to the Web Bluetooth W3C Draft Report for numerous caveats around device detection and connection.\n\nN.B. This API is not available in Web Workers (not exposed via WorkerNavigator).\n\nDemo\n​\n\nsource\n\nBluetooth Web API Supported\nRequest Bluetooth Device\n\nNot Connected\n\nUsage Default\n​\nts\nimport { useBluetooth } from '@vueuse/core'\n\nconst {\n  isSupported,\n  isConnected,\n  device,\n  requestDevice,\n  server,\n} = useBluetooth({\n  acceptAllDevices: true,\n})\nvue\n<template>\n  <button @click=\"requestDevice()\">\n    Request Bluetooth Device\n  </button>\n</template>\n\nWhen the device has paired and is connected, you can then work with the server object as you wish.\n\nUsage Battery Level Example\n​\n\nThis sample illustrates the use of the Web Bluetooth API to read battery level and be notified of changes from a nearby Bluetooth Device advertising Battery information with Bluetooth Low Energy.\n\nHere, we use the characteristicvaluechanged event listener to handle reading battery level characteristic value. This event listener will optionally handle upcoming notifications as well.\n\nTypeScript\nts\nimport { pausableWatch, useBluetooth } from '@vueuse/core'\nconst { isSupported, isConnected, device, requestDevice, server } =\n  useBluetooth({\n    acceptAllDevices: true,\n    optionalServices: ['battery_service'],\n  })\nconst batteryPercent = ref<undefined | number>()\nconst isGettingBatteryLevels = ref(false)\nasync function getBatteryLevels() {\n  isGettingBatteryLevels.value = true\n  // Get the battery service:\n  const batteryService = await server.getPrimaryService('battery_service')\n  // Get the current battery level\n  const batteryLevelCharacteristic =\n    await batteryService.getCharacteristic('battery_level')\n  // Listen to when characteristic value changes on `characteristicvaluechanged` event:\n  batteryLevelCharacteristic.addEventListener(\n    'characteristicvaluechanged',\n    (event) => {\n      batteryPercent.value = event.target.value.getUint8(0)\n    },\n  )\n  // Convert received buffer to number:\n  const batteryLevel = await batteryLevelCharacteristic.readValue()\n  batteryPercent.value = await batteryLevel.getUint8(0)\n}\nconst { stop } = pausableWatch(isConnected, (newIsConnected) => {\n  if (!newIsConnected || !server.value || isGettingBatteryLevels.value) return\n  // Attempt to get the battery levels of the device:\n  getBatteryLevels()\n  // We only want to run this on the initial connection, as we will use an event listener to handle updates:\n  stop()\n})\nvue\n<template>\n  <button @click=\"requestDevice()\">\n    Request Bluetooth Device\n  </button>\n</template>\n\nMore samples can be found on Google Chrome's Web Bluetooth Samples.\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nByMykel\nMichael J. Roberts\nChangelog\n​\nv9.3.1 on 10/17/2022\n0199b - fix: use shallowRef for bluetooth instance\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.7.4 on 6/18/2022\n06230 - feat: new function (#1694)"
  },
  {
    "title": "useBreakpoints | VueUse",
    "url": "https://vueuse.org/core/useBreakpoints/",
    "html": "useBreakpoints\n​\nCategory\nBrowser\nExport Size\n915 B\nLast Changed\n2 months ago\n\nReactive viewport breakpoints.\n\nDemo\n​\n\nsource\n\nCurrent breakpoints: [ \"sm\", \"md\", \"lg\", \"xl\", \"2xl\" ]\nxs(<640px): false\nxs(<=640px): false\nsm: false\nmd: false\nlg: false\nxl: false\n2xl: true\nUsage\n​\njs\nimport { breakpointsTailwind, useBreakpoints } from '@vueuse/core'\n\nconst breakpoints = useBreakpoints(breakpointsTailwind)\n\nconst smAndLarger = breakpoints.greaterOrEqual('sm') // sm and larger\nconst largerThanSm = breakpoints.greater('sm') // only larger than sm\nconst lgAndSmaller = breakpoints.smallerOrEqual('lg') // lg and smaller\nconst smallerThanLg = breakpoints.smaller('lg') // only smaller than lg\njs\nimport { useBreakpoints } from '@vueuse/core'\n\nconst breakpoints = useBreakpoints({\n  tablet: 640,\n  laptop: 1024,\n  desktop: 1280,\n})\n\nconst laptop = breakpoints.between('laptop', 'desktop')\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nEd\nAdrian Rudnik\nInesh Bose\nImam Susanto\nazaleta\nwebfansplz\nEge İliklier\nShinigami\nAlex Kozack\ntaidaid\nwheat\nAzri Kahar\nChangelog\n​\nv10.5.0 on 10/7/2023\nec9a4 - fix: add missing breakpoint for the bootstrap (#3413)\nv10.4.0 on 8/25/2023\n8b5ed - feat: add breakpoints for PrimeFlex (#3317)\nv10.0.0-beta.3 on 4/13/2023\ne75a5 - feat: update deps\nv10.0.0-beta.2 on 3/28/2023\nbbabd - feat: getting current breakpoints (#2906)\nv9.7.0 on 12/16/2022\n30c5b - feat: add breakpoints for Master CSS (#2529)\nv9.2.0 on 9/5/2022\n48bf3 - feat: support greaterOrEqual etc. (#2148)"
  },
  {
    "title": "useWindowSize | VueUse",
    "url": "https://vueuse.org/core/useWindowSize/",
    "html": "useWindowSize\n​\nCategory\nElements\nExport Size\n964 B\nLast Changed\n4 months ago\n\nReactive window size\n\nDemo\n​\n\nsource\n\n1680 x 1050\n\nUsage\n​\njs\nimport { useWindowSize } from '@vueuse/core'\n\nconst { width, height } = useWindowSize()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseWindowSize v-slot=\"{ width, height }\">\n  Width: {{ width }}\n  Height: {{ height }}\n</UseWindowSize>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nAntério Vieira\nIndrek Ardel\nZhousg\nvaakian X\nvaakian X\nShinigami\nwheat\nAlex Kozack\nRoman Pavlov\nChangelog\n​\nv10.0.0-beta.3 on 4/13/2023\n4e7b0 - fix!: use media query instead of orientationchange listener (#2919)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.2.0 on 9/5/2022\nd278f - feat: support includeScrollbar (#2161)\nv8.9.3 on 7/14/2022\nadf3a - fix!: rename type WindowSizeOptions to UseWindowSizeOptions (#1897)\nv8.8.0 on 7/6/2022\nc3f95 - feat: listen to the orientationchange event (#1609)"
  },
  {
    "title": "useWindowScroll | VueUse",
    "url": "https://vueuse.org/core/useWindowScroll/",
    "html": "useWindowScroll\n​\nCategory\nElements\nExport Size\n555 B\nLast Changed\n3 weeks ago\n\nReactive window scroll\n\nDemo\n​\n\nsource\n\nSee scroll values in the lower right corner of the screen.\nScroll value\nx: 0\ny: 0\nscroll Xscroll Y\nUsage\n​\njs\nimport { useWindowScroll } from '@vueuse/core'\n\nconst { x, y } = useWindowScroll()\nconsole.log(x.value) // read current x scroll value\ny.value = 100 // scroll y to 100\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nNurettin Kaya\nAntério Vieira\nChen\nJelf\nwebfansplz\nMaik Kowol\nShinigami\nAlex Kozack\nChangelog\n​\nv10.6.0 on 11/9/2023\n931b2 - feat: allow rewriting back to scroll (#3500)\nv9.13.0 on 2/18/2023\ne490a - fix: use scrollX instead of pageXOffset (#2776)\nv9.7.0 on 12/16/2022\n5df0a - fix: use configured window onScroll (#2545)"
  },
  {
    "title": "useWindowFocus | VueUse",
    "url": "https://vueuse.org/core/useWindowFocus/",
    "html": "useWindowFocus\n​\nCategory\nElements\nExport Size\n532 B\nLast Changed\n2 months ago\n\nReactively track window focus with window.onfocus and window.onblur events.\n\nDemo\n​\n\nsource\n\n💡 Click somewhere outside of the document to unfocus.\nUsage\n​\njs\nimport { useWindowFocus } from '@vueuse/core'\n\nconst focused = useWindowFocus()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseWindowFocus v-slot=\"{ focused }\">\n  Document Focus: {{ focused }}\n</UseWindowFocus>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaaski\nvaakian X\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useResizeObserver | VueUse",
    "url": "https://vueuse.org/core/useResizeObserver/",
    "html": "useResizeObserver\n​\nCategory\nElements\nExport Size\n671 B\nLast Changed\n2 months ago\n\nReports changes to the dimensions of an Element's content or the border-box\n\nDemo\n​\n\nsource\n\nResize the box to see changes\nUsage\n​\nhtml\n<template>\n  <div ref=\"el\">\n    {{text}}\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const text = ref('')\n\n    useResizeObserver(el, (entries) => {\n      const entry = entries[0]\n      const { width, height } = entry.contentRect\n      text.value = `width: ${width}, height: ${height}`\n    })\n\n    return {\n      el,\n      text,\n    }\n  }\n}\n</script>\n\nResizeObserver MDN\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nacyza\nByMykel\nvaakian X\nkarma\nShinigami\nAlex Kozack\nJacob Clevenger\nSanxiaozhizi\nAntério Vieira\nzhong666\nChangelog\n​\nv10.0.0-beta.2 on 3/28/2023\n3e187 - feat: support element list (#2841)\nv9.2.0 on 9/5/2022\n3c642 - feat(useElementSize): support box sizing (#2143)\nv8.9.3 on 7/14/2022\n28db2 - fix!: rename type ResizeObserverOptions to UseResizeObserverOptions (#1862)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useParentElement | VueUse",
    "url": "https://vueuse.org/core/useParentElement/",
    "html": "useParentElement\n​\nCategory\nElements\nExport Size\n496 B\nLast Changed\n8 months ago\n\nGet parent element of the given element\n\nUsage\n​\n\nWhen no argument is passed, it will return the parent element of the current component.\n\njs\nimport { useParentElement } from '@vueuse/core'\n\nconst parentEl = useParentElement()\n\nonMounted(() => {\n  console.log(parentEl.value)\n})\n\nIt can also accept a ref as the first argument.\n\nTypeScript\nts\nimport { useParentElement } from '@vueuse/core'\n// Don't forget to bind the ref to the element\nconst tooltip = ref<HTMLElement | undefined>()\nconst tooltipWrapper = useParentElement(tooltip)\nonMounted(() => {\n  console.log(tooltipWrapper.value)\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nJD Solanki\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\ne8168 - feat: new function (#2855)"
  },
  {
    "title": "useMutationObserver | VueUse",
    "url": "https://vueuse.org/core/useMutationObserver/",
    "html": "useMutationObserver\n​\nCategory\nElements\nExport Size\n613 B\nLast Changed\n3 weeks ago\n\nWatch for changes being made to the DOM tree. MutationObserver MDN\n\nDemo\n​\n\nsource\n\nUsage\n​\nts\nimport { ref } from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const messages = ref([])\n\n    useMutationObserver(el, (mutations) => {\n      if (mutations[0])\n        messages.value.push(mutations[0].attributeName)\n    }, {\n      attributes: true,\n    })\n\n    return {\n      el,\n      messages,\n    }\n  },\n}\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nJelf\nhuodoushigemi\nAaronBeaudoin\nlaozei\nkarma\nShinigami\nAlex Kozack\nAntério Vieira\nzhong666\nChangelog\n​\nv10.6.0 on 11/9/2023\nf9136 - feat: add takeRecords function (#3480)\nv10.5.0 on 10/7/2023\n8167b - feat: use MaybeComputedElementRef (#3430)\nv8.9.3 on 7/14/2022\n9b4f9 - fix!: rename type MutationObserverOptions to UseMutationObserverOptions (#1884)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useMouseInElement | VueUse",
    "url": "https://vueuse.org/core/usemouseinelement/",
    "html": "useMouseInElement\n​\nCategory\nElements\nExport Size\n1.12 kB\nLast Changed\nlast week\n\nReactive mouse position related to an element\n\nDemo\n​\n\nsource\n\nHover me\nx: 0\ny: 0\nsourceType: null\nelementX: 0\nelementY: 0\nelementPositionX: 0\nelementPositionY: 0\nelementHeight: 0\nelementWidth: 0\nisOutside: true\n\nUsage\n​\nhtml\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useMouseInElement } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = ref(null)\n\n    const { x, y, isOutside } = useMouseInElement(target)\n\n    return { x, y, isOutside }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseMouseInElement v-slot=\"{ elementX, elementY, isOutside }\">\n  x: {{ elementX }}\n  y: {{ elementY }}\n  Is Outside: {{ isOutside }}\n</UseMouseInElement>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nAymoc\nMikhailov Nikita\nvaakian X\nJelf\nIvan Agafonov\nShinigami\nAlex Kozack\nctholho\nNurettin Kaya\nAntério Vieira\nChangelog\n​\nv10.6.0 on 11/9/2023\n7c88d - fix: optimize outside computation (#3380)\nv9.12.0 on 1/29/2023\n54f4e - fix: check if mouse out of window (#2458)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv8.9.3 on 7/14/2022\n4d2c8 - fix(useMouse)!: rename type MouseOptions to UseMouseOptions (#1877)\nv8.6.0 on 5/31/2022\nebd60 - fix isOutside is true for detached elements (#1614) (#1615)"
  },
  {
    "title": "useIntersectionObserver | VueUse",
    "url": "https://vueuse.org/core/useIntersectionObserver/",
    "html": "useIntersectionObserver\n​\nCategory\nElements\nExport Size\n634 B\nLast Changed\n8 months ago\n\nDetects that a target element's visibility.\n\nDemo\n​\n\nsource\n\nEnable\n\nScroll me down!\n\nHello world!\n\nElement outside the viewport\nUsage\n​\nhtml\n<div ref=\"target\">\n  <h1>Hello world</h1>\n</div>\njs\nimport { ref } from 'vue'\nimport { useIntersectionObserver } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = ref(null)\n    const targetIsVisible = ref(false)\n\n    const { stop } = useIntersectionObserver(\n      target,\n      ([{ isIntersecting }], observerElement) => {\n        targetIsVisible.value = isIntersecting\n      },\n    )\n\n    return {\n      target,\n      targetIsVisible,\n    }\n  },\n}\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vIntersectionObserver } from '@vueuse/components'\n\nconst root = ref(null)\n\nconst isVisible = ref(false)\n\nfunction onIntersectionObserver([{ isIntersecting }]: IntersectionObserverEntry[]) {\n  isVisible.value = isIntersecting\n}\n\n</script>\n\n<template>\n  <div>\n    <p>\n      Scroll me down!\n    </p>\n    <div v-intersection-observer=\"onIntersectionObserver\">\n      <p>Hello world!</p>\n    </div>\n  </div>\n\n  <!-- with options -->\n  <div ref=\"root\">\n    <p>\n      Scroll me down!\n    </p>\n    <div v-intersection-observer=\"[onIntersectionObserver, { root }]\">\n      <p>Hello world!</p>\n    </div>\n  </div>\n</template>\n\nIntersectionObserver MDN\n\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nwebfansplz\nSma11X\nschelmo\nFernando Fernández\nAlex Liu\nCurt Grimes\nWaleed Khaled\n丶远方\nHassan Zahirnia\nkarma\nShinigami\nAlex Kozack\nJacob Clevenger\nAntério Vieira\nEvgeniy Gavrilov\n听风吟丶\nChangelog\n​\nv10.0.2 on 4/14/2023\n7d001 - fix: module reference, close #2972\nv10.0.1 on 4/14/2023\nb95b6 - fix: targets length check (#2968)\nv10.0.0 on 4/14/2023\nf87f8 - feat: allow multiple targets (#2964)\nv10.0.0-beta.4 on 4/13/2023\n4b336 - feat: support for Pausable interface (#2883)\nv10.0.0-beta.2 on 3/28/2023\n74b00 - fix(useElementVisibility)!: use useIntersectionObserver instead of scroll event handler (#2551)\nv8.9.3 on 7/14/2022\nfc03c - fix!: rename type IntersectionObserverOptions to UseIntersectionObserverOptions (#1870)\nv8.9.2 on 7/12/2022\n81d92 - fix(all)!: isSupported becomes Ref instead of boolean for SSR compatibility (#1800)"
  },
  {
    "title": "useElementVisibility | VueUse",
    "url": "https://vueuse.org/core/useelementvisibility/",
    "html": "useElementVisibility\n​\nCategory\nElements\nExport Size\n692 B\nLast Changed\n2 months ago\n\nTracks the visibility of an element within the viewport.\n\nDemo\n​\n\nsource\n\nInfo on the right bottom corner\nTarget Element (scroll down)\nElement inside the viewport\nUsage\n​\nhtml\n<template>\n  <div ref=\"target\">\n    <h1>Hello world</h1>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useElementVisibility } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const target = ref(null)\n    const targetIsVisible = useElementVisibility(target)\n\n    return {\n      target,\n      targetIsVisible,\n    }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseElementVisibility v-slot=\"{ isVisible }\">\n  Is Visible: {{ isVisible }}\n</UseElementVisibility>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { vElementVisibility } from '@vueuse/components'\n\nconst target = ref(null)\nconst isVisible = ref(false)\n\nfunction onElementVisibility(state) {\n  isVisible.value = state\n}\n</script>\n\n<template>\n  <div v-element-visibility=\"onElementVisibility\">\n    {{ isVisible ? 'inside' : 'outside' }}\n  </div>\n\n  <!-- with options -->\n  <div ref=\"target\">\n    <div v-element-visibility=\"[onElementVisibility, { scrollTarget: target }]\">\n      {{ isVisible ? 'inside' : 'outside' }}\n    </div>\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nScott Bedard\nwheat\nAmr Bashir\nerikwu\nCurt Grimes\nvaakian X\nsun0day\n三咲智子\nJelf\nwebfansplz\nAllenYu\nAry Raditya\nChung, Lian\nCarlos Yanes\nAlex Kozack\nChangelog\n​\nv10.4.0 on 8/25/2023\n429ed - fix: adjust threshold to 0 to fix visibility issue with large element (#3308)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv10.0.0-beta.2 on 3/28/2023\n74b00 - fix!: use useIntersectionObserver instead of scroll event handler (#2551)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.2.0 on 9/5/2022\nde5a9 - feat: support watch the real element (#2169)\nv8.9.3 on 7/14/2022\n86df7 - fix!: rename type VisibilityScrollTargetOptions to UseElementVisibilityOptions (#1863)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useElementSize | VueUse",
    "url": "https://vueuse.org/core/useElementSize/",
    "html": "useElementSize\n​\nCategory\nElements\nExport Size\n955 B\nLast Changed\n3 weeks ago\n\nReactive size of an HTML element. ResizeObserver MDN\n\nDemo\n​\n\nsource\n\nResize the box to see changes\nUsage\n​\nhtml\n<template>\n  <div ref=\"el\">\n    Height: {{ height }}\n    Width: {{ width }}\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useElementSize } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const { width, height } = useElementSize(el)\n\n    return {\n      el,\n      width,\n      height,\n    }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseElementSize v-slot=\"{ width, height }\">\n  Width: {{ width }}\n  Height: {{ height }}\n</UseElementSize>\nDirective Usage\n​\n\nThis function also provides a directive version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<script setup lang=\"ts\">\nimport { vElementSize } from '@vueuse/components'\nfunction onResize({ width, height }: { width: number; height: number }) {\n  console.log(width, height)\n}\n</script>\n\n<template>\n  <textarea v-element-size=\"onResize\" />\n  <!-- with options -->\n  <textarea v-element-size=\"[onResize, {width:100,height:100}, {'box':'content-box'} ]\" />\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nMikhailov Nikita\nwheat\nmenghan\n仿生狮子\nByMykel\njing\nvaakian X\nVasily Kuzin\nvaakian X\nJelf\nShinigami\nAlex Kozack\nSanxiaozhizi\nChangelog\n​\nv10.6.0 on 11/9/2023\n165c8 - fix: get value in onMounted hook (#3366)\n5f545 - feat: stop function (#3367)\nv10.4.0 on 8/25/2023\n791f7 - fix: add as prop for component usage (#3274)\nv9.12.0 on 1/29/2023\n902b3 - fix: fix incorrect element size on SVG (#2661)\n30475 - fix: use contentBoxSize as an array in useElementSize (#2520)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.2.0 on 9/5/2022\n3c642 - feat: support box sizing (#2143)\nv8.9.3 on 7/14/2022\n28db2 - fix(useResizeObserver)!: rename type ResizeObserverOptions to UseResizeObserverOptions (#1862)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useElementBounding | VueUse",
    "url": "https://vueuse.org/core/useElementBounding/",
    "html": "useElementBounding\n​\nCategory\nElements\nExport Size\n1.15 kB\nLast Changed\nlast year\n\nReactive bounding box of an HTML element\n\nDemo\n​\n\nsource\n\nResize the box to see changes\nUsage\n​\nhtml\n<template>\n  <div ref=\"el\" />\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useElementBounding } from '@vueuse/core'\n\nexport default {\n  setup() {\n    const el = ref(null)\n    const { x, y, top, right, bottom, left, width, height } = useElementBounding(el)\n\n    return {\n      el,\n      /* ... */\n    }\n  }\n}\n</script>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseElementBounding v-slot=\"{ width, height }\">\n  Width: {{ width }}\n  Height: {{ height }}\n</UseElementBounding>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nwheat\nvaakian X\nDucz01\nhsyq\nHebilicious\nwebfansplz\nCiro Lo Sapio\nShinigami\nAlex Kozack\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.10.0 on 1/3/2023\n268a6 - fix: update on scroll (#2596)\nv8.9.3 on 7/14/2022\n28db2 - fix(useResizeObserver)!: rename type ResizeObserverOptions to UseResizeObserverOptions (#1862)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useDropZone | VueUse",
    "url": "https://vueuse.org/core/useDropZone/",
    "html": "useDropZone\n​\nCategory\nElements\nExport Size\n629 B\nLast Changed\n3 weeks ago\n\nCreate a zone where files can be dropped.\n\nDemo\n​\n\nsource\n\nDrop files on to drop zones\n\nPNG\nSVG\nGeneral DropZone\nisOverDropZone: false\nImage DropZone\nisOverDropZone: false\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { useDropZone } from '@vueuse/core'\n\nconst dropZoneRef = ref<HTMLDivElement>()\n\nfunction onDrop(files: File[] | null) {\n  // called when files are dropped on zone\n}\n\nconst { isOverDropZone } = useDropZone(dropZoneRef, {\n  onDrop,\n  // specify the types of data to be received.\n  dataTypes: ['image/jpeg']\n})\n</script>\n\n<template>\n  <div ref=\"dropZoneRef\">\n    Drop files here\n  </div>\n</template>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nNeo Fu\nLuka Bagic\naki77\nMatthias Stiller\nJulien Martin\nChangelog\n​\nv10.6.0 on 11/9/2023\n3f3f1 - feat: add dataTypes option (#3471)\nv10.2.1 on 6/28/2023\n6d4ef - feat: expose files as ref\n17d8d - feat: expose more hooks\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.4 on 7/17/2022\n2670e - fix: improve argument type (#1933)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.6.0 on 5/31/2022\nd6407 - feat: new function (#1610)"
  },
  {
    "title": "useDraggable | VueUse",
    "url": "https://vueuse.org/core/useDraggable/",
    "html": "useDraggable\n​\nCategory\nElements\nExport Size\n1.36 kB\nLast Changed\n3 weeks ago\n\nMake elements draggable.\n\nDemo\n​\n\nsource\n\nCheck the floating boxes\n\n👋 Drag me!\nI am at 400, 80\nRenderless component\nPosition persisted in sessionStorage\n431, 150\n👋 Drag here!\nHandle that triggers the drag event\nI am at 467, 240\nUsage\n​\nhtml\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useDraggable } from '@vueuse/core'\n\nconst el = ref<HTMLElement | null>(null)\n\n// `style` will be a helper computed for `left: ?px; top: ?px;`\nconst { x, y, style } = useDraggable(el, {\n  initialValue: { x: 40, y: 40 },\n})\n</script>\n\n<template>\n  <div ref=\"el\" :style=\"style\" style=\"position: fixed\">\n    Drag me! I am at {{x}}, {{y}}\n  </div>\n</template>\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDraggable :initialValue=\"{ x: 10, y: 10 }\" v-slot=\"{ x, y }\">\n  Drag me! I am at {{x}}, {{y}}\n</UseDraggable>\n\nFor component usage, additional props storageKey and storageType can be passed to the component and enable the persistence of the element position.\n\nhtml\n<UseDraggable storage-key=\"vueuse-draggable\" storage-type=\"session\">\n  Refresh the page and I am still in the same position!\n</UseDraggable>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nwebfansplz\nShigma\nhuiliangShen\nJessé Correia Lins\nfaga\nvaakian X\nAkiho Nagao\nstefnotch\nbtea\nguolao\nvaakian X\nJelf\ndonotloveshampo\nJulian Meinking\nJukka Raimovaara\nwheat\nChangelog\n​\nv10.6.0 on 11/9/2023\n08246 - fix: element can't relative parent element move (#3531)\nv10.4.0 on 8/25/2023\nc08e5 - feat: allowing calculations of bounds with fixed element (#3335)\nv10.2.0 on 6/16/2023\n6b670 - feat: improve component props (#3075)\nv10.0.0-beta.4 on 4/13/2023\n3996d - feat: support capture option (#2725)\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.3 on 4/13/2023\n0842a - feat: introduce axis option (#2948)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\ne39c2 - fix: write to useStorage (#2575)\nv9.7.0 on 12/16/2022\nc9186 - fix: use clientX instead of pageX, close #2053 (#2054)\nv9.2.0 on 9/5/2022\n33587 - feat: support customizing trigger element (#2133)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.6.0 on 5/31/2022\n5e315 - fix: should pass the stopPropagation option for component (#1620)"
  },
  {
    "title": "useDocumentVisibility | VueUse",
    "url": "https://vueuse.org/core/useDocumentVisibility/",
    "html": "useDocumentVisibility\n​\nCategory\nElements\nExport Size\n542 B\nLast Changed\n2 months ago\n\nReactively track document.visibilityState\n\nDemo\n​\n\nsource\n\n💡 Minimize the page or switch tab then return\nUsage\n​\njs\nimport { useDocumentVisibility } from '@vueuse/core'\n\nconst visibility = useDocumentVisibility()\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseDocumentVisibility v-slot=\"{ visibility }\">\n  Document Visibility: {{ visibility }}\n</UseDocumentVisibility>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nvaakian X\nJelf\nShinigami\nwheat\nAlex Kozack\nScott Bedard\nChangelog\n​\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)"
  },
  {
    "title": "useActiveElement | VueUse",
    "url": "https://vueuse.org/core/useActiveElement/",
    "html": "useActiveElement\n​\nCategory\nElements\nExport Size\n712 B\nLast Changed\n4 months ago\n\nReactive document.activeElement\n\nDemo\n​\n\nsource\n\nSelect the inputs below to see the changes\nCurrent Active Element: null\nUsage\n​\njs\nimport { useActiveElement } from '@vueuse/core'\n\nconst activeElement = useActiveElement()\n\nwatch(activeElement, (el) => {\n  console.log('focus changed to', el)\n})\nComponent Usage\n​\n\nThis function also provides a renderless component version via the @vueuse/components package. Learn more about the usage.\n\nhtml\n<UseActiveElement v-slot=\"{ element }\">\n  Active element is {{ element.dataset.id }}\n</UseActiveElement>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nDominik Pschenitschni\nduoduoObama\nvaakian X\nJames Garbutt\nvaakian X\nwheat\nAlex Kozack\nChangelog\n​\nv10.3.0 on 7/30/2023\n296dc - feat: search deeply in shadow dom (#3208)\nv9.11.0 on 1/17/2023\nd5321 - fix(components): mark defineComponent as pure (#2623)\nv9.10.0 on 1/3/2023\n07f20 - feat: support shadow roots (#2592)\nae78d - fix: ignore if relatedTarget is set (#2600)\nv9.7.0 on 12/16/2022\n88b44 - fix: ignore blur for relatedTarget (#2540)\nv9.1.1 on 8/23/2022\nc534e - fix: use computedWithControl instead of counter ref (#2093)"
  },
  {
    "title": "useThrottledRefHistory | VueUse",
    "url": "https://vueuse.org/core/useThrottledRefHistory/",
    "html": "useThrottledRefHistory\n​\nCategory\nState\nExport Size\n1.73 kB\nLast Changed\nlast year\nRelated\nuseDebouncedRefHistory\nuseRefHistory\n\nShorthand for useRefHistory with throttled filter.\n\nDemo\n​\n\nsource\n\nCount: 0\nIncrementDecrement/UndoRedo\nDelay (in ms):\n\n\n\nHistory (limited to 10 records for demo)\n2023-11-28 22:16:19{ value: 0 }\nUsage\n​\n\nThis function takes the first snapshot right after the counter's value was changed and the second with a delay of 1000ms.\n\nts\nimport { ref } from 'vue'\nimport { useThrottledRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useThrottledRefHistory(counter, { deep: true, throttle: 1000 })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nRoman Harmyder\nJelf\nBodo Graumann\nwheat\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useStorageAsync | VueUse",
    "url": "https://vueuse.org/core/useStorageAsync/",
    "html": "useStorageAsync\n​\nCategory\nState\nExport Size\n1.63 kB\nLast Changed\n8 months ago\nRelated\nuseStorage\n\nReactive Storage in with async support.\n\nUsage\n​\n\nPlease refer to useStorage\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nJelf\n丶远方\nWu Rui\nntnyq\nWaldi\nAndreas Weber\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\n105f4 - fix: handle mergeDefaults option (#2773)\nv8.9.3 on 7/14/2022\nab332 - fix!: rename type StorageAsyncOptions to UseStorageAsyncOptions (#1883)\n499f6 - fix(useStorage)!: rename type StorageOptions to UseStorageOptions (#1867)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useSessionStorage | VueUse",
    "url": "https://vueuse.org/core/usesessionstorage/",
    "html": "useSessionStorage\n​\nCategory\nState\nExport Size\n2.03 kB\nLast Changed\n7 months ago\nRelated\nuseStorage\n\nReactive SessionStorage.\n\nUsage\n​\n\nPlease refer to useStorage\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nntnyq\nJelf\nShinigami\nPig Fang\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.3 on 7/14/2022\n499f6 - fix(useStorage)!: rename type StorageOptions to UseStorageOptions (#1867)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useStorage | VueUse",
    "url": "https://vueuse.org/core/useStorage/",
    "html": "useStorage\n​\nCategory\nState\nExport Size\n1.99 kB\nLast Changed\n3 weeks ago\nRelated\nuseColorMode\nuseDark\nuseLocalStorage\nuseSessionStorage\nuseStorageAsync\n\nReactive LocalStorage/SessionStorage\n\nDemo\n​\n\nsource\n\nname: 'Banana'\ncolor: 'Yellow'\nsize: 'Medium'\ncount: 0\n\nUsage\n​\n\nTIP\n\nWhen using with Nuxt 3, this functions will NOT be auto imported in favor of Nitro's built-in useStorage(). Use explicit import if you want to use the function from VueUse.\n\njs\nimport { useStorage } from '@vueuse/core'\n\n// bind object\nconst state = useStorage('my-store', { hello: 'hi', greeting: 'Hello' })\n\n// bind boolean\nconst flag = useStorage('my-flag', true) // returns Ref<boolean>\n\n// bind number\nconst count = useStorage('my-count', 0) // returns Ref<number>\n\n// bind string with SessionStorage\nconst id = useStorage('my-id', 'some-string-id', sessionStorage) // returns Ref<string>\n\n// delete data from storage\nstate.value = null\nMerge Defaults\n​\n\nBy default, useStorage will use the value from storage if it is present and ignores the default value. Be aware that when you are adding more properties to the default value, the key might be undefined if client's storage does not have that key.\n\nts\nlocalStorage.setItem('my-store', '{\"hello\": \"hello\"}')\n\nconst state = useStorage('my-store', { hello: 'hi', greeting: 'hello' }, localStorage)\n\nconsole.log(state.value.greeting) // undefined, since the value is not presented in storage\n\nTo solve that, you can enable mergeDefaults option.\n\nTypeScript\nts\nlocalStorage.setItem('my-store', '{\"hello\": \"nihao\"}')\nconst state = useStorage(\n  'my-store',\n  { hello: 'hi', greeting: 'hello' },\n  localStorage,\n  { mergeDefaults: true }, // <--\n)\nconsole.log(state.value.hello) // 'nihao', from storage\nconsole.log(state.value.greeting) // 'hello', from merged default value\n\nWhen setting it to true, it will perform a shallow merge for objects. You can pass a function to perform custom merge (e.g. deep merge), for example:\n\nTypeScript\nts\nconst state = useStorage(\n  'my-store',\n  { hello: 'hi', greeting: 'hello' },\n  localStorage,\n  {\n    mergeDefaults: (storageValue, defaults) =>\n      deepMerge(defaults, storageValue),\n  }, // <--\n)\nCustom Serialization\n​\n\nBy default, useStorage will smartly use the corresponding serializer based on the data type of provided default value. For example, JSON.stringify / JSON.parse will be used for objects, Number.toString / parseFloat for numbers, etc.\n\nYou can also provide your own serialization function to useStorage\n\nTypeScript\nts\nimport { useStorage } from '@vueuse/core'\nuseStorage('key', {}, undefined, {\n  serializer: {\n    read: (v: any) => (v ? JSON.parse(v) : null),\n    write: (v: any) => JSON.stringify(v),\n  },\n})\n\nPlease note when you provide null as the default value, useStorage can't assume the data type from it. In this case, you can provide a custom serializer or reuse the built-in ones explicitly.\n\nts\nimport { StorageSerializers, useStorage } from '@vueuse/core'\n\nconst objectLike = useStorage('key', null, undefined, { serializer: StorageSerializers.object })\nobjectLike.value = { foo: 'bar' }\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nJelf\nJeffrey Li\nEduardo San Martin Morote\n丶远方\nDaniel Maixner\nchenglu\nDavid Ma\nDaniel Mittereder\nClément Ollivier\nJames Garbutt\nYury Rudey\nPuru Vijay\nwebfansplz\nspking11\nMaurici Abad Gutierrez\nGuillaume Chau\nDenis Blazhkun\nAndreas Weber\nLe Minh Tri\nJamie Warburton\nShinigami\nSasan Farrokh\nPig Fang\nwheat\nAlex Kozack\nNurettin Kaya\nPine\nAntério Vieira\nIvan Demchuk\nChangelog\n​\nv10.6.0 on 11/9/2023\ndc6f2 - feat: add waitOnMounted option for SSR (#3504)\nb6d2b - fix: fix defaults not unwrapped (#3534)\nv10.4.0 on 8/25/2023\n6fabe - fix: read object only when it's serialized differently (#2782) (#3091)\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\nc6185 - fix: emit a custom event to support custom storage areas (#2630)\nv9.8.2 on 12/20/2022\n800f7 - fix: sync within page, close #1595\nv9.8.1 on 12/20/2022\nc3851 - fix: resume the watch after setting the value, fix loop updates\nv9.3.1 on 10/17/2022\na06b7 - fix: fixed data desynchronization in case of clearing storage (#2221)\nv9.0.0-beta.2 on 7/24/2022\n26aae - feat: mergeDefaults option (#1957)\nv8.9.3 on 7/14/2022\n499f6 - fix!: rename type StorageOptions to UseStorageOptions (#1867)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useManualRefHistory | VueUse",
    "url": "https://vueuse.org/core/useManualRefHistory/",
    "html": "useManualRefHistory\n​\nCategory\nState\nExport Size\n516 B\nLast Changed\n4 months ago\nRelated\nuseRefHistory\n\nManually track the change history of a ref when the using calls commit(), also provides undo and redo functionality\n\nDemo\n​\n\nsource\n\nCount: 0\nIncrementDecrement/CommitUndoRedo\n\n\nHistory (limited to 10 records for demo)\n2023-11-28 22:16:17{ value: 0 }\nUsage\n​\nts\nimport { ref } from 'vue'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, commit, undo, redo } = useManualRefHistory(counter)\n\ncounter.value += 1\ncommit()\n\nconsole.log(history.value)\n/* [\n  { snapshot: 1, timestamp: 1601912898062 },\n  { snapshot: 0, timestamp: 1601912898061 }\n] */\n\nYou can use undo to reset the ref value to the last history point.\n\nts\nconsole.log(counter.value) // 1\nundo()\nconsole.log(counter.value) // 0\nHistory of mutable objects\n​\n\nIf you are going to mutate the source, you need to pass a custom clone function or use clone true as a param, that is a shortcut for a minimal clone function x => JSON.parse(JSON.stringify(x)) that will be used in both dump and parse.\n\nts\nimport { ref } from 'vue'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst counter = ref({ foo: 1, bar: 2 })\nconst { history, commit, undo, redo } = useManualRefHistory(counter, { clone: true })\n\ncounter.value.foo += 1\ncommit()\nCustom Clone Function\n​\n\nTo use a full featured or custom clone function, you can set up via the clone options.\n\nFor example, using structuredClone:\n\nts\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, { clone: structuredClone })\n\nOr by using lodash's cloneDeep:\n\nts\nimport { cloneDeep } from 'lodash-es'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, { clone: cloneDeep })\n\nOr a more lightweight klona:\n\nts\nimport { klona } from 'klona'\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, { clone: klona })\nCustom Dump and Parse Function\n​\n\nInstead of using the clone options, you can pass custom functions to control the serialization and parsing. In case you do not need history values to be objects, this can save an extra clone when undoing. It is also useful in case you want to have the snapshots already stringified to be saved to local storage for example.\n\nts\nimport { useManualRefHistory } from '@vueuse/core'\n\nconst refHistory = useManualRefHistory(target, {\n  dump: JSON.stringify,\n  parse: JSON.parse,\n})\nHistory Capacity\n​\n\nWe will keep all the history by default (unlimited) until you explicitly clear them up, you can set the maximal amount of history to be kept by capacity options.\n\nts\nconst refHistory = useManualRefHistory(target, {\n  capacity: 15, // limit to 15 history records\n})\n\nrefHistory.clear() // explicitly clear all the history\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nMatias Capeletto\nLov`u`e\nЕгор\n丶远方\nazaleta\nEduardo Wesley\nSahin D\nvaakian X\nHollis Wu\nwheat\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv9.2.0 on 9/5/2022\n369e1 - feat(useVModel): support clone option (#2022)"
  },
  {
    "title": "useRefHistory | VueUse",
    "url": "https://vueuse.org/core/useRefHistory/",
    "html": "useRefHistory\n​\nCategory\nState\nExport Size\n1.45 kB\nLast Changed\nlast year\nRelated\nuseDebouncedRefHistory\nuseManualRefHistory\nuseThrottledRefHistory\n\nTrack the change history of a ref, also provides undo and redo functionality\n\nLearn useRefHistory with this FREE video lesson from Vue School!\nDemo\n​\n\nsource\n\nCount: 0\nIncrementDecrement/UndoRedo\n\n\nHistory (limited to 10 records for demo)\n2023-11-28 22:16:16{ value: 0 }\nUsage\n​\nts\nimport { ref } from 'vue'\nimport { useRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useRefHistory(counter)\n\nInternally, watch is used to trigger a history point when the ref value is modified. This means that history points are triggered asynchronously batching modifications in the same \"tick\".\n\nts\ncounter.value += 1\n\nawait nextTick()\nconsole.log(history.value)\n/* [\n  { snapshot: 1, timestamp: 1601912898062 },\n  { snapshot: 0, timestamp: 1601912898061 }\n] */\n\nYou can use undo to reset the ref value to the last history point.\n\nts\nconsole.log(counter.value) // 1\nundo()\nconsole.log(counter.value) // 0\nObjects / arrays\n​\n\nWhen working with objects or arrays, since changing their attributes does not change the reference, it will not trigger the committing. To track attribute changes, you would need to pass deep: true. It will create clones for each history record.\n\nts\nconst state = ref({\n  foo: 1,\n  bar: 'bar',\n})\n\nconst { history, undo, redo } = useRefHistory(state, {\n  deep: true,\n})\n\nstate.value.foo = 2\n\nawait nextTick()\nconsole.log(history.value)\n/* [\n  { snapshot: { foo: 2, bar: 'bar' } },\n  { snapshot: { foo: 1, bar: 'bar' } }\n] */\nCustom Clone Function\n​\n\nuseRefHistory only embeds the minimal clone function x => JSON.parse(JSON.stringify(x)). To use a full featured or custom clone function, you can set up via the clone options.\n\nFor example, using structuredClone:\n\nts\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: structuredClone })\n\nOr by using lodash's cloneDeep:\n\nts\nimport { cloneDeep } from 'lodash-es'\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: cloneDeep })\n\nOr a more lightweight klona:\n\nts\nimport { klona } from 'klona'\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, { clone: klona })\nCustom Dump and Parse Function\n​\n\nInstead of using the clone options, you can pass custom functions to control the serialization and parsing. In case you do not need history values to be objects, this can save an extra clone when undoing. It is also useful in case you want to have the snapshots already stringified to be saved to local storage for example.\n\nts\nimport { useRefHistory } from '@vueuse/core'\n\nconst refHistory = useRefHistory(target, {\n  dump: JSON.stringify,\n  parse: JSON.parse,\n})\nHistory Capacity\n​\n\nWe will keep all the history by default (unlimited) until you explicitly clear them up, you can set the maximal amount of history to be kept by capacity options.\n\nts\nconst refHistory = useRefHistory(target, {\n  capacity: 15, // limit to 15 history records\n})\n\nrefHistory.clear() // explicitly clear all the history\nHistory Flush Timing\n​\n\nFrom Vue's documentation: Vue's reactivity system buffers invalidated effects and flush them asynchronously to avoid unnecessary duplicate invocation when there are many state mutations happening in the same \"tick\".\n\nIn the same way as watch, you can modify the flush timing using the flush option.\n\nts\nconst refHistory = useRefHistory(target, {\n  flush: 'sync', // options 'pre' (default), 'post' and 'sync'\n})\n\nThe default is 'pre', to align this composable with the default for Vue's watchers. This also helps to avoid common issues, like several history points generated as part of a multi-step update to a ref value that can break invariants of the app state. You can use commit() in case you need to create multiple history points in the same \"tick\"\n\nts\nconst r = ref(0)\nconst { history, commit } = useRefHistory(r)\n\nr.value = 1\ncommit()\n\nr.value = 2\ncommit()\n\nconsole.log(history.value)\n/* [\n  { snapshot: 2 },\n  { snapshot: 1 },\n  { snapshot: 0 },\n] */\n\nOn the other hand, when using flush 'sync', you can use batch(fn) to generate a single history point for several sync operations\n\nts\nconst r = ref({ names: [], version: 1 })\nconst { history, batch } = useRefHistory(r, { flush: 'sync' })\n\nbatch(() => {\n  r.value.names.push('Lena')\n  r.value.version++\n})\n\nconsole.log(history.value)\n/* [\n  { snapshot: { names: [ 'Lena' ], version: 2 },\n  { snapshot: { names: [], version: 1 },\n] */\n\nIf { flush: 'sync', deep: true } is used, batch is also useful when doing a mutable splice in an array. splice can generate up to three atomic operations that will be pushed to the ref history.\n\nts\nconst arr = ref([1, 2, 3])\nconst { history, batch } = useRefHistory(arr, { deep: true, flush: 'sync' })\n\nbatch(() => {\n  arr.value.splice(1, 1) // batch ensures only one history point is generated\n})\n\nAnother option is to avoid mutating the original ref value using arr.value = [...arr.value].splice(1,1).\n\nRecommended Readings\n​\nHistory and Persistence - by @matias-capeletto\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nMatias Capeletto\nLov`u`e\nKyrie890514\nsun0day\nEduardo Wesley\nvaakian X\nHollis Wu\nBruno Perel\nwheat\nwebfansplz\nRoman Harmyder\nAlex Kozack\nAntério Vieira\nChangelog\n​\nv9.2.0 on 9/5/2022\n369e1 - feat(useVModel): support clone option (#2022)"
  },
  {
    "title": "useDebouncedRefHistory | VueUse",
    "url": "https://vueuse.org/core/usedebouncedrefhistory/",
    "html": "useDebouncedRefHistory\n​\nCategory\nState\nExport Size\n1.7 kB\nLast Changed\n8 months ago\nRelated\nuseRefHistory\nuseThrottledRefHistory\n\nShorthand for useRefHistory with debounced filter.\n\nDemo\n​\n\nsource\n\nCount: 0\nIncrementDecrement/UndoRedo\nDelay (in ms):\n\n\n\nHistory (limited to 10 records for demo)\n2023-11-28 22:16:15{ value: 0 }\nUsage\n​\n\nThis function takes a snapshot of your counter after 1000ms when the value of it starts to change.\n\nts\nimport { ref } from 'vue'\nimport { useDebouncedRefHistory } from '@vueuse/core'\n\nconst counter = ref(0)\nconst { history, undo, redo } = useDebouncedRefHistory(counter, { deep: true, debounce: 1000 })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nRoman Harmyder\nwheat\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useLocalStorage | VueUse",
    "url": "https://vueuse.org/core/useLocalStorage/",
    "html": "useLocalStorage\n​\nCategory\nState\nExport Size\n2.02 kB\nLast Changed\n8 months ago\nRelated\nuseStorage\n\nReactive LocalStorage.\n\nUsage\n​\n\nPlease refer to useStorage\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nAntério Vieira\nntnyq\nJelf\nShinigami\nPig Fang\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.3 on 7/14/2022\n499f6 - fix(useStorage)!: rename type StorageOptions to UseStorageOptions (#1867)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useAsyncState | VueUse",
    "url": "https://vueuse.org/core/useAsyncState/",
    "html": "useAsyncState\n​\nCategory\nState\nExport Size\n1.17 kB\nLast Changed\n7 months ago\n\nReactive async state. Will not block your setup function and will trigger changes once the promise is ready. The state is a shallowRef by default.\n\nDemo\n​\n\nsource\n\nReady: false\nLoading: true\n{}\n\nExecute\nUsage\n​\nts\nimport axios from 'axios'\nimport { useAsyncState } from '@vueuse/core'\n\nconst { state, isReady, isLoading } = useAsyncState(\n  axios\n    .get('https://jsonplaceholder.typicode.com/todos/1')\n    .then(t => t.data),\n  { id: null },\n)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nFlamenco\nmachete\nJules Raffoux\nhfutsora\nBrain777777\nMao Mr\nJelf\nSergey Shumov\nlsdsjy\nIIFelix\nAlex Francev\nwebfansplz\nShinigami\nShahar Kosti\nAlex Kozack\nordago\nJacob Clevenger\nAntério Vieira\nChangelog\n​\nv10.1.0 on 4/22/2023\nd4db0 - feat: add support directly await (#3004)\nv10.0.0-beta.1 on 3/23/2023\nb636f - fix: fix toThrowError error type (#2898)\nv9.13.0 on 2/18/2023\nb4c63 - feat: get a promise function parameter type declaration (#2765)\nv9.9.0 on 12/23/2022\ned64f - feat: add onSuccess callbacks (#2562)\nv9.0.0-beta.2 on 7/24/2022\n837b6 - feat: add throwError option (#1975)\nv8.9.2 on 7/12/2022\n24ede - fix!: rename type AsyncStateOptions to UseAsyncStateOptions (#1809)"
  },
  {
    "title": "useArrayFindIndex | VueUse",
    "url": "https://vueuse.org/shared/useArrayFindIndex/#VPContent",
    "html": "useArrayFindIndex\n​\nCategory\nArray\nExport Size\n136 B\nLast Changed\n2 months ago\n\nReactive Array.findIndex\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayFindIndex } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayFindIndex(list, i => i % 2 === 0)\n// result.value: 0\nitem1.value = 1\n// result.value: 1\nUse with reactive array\n​\njs\nimport { useArrayFindIndex } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayFindIndex(list, i => i % 2 === 0)\n// result.value: 0\nlist.value.unshift(-1)\n// result.value: 1\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv9.0.0-beta.2 on 7/24/2022\nc1520 - feat: new function (#1973)"
  },
  {
    "title": "useArrayIncludes | VueUse",
    "url": "https://vueuse.org/shared/useArrayIncludes/#VPContent",
    "html": "useArrayIncludes\n​\nCategory\nArray\nExport Size\n340 B\nLast Changed\n2 months ago\n\nReactive Array.includes\n\nUsage\n​\nUse with reactive array\n​\njs\nimport { useArrayIncludes } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayIncludes(list, 10)\n// result.value: false\nlist.value.push(10)\n// result.value: true\nlist.value.pop()\n// result.value: false\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.0 on 3/14/2023\n4d6bc - feat: new function (#2708)"
  },
  {
    "title": "useArrayFindLast | VueUse",
    "url": "https://vueuse.org/shared/usearrayfindlast/#VPContent",
    "html": "useArrayFindLast\n​\nCategory\nArray\nExport Size\n191 B\nLast Changed\n2 months ago\n\nReactive Array.findLast.\n\nUsage\n​\njs\nimport { useArrayFindLast } from '@vueuse/core'\n\nconst list = [ref(1), ref(-1), ref(2)]\nconst positive = useArrayFindLast(list, val => val > 0)\n// positive.value: 2\nUse with reactive array\n​\njs\nimport { useArrayFindLast } from '@vueuse/core'\n\nconst list = reactive([-1, -2])\nconst positive = useArrayFindLast(list, val => val > 0)\n// positive.value: undefined\nlist.push(10)\n// positive.value: 10\nlist.push(5)\n// positive.value: 5\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\nb0ac4 - feat: new function (#2471)"
  },
  {
    "title": "useArrayFind | VueUse",
    "url": "https://vueuse.org/shared/useArrayFind/#VPContent",
    "html": "useArrayFind\n​\nCategory\nArray\nExport Size\n137 B\nLast Changed\n2 months ago\n\nReactive Array.find.\n\nUsage\n​\njs\nimport { useArrayFind } from '@vueuse/core'\n\nconst list = [ref(1), ref(-1), ref(2)]\nconst positive = useArrayFind(list, val => val > 0)\n// positive.value: 1\nUse with reactive array\n​\njs\nimport { useArrayFind } from '@vueuse/core'\n\nconst list = reactive([-1, -2])\nconst positive = useArrayFind(list, val => val > 0)\n// positive.value: undefined\nlist.push(1)\n// positive.value: 1\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nLevi (Nguyễn Lương Huy)\nXLor\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\nd00b7 - feat: new function (#1875)"
  },
  {
    "title": "useArrayFilter | VueUse",
    "url": "https://vueuse.org/shared/useArrayFilter/#VPContent",
    "html": "useArrayFilter\n​\nCategory\nArray\nExport Size\n132 B\nLast Changed\n2 months ago\n\nReactive Array.filter\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayFilter } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayFilter(list, i => i % 2 === 0)\n// result.value: [0, 2, 4, 6, 8]\nitem2.value = 1\n// result.value: [0, 4, 6, 8]\nUse with reactive array\n​\njs\nimport { useArrayFilter } from '@vueuse/core'\n\nconst list = ref([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\nconst result = useArrayFilter(list, i => i % 2 === 0)\n// result.value: [0, 2, 4, 6, 8]\nlist.value.shift()\n// result.value: [2, 4, 6, 8]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.3 on 7/14/2022\n50e35 - feat: new function (#1905)"
  },
  {
    "title": "useThrottleFn | VueUse",
    "url": "https://vueuse.org/shared/useThrottleFn/#VPContent",
    "html": "useThrottleFn\n​\nCategory\nUtilities\nExport Size\n401 B\nLast Changed\n2 months ago\nRelated\nrefDebounced\nrefThrottled\nuseDebounceFn\n\nThrottle execution of a function. Especially useful for rate limiting execution of handlers on events like resize and scroll.\n\nThrottle is a spring that throws balls: after a ball flies out it needs some time to shrink back, so it cannot throw any more balls unless it's ready.\n\nDemo\n​\n\nsource\n\nSmash me!\nDelay is set to 1000ms for this demo.\n\nButton clicked: 0\n\nEvent handler called: 0\n\nUsage\n​\njs\nimport { useThrottleFn } from '@vueuse/core'\n\nconst throttledFn = useThrottleFn(() => {\n  // do something, it will be called at most 1 time per second\n}, 1000)\n\nwindow.addEventListener('resize', throttledFn)\nRecommended Reading\n​\nDebounce vs Throttle: Definitive Visual Guide\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nvaakian X\nazaleta\nwebfansplz\nJakub Freisler\nRoman Harmyder\nwheat\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.10.0 on 1/3/2023\n4d305 - feat(useDebounceFn,useThrottleFn): return result using promise (#2580)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.9.0 on 7/6/2022\na76b2 - fix: trailing option should be false by default (#1687)"
  },
  {
    "title": "createEventHook | VueUse",
    "url": "https://vueuse.org/shared/createEventHook/#VPContent",
    "html": "createEventHook\n​\nCategory\nUtilities\nExport Size\n212 B\nLast Changed\n3 weeks ago\n\nUtility for creating event hooks\n\nUsage\n​\n\nCreating a function that uses createEventHook\n\nTypeScript\nts\nimport { createEventHook } from '@vueuse/core'\nexport function useMyFetch(url) {\n  const fetchResult = createEventHook<Response>()\n  const fetchError = createEventHook<any>()\n  fetch(url)\n    .then((result) => fetchResult.trigger(result))\n    .catch((error) => fetchError.trigger(error.message))\n  return {\n    onResult: fetchResult.on,\n    onError: fetchError.on,\n  }\n}\n\nUsing a function that uses createEventHook\n\nhtml\n<script setup lang=\"ts\">\nimport { useMyFetch } from './my-fetch-function'\n\nconst { onResult, onError } = useMyFetch('my api url')\n\nonResult((result) => {\n  console.log(result)\n})\n\nonError((error) => {\n  console.error(error)\n})\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nCurt Grimes\nGuillaume Chau\n丶远方\nAmirreza Zarkesh\n超杰\nsun0day\nChangelog\n​\nv10.6.0 on 11/9/2023\n6040e - feat: allow trigger to optionally have no parameters (#3507)\nv10.0.0-beta.0 on 3/14/2023\n31347 - feat: allow awaiting on trigger (#2824)\ndd514 - fix(useEventBus,createEventHook)!: dedupe registration of the same function (#2748)\nv9.7.0 on 12/16/2022\nfdd4d - feat(createEeventHook): auto dispose (#2518)"
  },
  {
    "title": "useDateFormat | VueUse",
    "url": "https://vueuse.org/shared/useDateFormat/#VPContent",
    "html": "useDateFormat\n​\nCategory\nTime\nExport Size\n807 B\nLast Changed\n3 weeks ago\n\nGet the formatted date according to the string of tokens passed in, inspired by dayjs.\n\nList of all available formats (HH:mm:ss by default):\n\nFormat\tOutput\tDescription\nYo\t2018th\tOrdinal formatted year\nYY\t18\tTwo-digit year\nYYYY\t2018\tFour-digit year\nM\t1-12\tThe month, beginning at 1\nMo\t1st, 2nd, ..., 12th\tThe month, ordinal formatted\nMM\t01-12\tThe month, 2-digits\nMMM\tJan-Dec\tThe abbreviated month name\nMMMM\tJanuary-December\tThe full month name\nD\t1-31\tThe day of the month\nDo\t1st, 2nd, ..., 31st\tThe day of the month, ordinal formatted\nDD\t01-31\tThe day of the month, 2-digits\nH\t0-23\tThe hour\nHo\t0th, 1st, 2nd, ..., 23rd\tThe hour, ordinal formatted\nHH\t00-23\tThe hour, 2-digits\nh\t1-12\tThe hour, 12-hour clock\nho\t1st, 2nd, ..., 12th\tThe hour, 12-hour clock, sorted\nhh\t01-12\tThe hour, 12-hour clock, 2-digits\nm\t0-59\tThe minute\nmo\t0th, 1st, ..., 59th\tThe minute, ordinal formatted\nmm\t00-59\tThe minute, 2-digits\ns\t0-59\tThe second\nso\t0th, 1st, ..., 59th\tThe second, ordinal formatted\nss\t00-59\tThe second, 2-digits\nSSS\t000-999\tThe millisecond, 3-digits\nA\tAM PM\tThe meridiem\nAA\tA.M. P.M.\tThe meridiem, periods\na\tam pm\tThe meridiem, lowercase\naa\ta.m. p.m.\tThe meridiem, lowercase and periods\nd\t0-6\tThe day of the week, with Sunday as 0\ndd\tS-S\tThe min name of the day of the week\nddd\tSun-Sat\tThe short name of the day of the week\ndddd\tSunday-Saturday\tThe name of the day of the week\nMeridiem is customizable by defining customMeridiem in options.\nDemo\n​\n\nsource\n\n2023-11-28 22:14:52\n\nFormatter Editor :\nUsage\n​\nBasic\n​\nhtml\n<script setup lang=\"ts\">\n\nimport { useNow, useDateFormat } from '@vueuse/core'\n\nconst formatted = useDateFormat(useNow(), 'YYYY-MM-DD HH:mm:ss')\n\n</script>\n\n<template>\n  <div>{{ formatted }}</div>\n</template>\nUse with locales\n​\nhtml\n<script setup lang=\"ts\">\n\nimport { useNow, useDateFormat } from '@vueuse/core'\n\nconst formatted = useDateFormat(useNow(), 'YYYY-MM-DD (ddd)', { locales: 'en-US' })\n\n</script>\n\n<template>\n  <div>{{ formatted }}</div>\n</template>\nUse with custom meridiem\n​\nhtml\n<script setup lang=\"ts\">\n\nimport { useDateFormat } from '@vueuse/core'\n\nconst customMeridiem = (hours: number, minutes: number, isLowercase?: boolean, hasPeriod?: boolean) => {\n  const m = hours > 11 ? (isLowercase ? 'μμ' : 'ΜΜ') : (isLowercase ? 'πμ' : 'ΠΜ')\n  return hasPeriod ? m.split('').reduce((acc, current) => acc += `${current}.`, '') : m\n}\n\nconst am = useDateFormat('2022-01-01 05:05:05', 'hh:mm:ss A', { customMeridiem })\n// am.value = '05:05:05 ΠΜ'\nconst pm = useDateFormat('2022-01-01 17:05:05', 'hh:mm:ss AA', { customMeridiem })\n// pm.value = '05:05:05 Μ.Μ.'\n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nPoet\nDachen\nDino Čamdžić\n丶远方\nsun0day\nLevi (Nguyễn Lương Huy)\nVasya Ponomarenko\naki77\nBlack\nChangelog\n​\nv10.6.0 on 11/9/2023\n61ceb - feat: add date ordinal formatting (#3474)\nv10.3.0 on 7/30/2023\nd6428 - fix: handle zero properly (#3272)\nv10.1.0 on 4/22/2023\na2147 - fix: Error if Y or YYY provided (#3001)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.3.0 on 9/26/2022\n3fda6 - feat: support meridiem format (#2011)\n39b27 - feat: support MMM and MMMM formatter (#2234)\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv9.0.1 on 7/29/2022\n5b1e0 - feat: support dd, ddd and dddd formatter (#1986)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useArrayUnique | VueUse",
    "url": "https://vueuse.org/shared/useArrayUnique/#VPContent",
    "html": "useArrayUnique\n​\nCategory\nArray\nExport Size\n215 B\nLast Changed\n2 months ago\n\nreactive unique array\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayUnique } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(1)\nconst item3 = ref(1)\nconst item4 = ref(2)\nconst item5 = ref(3)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayUnique(list)\n// result.value: [0, 1, 2, 3]\nitem5.value = 1\n// result.value: [0, 1, 2]\nUse with reactive array\n​\njs\nimport { useArrayUnique } from '@vueuse/core'\n\nconst list = reactive([1, 2, 2, 3])\nconst result = useArrayUnique(list)\n// result.value: [1, 2, 3]\n\nlist.push(1)\n// result.value: [1, 2, 3]\nUse with custom function\n​\njs\nimport { useArrayUnique } from '@vueuse/core'\n\nconst list = reactive([\n  { id: 1, name: 'foo' },\n  { id: 2, name: 'bar' },\n  { id: 1, name: 'baz' },\n])\n\nconst result = useArrayUnique(list, (a, b) => a.id === b.id)\n// result.value: [{ id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\n\nlist.push({ id: 1, name: 'qux' })\n// result.value: [{ id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\nc8c30 - feat: add a custom function to deduplicate (#2612)\nv9.10.0 on 1/3/2023\n162cd - feat: new function (#2597)"
  },
  {
    "title": "useArrayJoin | VueUse",
    "url": "https://vueuse.org/shared/useArrayJoin/",
    "html": "useArrayJoin\n​\nCategory\nArray\nExport Size\n137 B\nLast Changed\n2 months ago\n\nReactive Array.join\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayJoin } from '@vueuse/core'\n\nconst item1 = ref('foo')\nconst item2 = ref(0)\nconst item3 = ref({ prop: 'val' })\nconst list = [item1, item2, item3]\nconst result = useArrayJoin(list)\n// result.value: foo,0,[object Object]\nitem1.value = 'bar'\n// result.value: bar,0,[object Object]\nUse with reactive array\n​\njs\nimport { useArrayJoin } from '@vueuse/core'\n\nconst list = ref(['string', 0, { prop: 'val' }, false, [1], [[2]], null, undefined, []])\nconst result = useArrayJoin(list)\n// result.value: string,0,[object Object],false,1,2,,,\nlist.value.push(true)\n// result.value: string,0,[object Object],false,1,2,,,,true\nlist.value = [null, 'string', undefined]\n// result.value: ,string,\nUse with reactive separator\n​\njs\nimport { useArrayJoin } from '@vueuse/core'\n\nconst list = ref(['string', 0, { prop: 'val' }])\nconst separator = ref()\nconst result = useArrayJoin(list, separator)\n// result.value: string,0,[object Object]\nseparator.value = ''\n// result.value: string0[object Object]\nseparator.value = '--'\n// result.value: string--0--[object Object]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\ndea1d - feat: new function (#1904)"
  },
  {
    "title": "useArrayMap | VueUse",
    "url": "https://vueuse.org/shared/useArrayMap/",
    "html": "useArrayMap\n​\nCategory\nArray\nExport Size\n133 B\nLast Changed\n2 months ago\n\nReactive Array.map\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayMap } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayMap(list, i => i * 2)\n// result.value: [0, 4, 8, 12, 16]\nitem1.value = 1\n// result.value: [2, 4, 8, 12, 16]\nUse with reactive array\n​\njs\nimport { useArrayMap } from '@vueuse/core'\n\nconst list = ref([0, 1, 2, 3, 4])\nconst result = useArrayMap(list, i => i * 2)\n// result.value: [0, 2, 4, 6, 8]\nlist.value.pop()\n// result.value: [0, 2, 4, 6]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nYoung\nplylrnsdy\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.2.0 on 9/5/2022\nbc84e - fix: allow return type matches the mapper function (#2172)\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.3 on 7/14/2022\n4afcb - feat: new function (#1908)"
  },
  {
    "title": "useArrayIncludes | VueUse",
    "url": "https://vueuse.org/shared/usearrayincludes/",
    "html": "useArrayIncludes\n​\nCategory\nArray\nExport Size\n340 B\nLast Changed\n2 months ago\n\nReactive Array.includes\n\nUsage\n​\nUse with reactive array\n​\njs\nimport { useArrayIncludes } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayIncludes(list, 10)\n// result.value: false\nlist.value.push(10)\n// result.value: true\nlist.value.pop()\n// result.value: false\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.0 on 3/14/2023\n4d6bc - feat: new function (#2708)"
  },
  {
    "title": "useArrayFindLast | VueUse",
    "url": "https://vueuse.org/shared/usearrayfindlast/",
    "html": "useArrayFindLast\n​\nCategory\nArray\nExport Size\n191 B\nLast Changed\n2 months ago\n\nReactive Array.findLast.\n\nUsage\n​\njs\nimport { useArrayFindLast } from '@vueuse/core'\n\nconst list = [ref(1), ref(-1), ref(2)]\nconst positive = useArrayFindLast(list, val => val > 0)\n// positive.value: 2\nUse with reactive array\n​\njs\nimport { useArrayFindLast } from '@vueuse/core'\n\nconst list = reactive([-1, -2])\nconst positive = useArrayFindLast(list, val => val > 0)\n// positive.value: undefined\nlist.push(10)\n// positive.value: 10\nlist.push(5)\n// positive.value: 5\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.13.0 on 2/18/2023\nb0ac4 - feat: new function (#2471)"
  },
  {
    "title": "useArrayFindIndex | VueUse",
    "url": "https://vueuse.org/shared/usearrayfindindex/",
    "html": "useArrayFindIndex\n​\nCategory\nArray\nExport Size\n136 B\nLast Changed\n2 months ago\n\nReactive Array.findIndex\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayFindIndex } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayFindIndex(list, i => i % 2 === 0)\n// result.value: 0\nitem1.value = 1\n// result.value: 1\nUse with reactive array\n​\njs\nimport { useArrayFindIndex } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayFindIndex(list, i => i % 2 === 0)\n// result.value: 0\nlist.value.unshift(-1)\n// result.value: 1\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv9.0.0-beta.2 on 7/24/2022\nc1520 - feat: new function (#1973)"
  },
  {
    "title": "useArrayFind | VueUse",
    "url": "https://vueuse.org/shared/usearrayfind/",
    "html": "useArrayFind\n​\nCategory\nArray\nExport Size\n137 B\nLast Changed\n2 months ago\n\nReactive Array.find.\n\nUsage\n​\njs\nimport { useArrayFind } from '@vueuse/core'\n\nconst list = [ref(1), ref(-1), ref(2)]\nconst positive = useArrayFind(list, val => val > 0)\n// positive.value: 1\nUse with reactive array\n​\njs\nimport { useArrayFind } from '@vueuse/core'\n\nconst list = reactive([-1, -2])\nconst positive = useArrayFind(list, val => val > 0)\n// positive.value: undefined\nlist.push(1)\n// positive.value: 1\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nLevi (Nguyễn Lương Huy)\nXLor\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\nd00b7 - feat: new function (#1875)"
  },
  {
    "title": "useArrayFilter | VueUse",
    "url": "https://vueuse.org/shared/usearrayfilter/",
    "html": "useArrayFilter\n​\nCategory\nArray\nExport Size\n132 B\nLast Changed\n2 months ago\n\nReactive Array.filter\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayFilter } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayFilter(list, i => i % 2 === 0)\n// result.value: [0, 2, 4, 6, 8]\nitem2.value = 1\n// result.value: [0, 4, 6, 8]\nUse with reactive array\n​\njs\nimport { useArrayFilter } from '@vueuse/core'\n\nconst list = ref([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\nconst result = useArrayFilter(list, i => i % 2 === 0)\n// result.value: [0, 2, 4, 6, 8]\nlist.value.shift()\n// result.value: [2, 4, 6, 8]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.3 on 7/14/2022\n50e35 - feat: new function (#1905)"
  },
  {
    "title": "useArrayEvery | VueUse",
    "url": "https://vueuse.org/shared/useArrayEvery/#VPContent",
    "html": "useArrayEvery\n​\nCategory\nArray\nExport Size\n137 B\nLast Changed\n2 months ago\n\nReactive Array.every\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayEvery } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayEvery(list, i => i % 2 === 0)\n// result.value: true\nitem1.value = 1\n// result.value: false\nUse with reactive array\n​\njs\nimport { useArrayEvery } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayEvery(list, i => i % 2 === 0)\n// result.value: true\nlist.value.push(9)\n// result.value: false\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\nb3228 - feat: new function (#1915)"
  },
  {
    "title": "toValue | VueUse",
    "url": "https://vueuse.org/shared/toValue/#VPContent",
    "html": "toValue\n​\nCategory\nReactivity\nExport Size\n92 B\nLast Changed\n8 months ago\nAlias\nresolveUnref\nRelated\ntoRef\n\nGet the value of value/ref/getter.\n\nUsage\n​\nts\nimport { toValue } from '@vueuse/core'\n\nconst foo = ref('hi')\n\nconst a = toValue(0) // 0\nconst b = toValue(foo) // 'hi'\nconst c = toValue(() => 'hi') // 'hi'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat: rename resolveUnref to toValue\nv8.8.0 on 7/6/2022\n29fd5 - feat(resolveRef): new function (#1743)"
  },
  {
    "title": "useArrayDifference | VueUse",
    "url": "https://vueuse.org/shared/useArrayDifference/#VPContent",
    "html": "useArrayDifference\n​\nCategory\nArray\nExport Size\n231 B\nLast Changed\n2 months ago\n\nReactive get array difference of two array\n\nUsage\n​\nUse with reactive array\n​\njs\nimport { useArrayDifference } from '@vueuse/core'\n\nconst list1 = ref([0, 1, 2, 3, 4, 5])\nconst list2 = ref([4, 5, 6])\nconst result = useArrayDifference(list1, list2)\n// result.value: [0, 1, 2, 3]\nlist2.value = [0, 1, 2]\n// result.value: [3, 4, 5]\nUse with reactive array and use function comparison\n​\njs\nimport { useArrayDifference } from '@vueuse/core'\n\nconst list1 = ref([{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }])\nconst list2 = ref([{ id: 4 }, { id: 5 }, { id: 6 }])\n\nconst result = useArrayDifference(list1, list2, (value, othVal) => value.id === othVal.id)\n// result.value: [{ id: 1 }, { id: 2 }, { id: 3 }]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nsimpleoo0o\nLee Dogyeong\n丶远方\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.1 on 3/23/2023\n41858 - fix: error with falsey (#2869)\nv10.0.0-beta.0 on 3/14/2023\na2a33 - feat: new function (#2710)"
  },
  {
    "title": "toRefs | VueUse",
    "url": "https://vueuse.org/shared/toRefs/#VPContent",
    "html": "toRefs\n​\nCategory\nReactivity\nExport Size\n451 B\nLast Changed\n4 months ago\n\nExtended toRefs that also accepts refs of an object.\n\nUsage\n​\nts\nimport { toRefs } from '@vueuse/core'\nimport { reactive, ref } from 'vue'\n\nconst objRef = ref({ a: 'a', b: 0 })\nconst arrRef = ref(['a', 0])\n\nconst { a, b } = toRefs(objRef)\nconst [a, b] = toRefs(arrRef)\n\nconst obj = reactive({ a: 'a', b: 0 })\nconst arr = reactive(['a', 0])\n\nconst { a, b } = toRefs(obj)\nconst [a, b] = toRefs(arr)\nUse-cases\n​\nDestructuring a props object\n​\nhtml\n<template>\n  <div>\n    <input v-model=\"a\" type=\"text\" />\n    <input v-model=\"b\" type=\"text\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { toRefs, useVModel } from '@vueuse/core'\n\nexport default {\n  setup(props) {\n    const refs = toRefs(useVModel(props, 'data'))\n\n    console.log(refs.a.value) // props.data.a\n    refs.a.value = 'a' // emit('update:data', { ...props.data, a: 'a' })\n\n    return { ...refs }\n  }\n}\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nKasper Seweryn\nByMykel\nvaakian X\nchaii3\nwebfansplz\nWilliam T. Kirby\nChangelog\n​\nv10.3.0 on 7/30/2023\n5309c - fix: don't trigger unwanted watchEffects (#3260)\nv10.2.1 on 6/28/2023\n9f998 - fix: fix stack overflow caused by recursive setPrototypeOf (#3166)"
  },
  {
    "title": "toReactive | VueUse",
    "url": "https://vueuse.org/shared/toReactive/#VPContent",
    "html": "toReactive\n​\nCategory\nReactivity\nExport Size\n242 B\nLast Changed\n4 months ago\n\nConverts ref to reactive. Also made possible to create a \"swapable\" reactive object.\n\nThis function uses Proxy\n\nIt is NOT supported by IE 11 or below.\n\nUsage\n​\nts\nimport { toReactive } from '@vueuse/core'\n\nconst refState = ref({ foo: 'bar' })\n\nconsole.log(refState.value.foo) // => 'bar'\n\nconst state = toReactive(refState) // <--\n\nconsole.log(state.foo) // => 'bar'\n\nrefState.value = { bar: 'foo' }\n\nconsole.log(state.foo) // => undefined\nconsole.log(state.bar) // => 'foo'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n三咲智子 Kevin Deng\n丶远方\nChangelog\n​\nv10.3.0 on 7/30/2023\n17a72 - fix(reactiveComputed): unwrap reactive type (#3215)"
  },
  {
    "title": "toRef | VueUse",
    "url": "https://vueuse.org/shared/toRef/#VPContent",
    "html": "toRef\n​\nCategory\nReactivity\nExport Size\n159 B\nLast Changed\n8 months ago\nAlias\nresolveRef\nRelated\ntoValue\n\nNormalize value/ref/getter to ref or computed.\n\nUsage\n​\nts\nimport { toRef } from '@vueuse/core'\n\nconst foo = ref('hi')\n\nconst a = toRef(0) // Ref<number>\nconst b = toRef(foo) // Ref<string>\nconst c = toRef(() => 'hi') // ComputedRef<string>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0 on 4/14/2023\ncb6f9 - fix: improve types overload, close #2925\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nf307f - feat: support two argument overrides from Vue\n10e98 - feat!: rename resolveRef to toRef\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.8.0 on 7/6/2022\n29fd5 - feat(resolveRef): new function (#1743)"
  },
  {
    "title": "syncRefs | VueUse",
    "url": "https://vueuse.org/shared/syncRefs/#VPContent",
    "html": "syncRefs\n​\nCategory\nReactivity\nExport Size\n158 B\nLast Changed\n2 years ago\nRelated\nsyncRef\n\nKeep target refs in sync with a source ref\n\nDemo\n​\n\nsource\n\nUsage\n​\nts\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target = ref('target')\n\nconst stop = syncRefs(source, target)\n\nconsole.log(target.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target.value) // foo\nWatch options\n​\n\nThe options for syncRefs are similar to watch's WatchOptions but with different default values.\n\nTypeScript\nts\nexport interface SyncRefOptions {\n  /**\n   * Timing for syncing, same as watch's flush option\n   *\n   * @default 'sync'\n   */\n  flush?: WatchOptions['flush']\n  /**\n   * Watch deeply\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * Sync values immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n}\n\nWhen setting { flush: 'pre' }, the target reference will be updated at the end of the current \"tick\" before rendering starts.\n\nts\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target = ref('target')\n\nsyncRefs(source, target, { flush: 'pre' })\n\nconsole.log(target.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target.value) // hello <- still unchanged, because of flush 'pre'\n\nawait nextTick()\n\nconsole.log(target.value) // foo <- changed!\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nBruno Perel\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "reactiveOmit | VueUse",
    "url": "https://vueuse.org/shared/reactiveOmit/#VPContent",
    "html": "reactiveOmit\n​\nCategory\nReactivity\nExport Size\n381 B\nLast Changed\n2 months ago\n\nReactively omit fields from a reactive object.\n\nUsage\n​\nBasic Usage\n​\nts\nimport { reactiveOmit } from '@vueuse/core'\n\nconst obj = reactive({\n  x: 0,\n  y: 0,\n  elementX: 0,\n  elementY: 0,\n})\n\nconst picked = reactiveOmit(obj, 'x', 'elementX') // { y: number, elementY: number }\nPredicate Usage\n​\nts\nimport { reactiveOmit } from '@vueuse/core'\n\nconst obj = reactive({\n  bar: 'bar',\n  baz: 'should be omit',\n  foo: 'foo2',\n  qux: true,\n})\n\nconst picked = reactiveOmit(obj, (value, key) => key === 'baz' || value === true)\n// { bar: string, foo: string }\nScenarios\n​\nSelectively passing props to child\n​\nhtml\n<script setup>\nimport { reactiveOmit } from '@vueuse/core'\n\nconst props = defineProps({\n  value: {\n    default: 'value',\n  },\n  color: {\n    type: String,\n  },\n  font: {\n    type: String,\n  }\n})\n\nconst childProps = reactiveOmit(props, 'value')\n</script>\n\n<template>\n  <div>\n    <!-- only passes \"color\" and \"font\" props to child -->\n    <ChildComp v-bind=\"childProps\" />\n  </div>\n</template>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nDoctorwu\n丶远方\nBrain777777\nqiang\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\n2e297 - feat: add predicate parameter (#2849)\nv8.8.0 on 7/6/2022\n80c16 - fix(reactivePick): allow nested keys\ndd94d - fix(types): reactiveOmit and reactivePick support array as second arg (#1742)"
  },
  {
    "title": "refDebounced | VueUse",
    "url": "https://vueuse.org/shared/refDebounced/#VPContent",
    "html": "refDebounced\n​\nCategory\nReactivity\nExport Size\n423 B\nLast Changed\n8 months ago\nAlias\nuseDebounce\ndebouncedRef\nRelated\nuseThrottleFn\n\nDebounce execution of a ref value.\n\nDemo\n​\n\nsource\n\nDelay is set to 1000ms for this demo.\n\nDebounced:\n\nTimes Updated: 0\n\nUsage\n​\njs\nimport { refDebounced } from '@vueuse/core'\n\nconst input = ref('foo')\nconst debounced = refDebounced(input, 1000)\n\ninput.value = 'bar'\nconsole.log(debounced.value) // 'foo'\n\nawait sleep(1100)\n\nconsole.log(debounced.value) // 'bar'\n\nYou can also pass an optional 3rd parameter including maxWait option. See useDebounceFn for details.\n\nRecommended Reading\n​\nDebounce vs Throttle: Definitive Visual Guide\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nDominik Klein\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.4.0 on 10/25/2022\nce3dc - feat: use MaybeComputedRef for ms (#2337)"
  },
  {
    "title": "reactiveComputed | VueUse",
    "url": "https://vueuse.org/shared/reactiveComputed/#VPContent",
    "html": "reactiveComputed\n​\nCategory\nReactivity\nExport Size\n264 B\nLast Changed\n4 months ago\n\nComputed reactive object. Instead of returning a ref that computed does, reactiveComputed returns a reactive object.\n\nThis function uses Proxy\n\nIt is NOT supported by IE 11 or below.\n\nUsage\n​\nts\nimport { reactiveComputed } from '@vueuse/core'\n\nconst state = reactiveComputed(() => {\n  return {\n    foo: 'bar',\n    bar: 'baz',\n  }\n})\n\nstate.bar // 'baz'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n三咲智子 Kevin Deng\nqiang\nChangelog\n​\nv10.3.0 on 7/30/2023\n17a72 - fix: unwrap reactive type (#3215)"
  },
  {
    "title": "reactifyObject | VueUse",
    "url": "https://vueuse.org/shared/reactifyObject/#VPContent",
    "html": "reactifyObject\n​\nCategory\nReactivity\nExport Size\n305 B\nLast Changed\n6 months ago\n\nApply reactify to an object\n\nUsage\n​\nts\nimport { reactifyObject } from '@vueuse/core'\n\nconst reactifiedConsole = reactifyObject(console)\n\nconst a = ref('42')\n\nreactifiedConsole.log(a) // no longer need `.value`\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n童欧巴\nmarkthree\nChangelog\n​\nv8.9.3 on 7/14/2022\nd484f - feat(reactify)!: enable support for reactive getter by default (#1860)"
  },
  {
    "title": "computedWithControl | VueUse",
    "url": "https://vueuse.org/shared/computedWithControl/#VPContent",
    "html": "computedWithControl\n​\nCategory\nReactivity\nExport Size\n250 B\nLast Changed\n8 months ago\nAlias\ncontrolledComputed\nRelated\nrefWithControl\n\nExplicitly define the dependencies of computed.\n\nUsage\n​\nTypeScript\nts\nimport { computedWithControl } from '@vueuse/core'\nconst source = ref('foo')\nconst counter = ref(0)\nconst computedRef = computedWithControl(\n  () => source.value, // watch source, same as `watch`\n  () => counter.value, // computed getter, same as `computed`\n)\n\nWith this, the changes of counter won't trigger computedRef to update but the source ref does.\n\nts\nconsole.log(computedRef.value) // 0\n\ncounter.value += 1\n\nconsole.log(computedRef.value) // 0\n\nsource.value = 'bar'\n\nconsole.log(computedRef.value) // 1\nManual Triggering\n​\n\nYou can also manually trigger the update of the computed by:\n\nts\nconst computedRef = computedWithControl(\n  () => source.value,\n  () => counter.value,\n)\n\ncomputedRef.trigger()\n\nWARNING\n\nManual triggering only works for Vue 3\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nkongmoumou\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv8.8.1 on 7/6/2022\na1077 - fix: trigger only work in Vue 3\n01fca - feat: support manual triggering\nv8.7.5 on 6/19/2022\nab9d3 - fix: source type match vue.watch (#1674)"
  },
  {
    "title": "watchWithFilter | VueUse",
    "url": "https://vueuse.org/shared/watchWithFilter/#VPContent",
    "html": "watchWithFilter\n​\nCategory\nWatch\nExport Size\n373 B\nLast Changed\nlast year\n\nwatch with additional EventFilter control.\n\nUsage\n​\n\nSimilar to watch, but offering an extra option eventFilter which will be applied to the callback function.\n\nts\nimport { debounceFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') }, // callback will be called in 500ms debounced manner\n  {\n    eventFilter: debounceFilter(500), // throttledFilter, pausabledFilter or custom filters\n  },\n)\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nlvjiaxuan\nChangelog\n​\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchIgnorable | VueUse",
    "url": "https://vueuse.org/shared/watchignorable/#VPContent",
    "html": "watchIgnorable\n​\nCategory\nWatch\nExport Size\n708 B\nLast Changed\nlast year\nAlias\nignorableWatch\n\nIgnorable watch\n\nDemo\n​\n\nsource\n\nValue: 0\nUpdateIgnored UpdateReset\n\nLog\nUsage\n​\n\nExtended watch that returns extra ignoreUpdates(updater) and ignorePrevAsyncUpdates() to ignore particular updates to the source.\n\nts\nimport { watchIgnorable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { stop, ignoreUpdates } = watchIgnorable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\nignoreUpdates(() => {\n  source.value = 'foobar'\n})\nawait nextTick() // (nothing happened)\n\nsource.value = 'hello'\nawait nextTick() // logs: Changed to hello!\n\nignoreUpdates(() => {\n  source.value = 'ignored'\n})\nsource.value = 'logged'\n\nawait nextTick() // logs: Changed to logged!\nFlush timing\n​\n\nwatchIgnorable accepts the same options as watch and uses the same defaults. So, by default the composable works using flush: 'pre'.\n\nignorePrevAsyncUpdates\n​\n\nThis feature is only for async flush 'pre' and 'post'. If flush: 'sync' is used, ignorePrevAsyncUpdates() is a no-op as the watch will trigger immediately after each update to the source. It is still provided for sync flush so the code can be more generic.\n\nts\nimport { watchIgnorable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { ignorePrevAsyncUpdates } = watchIgnorable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\nsource.value = 'good'\nsource.value = 'by'\nignorePrevAsyncUpdates()\n\nawait nextTick() // (nothing happened)\n\nsource.value = 'prev'\nignorePrevAsyncUpdates()\nsource.value = 'after'\n\nawait nextTick() // logs: Changed to after!\nRecommended Readings\n​\nIgnorable Watch - by @matias-capeletto\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nlvjiaxuan\nwebfansplz\nChangelog\n​\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchDeep | VueUse",
    "url": "https://vueuse.org/shared/watchDeep/#VPContent",
    "html": "watchDeep\n​\nCategory\nWatch\nExport Size\n325 B\nLast Changed\n7 months ago\n\nShorthand for watching value with {deep: true}\n\nUsage\n​\n\nSimilar to watch, but with { deep: true }\n\nts\nimport { watchDeep } from '@vueuse/core'\n\nconst nestedObject = ref({ foo: { bar: { deep: 5 } } })\n\nwatchDeep(nestedObject, (obj) => {\n  console.log(updated)\n})\n\nonMounted(() => {\n  nestedObject.value.foo.bar.deep = 10\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nKyrie890514\nAlex Liu\n丶远方\nHammad Asif\nChangelog\n​\nv10.1.0 on 4/22/2023\n8f6a0 - feat(watch): watchImmediate and watchDeep support overloads (#2998)\nv10.0.0-beta.3 on 4/13/2023\ne6e25 - fix(watchDeep,watchImmediate): fix callback function execution logic (#2951)\nv10.0.0-beta.0 on 3/14/2023\nb4ec7 - feat(watch): shorthands for watch (#2651)"
  },
  {
    "title": "tryOnScopeDispose | VueUse",
    "url": "https://vueuse.org/shared/tryOnScopeDispose/#VPContent",
    "html": "tryOnScopeDispose\n​\nCategory\nComponent\nExport Size\n100 B\nLast Changed\n10 months ago\n\nSafe onScopeDispose. Call onScopeDispose() if it's inside an effect scope lifecycle, if not, do nothing\n\nUsage\n​\njs\nimport { tryOnScopeDispose } from '@vueuse/core'\n\ntryOnScopeDispose(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nByMykel\nPeter Shih\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "tryOnBeforeUnmount | VueUse",
    "url": "https://vueuse.org/shared/tryonbeforeunmount/#VPContent",
    "html": "tryOnBeforeUnmount\n​\nCategory\nComponent\nExport Size\n93 B\nLast Changed\n2 years ago\n\nSafe onBeforeUnmount. Call onBeforeUnmount() if it's inside a component lifecycle, if not, do nothing\n\nUsage\n​\njs\nimport { tryOnBeforeUnmount } from '@vueuse/core'\n\ntryOnBeforeUnmount(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nNgheizit\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "provideLocal | VueUse",
    "url": "https://vueuse.org/shared/provideLocal/#VPContent",
    "html": "provideLocal\n​\nCategory\nState\nExport Size\nLast Changed\n2 months ago\n\nExtended provide with ability to call injectLocal to obtain the value in the same component.\n\nUsage\n​\nvue\n<script setup>\nimport { injectLocal, provideLocal } from '@vueuse/core'\n\nprovideLocal('MyInjectionKey', 1)\nconst injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nChangelog\n​\nv10.5.0 on 10/7/2023\ncf757 - fix: vue 2 support for provideLocal and injectLocal (#3464)\n5d948 - feat(createInjectionState): allow provide and inject in same component (#3387)"
  },
  {
    "title": "injectLocal | VueUse",
    "url": "https://vueuse.org/shared/injectLocal/#VPContent",
    "html": "injectLocal\n​\nCategory\nState\nExport Size\nLast Changed\n2 months ago\n\nExtended inject with ability to call provideLocal to provide the value in the same component.\n\nUsage\n​\nvue\n<script setup>\nimport { injectLocal, provideLocal } from '@vueuse/core'\n\nprovideLocal('MyInjectionKey', 1)\nconst injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nChangelog\n​\nv10.5.0 on 10/7/2023\ncf757 - fix: vue 2 support for provideLocal and injectLocal (#3464)\n5d948 - feat(createInjectionState): allow provide and inject in same component (#3387)"
  },
  {
    "title": "useToString | VueUse",
    "url": "https://vueuse.org/shared/useToString/",
    "html": "useToString\n​\nCategory\nUtilities\nExport Size\n111 B\nLast Changed\n8 months ago\n\nReactively convert a ref to string.\n\nUsage\n​\nts\nimport { useToString } from '@vueuse/core'\n\nconst number = ref(3.14)\nconst str = useToString(number)\n\nstr.value // '3.14'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.0 on 8/4/2022\n2b869 - feat: new function"
  },
  {
    "title": "createInjectionState | VueUse",
    "url": "https://vueuse.org/shared/createInjectionState/#VPContent",
    "html": "createInjectionState\n​\nCategory\nState\nExport Size\n132 B\nLast Changed\n2 months ago\n\nCreate global state that can be injected into components.\n\nDemo\n​\n\nsource\n\n+\ncount: 0\ndouble: 0\nUsage\n​\nTypeScript\nts\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/shared'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue: number) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n)\nexport { useProvideCounterStore }\n// If you want to hide `useCounterStore` and wrap it in default value logic or throw error logic, please don't export `useCounterStore`\nexport { useCounterStore }\nexport function useCounterStoreWithDefaultValue() {\n  return (\n    useCounterStore() ?? {\n      count: ref(0),\n      double: ref(0),\n      increment: () => {},\n    }\n  )\n}\nexport function useCounterStoreOrThrow() {\n  const counterStore = useCounterStore()\n  if (counterStore == null)\n    throw new Error(\n      'Please call `useProvideCounterStore` on the appropriate parent component',\n    )\n  return counterStore\n}\nvue\n<!-- RootComponent.vue -->\n<script setup lang=\"ts\">\nimport { useProvideCounterStore } from './useCounterStore'\n\nuseProvideCounterStore(0)\n</script>\n\n<template>\n  <div>\n    <slot />\n  </div>\n</template>\nvue\n<!-- CountComponent.vue -->\n<script setup lang=\"ts\">\nimport { useCounterStore } from './useCounterStore'\n\n// use non-null assertion operator to ignore the case that store is not provided.\nconst { count, double } = useCounterStore()!\n// if you want to allow component to working without providing store, you can use follow code instead:\n// const { count, double } = useCounterStore() ?? { count: ref(0), double: ref(0) }\n// also, you can use another hook to provide default value\n// const { count, double } = useCounterStoreWithDefaultValue()\n// or throw error\n// const { count, double } = useCounterStoreOrThrow()\n</script>\n\n<template>\n  <ul>\n    <li>\n      count: {{ count }}\n    </li>\n    <li>\n      double: {{ double }}\n    </li>\n  </ul>\n</template>\nvue\n<!-- ButtonComponent.vue -->\n<script setup lang=\"ts\">\nimport { useCounterStore } from './useCounterStore'\n\n// use non-null assertion operator to ignore the case that store is not provided.\nconst { increment } = useCounterStore()!\n</script>\n\n<template>\n  <button @click=\"increment\">\n    +\n  </button>\n</template>\nProvide a custom InjectionKey\n​\nTypeScript\nts\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/shared'\n// custom injectionKey\nconst CounterStoreKey = 'counter-store'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue: number) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n  { injectionKey: CounterStoreKey },\n)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nZHAO Jin-Xiang\nAnthony Fu\nPeter Petau\n丶远方\nTanimodori\nChangelog\n​\nv10.5.0 on 10/7/2023\n90d34 - feat: add injectionKey option (#3404)\n5d948 - feat: allow provide and inject in same component (#3387)\nv9.11.0 on 1/17/2023\nf7ce6 - feat: return state when providing injection state (#2309)"
  },
  {
    "title": "useToNumber | VueUse",
    "url": "https://vueuse.org/shared/useToNumber/",
    "html": "useToNumber\n​\nCategory\nUtilities\nExport Size\n203 B\nLast Changed\n6 months ago\n\nReactively convert a string ref to number.\n\nUsage\n​\nts\nimport { useToNumber } from '@vueuse/core'\n\nconst str = ref('123')\nconst number = useToNumber(str)\n\nnumber.value // 123\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.0 on 8/4/2022\nf69a3 - feat: new function"
  },
  {
    "title": "useToggle | VueUse",
    "url": "https://vueuse.org/shared/useToggle/",
    "html": "useToggle\n​\nCategory\nUtilities\nExport Size\n200 B\nLast Changed\n2 months ago\n\nA boolean switcher with utility functions.\n\nDemo\n​\n\nsource\n\nValue: OFF\n\nToggleSet ONSet OFF\nUsage\n​\njs\nimport { useToggle } from '@vueuse/core'\n\nconst [value, toggle] = useToggle()\n\nWhen you pass a ref, useToggle will return a simple toggle function instead:\n\njs\nimport { useDark, useToggle } from '@vueuse/core'\n\nconst isDark = useDark()\nconst toggleDark = useToggle(isDark)\n\nNote: be aware that the toggle function accepts the first argument as the override value. You might want to avoid directly passing the function to events in the template, as the event object will pass in.\n\nhtml\n<!-- caution: $event will be pass in -->\n<button @click=\"toggleDark\" />\n<!-- recommended to do this -->\n<button @click=\"toggleDark()\" />\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nelky\nJelf\nwebfansplz\nAlex Kozack\nAlexey Iskhakov\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useThrottleFn | VueUse",
    "url": "https://vueuse.org/shared/usethrottlefn/",
    "html": "useThrottleFn\n​\nCategory\nUtilities\nExport Size\n401 B\nLast Changed\n2 months ago\nRelated\nrefDebounced\nrefThrottled\nuseDebounceFn\n\nThrottle execution of a function. Especially useful for rate limiting execution of handlers on events like resize and scroll.\n\nThrottle is a spring that throws balls: after a ball flies out it needs some time to shrink back, so it cannot throw any more balls unless it's ready.\n\nDemo\n​\n\nsource\n\nSmash me!\nDelay is set to 1000ms for this demo.\n\nButton clicked: 0\n\nEvent handler called: 0\n\nUsage\n​\njs\nimport { useThrottleFn } from '@vueuse/core'\n\nconst throttledFn = useThrottleFn(() => {\n  // do something, it will be called at most 1 time per second\n}, 1000)\n\nwindow.addEventListener('resize', throttledFn)\nRecommended Reading\n​\nDebounce vs Throttle: Definitive Visual Guide\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nvaakian X\nazaleta\nwebfansplz\nJakub Freisler\nRoman Harmyder\nwheat\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.10.0 on 1/3/2023\n4d305 - feat(useDebounceFn,useThrottleFn): return result using promise (#2580)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.9.0 on 7/6/2022\na76b2 - fix: trailing option should be false by default (#1687)"
  },
  {
    "title": "useDebounceFn | VueUse",
    "url": "https://vueuse.org/shared/useDebounceFn/",
    "html": "useDebounceFn\n​\nCategory\nUtilities\nExport Size\n372 B\nLast Changed\n2 months ago\nRelated\nuseThrottleFn\n\nDebounce execution of a function.\n\nDebounce is an overloaded waiter: if you keep asking him your requests will be ignored until you stop and give him some time to think about your latest inquiry.\n\nDemo\n​\n\nsource\n\nSmash me!\nDelay is set to 1000ms and maxWait is set to 5000ms for this demo.\n\nButton clicked: 0\n\nEvent handler called: 0\n\nUsage\n​\njs\nimport { useDebounceFn } from '@vueuse/core'\n\nconst debouncedFn = useDebounceFn(() => {\n  // do something\n}, 1000)\n\nwindow.addEventListener('resize', debouncedFn)\n\nYou can also pass a 3rd parameter to this, with a maximum wait time, similar to lodash debounce\n\njs\nimport { useDebounceFn } from '@vueuse/core'\n\n// If no invokation after 5000ms due to repeated input,\n// the function will be called anyway.\nconst debouncedFn = useDebounceFn(() => {\n  // do something\n}, 1000, { maxWait: 5000 })\n\nwindow.addEventListener('resize', debouncedFn)\n\nOptionally, you can get the return value of the function using promise operations.\n\njs\nimport { useDebounceFn } from '@vueuse/core'\n\nconst debouncedRequest = useDebounceFn(() => 'response', 1000)\n\ndebouncedRequest().then((value) => {\n  console.log(value) // 'response'\n})\n\n// or use async/await\nasync function doRequest() {\n  const value = await debouncedRequest()\n  console.log(value) // 'response'\n}\n\nSince unhandled rejection error is quite annoying when developer doesn't need the return value, the promise will NOT be rejected if the function is canceled by default. You need to specify the option rejectOnCancel: true to capture the rejection.\n\njs\nimport { useDebounceFn } from '@vueuse/core'\n\nconst debouncedRequest = useDebounceFn(() => 'response', 1000, { rejectOnCancel: true })\n\ndebouncedRequest()\n  .then((value) => {\n    // do something\n  })\n  .catch(() => {\n    // do something when canceled\n  })\n\n// calling it again will cancel the previous request and gets rejected\nsetTimeout(debouncedRequest, 500)\nRecommended Reading\n​\nDebounce vs Throttle: Definitive Visual Guide\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nazaleta\nJoe Maylor\nJakub Freisler\nwheat\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.10.0 on 1/3/2023\n4d305 - feat(useDebounceFn,useThrottleFn): return result using promise (#2580)\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useCounter | VueUse",
    "url": "https://vueuse.org/shared/useCounter/",
    "html": "useCounter\n​\nCategory\nUtilities\nExport Size\n185 B\nLast Changed\n2 months ago\n\nBasic counter with utility functions.\n\nDemo\n​\n\nsource\n\nCount: 0\n\nIncrementDecrementIncrement (+5)Decrement (-5)Set (100)Reset\nBasic Usage\n​\njs\nimport { useCounter } from '@vueuse/core'\n\nconst { count, inc, dec, set, reset } = useCounter()\nUsage with options\n​\njs\nimport { useCounter } from '@vueuse/core'\n\nconst { count, inc, dec, set, reset } = useCounter(1, { min: 0, max: 16 })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nRock070\niChengbo\nDamien Roche\nAlex Kozack\nChangelog\n​\nv10.3.0 on 7/30/2023\n6ae3a - feat: initialValue support ref (#3266)\nv9.4.0 on 10/25/2022\ncb78f - fix: set and reset should also be limited (#2179)"
  },
  {
    "title": "set | VueUse",
    "url": "https://vueuse.org/shared/set/",
    "html": "set\n​\nCategory\nUtilities\nExport Size\n142 B\nLast Changed\n2 years ago\n\nShorthand for ref.value = x\n\nUsage\n​\nts\nimport { set } from '@vueuse/core'\n\nconst a = ref(0)\n\nset(a, 1)\n\nconsole.log(a.value) // 1\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "makeDestructurable | VueUse",
    "url": "https://vueuse.org/shared/makeDestructurable/",
    "html": "makeDestructurable\n​\nCategory\nUtilities\nExport Size\n364 B\nLast Changed\nlast year\n\nMake isomorphic destructurable for object and array at the same time. See this blog for more details.\n\nUsage\n​\n\nTypeScript Example:\n\nTypeScript\nts\nimport { makeDestructurable } from '@vueuse/core'\nconst foo = { name: 'foo' }\nconst bar = 1024\nconst obj = makeDestructurable({ foo, bar } as const, [foo, bar] as const)\n\nUsage:\n\nts\nlet { foo, bar } = obj\nlet [foo, bar] = obj\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "isDefined | VueUse",
    "url": "https://vueuse.org/shared/isDefined/",
    "html": "isDefined\n​\nCategory\nUtilities\nExport Size\n86 B\nLast Changed\n7 months ago\n\nNon-nullish checking type guard for Ref.\n\nUsage\n​\nts\nimport { isDefined } from '@vueuse/core'\n\nconst example = ref(Math.random() ? 'example' : undefined) // Ref<string | undefined>\n\nif (isDefined(example))\n  example // Ref<string>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nGlen\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "get | VueUse",
    "url": "https://vueuse.org/shared/get/",
    "html": "get\n​\nCategory\nUtilities\nExport Size\n80 B\nLast Changed\n8 months ago\n\nShorthand for accessing ref.value\n\nUsage\n​\nts\nimport { get } from '@vueuse/core'\n\nconst a = ref(42)\n\nconsole.log(get(a)) // 42\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "createEventHook | VueUse",
    "url": "https://vueuse.org/shared/createeventhook/",
    "html": "createEventHook\n​\nCategory\nUtilities\nExport Size\n212 B\nLast Changed\nlast week\n\nUtility for creating event hooks\n\nUsage\n​\n\nCreating a function that uses createEventHook\n\nTypeScript\nts\nimport { createEventHook } from '@vueuse/core'\nexport function useMyFetch(url) {\n  const fetchResult = createEventHook<Response>()\n  const fetchError = createEventHook<any>()\n  fetch(url)\n    .then((result) => fetchResult.trigger(result))\n    .catch((error) => fetchError.trigger(error.message))\n  return {\n    onResult: fetchResult.on,\n    onError: fetchError.on,\n  }\n}\n\nUsing a function that uses createEventHook\n\nhtml\n<script setup lang=\"ts\">\nimport { useMyFetch } from './my-fetch-function'\n\nconst { onResult, onError } = useMyFetch('my api url')\n\nonResult((result) => {\n  console.log(result)\n})\n\nonError((error) => {\n  console.error(error)\n})\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nwheat\nCurt Grimes\nGuillaume Chau\n丶远方\nAmirreza Zarkesh\n超杰\nsun0day\nChangelog\n​\nv10.6.0 on 11/9/2023\n6040e - feat: allow trigger to optionally have no parameters (#3507)\nv10.0.0-beta.0 on 3/14/2023\n31347 - feat: allow awaiting on trigger (#2824)\ndd514 - fix(useEventBus,createEventHook)!: dedupe registration of the same function (#2748)\nv9.7.0 on 12/16/2022\nfdd4d - feat(createEeventHook): auto dispose (#2518)"
  },
  {
    "title": "useDateFormat | VueUse",
    "url": "https://vueuse.org/shared/usedateformat/",
    "html": "useDateFormat\n​\nCategory\nTime\nExport Size\n807 B\nLast Changed\nlast week\n\nGet the formatted date according to the string of tokens passed in, inspired by dayjs.\n\nList of all available formats (HH:mm:ss by default):\n\nFormat\tOutput\tDescription\nYo\t2018th\tOrdinal formatted year\nYY\t18\tTwo-digit year\nYYYY\t2018\tFour-digit year\nM\t1-12\tThe month, beginning at 1\nMo\t1st, 2nd, ..., 12th\tThe month, ordinal formatted\nMM\t01-12\tThe month, 2-digits\nMMM\tJan-Dec\tThe abbreviated month name\nMMMM\tJanuary-December\tThe full month name\nD\t1-31\tThe day of the month\nDo\t1st, 2nd, ..., 31st\tThe day of the month, ordinal formatted\nDD\t01-31\tThe day of the month, 2-digits\nH\t0-23\tThe hour\nHo\t0th, 1st, 2nd, ..., 23rd\tThe hour, ordinal formatted\nHH\t00-23\tThe hour, 2-digits\nh\t1-12\tThe hour, 12-hour clock\nho\t1st, 2nd, ..., 12th\tThe hour, 12-hour clock, sorted\nhh\t01-12\tThe hour, 12-hour clock, 2-digits\nm\t0-59\tThe minute\nmo\t0th, 1st, ..., 59th\tThe minute, ordinal formatted\nmm\t00-59\tThe minute, 2-digits\ns\t0-59\tThe second\nso\t0th, 1st, ..., 59th\tThe second, ordinal formatted\nss\t00-59\tThe second, 2-digits\nSSS\t000-999\tThe millisecond, 3-digits\nA\tAM PM\tThe meridiem\nAA\tA.M. P.M.\tThe meridiem, periods\na\tam pm\tThe meridiem, lowercase\naa\ta.m. p.m.\tThe meridiem, lowercase and periods\nd\t0-6\tThe day of the week, with Sunday as 0\ndd\tS-S\tThe min name of the day of the week\nddd\tSun-Sat\tThe short name of the day of the week\ndddd\tSunday-Saturday\tThe name of the day of the week\nMeridiem is customizable by defining customMeridiem in options.\nDemo\n​\n\nsource\n\n2023-11-18 10:28:02\n\nFormatter Editor :\nUsage\n​\nBasic\n​\nhtml\n<script setup lang=\"ts\">\n\nimport { useNow, useDateFormat } from '@vueuse/core'\n\nconst formatted = useDateFormat(useNow(), 'YYYY-MM-DD HH:mm:ss')\n\n</script>\n\n<template>\n  <div>{{ formatted }}</div>\n</template>\nUse with locales\n​\nhtml\n<script setup lang=\"ts\">\n\nimport { useNow, useDateFormat } from '@vueuse/core'\n\nconst formatted = useDateFormat(useNow(), 'YYYY-MM-DD (ddd)', { locales: 'en-US' })\n\n</script>\n\n<template>\n  <div>{{ formatted }}</div>\n</template>\nUse with custom meridiem\n​\nhtml\n<script setup lang=\"ts\">\n\nimport { useDateFormat } from '@vueuse/core'\n\nconst customMeridiem = (hours: number, minutes: number, isLowercase?: boolean, hasPeriod?: boolean) => {\n  const m = hours > 11 ? (isLowercase ? 'μμ' : 'ΜΜ') : (isLowercase ? 'πμ' : 'ΠΜ')\n  return hasPeriod ? m.split('').reduce((acc, current) => acc += `${current}.`, '') : m\n}\n\nconst am = useDateFormat('2022-01-01 05:05:05', 'hh:mm:ss A', { customMeridiem })\n// am.value = '05:05:05 ΠΜ'\nconst pm = useDateFormat('2022-01-01 17:05:05', 'hh:mm:ss AA', { customMeridiem })\n// pm.value = '05:05:05 Μ.Μ.'\n</script>\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nwebfansplz\nPoet\nDachen\nDino Čamdžić\n丶远方\nsun0day\nLevi (Nguyễn Lương Huy)\nVasya Ponomarenko\naki77\nBlack\nChangelog\n​\nv10.6.0 on 11/9/2023\n61ceb - feat: add date ordinal formatting (#3474)\nv10.3.0 on 7/30/2023\nd6428 - fix: handle zero properly (#3272)\nv10.1.0 on 4/22/2023\na2147 - fix: Error if Y or YYY provided (#3001)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.3.0 on 9/26/2022\n3fda6 - feat: support meridiem format (#2011)\n39b27 - feat: support MMM and MMMM formatter (#2234)\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv9.0.1 on 7/29/2022\n5b1e0 - feat: support dd, ddd and dddd formatter (#1986)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useArrayUnique | VueUse",
    "url": "https://vueuse.org/shared/usearrayunique/",
    "html": "useArrayUnique\n​\nCategory\nArray\nExport Size\n215 B\nLast Changed\n2 months ago\n\nreactive unique array\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayUnique } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(1)\nconst item3 = ref(1)\nconst item4 = ref(2)\nconst item5 = ref(3)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayUnique(list)\n// result.value: [0, 1, 2, 3]\nitem5.value = 1\n// result.value: [0, 1, 2]\nUse with reactive array\n​\njs\nimport { useArrayUnique } from '@vueuse/core'\n\nconst list = reactive([1, 2, 2, 3])\nconst result = useArrayUnique(list)\n// result.value: [1, 2, 3]\n\nlist.push(1)\n// result.value: [1, 2, 3]\nUse with custom function\n​\njs\nimport { useArrayUnique } from '@vueuse/core'\n\nconst list = reactive([\n  { id: 1, name: 'foo' },\n  { id: 2, name: 'bar' },\n  { id: 1, name: 'baz' },\n])\n\nconst result = useArrayUnique(list, (a, b) => a.id === b.id)\n// result.value: [{ id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\n\nlist.push({ id: 1, name: 'qux' })\n// result.value: [{ id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\nc8c30 - feat: add a custom function to deduplicate (#2612)\nv9.10.0 on 1/3/2023\n162cd - feat: new function (#2597)"
  },
  {
    "title": "useArraySome | VueUse",
    "url": "https://vueuse.org/shared/useArraySome/",
    "html": "useArraySome\n​\nCategory\nArray\nExport Size\n137 B\nLast Changed\n2 months ago\n\nReactive Array.some\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArraySome } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArraySome(list, i => i > 10)\n// result.value: false\nitem1.value = 11\n// result.value: true\nUse with reactive array\n​\njs\nimport { useArraySome } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArraySome(list, i => i > 10)\n// result.value: false\nlist.value.push(11)\n// result.value: true\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\nd06bd - feat: new function (#1916)"
  },
  {
    "title": "useArrayReduce | VueUse",
    "url": "https://vueuse.org/shared/useArrayReduce/",
    "html": "useArrayReduce\n​\nCategory\nArray\nExport Size\n171 B\nLast Changed\n2 months ago\n\nReactive Array.reduce.\n\nUsage\n​\njs\nimport { useArrayReduce } from '@vueuse/core'\n\nconst sum = useArrayReduce([ref(1), ref(2), ref(3)], (sum, val) => sum + val)\n// sum.value: 6\nUse with reactive array\n​\njs\nimport { useArrayReduce } from '@vueuse/core'\n\nconst list = reactive([1, 2])\nconst sum = useArrayReduce(list, (sum, val) => sum + val)\n\nlist.push(3)\n// sum.value: 6\nUse with initialValue\n​\njs\nimport { useArrayReduce } from '@vueuse/core'\n\nconst list = reactive([{ num: 1 }, { num: 2 }])\nconst sum = useArrayReduce(list, (sum, val) => sum + val.num, 0)\n// sum.value: 3\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nXLor\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\n79e44 - feat: new function (#1919)"
  },
  {
    "title": "useArrayEvery | VueUse",
    "url": "https://vueuse.org/shared/usearrayevery/",
    "html": "useArrayEvery\n​\nCategory\nArray\nExport Size\n137 B\nLast Changed\n2 months ago\n\nReactive Array.every\n\nUsage\n​\nUse with array of multiple refs\n​\njs\nimport { useArrayEvery } from '@vueuse/core'\n\nconst item1 = ref(0)\nconst item2 = ref(2)\nconst item3 = ref(4)\nconst item4 = ref(6)\nconst item5 = ref(8)\nconst list = [item1, item2, item3, item4, item5]\nconst result = useArrayEvery(list, i => i % 2 === 0)\n// result.value: true\nitem1.value = 1\n// result.value: false\nUse with reactive array\n​\njs\nimport { useArrayEvery } from '@vueuse/core'\n\nconst list = ref([0, 2, 4, 6, 8])\nconst result = useArrayEvery(list, i => i % 2 === 0)\n// result.value: true\nlist.value.push(9)\n// result.value: false\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nLevi (Nguyễn Lương Huy)\nLevi (Nguyễn Lương Huy)\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.4 on 7/17/2022\nb3228 - feat: new function (#1915)"
  },
  {
    "title": "useArrayDifference | VueUse",
    "url": "https://vueuse.org/shared/usearraydifference/",
    "html": "useArrayDifference\n​\nCategory\nArray\nExport Size\n231 B\nLast Changed\n2 months ago\n\nReactive get array difference of two array\n\nUsage\n​\nUse with reactive array\n​\njs\nimport { useArrayDifference } from '@vueuse/core'\n\nconst list1 = ref([0, 1, 2, 3, 4, 5])\nconst list2 = ref([4, 5, 6])\nconst result = useArrayDifference(list1, list2)\n// result.value: [0, 1, 2, 3]\nlist2.value = [0, 1, 2]\n// result.value: [3, 4, 5]\nUse with reactive array and use function comparison\n​\njs\nimport { useArrayDifference } from '@vueuse/core'\n\nconst list1 = ref([{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }])\nconst list2 = ref([{ id: 4 }, { id: 5 }, { id: 6 }])\n\nconst result = useArrayDifference(list1, list2, (value, othVal) => value.id === othVal.id)\n// result.value: [{ id: 1 }, { id: 2 }, { id: 3 }]\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nsimpleoo0o\nLee Dogyeong\n丶远方\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.1 on 3/23/2023\n41858 - fix: error with falsey (#2869)\nv10.0.0-beta.0 on 3/14/2023\na2a33 - feat: new function (#2710)"
  },
  {
    "title": "toValue | VueUse",
    "url": "https://vueuse.org/shared/tovalue/",
    "html": "toValue\n​\nCategory\nReactivity\nExport Size\n92 B\nLast Changed\n7 months ago\nAlias\nresolveUnref\nRelated\ntoRef\n\nGet the value of value/ref/getter.\n\nUsage\n​\nts\nimport { toValue } from '@vueuse/core'\n\nconst foo = ref('hi')\n\nconst a = toValue(0) // 0\nconst b = toValue(foo) // 'hi'\nconst c = toValue(() => 'hi') // 'hi'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat: rename resolveUnref to toValue\nv8.8.0 on 7/6/2022\n29fd5 - feat(resolveRef): new function (#1743)"
  },
  {
    "title": "toRefs | VueUse",
    "url": "https://vueuse.org/shared/torefs/",
    "html": "toRefs\n​\nCategory\nReactivity\nExport Size\n451 B\nLast Changed\n4 months ago\n\nExtended toRefs that also accepts refs of an object.\n\nUsage\n​\nts\nimport { toRefs } from '@vueuse/core'\nimport { reactive, ref } from 'vue'\n\nconst objRef = ref({ a: 'a', b: 0 })\nconst arrRef = ref(['a', 0])\n\nconst { a, b } = toRefs(objRef)\nconst [a, b] = toRefs(arrRef)\n\nconst obj = reactive({ a: 'a', b: 0 })\nconst arr = reactive(['a', 0])\n\nconst { a, b } = toRefs(obj)\nconst [a, b] = toRefs(arr)\nUse-cases\n​\nDestructuring a props object\n​\nhtml\n<template>\n  <div>\n    <input v-model=\"a\" type=\"text\" />\n    <input v-model=\"b\" type=\"text\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { toRefs, useVModel } from '@vueuse/core'\n\nexport default {\n  setup(props) {\n    const refs = toRefs(useVModel(props, 'data'))\n\n    console.log(refs.a.value) // props.data.a\n    refs.a.value = 'a' // emit('update:data', { ...props.data, a: 'a' })\n\n    return { ...refs }\n  }\n}\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nKasper Seweryn\nByMykel\nvaakian X\nchaii3\nwebfansplz\nWilliam T. Kirby\nChangelog\n​\nv10.3.0 on 7/30/2023\n5309c - fix: don't trigger unwanted watchEffects (#3260)\nv10.2.1 on 6/28/2023\n9f998 - fix: fix stack overflow caused by recursive setPrototypeOf (#3166)"
  },
  {
    "title": "toReactive | VueUse",
    "url": "https://vueuse.org/shared/toreactive/",
    "html": "toReactive\n​\nCategory\nReactivity\nExport Size\n242 B\nLast Changed\n4 months ago\n\nConverts ref to reactive. Also made possible to create a \"swapable\" reactive object.\n\nThis function uses Proxy\n\nIt is NOT supported by IE 11 or below.\n\nUsage\n​\nts\nimport { toReactive } from '@vueuse/core'\n\nconst refState = ref({ foo: 'bar' })\n\nconsole.log(refState.value.foo) // => 'bar'\n\nconst state = toReactive(refState) // <--\n\nconsole.log(state.foo) // => 'bar'\n\nrefState.value = { bar: 'foo' }\n\nconsole.log(state.foo) // => undefined\nconsole.log(state.bar) // => 'foo'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n三咲智子 Kevin Deng\n丶远方\nChangelog\n​\nv10.3.0 on 7/30/2023\n17a72 - fix(reactiveComputed): unwrap reactive type (#3215)"
  },
  {
    "title": "toRef | VueUse",
    "url": "https://vueuse.org/shared/toref/",
    "html": "toRef\n​\nCategory\nReactivity\nExport Size\n159 B\nLast Changed\n7 months ago\nAlias\nresolveRef\nRelated\ntoValue\n\nNormalize value/ref/getter to ref or computed.\n\nUsage\n​\nts\nimport { toRef } from '@vueuse/core'\n\nconst foo = ref('hi')\n\nconst a = toRef(0) // Ref<number>\nconst b = toRef(foo) // Ref<string>\nconst c = toRef(() => 'hi') // ComputedRef<string>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nv10.0.0 on 4/14/2023\ncb6f9 - fix: improve types overload, close #2925\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nf307f - feat: support two argument overrides from Vue\n10e98 - feat!: rename resolveRef to toRef\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.8.0 on 7/6/2022\n29fd5 - feat(resolveRef): new function (#1743)"
  },
  {
    "title": "syncRefs | VueUse",
    "url": "https://vueuse.org/shared/syncrefs/",
    "html": "syncRefs\n​\nCategory\nReactivity\nExport Size\n158 B\nLast Changed\n2 years ago\nRelated\nsyncRef\n\nKeep target refs in sync with a source ref\n\nDemo\n​\n\nsource\n\nUsage\n​\nts\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target = ref('target')\n\nconst stop = syncRefs(source, target)\n\nconsole.log(target.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target.value) // foo\nWatch options\n​\n\nThe options for syncRefs are similar to watch's WatchOptions but with different default values.\n\nTypeScript\nts\nexport interface SyncRefOptions {\n  /**\n   * Timing for syncing, same as watch's flush option\n   *\n   * @default 'sync'\n   */\n  flush?: WatchOptions['flush']\n  /**\n   * Watch deeply\n   *\n   * @default false\n   */\n  deep?: boolean\n  /**\n   * Sync values immediately\n   *\n   * @default true\n   */\n  immediate?: boolean\n}\n\nWhen setting { flush: 'pre' }, the target reference will be updated at the end of the current \"tick\" before rendering starts.\n\nts\nimport { syncRefs } from '@vueuse/core'\n\nconst source = ref('hello')\nconst target = ref('target')\n\nsyncRefs(source, target, { flush: 'pre' })\n\nconsole.log(target.value) // hello\n\nsource.value = 'foo'\n\nconsole.log(target.value) // hello <- still unchanged, because of flush 'pre'\n\nawait nextTick()\n\nconsole.log(target.value) // foo <- changed!\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nBruno Perel\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "syncRef | VueUse",
    "url": "https://vueuse.org/shared/syncRef/",
    "html": "syncRef\n​\nCategory\nReactivity\nExport Size\n237 B\nLast Changed\n3 weeks ago\nRelated\nsyncRefs\n\nTwo-way refs synchronization.\n\nDemo\n​\n\nsource\n\nUsage\n​\nts\nimport { syncRef } from '@vueuse/core'\n\nconst a = ref('a')\nconst b = ref('b')\n\nconst stop = syncRef(a, b)\n\nconsole.log(a.value) // a\n\nb.value = 'foo'\n\nconsole.log(a.value) // foo\n\na.value = 'bar'\n\nconsole.log(b.value) // bar\nOne directional\n​\nts\nimport { syncRef } from '@vueuse/core'\n\nconst a = ref('a')\nconst b = ref('b')\n\nconst stop = syncRef(a, b, { direction: 'rtl' })\nCustom Transform\n​\nts\nimport { syncRef } from '@vueuse/core'\n\nconst a = ref(10)\nconst b = ref(2)\n\nconst stop = syncRef(a, b, {\n  transform: {\n    ltr: left => left * 2,\n    rtl: right => right / 2\n  }\n})\n\nconsole.log(b.value) // 20\n\nb.value = 30\n\nconsole.log(a.value) // 15\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nMikhailov Nikita\nDoctorwu\nKylegl\nzmtlwzy\nMatias Capeletto\nChangelog\n​\nv10.6.0 on 11/9/2023\n89266 - feat: enhance syncRef type restrict (#3515)\nv10.4.0 on 8/25/2023\nbc966 - fix: avoid infinite sync (#3312)\nv9.0.0-beta.2 on 7/24/2022\n348d3 - feat: support custom transforms (#1968)"
  },
  {
    "title": "refWithControl | VueUse",
    "url": "https://vueuse.org/shared/refWithControl/",
    "html": "refWithControl\n​\nCategory\nReactivity\nExport Size\n474 B\nLast Changed\n2 months ago\nAlias\ncontrolledRef\nRelated\ncomputedWithControl\n\nFine-grained controls over ref and its reactivity.\n\nWARNING\n\nThis function only works for Vue 3\n\nUsage\n​\n\nrefWithControl uses extendRef to provide two extra functions get and set to have better control over when it should track/trigger the reactivity.\n\nts\nimport { refWithControl } from '@vueuse/core'\n\nconst num = refWithControl(0)\nconst doubled = computed(() => num.value * 2)\n\n// just like normal ref\nnum.value = 42\nconsole.log(num.value) // 42\nconsole.log(doubled.value) // 84\n\n// set value without triggering the reactivity\nnum.set(30, false)\nconsole.log(num.value) // 30\nconsole.log(doubled.value) // 84 (doesn't update)\n\n// get value without tracking the reactivity\nwatchEffect(() => {\n  console.log(num.peek())\n}) // 30\n\nnum.value = 50 // watch effect wouldn't be triggered since it collected nothing.\nconsole.log(doubled.value) // 100 (updated again since it's a reactive set)\npeek, lay, untrackedGet, silentSet\n​\n\nWe also provide some shorthands for doing the get/set without track/triggering the reactivity system. The following lines are equivalent.\n\nts\nconst foo = refWithControl('foo')\nts\n// getting\nfoo.get(false)\nfoo.untrackedGet()\nfoo.peek() // an alias for `untrackedGet`\nts\n// setting\nfoo.set('bar', false)\nfoo.silentSet('bar')\nfoo.lay('bar') // an alias for `silentSet`\nConfigurations\n​\nonBeforeChange()\n​\n\nonBeforeChange option is offered to give control over if a new value should be accepted. For example:\n\nts\nconst num = refWithControl(0, {\n  onBeforeChange(value, oldValue) {\n    // disallow changes larger then ±5 in one operation\n    if (Math.abs(value - oldValue) > 5)\n      return false // returning `false` to dismiss the change\n  },\n})\n\nnum.value += 1\nconsole.log(num.value) // 1\n\nnum.value += 6\nconsole.log(num.value) // 1 (change been dismissed)\nonChanged()\n​\n\nonChanged option offers a similar functionally as Vue's watch but being synchronoused with less overhead compare to watch.\n\nts\nconst num = refWithControl(0, {\n  onChanged(value, oldValue) {\n    console.log(value)\n  },\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nvaakian X\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "refThrottled | VueUse",
    "url": "https://vueuse.org/shared/refThrottled/",
    "html": "refThrottled\n​\nCategory\nReactivity\nExport Size\n458 B\nLast Changed\n2 months ago\nAlias\nuseThrottle\nthrottledRef\nRelated\nuseThrottleFn\n\nThrottle changing of a ref value.\n\nDemo\n​\n\nsource\n\nDelay is set to 1000ms for this demo.\n\nThrottled:\n\nTimes Updated: 0\n\nTrailing: true\n\nLeading: false\n\nUsage\n​\njs\nimport { refThrottled } from '@vueuse/core'\n\nconst input = ref('')\nconst throttled = refThrottled(input, 1000)\nTrailing\n​\n\nIf you don't want to watch trailing changes, set 3rd param false (it's true by default):\n\njs\nimport { refThrottled } from '@vueuse/core'\n\nconst input = ref('')\nconst throttled = refThrottled(input, 1000, false)\nLeading\n​\n\nAllows the callback to be invoked immediately (on the leading edge of the ms timeout). If you don't want this behavior, set the 4th param false (it's true by default):\n\njs\nimport { refThrottled } from '@vueuse/core'\n\nconst input = ref('')\nconst throttled = refThrottled(input, 1000, undefined, false)\nRecommended Reading\n​\nDebounce vs Throttle: Definitive Visual Guide\nDebouncing and Throttling Explained Through Examples\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nDanny Feliz\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "refDefault | VueUse",
    "url": "https://vueuse.org/shared/refDefault/",
    "html": "refDefault\n​\nCategory\nReactivity\nExport Size\n107 B\nLast Changed\n2 months ago\n\nApply default value to a ref.\n\nUsage\n​\nts\nimport { refDefault, useStorage } from '@vueuse/core'\n\nconst raw = useStorage('key')\nconst state = refDefault(raw, 'default')\n\nraw.value = 'hello'\nconsole.log(state.value) // hello\n\nraw.value = undefined\nconsole.log(state.value) // default\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "refAutoReset | VueUse",
    "url": "https://vueuse.org/shared/refAutoReset/",
    "html": "refAutoReset\n​\nCategory\nReactivity\nExport Size\n234 B\nLast Changed\n3 months ago\nAlias\nautoResetRef\n\nA ref which will be reset to the default value after some time.\n\nDemo\n​\n\nsource\n\nChange Message\n\nDefault message\n\nUsage\n​\nts\nimport { refAutoReset } from '@vueuse/core'\n\nconst message = refAutoReset('default message', 1000)\n\nfunction setMessage() {\n  // here the value will change to 'message has set' but after 1000ms, it will change to 'default message'\n  message.value = 'message has set'\n}\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nmoander\nsun0day\nwheat\nKasper Seweryn\nChangelog\n​\nv10.4.0 on 8/25/2023\n71685 - feat: support maybe-ref as value (#3342)\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "reactivePick | VueUse",
    "url": "https://vueuse.org/shared/reactivePick/",
    "html": "reactivePick\n​\nCategory\nReactivity\nExport Size\n454 B\nLast Changed\n8 months ago\n\nReactively pick fields from a reactive object.\n\nUsage\n​\nBasic Usage\n​\nts\nimport { reactivePick } from '@vueuse/core'\n\nconst obj = reactive({\n  x: 0,\n  y: 0,\n  elementX: 0,\n  elementY: 0,\n})\n\nconst picked = reactivePick(obj, 'x', 'elementX') // { x: number, elementX: number }\nPredicate Usage\n​\nts\nimport { reactivePick } from '@vueuse/core'\n\nconst source = reactive({\n  foo: 'foo',\n  bar: 'bar',\n  baz: 'baz',\n  qux: true,\n})\nconst state = reactivePick(source, (value, key) => key !== 'bar' && value !== true)\n// { foo: string, baz: string }\nsource.qux = false\n// { foo: string, baz: string, qux: boolean }\nScenarios\n​\nSelectively passing props to child\n​\nhtml\n<script setup>\nimport { reactivePick } from '@vueuse/core'\n\nconst props = defineProps({\n  value: {\n    default: 'value',\n  },\n  color: {\n    type: String,\n  },\n  font: {\n    type: String,\n  }\n})\n\nconst childProps = reactivePick(props, 'color', 'font')\n</script>\n\n<template>\n  <div>\n    <!-- only passes \"color\" and \"font\" props to child -->\n    <ChildComp v-bind=\"childProps\" />\n  </div>\n</template>\nSelectively wrap reactive object\n​\n\nInstead of doing this\n\nts\nimport { reactive } from 'vue'\nimport { useElementBounding } from '@vueuse/core'\n\nconst { height, width } = useElementBounding() // object of refs\nconst size = reactive({ height, width })\n\nNow we can just have this\n\nts\nimport { reactivePick, useElementBounding } from '@vueuse/core'\n\nconst size = reactivePick(useElementBounding(), 'height', 'width')\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n丶远方\nBrain777777\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\n0bde4 - feat: add predicate parameter (#2850)\nv8.8.0 on 7/6/2022\n80c16 - fix: allow nested keys\ndd94d - fix(types): reactiveOmit and reactivePick support array as second arg (#1742)"
  },
  {
    "title": "refDebounced | VueUse",
    "url": "https://vueuse.org/shared/refdebounced/",
    "html": "refDebounced\n​\nCategory\nReactivity\nExport Size\n423 B\nLast Changed\n8 months ago\nAlias\nuseDebounce\ndebouncedRef\nRelated\nuseThrottleFn\n\nDebounce execution of a ref value.\n\nDemo\n​\n\nsource\n\nDelay is set to 1000ms for this demo.\n\nDebounced:\n\nTimes Updated: 0\n\nUsage\n​\njs\nimport { refDebounced } from '@vueuse/core'\n\nconst input = ref('foo')\nconst debounced = refDebounced(input, 1000)\n\ninput.value = 'bar'\nconsole.log(debounced.value) // 'foo'\n\nawait sleep(1100)\n\nconsole.log(debounced.value) // 'bar'\n\nYou can also pass an optional 3rd parameter including maxWait option. See useDebounceFn for details.\n\nRecommended Reading\n​\nDebounce vs Throttle: Definitive Visual Guide\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nDominik Klein\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.4.0 on 10/25/2022\nce3dc - feat: use MaybeComputedRef for ms (#2337)"
  },
  {
    "title": "reactiveOmit | VueUse",
    "url": "https://vueuse.org/shared/reactiveomit/",
    "html": "reactiveOmit\n​\nCategory\nReactivity\nExport Size\n381 B\nLast Changed\n2 months ago\n\nReactively omit fields from a reactive object.\n\nUsage\n​\nBasic Usage\n​\nts\nimport { reactiveOmit } from '@vueuse/core'\n\nconst obj = reactive({\n  x: 0,\n  y: 0,\n  elementX: 0,\n  elementY: 0,\n})\n\nconst picked = reactiveOmit(obj, 'x', 'elementX') // { y: number, elementY: number }\nPredicate Usage\n​\nts\nimport { reactiveOmit } from '@vueuse/core'\n\nconst obj = reactive({\n  bar: 'bar',\n  baz: 'should be omit',\n  foo: 'foo2',\n  qux: true,\n})\n\nconst picked = reactiveOmit(obj, (value, key) => key === 'baz' || value === true)\n// { bar: string, foo: string }\nScenarios\n​\nSelectively passing props to child\n​\nhtml\n<script setup>\nimport { reactiveOmit } from '@vueuse/core'\n\nconst props = defineProps({\n  value: {\n    default: 'value',\n  },\n  color: {\n    type: String,\n  },\n  font: {\n    type: String,\n  }\n})\n\nconst childProps = reactiveOmit(props, 'value')\n</script>\n\n<template>\n  <div>\n    <!-- only passes \"color\" and \"font\" props to child -->\n    <ChildComp v-bind=\"childProps\" />\n  </div>\n</template>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nDoctorwu\n丶远方\nBrain777777\nqiang\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n0a72b - feat(toValue): rename resolveUnref to toValue\nv10.0.0-beta.2 on 3/28/2023\n2e297 - feat: add predicate parameter (#2849)\nv8.8.0 on 7/6/2022\n80c16 - fix(reactivePick): allow nested keys\ndd94d - fix(types): reactiveOmit and reactivePick support array as second arg (#1742)"
  },
  {
    "title": "reactiveComputed | VueUse",
    "url": "https://vueuse.org/shared/reactivecomputed/",
    "html": "reactiveComputed\n​\nCategory\nReactivity\nExport Size\n264 B\nLast Changed\n4 months ago\n\nComputed reactive object. Instead of returning a ref that computed does, reactiveComputed returns a reactive object.\n\nThis function uses Proxy\n\nIt is NOT supported by IE 11 or below.\n\nUsage\n​\nts\nimport { reactiveComputed } from '@vueuse/core'\n\nconst state = reactiveComputed(() => {\n  return {\n    foo: 'bar',\n    bar: 'baz',\n  }\n})\n\nstate.bar // 'baz'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n三咲智子 Kevin Deng\nqiang\nChangelog\n​\nv10.3.0 on 7/30/2023\n17a72 - fix: unwrap reactive type (#3215)"
  },
  {
    "title": "reactifyObject | VueUse",
    "url": "https://vueuse.org/shared/reactifyobject/",
    "html": "reactifyObject\n​\nCategory\nReactivity\nExport Size\n305 B\nLast Changed\n5 months ago\n\nApply reactify to an object\n\nUsage\n​\nts\nimport { reactifyObject } from '@vueuse/core'\n\nconst reactifiedConsole = reactifyObject(console)\n\nconst a = ref('42')\n\nreactifiedConsole.log(a) // no longer need `.value`\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n童欧巴\nmarkthree\nChangelog\n​\nv8.9.3 on 7/14/2022\nd484f - feat(reactify)!: enable support for reactive getter by default (#1860)"
  },
  {
    "title": "extendRef | VueUse",
    "url": "https://vueuse.org/shared/extendRef/",
    "html": "extendRef\n​\nCategory\nReactivity\nExport Size\n282 B\nLast Changed\n8 months ago\n\nAdd extra attributes to Ref.\n\nWARNING\n\nThis function only works for Vue 2.7 or above.\n\nUsage\n​\n\nPlease note the extra attribute will not be accessible in Vue's template.\n\nts\nimport { ref } from 'vue'\nimport { extendRef } from '@vueuse/core'\n\nconst myRef = ref('content')\n\nconst extended = extendRef(myRef, { foo: 'extra data' })\n\nextended.value === 'content'\nextended.foo === 'extra data'\n\nRefs will be unwrapped and be reactive\n\nts\nconst myRef = ref('content')\nconst extraRef = ref('extra')\n\nconst extended = extendRef(myRef, { extra: extraRef })\n\nextended.value === 'content'\nextended.extra === 'extra'\n\nextended.extra = 'new data' // will trigger update\nextraRef.value === 'new data'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\n13169 - feat(createTemplatePromise): new function (#2957)\nv9.8.0 on 12/20/2022\n8c82e - feat: support 2.7, close #2340"
  },
  {
    "title": "reactify | VueUse",
    "url": "https://vueuse.org/shared/reactify/",
    "html": "reactify\n​\nCategory\nReactivity\nExport Size\n174 B\nLast Changed\n7 months ago\nAlias\ncreateReactiveFn\nRelated\ncreateUnrefFn\n\nConverts plain functions into reactive functions. The converted function accepts refs as its arguments and returns a ComputedRef, with proper typing.\n\nTIP\n\nInterested to see some application or looking for some pre-reactified functions?\n\nCheck out ⚗️ Vue Chemistry!\n\nUsage\n​\n\nBasic example\n\nTypeScript\nts\nimport { reactify } from '@vueuse/core'\n// a plain function\nfunction add(a: number, b: number): number {\n  return a + b\n}\n// now it accept refs and returns a computed ref\n// (a: number | Ref<number>, b: number | Ref<number>) => ComputedRef<number>\nconst reactiveAdd = reactify(add)\nconst a = ref(1)\nconst b = ref(2)\nconst sum = reactiveAdd(a, b)\nconsole.log(sum.value) // 3\na.value = 5\nconsole.log(sum.value) // 7\n\nAn example of implementing a reactive Pythagorean theorem.\n\nTypeScript\nts\nimport { reactify } from '@vueuse/core'\nconst pow = reactify(Math.pow)\nconst sqrt = reactify(Math.sqrt)\nconst add = reactify((a: number, b: number) => a + b)\nconst a = ref(3)\nconst b = ref(4)\nconst c = sqrt(add(pow(a, 2), pow(b, 2)))\nconsole.log(c.value) // 5\n// 5:12:13\na.value = 5\nb.value = 12\nconsole.log(c.value) // 13\n\nYou can also do it this way:\n\nTypeScript\nts\nimport { reactify } from '@vueuse/core'\nfunction pythagorean(a: number, b: number) {\n  return Math.sqrt(a ** 2 + b ** 2)\n}\nconst a = ref(3)\nconst b = ref(4)\nconst c = reactify(pythagorean)(a, b)\nconsole.log(c.value) // 5\n\nAnother example of making reactive stringify\n\nts\nimport { reactify } from '@vueuse/core'\n\nconst stringify = reactify(JSON.stringify)\n\nconst obj = ref(42)\nconst dumped = stringify(obj)\n\nconsole.log(dumped.value) // '42'\n\nobj.value = { foo: 'bar' }\n\nconsole.log(dumped.value) // '{\"foo\":\"bar\"}'\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nordago\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.3 on 7/14/2022\nd484f - feat!: enable support for reactive getter by default (#1860)"
  },
  {
    "title": "computedWithControl | VueUse",
    "url": "https://vueuse.org/shared/computedwithcontrol/",
    "html": "computedWithControl\n​\nCategory\nReactivity\nExport Size\n250 B\nLast Changed\n7 months ago\nAlias\ncontrolledComputed\nRelated\nrefWithControl\n\nExplicitly define the dependencies of computed.\n\nUsage\n​\nTypeScript\nts\nimport { computedWithControl } from '@vueuse/core'\nconst source = ref('foo')\nconst counter = ref(0)\nconst computedRef = computedWithControl(\n  () => source.value, // watch source, same as `watch`\n  () => counter.value, // computed getter, same as `computed`\n)\n\nWith this, the changes of counter won't trigger computedRef to update but the source ref does.\n\nts\nconsole.log(computedRef.value) // 0\n\ncounter.value += 1\n\nconsole.log(computedRef.value) // 0\n\nsource.value = 'bar'\n\nconsole.log(computedRef.value) // 1\nManual Triggering\n​\n\nYou can also manually trigger the update of the computed by:\n\nts\nconst computedRef = computedWithControl(\n  () => source.value,\n  () => counter.value,\n)\n\ncomputedRef.trigger()\n\nWARNING\n\nManual triggering only works for Vue 3\n\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nkongmoumou\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv8.8.1 on 7/6/2022\na1077 - fix: trigger only work in Vue 3\n01fca - feat: support manual triggering\nv8.7.5 on 6/19/2022\nab9d3 - fix: source type match vue.watch (#1674)"
  },
  {
    "title": "computedEager | VueUse",
    "url": "https://vueuse.org/shared/computedEager/",
    "html": "computedEager\n​\nCategory\nReactivity\nExport Size\n398 B\nLast Changed\n2 years ago\nAlias\neagerComputed\n\nEager computed without lazy evaluation.\n\nLearn more at Vue: When a computed property can be the wrong tool.\n\nUse computed() when you have a complex calculation going on, which can actually profit from caching and lazy evaluation and should only be (re-)calculated if really necessary.\nUse computedEager() when you have a simple operation, with a rarely changing return value – often a boolean.\nDemo\n​\n\nsource\n\nLazy Computed\nIs over 5: false\nRenders: 0\nEager Computed\nIs over 5: false\nRenders: 0\nCount: 0\nDecrementIncrement\nUsage\n​\njs\nimport { computedEager } from '@vueuse/core'\n\nconst todos = ref([])\nconst hasOpenTodos = computedEager(() => !!todos.length)\n\nconsole.log(hasOpenTodos.value) // false\ntoTodos.value.push({ title: 'Learn Vue' })\nconsole.log(hasOpenTodos.value) // true\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJonathan Tovar Diaz\nwheat\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "whenever | VueUse",
    "url": "https://vueuse.org/shared/whenever/",
    "html": "whenever\n​\nCategory\nWatch\nExport Size\n97 B\nLast Changed\nlast year\n\nShorthand for watching value to be truthy.\n\nUsage\n​\njs\nimport { useAsyncState, whenever } from '@vueuse/core'\n\nconst { state, isReady } = useAsyncState(\n  fetch('https://jsonplaceholder.typicode.com/todos/1').then(t => t.json()),\n  {},\n)\n\nwhenever(isReady, () => console.log(state))\nts\n// this\nwhenever(ready, () => console.log(state))\n\n// is equivalent to:\nwatch(ready, (isReady) => {\n  if (isReady)\n    console.log(state)\n})\nCallback Function\n​\n\nSame as watch, the callback will be called with cb(value, oldValue, onInvalidate).\n\nts\nwhenever(height, (current, lastHeight) => {\n  if (current > lastHeight)\n    console.log(`Increasing height by ${current - lastHeight}`)\n})\nComputed\n​\n\nSame as watch, you can pass a getter function to calculate on each change.\n\nts\n// this\nwhenever(\n  () => counter.value === 7,\n  () => console.log('counter is 7 now!'),\n)\nOptions\n​\n\nOptions and defaults are same with watch.\n\nts\n// this\nwhenever(\n  () => counter.value === 7,\n  () => console.log('counter is 7 now!'),\n  { flush: 'sync' },\n)\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nfreakzlike\ndonotloveshampo\nChung, Lian\nAlex Kozack\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "watchWithFilter | VueUse",
    "url": "https://vueuse.org/shared/watchwithfilter/",
    "html": "watchWithFilter\n​\nCategory\nWatch\nExport Size\n373 B\nLast Changed\nlast year\n\nwatch with additional EventFilter control.\n\nUsage\n​\n\nSimilar to watch, but offering an extra option eventFilter which will be applied to the callback function.\n\nts\nimport { debounceFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') }, // callback will be called in 500ms debounced manner\n  {\n    eventFilter: debounceFilter(500), // throttledFilter, pausabledFilter or custom filters\n  },\n)\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nlvjiaxuan\nChangelog\n​\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchTriggerable | VueUse",
    "url": "https://vueuse.org/shared/watchTriggerable/",
    "html": "watchTriggerable\n​\nCategory\nWatch\nExport Size\n942 B\nLast Changed\n8 months ago\n\nWatch that can be triggered manually\n\nDemo\n​\n\nsource\n\nValue: 0\nUpdateManual TriggerReset\n\nLog (500 ms delay)\nUsage\n​\n\nA watch wrapper that supports manual triggering of WatchCallback, which returns an additional trigger to execute a WatchCallback immediately.\n\nts\nimport { watchTriggerable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref(0)\n\nconst { trigger, ignoreUpdates } = watchTriggerable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\n// Execution of WatchCallback via `trigger` does not require waiting\ntrigger() // logs: Changed to bar!\nonCleanup\n​\n\nWhen you want to manually call a watch that uses the onCleanup parameter; simply taking the WatchCallback out and calling it doesn't make it easy to implement the onCleanup parameter.\n\nUsing watchTriggerable will solve this problem.\n\nts\nimport { watchTriggerable } from '@vueuse/core'\nimport { ref } from 'vue'\n\nconst source = ref(0)\n\nconst { trigger } = watchTriggerable(\n  source,\n  async (v, _, onCleanup) => {\n    let canceled = false\n    onCleanup(() => canceled = true)\n\n    await new Promise(resolve => setTimeout(resolve, 500))\n    if (canceled)\n      return\n\n    console.log(`The value is \"${v}\"\\n`)\n  },\n)\n\nsource.value = 1 // no log\nawait trigger() // logs (after 500 ms): The value is \"1\"\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nAyaka Rizumu\nChangelog\n​\nv8.8.0 on 7/6/2022\ncf663 - feat: extending watch with a manual trigger (#1736)"
  },
  {
    "title": "watchThrottled | VueUse",
    "url": "https://vueuse.org/shared/watchThrottled/",
    "html": "watchThrottled\n​\nCategory\nWatch\nExport Size\n831 B\nLast Changed\n8 months ago\nAlias\nthrottledWatch\n\nThrottled watch.\n\nDemo\n​\n\nsource\n\nDelay is set to 1000ms for this demo.\n\nInput:\n\nTimes Updated: 0\n\nUsage\n​\n\nSimilar to watch, but offering an extra option throttle which will be applied to the callback function.\n\nts\nimport { watchThrottled } from '@vueuse/core'\n\nwatchThrottled(\n  source,\n  () => { console.log('changed!') },\n  { throttle: 500 },\n)\n\nIt's essentially a shorthand for the following code:\n\nts\nimport { throttleFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') },\n  {\n    eventFilter: throttleFilter(500),\n  },\n)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\n丶远方\nlvjiaxuan\nJoe Zimmerman\nwebfansplz\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchPausable | VueUse",
    "url": "https://vueuse.org/shared/watchPausable/",
    "html": "watchPausable\n​\nCategory\nWatch\nExport Size\n674 B\nLast Changed\nlast year\nAlias\npausableWatch\n\nPausable watch\n\nDemo\n​\n\nsource\n\nType something below to trigger the watch\nPauseResumeClear Log\n\n\nLog\nUsage\n​\n\nUse as normal the watch, but return extra pause() and resume() functions to control.\n\nts\nimport { watchPausable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { stop, pause, resume } = watchPausable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // Changed to bar!\n\npause()\n\nsource.value = 'foobar'\nawait nextTick() // (nothing happend)\n\nresume()\n\nsource.value = 'hello'\nawait nextTick() // Changed to hello!\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nvaakian X\nlvjiaxuan\nChangelog\n​\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchOnce | VueUse",
    "url": "https://vueuse.org/shared/watchOnce/",
    "html": "watchOnce\n​\nCategory\nWatch\nExport Size\n107 B\nLast Changed\n3 weeks ago\n\nwatch that only triggers once.\n\nUsage\n​\n\nAfter the callback function has been triggered once, the watch will be stopped automatically.\n\nts\nimport { watchOnce } from '@vueuse/core'\n\nwatchOnce(source, () => {\n  // triggers only once\n  console.log('source changed!')\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nValery\nvaakian X\nlvjiaxuan\nlvjiaxuan\nHG\nwebfansplz\nChangelog\n​\nv10.6.0 on 11/9/2023\nbb0a7 - feat: return function for manual watcher stopping (#3475)\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchImmediate | VueUse",
    "url": "https://vueuse.org/shared/watchImmediate/",
    "html": "watchImmediate\n​\nCategory\nWatch\nExport Size\n322 B\nLast Changed\n6 months ago\n\nShorthand for watching value with {immediate: true}\n\nUsage\n​\n\nSimilar to watch, but with { immediate: true }\n\nts\nimport { watchImmediate } from '@vueuse/core'\n\nconst obj = ref('vue-use')\n\n// changing the value from some external store/composables\nobj.value = 'VueUse'\n\nwatchImmediate(nestedObject, (obj) => {\n  console.log(updated) // Console.log will be logged twice\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nAndrew Ferreira\nKyrie890514\nAlex Liu\n丶远方\nMagomed Chemurziev\nHammad Asif\nChangelog\n​\nv10.2.0 on 6/16/2023\n4b4e6 - fix: fix overload signature (#3114)\nv10.1.0 on 4/22/2023\n8f6a0 - feat(watch): watchImmediate and watchDeep support overloads (#2998)\nv10.0.0-beta.3 on 4/13/2023\ne6e25 - fix(watchDeep,watchImmediate): fix callback function execution logic (#2951)\nv10.0.0-beta.0 on 3/14/2023\nb4ec7 - feat(watch): shorthands for watch (#2651)"
  },
  {
    "title": "watchIgnorable | VueUse",
    "url": "https://vueuse.org/shared/watchignorable/",
    "html": "watchIgnorable\n​\nCategory\nWatch\nExport Size\n708 B\nLast Changed\nlast year\nAlias\nignorableWatch\n\nIgnorable watch\n\nDemo\n​\n\nsource\n\nValue: 0\nUpdateIgnored UpdateReset\n\nLog\nUsage\n​\n\nExtended watch that returns extra ignoreUpdates(updater) and ignorePrevAsyncUpdates() to ignore particular updates to the source.\n\nts\nimport { watchIgnorable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { stop, ignoreUpdates } = watchIgnorable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\nignoreUpdates(() => {\n  source.value = 'foobar'\n})\nawait nextTick() // (nothing happened)\n\nsource.value = 'hello'\nawait nextTick() // logs: Changed to hello!\n\nignoreUpdates(() => {\n  source.value = 'ignored'\n})\nsource.value = 'logged'\n\nawait nextTick() // logs: Changed to logged!\nFlush timing\n​\n\nwatchIgnorable accepts the same options as watch and uses the same defaults. So, by default the composable works using flush: 'pre'.\n\nignorePrevAsyncUpdates\n​\n\nThis feature is only for async flush 'pre' and 'post'. If flush: 'sync' is used, ignorePrevAsyncUpdates() is a no-op as the watch will trigger immediately after each update to the source. It is still provided for sync flush so the code can be more generic.\n\nts\nimport { watchIgnorable } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nconst source = ref('foo')\n\nconst { ignorePrevAsyncUpdates } = watchIgnorable(\n  source,\n  v => console.log(`Changed to ${v}!`),\n)\n\nsource.value = 'bar'\nawait nextTick() // logs: Changed to bar!\n\nsource.value = 'good'\nsource.value = 'by'\nignorePrevAsyncUpdates()\n\nawait nextTick() // (nothing happened)\n\nsource.value = 'prev'\nignorePrevAsyncUpdates()\nsource.value = 'after'\n\nawait nextTick() // logs: Changed to after!\nRecommended Readings\n​\nIgnorable Watch - by @matias-capeletto\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nlvjiaxuan\nwebfansplz\nChangelog\n​\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchDeep | VueUse",
    "url": "https://vueuse.org/shared/watchdeep/",
    "html": "watchDeep\n​\nCategory\nWatch\nExport Size\n325 B\nLast Changed\n7 months ago\n\nShorthand for watching value with {deep: true}\n\nUsage\n​\n\nSimilar to watch, but with { deep: true }\n\nts\nimport { watchDeep } from '@vueuse/core'\n\nconst nestedObject = ref({ foo: { bar: { deep: 5 } } })\n\nwatchDeep(nestedObject, (obj) => {\n  console.log(updated)\n})\n\nonMounted(() => {\n  nestedObject.value.foo.bar.deep = 10\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nKyrie890514\nAlex Liu\n丶远方\nHammad Asif\nChangelog\n​\nv10.1.0 on 4/22/2023\n8f6a0 - feat(watch): watchImmediate and watchDeep support overloads (#2998)\nv10.0.0-beta.3 on 4/12/2023\ne6e25 - fix(watchDeep,watchImmediate): fix callback function execution logic (#2951)\nv10.0.0-beta.0 on 3/14/2023\nb4ec7 - feat(watch): shorthands for watch (#2651)"
  },
  {
    "title": "watchAtMost | VueUse",
    "url": "https://vueuse.org/shared/watchAtMost/",
    "html": "watchAtMost\n​\nCategory\nWatch\nExport Size\n510 B\nLast Changed\n8 months ago\n\nwatch with the number of times triggered.\n\nUsage\n​\n\nSimilar to watch with an extra option count which set up the number of times the callback function is triggered. After the count is reached, the watch will be stopped automatically.\n\nts\nimport { watchAtMost } from '@vueuse/core'\n\nwatchAtMost(\n  source,\n  () => { console.log('trigger!') }, // triggered it at most 3 times\n  {\n    count: 3, // the number of times triggered\n  },\n)\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nvaakian X\nlvjiaxuan\nlvjiaxuan\nHG\nwebfansplz\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "watchArray | VueUse",
    "url": "https://vueuse.org/shared/watchArray/",
    "html": "watchArray\n​\nCategory\nWatch\nExport Size\n281 B\nLast Changed\n2 months ago\n\nWatch for an array with additions and removals.\n\nUsage\n​\n\nSimilar to watch, but provides the added and removed elements to the callback function. Pass { deep: true } if the list is updated in place with push, splice, etc.\n\nts\nimport { watchArray } from '@vueuse/core'\n\nconst list = ref([1, 2, 3])\n\nwatchArray(list, (newList, oldList, added, removed) => {\n  console.log(newList) // [1, 2, 3, 4]\n  console.log(oldList) // [1, 2, 3]\n  console.log(added) // [4]\n  console.log(removed) // []\n})\n\nonMounted(() => {\n  list.value = [...list.value, 4]\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nDi Weng\nChangelog\n​\nv8.9.0 on 7/6/2022\n2ba83 - feat: new function (#1705)"
  },
  {
    "title": "watchDebounced | VueUse",
    "url": "https://vueuse.org/shared/watchDebounced/",
    "html": "watchDebounced\n​\nCategory\nWatch\nExport Size\n786 B\nLast Changed\n8 months ago\nAlias\ndebouncedWatch\n\nDebounced watch\n\nDemo\n​\n\nsource\n\nDelay is set to 1000ms and maxWait is set to 5000ms for this demo.\n\nInput:\n\nTimes Updated: 0\n\nUsage\n​\n\nSimilar to watch, but offering extra options debounce and maxWait which will be applied to the callback function.\n\nts\nimport { watchDebounced } from '@vueuse/core'\n\nwatchDebounced(\n  source,\n  () => { console.log('changed!') },\n  { debounce: 500, maxWait: 1000 },\n)\n\nIt's essentially a shorthand for the following code:\n\nts\nimport { debounceFilter, watchWithFilter } from '@vueuse/core'\n\nwatchWithFilter(\n  source,\n  () => { console.log('changed!') },\n  {\n    eventFilter: debounceFilter(500, { maxWait: 1000 }),\n  },\n)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nwebfansplz\nvaakian X\nlvjiaxuan\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\nbb0ac - fix(watch*): fix T type for WatchCallback (#1692)"
  },
  {
    "title": "until | VueUse",
    "url": "https://vueuse.org/shared/until/",
    "html": "until\n​\nCategory\nWatch\nExport Size\n595 B\nLast Changed\n4 months ago\n\nPromised one-time watch for changes\n\nDemo\n​\n\nsource\n\nAdd to 7 to show the alert.\n\nCount: 0\n\nIncrementDecrement\nUsage\n​\nWait for some async data to be ready\n​\njs\nimport { until, useAsyncState } from '@vueuse/core'\n\nconst { state, isReady } = useAsyncState(\n  fetch('https://jsonplaceholder.typicode.com/todos/1').then(t => t.json()),\n  {},\n)\n\n;(async () => {\n  await until(isReady).toBe(true)\n\n  console.log(state) // state is now ready!\n})()\nWait for custom conditions\n​\n\nYou can use invoke to call the async function.\n\njs\nimport { invoke, until, useCounter } from '@vueuse/core'\n\nconst { count } = useCounter()\n\ninvoke(async () => {\n  await until(count).toMatch(v => v > 7)\n\n  alert('Counter is now larger than 7!')\n})\nTimeout\n​\nts\n// will be resolve until ref.value === true or 1000ms passed\nawait until(ref).toBe(true, { timeout: 1000 })\n\n// will throw if timeout\ntry {\n  await until(ref).toBe(true, { timeout: 1000, throwOnTimeout: true })\n  // ref.value === true\n}\ncatch (e) {\n  // timeout\n}\nMore Examples\n​\nts\nawait until(ref).toBe(true)\nawait until(ref).toMatch(v => v > 10 && v < 100)\nawait until(ref).changed()\nawait until(ref).changedTimes(10)\nawait until(ref).toBeTruthy()\nawait until(ref).toBeNull()\n\nawait until(ref).not.toBeNull()\nawait until(ref).not.toBeTruthy()\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nsun0day\nlsdsjy\nMitchell\nJeff Zou\nwheat\nShinigami\nAlex Kozack\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.3.0 on 9/26/2022\n1f656 - fix: .not returns new instance (#2224)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\nc4853 - feat: improved until types (#1493)"
  },
  {
    "title": "tryOnUnmounted | VueUse",
    "url": "https://vueuse.org/shared/tryOnUnmounted/",
    "html": "tryOnUnmounted\n​\nCategory\nComponent\nExport Size\n85 B\nLast Changed\n2 years ago\n\nSafe onUnmounted. Call onUnmounted() if it's inside a component lifecycle, if not, do nothing\n\nUsage\n​\njs\nimport { tryOnUnmounted } from '@vueuse/core'\n\ntryOnUnmounted(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "tryOnScopeDispose | VueUse",
    "url": "https://vueuse.org/shared/tryonscopedispose/",
    "html": "tryOnScopeDispose\n​\nCategory\nComponent\nExport Size\n100 B\nLast Changed\n10 months ago\n\nSafe onScopeDispose. Call onScopeDispose() if it's inside an effect scope lifecycle, if not, do nothing\n\nUsage\n​\njs\nimport { tryOnScopeDispose } from '@vueuse/core'\n\ntryOnScopeDispose(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nByMykel\nPeter Shih\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "tryOnMounted | VueUse",
    "url": "https://vueuse.org/shared/tryOnMounted/",
    "html": "tryOnMounted\n​\nCategory\nComponent\nExport Size\n109 B\nLast Changed\n2 years ago\n\nSafe onMounted. Call onMounted() if it's inside a component lifecycle, if not, just call the function\n\nUsage\n​\njs\nimport { tryOnMounted } from '@vueuse/core'\n\ntryOnMounted(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nConnor Dooley\nNicholai Nissen\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "tryOnBeforeUnmount | VueUse",
    "url": "https://vueuse.org/shared/tryonbeforeunmount/",
    "html": "tryOnBeforeUnmount\n​\nCategory\nComponent\nExport Size\n93 B\nLast Changed\n2 years ago\n\nSafe onBeforeUnmount. Call onBeforeUnmount() if it's inside a component lifecycle, if not, do nothing\n\nUsage\n​\njs\nimport { tryOnBeforeUnmount } from '@vueuse/core'\n\ntryOnBeforeUnmount(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nNgheizit\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "tryOnBeforeMount | VueUse",
    "url": "https://vueuse.org/shared/tryOnBeforeMount/",
    "html": "tryOnBeforeMount\n​\nCategory\nComponent\nExport Size\n114 B\nLast Changed\nlast year\n\nSafe onBeforeMount. Call onBeforeMount() if it's inside a component lifecycle, if not, just call the function\n\nUsage\n​\njs\nimport { tryOnBeforeMount } from '@vueuse/core'\n\ntryOnBeforeMount(() => {\n\n})\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\nEureka\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "useTimeoutFn | VueUse",
    "url": "https://vueuse.org/shared/useTimeoutFn/",
    "html": "useTimeoutFn\n​\nCategory\nAnimation\nExport Size\n303 B\nLast Changed\n8 months ago\n\nWrapper for setTimeout with controls.\n\nDemo\n​\n\nsource\n\nPlease wait for 3 seconds\n\nRestart\nUsage\n​\njs\nimport { useTimeoutFn } from '@vueuse/core'\n\nconst { isPending, start, stop } = useTimeoutFn(() => {\n  /* ... */\n}, 3000)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nScott Bedard\n童欧巴\nDan Rose\nKasper Seweryn\njack zhang\nvaakian X\nJelf\nShinigami\nPeter Shih\nliaoliao666\nSergey Shumov\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.12.0 on 1/29/2023\n39183 - feat(useRafFn, useIntervalFn, useTimeoutFn): make status readonly (#2685)\ne054a - fix: respect callback parameters in start function (#2693)\nv9.1.1 on 8/23/2022\n0fdbb - fix(shared): resolve internal circular reference\nv9.0.0-beta.1 on 7/20/2022\n4ca70 - fix(useTimeoutFn,useTimeout)!: rename type TimeoutOptions to UseTimeoutOptions and TimeoutFnOptions to UseTimeoutFnOptions (#1944)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useIntervalFn | VueUse",
    "url": "https://vueuse.org/shared/useIntervalFn/",
    "html": "useIntervalFn\n​\nCategory\nAnimation\nExport Size\n341 B\nLast Changed\n8 months ago\n\nWrapper for setInterval with controls\n\nDemo\n​\n\nsource\n\nHello\n\ninterval:\n\nPause\nUsage\n​\njs\nimport { useIntervalFn } from '@vueuse/core'\n\nconst { pause, resume, isActive } = useIntervalFn(() => {\n  /* your function */\n}, 1000)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nDan Rose\nsun0day\nEnzo Innocenzi\nwwj\nMatvey Melishev\nmeteorlxy\nAurélio A. Heckert\nxuxuhahaha\nHogne Vevle\nDaiki Ojima\nChangelog\n​\nv10.0.0-beta.5 on 4/13/2023\ncb644 - refactor!: remove isFunction and isString utils\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\n0a72b - feat(toValue): rename resolveUnref to toValue\nv9.12.0 on 1/29/2023\n39183 - feat(useRafFn, useIntervalFn, useTimeoutFn): make status readonly (#2685)\nv9.7.0 on 12/16/2022\n8bb7b - fix: watch computed refs instead of just refs (#2539)\nv9.0.0-beta.1 on 7/20/2022\n4bc0f - fix!: rename type IntervalFnOptions to UseIntervalFnOptions (#1943)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)\nv8.7.0 on 6/16/2022\n16740 - fix: watch interval correctly (#1676)\nv8.6.0 on 5/31/2022\n29fc5 - fix: unref interval (#1633)"
  },
  {
    "title": "useTimeout | VueUse",
    "url": "https://vueuse.org/shared/useTimeout/",
    "html": "useTimeout\n​\nCategory\nAnimation\nExport Size\n565 B\nLast Changed\nlast year\n\nUpdate value after a given time with controls.\n\nDemo\n​\n\nsource\n\nReady: false\n\nStart Again\nUsage\n​\njs\nimport { promiseTimeout, useTimeout } from '@vueuse/core'\n\nconst ready = useTimeout(1000)\njs\nconst { ready, start, stop } = useTimeout(1000, { controls: true })\njs\nconsole.log(ready.value) // false\n\nawait promiseTimeout(1200)\n\nconsole.log(ready.value) // true\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nWaleed Khaled\nvaakian X\nJelf\nShinigami\nMark Noonan\nChangelog\n​\nv9.3.0 on 9/26/2022\n33dbc - feat: optional callback for useInterval, useTimeout & useTimestamp (#2240)\nv9.0.0-beta.1 on 7/20/2022\n4ca70 - fix(useTimeoutFn,useTimeout)!: rename type TimeoutOptions to UseTimeoutOptions and TimeoutFnOptions to UseTimeoutFnOptions (#1944)"
  },
  {
    "title": "useInterval | VueUse",
    "url": "https://vueuse.org/shared/useInterval/",
    "html": "useInterval\n​\nCategory\nAnimation\nExport Size\n620 B\nLast Changed\n8 months ago\n\nReactive counter increases on every interval\n\nDemo\n​\n\nsource\n\nInterval fired: 0\n\nUsage\n​\njs\nimport { useInterval } from '@vueuse/core'\n\n// count will increase every 200ms\nconst counter = useInterval(200)\nts\nconst { counter, reset, pause, resume } = useInterval(200, { controls: true })\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJelf\nmohammadhosry\nWaleed Khaled\nvaakian X\nNurettin Kaya\nChangelog\n​\nv10.0.0-beta.4 on 4/13/2023\n4d757 - feat(types)!: rename MaybeComputedRef to MaybeRefOrGetter\nv9.13.0 on 2/18/2023\ndb66c - fix: fix types\n81db6 - feat: add reset function (#2686)\nv9.3.0 on 9/26/2022\n33dbc - feat: optional callback for useInterval, useTimeout & useTimestamp (#2240)\nv9.0.0-beta.1 on 7/20/2022\n43732 - fix!: rename type IntervalOptions to UseIntervalOptions (#1945)\nv8.9.1 on 7/8/2022\na9ccc - feat(all): use MaybeComputedRef (#1768)"
  },
  {
    "title": "useLastChanged | VueUse",
    "url": "https://vueuse.org/shared/useLastChanged/",
    "html": "useLastChanged\n​\nCategory\nState\nExport Size\n143 B\nLast Changed\n2 months ago\n\nRecords the timestamp of the last change\n\nDemo\n​\n\nsource\n\nLast changed: 5 minutes ago (1701205660123)\nUsage\n​\nts\nimport { useLastChanged } from '@vueuse/core'\nimport { nextTick } from 'vue-demi'\n\nconst a = ref(0)\nconst lastChanged = useLastChanged(a)\n\na.value = 1\n\nawait nextTick()\n\nconsole.log(lastChanged.value) // 0\n\nBy default the change is recorded on the next tick (watch() with flush: 'post'). If you want to record the change immediately, pass flush: 'sync' as the second argument.\n\nts\nimport { useLastChanged } from '@vueuse/core'\n\nconst a = ref(0)\nconst lastChanged = useLastChanged(a, { flush: 'sync' })\n\na.value = 1\n\nconsole.log(lastChanged.value) // 0\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\nJady Dragon\nAlex Kozack\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "provideLocal | VueUse",
    "url": "https://vueuse.org/shared/providelocal/",
    "html": "provideLocal\n​\nCategory\nState\nExport Size\nLast Changed\n2 months ago\n\nExtended provide with ability to call injectLocal to obtain the value in the same component.\n\nUsage\n​\nvue\n<script setup>\nimport { injectLocal, provideLocal } from '@vueuse/core'\n\nprovideLocal('MyInjectionKey', 1)\nconst injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nChangelog\n​\nv10.5.0 on 10/7/2023\ncf757 - fix: vue 2 support for provideLocal and injectLocal (#3464)\n5d948 - feat(createInjectionState): allow provide and inject in same component (#3387)"
  },
  {
    "title": "injectLocal | VueUse",
    "url": "https://vueuse.org/shared/injectlocal/",
    "html": "injectLocal\n​\nCategory\nState\nExport Size\nLast Changed\nlast month\n\nExtended inject with ability to call provideLocal to provide the value in the same component.\n\nUsage\n​\nvue\n<script setup>\nimport { injectLocal, provideLocal } from '@vueuse/core'\n\nprovideLocal('MyInjectionKey', 1)\nconst injectedValue = injectLocal('MyInjectionKey') // injectedValue === 1\n</script>\nSource\n​\n\nSource • Docs\n\nContributors\n​\nChangelog\n​\nv10.5.0 on 10/7/2023\ncf757 - fix: vue 2 support for provideLocal and injectLocal (#3464)\n5d948 - feat(createInjectionState): allow provide and inject in same component (#3387)"
  },
  {
    "title": "createSharedComposable | VueUse",
    "url": "https://vueuse.org/shared/createSharedComposable/",
    "html": "createSharedComposable\n​\nCategory\nState\nExport Size\n213 B\nLast Changed\n9 months ago\nRelated\ncreateGlobalState\n\nMake a composable function usable with multiple Vue instances.\n\nUsage\n​\nts\nimport { createSharedComposable, useMouse } from '@vueuse/core'\n\nconst useSharedMouse = createSharedComposable(useMouse)\n\n// CompA.vue\nconst { x, y } = useSharedMouse()\n\n// CompB.vue - will reuse the previous state and no new event listeners will be registered\nconst { x, y } = useSharedMouse()\nSource\n​\n\nSource • Docs\n\nContributors\n​\nAnthony Fu\n童欧巴\nEgor Kotlyarov\nChangelog\n​\nNo recent changes"
  },
  {
    "title": "createInjectionState | VueUse",
    "url": "https://vueuse.org/shared/createinjectionstate/",
    "html": "createInjectionState\n​\nCategory\nState\nExport Size\n132 B\nLast Changed\nlast month\n\nCreate global state that can be injected into components.\n\nDemo\n​\n\nsource\n\n+\ncount: 0\ndouble: 0\nUsage\n​\nTypeScript\nts\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/shared'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue: number) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n)\nexport { useProvideCounterStore }\n// If you want to hide `useCounterStore` and wrap it in default value logic or throw error logic, please don't export `useCounterStore`\nexport { useCounterStore }\nexport function useCounterStoreWithDefaultValue() {\n  return (\n    useCounterStore() ?? {\n      count: ref(0),\n      double: ref(0),\n      increment: () => {},\n    }\n  )\n}\nexport function useCounterStoreOrThrow() {\n  const counterStore = useCounterStore()\n  if (counterStore == null)\n    throw new Error(\n      'Please call `useProvideCounterStore` on the appropriate parent component',\n    )\n  return counterStore\n}\nvue\n<!-- RootComponent.vue -->\n<script setup lang=\"ts\">\nimport { useProvideCounterStore } from './useCounterStore'\n\nuseProvideCounterStore(0)\n</script>\n\n<template>\n  <div>\n    <slot />\n  </div>\n</template>\nvue\n<!-- CountComponent.vue -->\n<script setup lang=\"ts\">\nimport { useCounterStore } from './useCounterStore'\n\n// use non-null assertion operator to ignore the case that store is not provided.\nconst { count, double } = useCounterStore()!\n// if you want to allow component to working without providing store, you can use follow code instead:\n// const { count, double } = useCounterStore() ?? { count: ref(0), double: ref(0) }\n// also, you can use another hook to provide default value\n// const { count, double } = useCounterStoreWithDefaultValue()\n// or throw error\n// const { count, double } = useCounterStoreOrThrow()\n</script>\n\n<template>\n  <ul>\n    <li>\n      count: {{ count }}\n    </li>\n    <li>\n      double: {{ double }}\n    </li>\n  </ul>\n</template>\nvue\n<!-- ButtonComponent.vue -->\n<script setup lang=\"ts\">\nimport { useCounterStore } from './useCounterStore'\n\n// use non-null assertion operator to ignore the case that store is not provided.\nconst { increment } = useCounterStore()!\n</script>\n\n<template>\n  <button @click=\"increment\">\n    +\n  </button>\n</template>\nProvide a custom InjectionKey\n​\nTypeScript\nts\n// useCounterStore.ts\nimport { computed, ref } from 'vue'\nimport { createInjectionState } from '@vueuse/shared'\n// custom injectionKey\nconst CounterStoreKey = 'counter-store'\nconst [useProvideCounterStore, useCounterStore] = createInjectionState(\n  (initialValue: number) => {\n    // state\n    const count = ref(initialValue)\n    // getters\n    const double = computed(() => count.value * 2)\n    // actions\n    function increment() {\n      count.value++\n    }\n    return { count, double, increment }\n  },\n  { injectionKey: CounterStoreKey },\n)\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nZHAO Jin-Xiang\nAnthony Fu\nPeter Petau\n丶远方\nTanimodori\nChangelog\n​\nv10.5.0 on 10/7/2023\n90d34 - feat: add injectionKey option (#3404)\n5d948 - feat: allow provide and inject in same component (#3387)\nv9.11.0 on 1/17/2023\nf7ce6 - feat: return state when providing injection state (#2309)"
  },
  {
    "title": "createGlobalState | VueUse",
    "url": "https://vueuse.org/shared/createGlobalState/",
    "html": "createGlobalState\n​\nCategory\nState\nExport Size\n125 B\nLast Changed\n7 months ago\nRelated\ncreateSharedComposable\n\nKeep states in the global scope to be reusable across Vue instances.\n\nDemo\n​\n\nsource\n\nname: 'Banana'\ncolor: 'Yellow'\nsize: 'Medium'\n\nUsage\n​\nWithout Persistence (Store in Memory)\n​\njs\n// store.js\nimport { ref } from 'vue'\nimport { createGlobalState } from '@vueuse/core'\n\nexport const useGlobalState = createGlobalState(\n  () => {\n    const count = ref(0)\n    return { count }\n  }\n)\n\nA bigger example:\n\njs\n// store.js\nimport { computed, ref } from 'vue'\nimport { createGlobalState } from '@vueuse/core'\n\nexport const useGlobalState = createGlobalState(\n  () => {\n    // state\n    const count = ref(0)\n\n    // getters\n    const doubleCount = computed(() => count.value * 2)\n\n    // actions\n    function increment() {\n      count.value++\n    }\n\n    return { count, doubleCount, increment }\n  }\n)\nWith Persistence\n​\n\nStore in localStorage with useStorage():\n\njs\n// store.js\nimport { createGlobalState, useStorage } from '@vueuse/core'\n\nexport const useGlobalState = createGlobalState(\n  () => useStorage('vueuse-local-storage', 'initialValue'),\n)\njs\n// component.js\nimport { useGlobalState } from './store'\n\nexport default defineComponent({\n  setup() {\n    const state = useGlobalState()\n    return { state }\n  },\n})\nSource\n​\n\nSource • Demo • Docs\n\nContributors\n​\nAnthony Fu\n童欧巴\nJD Solanki\nDucz01\nTobi\nthefeymesaleng\nplylrnsdy\nwheat\nPreston Alvarado\njelf\nChangelog\n​\nv10.0.0-beta.0 on 3/14/2023\nf21b2 - feat: allow passing initial args (#2790)"
  }
]
